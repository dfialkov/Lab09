

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 27 16:03:00 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77  0000                     
    78                           ; Version 2.20
    79                           ; Generated 05/05/2020 GMT
    80                           ; 
    81                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F26K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   114  0000                     
   115 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   116  0000                     
   117 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   118  0000                     
   119                           	psect	idataBANK0
   120  002B10                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _sampleRate
   124  002B10  0640               	dw	1600
   125                           
   126                           	psect	mediumconst
   127  00F954                     __pmediumconst:
   128                           	callstack 0
   129  00F954  00                 	db	0
   130  00F955                     _sin:
   131                           	callstack 0
   132  00F955  80                 	db	128
   133  00F956  9F                 	db	159
   134  00F957  BB                 	db	187
   135  00F958  D5                 	db	213
   136  00F959  E9                 	db	233
   137  00F95A  F8                 	db	248
   138  00F95B  FF                 	db	255
   139  00F95C  FF                 	db	255
   140  00F95D  F8                 	db	248
   141  00F95E  E9                 	db	233
   142  00F95F  D5                 	db	213
   143  00F960  BB                 	db	187
   144  00F961  9F                 	db	159
   145  00F962  80                 	db	128
   146  00F963  61                 	db	97
   147  00F964  45                 	db	69
   148  00F965  2B                 	db	43
   149  00F966  17                 	db	23
   150  00F967  08                 	db	8
   151  00F968  01                 	db	1
   152  00F969  01                 	db	1
   153  00F96A  08                 	db	8
   154  00F96B  17                 	db	23
   155  00F96C  2B                 	db	43
   156  00F96D  45                 	db	69
   157  00F96E  61                 	db	97
   158  00F96F                     __end_of_sin:
   159                           	callstack 0
   160  00F96F                     _spi2_configuration:
   161                           	callstack 0
   162  00F96F  01                 	db	1
   163  00F970  40                 	db	64
   164  00F971  01                 	db	1
   165  00F972  00                 	db	0
   166  00F973                     __end_of_spi2_configuration:
   167                           	callstack 0
   168  0000                     _ANSELA	set	3896
   169  0000                     _ANSELB	set	3897
   170  0000                     _ANSELC	set	3898
   171  0000                     _ADCON0	set	4034
   172  0000                     _ADRESL	set	4035
   173  0000                     _ADCON2	set	4032
   174  0000                     _ADCON1	set	4033
   175  0000                     _ADRESH	set	4036
   176  0000                     _LATCbits	set	3979
   177  0000                     _ADCON0bits	set	4034
   178  0000                     _LATBbits	set	3978
   179  0000                     _RCONbits	set	4048
   180  0000                     _OSCTUNE	set	3995
   181  0000                     _OSCCON2	set	4050
   182  0000                     _OSCCON	set	4051
   183  0000                     _TXREG1	set	4013
   184  0000                     _RCREG1	set	4014
   185  0000                     _RCSTA1bits	set	4011
   186  0000                     _TXSTA1bits	set	4012
   187  0000                     _PIR1bits	set	3998
   188  0000                     _SPBRGH1	set	4016
   189  0000                     _SPBRG1	set	4015
   190  0000                     _TXSTA1	set	4012
   191  0000                     _RCSTA1	set	4011
   192  0000                     _BAUDCON1	set	4024
   193  0000                     _T0CON	set	4053
   194  0000                     _TMR0L	set	4054
   195  0000                     _TMR0H	set	4055
   196  0000                     _T0CONbits	set	4053
   197  0000                     _INTCONbits	set	4082
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _WPUB	set	3937
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISA	set	3986
   203  0000                     _LATC	set	3979
   204  0000                     _LATB	set	3978
   205  0000                     _LATA	set	3977
   206  0000                     _PIR3bits	set	4004
   207  0000                     _SSP2BUF	set	3951
   208  0000                     _SSP2CON2	set	3947
   209  0000                     _SSP2CON1bits	set	3948
   210  0000                     _TRISBbits	set	3987
   211  0000                     _SSP2ADD	set	3950
   212  0000                     _SSP2CON1	set	3948
   213  0000                     _SSP2STAT	set	3949
   214  0000                     _PLLRDY	set	32407
   215  00F973                     STR_52:
   216  00F973  0D                 	db	13
   217  00F974  0A                 	db	10
   218  00F975  59                 	db	89	;'Y'
   219  00F976  6F                 	db	111	;'o'
   220  00F977  75                 	db	117	;'u'
   221  00F978  20                 	db	32
   222  00F979  6D                 	db	109	;'m'
   223  00F97A  61                 	db	97	;'a'
   224  00F97B  79                 	db	121	;'y'
   225  00F97C  20                 	db	32
   226  00F97D  74                 	db	116	;'t'
   227  00F97E  65                 	db	101	;'e'
   228  00F97F  72                 	db	114	;'r'
   229  00F980  6D                 	db	109	;'m'
   230  00F981  69                 	db	105	;'i'
   231  00F982  6E                 	db	110	;'n'
   232  00F983  61                 	db	97	;'a'
   233  00F984  74                 	db	116	;'t'
   234  00F985  65                 	db	101	;'e'
   235  00F986  20                 	db	32
   236  00F987  73                 	db	115	;'s'
   237  00F988  70                 	db	112	;'p'
   238  00F989  6F                 	db	111	;'o'
   239  00F98A  6F                 	db	111	;'o'
   240  00F98B  6C                 	db	108	;'l'
   241  00F98C  69                 	db	105	;'i'
   242  00F98D  6E                 	db	110	;'n'
   243  00F98E  67                 	db	103	;'g'
   244  00F98F  20                 	db	32
   245  00F990  61                 	db	97	;'a'
   246  00F991  74                 	db	116	;'t'
   247  00F992  20                 	db	32
   248  00F993  61                 	db	97	;'a'
   249  00F994  6E                 	db	110	;'n'
   250  00F995  79                 	db	121	;'y'
   251  00F996  74                 	db	116	;'t'
   252  00F997  69                 	db	105	;'i'
   253  00F998  6D                 	db	109	;'m'
   254  00F999  65                 	db	101	;'e'
   255  00F99A  20                 	db	32
   256  00F99B  77                 	db	119	;'w'
   257  00F99C  69                 	db	105	;'i'
   258  00F99D  74                 	db	116	;'t'
   259  00F99E  68                 	db	104	;'h'
   260  00F99F  20                 	db	32
   261  00F9A0  61                 	db	97	;'a'
   262  00F9A1  20                 	db	32
   263  00F9A2  6B                 	db	107	;'k'
   264  00F9A3  65                 	db	101	;'e'
   265  00F9A4  79                 	db	121	;'y'
   266  00F9A5  70                 	db	112	;'p'
   267  00F9A6  72                 	db	114	;'r'
   268  00F9A7  65                 	db	101	;'e'
   269  00F9A8  73                 	db	115	;'s'
   270  00F9A9  73                 	db	115	;'s'
   271  00F9AA  2E                 	db	46
   272  00F9AB  0D                 	db	13
   273  00F9AC  0A                 	db	10
   274  00F9AD  54                 	db	84	;'T'
   275  00F9AE  6F                 	db	111	;'o'
   276  00F9AF  20                 	db	32
   277  00F9B0  73                 	db	115	;'s'
   278  00F9B1  70                 	db	112	;'p'
   279  00F9B2  6F                 	db	111	;'o'
   280  00F9B3  6F                 	db	111	;'o'
   281  00F9B4  6C                 	db	108	;'l'
   282  00F9B5  20                 	db	32
   283  00F9B6  74                 	db	116	;'t'
   284  00F9B7  65                 	db	101	;'e'
   285  00F9B8  72                 	db	114	;'r'
   286  00F9B9  6D                 	db	109	;'m'
   287  00F9BA  69                 	db	105	;'i'
   288  00F9BB  6E                 	db	110	;'n'
   289  00F9BC  61                 	db	97	;'a'
   290  00F9BD  6C                 	db	108	;'l'
   291  00F9BE  20                 	db	32
   292  00F9BF  63                 	db	99	;'c'
   293  00F9C0  6F                 	db	111	;'o'
   294  00F9C1  6E                 	db	110	;'n'
   295  00F9C2  74                 	db	116	;'t'
   296  00F9C3  65                 	db	101	;'e'
   297  00F9C4  6E                 	db	110	;'n'
   298  00F9C5  74                 	db	116	;'t'
   299  00F9C6  73                 	db	115	;'s'
   300  00F9C7  20                 	db	32
   301  00F9C8  69                 	db	105	;'i'
   302  00F9C9  6E                 	db	110	;'n'
   303  00F9CA  74                 	db	116	;'t'
   304  00F9CB  6F                 	db	111	;'o'
   305  00F9CC  20                 	db	32
   306  00F9CD  61                 	db	97	;'a'
   307  00F9CE  20                 	db	32
   308  00F9CF  66                 	db	102	;'f'
   309  00F9D0  69                 	db	105	;'i'
   310  00F9D1  6C                 	db	108	;'l'
   311  00F9D2  65                 	db	101	;'e'
   312  00F9D3  20                 	db	32
   313  00F9D4  66                 	db	102	;'f'
   314  00F9D5  6F                 	db	111	;'o'
   315  00F9D6  6C                 	db	108	;'l'
   316  00F9D7  6C                 	db	108	;'l'
   317  00F9D8  6F                 	db	111	;'o'
   318  00F9D9  77                 	db	119	;'w'
   319  00F9DA  20                 	db	32
   320  00F9DB  74                 	db	116	;'t'
   321  00F9DC  68                 	db	104	;'h'
   322  00F9DD  65                 	db	101	;'e'
   323  00F9DE  73                 	db	115	;'s'
   324  00F9DF  65                 	db	101	;'e'
   325  00F9E0  20                 	db	32
   326  00F9E1  69                 	db	105	;'i'
   327  00F9E2  6E                 	db	110	;'n'
   328  00F9E3  73                 	db	115	;'s'
   329  00F9E4  74                 	db	116	;'t'
   330  00F9E5  72                 	db	114	;'r'
   331  00F9E6  75                 	db	117	;'u'
   332  00F9E7  63                 	db	99	;'c'
   333  00F9E8  74                 	db	116	;'t'
   334  00F9E9  69                 	db	105	;'i'
   335  00F9EA  6F                 	db	111	;'o'
   336  00F9EB  6E                 	db	110	;'n'
   337  00F9EC  73                 	db	115	;'s'
   338  00F9ED  3A                 	db	58	;':'
   339  00F9EE  0D                 	db	13
   340  00F9EF  0A                 	db	10
   341  00F9F0  0D                 	db	13
   342  00F9F1  0A                 	db	10
   343  00F9F2  52                 	db	82	;'R'
   344  00F9F3  69                 	db	105	;'i'
   345  00F9F4  67                 	db	103	;'g'
   346  00F9F5  68                 	db	104	;'h'
   347  00F9F6  74                 	db	116	;'t'
   348  00F9F7  20                 	db	32
   349  00F9F8  6D                 	db	109	;'m'
   350  00F9F9  6F                 	db	111	;'o'
   351  00F9FA  75                 	db	117	;'u'
   352  00F9FB  73                 	db	115	;'s'
   353  00F9FC  65                 	db	101	;'e'
   354  00F9FD  20                 	db	32
   355  00F9FE  63                 	db	99	;'c'
   356  00F9FF  6C                 	db	108	;'l'
   357  00FA00  69                 	db	105	;'i'
   358  00FA01  63                 	db	99	;'c'
   359  00FA02  6B                 	db	107	;'k'
   360  00FA03  20                 	db	32
   361  00FA04  6F                 	db	111	;'o'
   362  00FA05  6E                 	db	110	;'n'
   363  00FA06  20                 	db	32
   364  00FA07  74                 	db	116	;'t'
   365  00FA08  68                 	db	104	;'h'
   366  00FA09  65                 	db	101	;'e'
   367  00FA0A  20                 	db	32
   368  00FA0B  75                 	db	117	;'u'
   369  00FA0C  70                 	db	112	;'p'
   370  00FA0D  70                 	db	112	;'p'
   371  00FA0E  65                 	db	101	;'e'
   372  00FA0F  72                 	db	114	;'r'
   373  00FA10  20                 	db	32
   374  00FA11  6C                 	db	108	;'l'
   375  00FA12  65                 	db	101	;'e'
   376  00FA13  66                 	db	102	;'f'
   377  00FA14  74                 	db	116	;'t'
   378  00FA15  20                 	db	32
   379  00FA16  6F                 	db	111	;'o'
   380  00FA17  66                 	db	102	;'f'
   381  00FA18  20                 	db	32
   382  00FA19  74                 	db	116	;'t'
   383  00FA1A  68                 	db	104	;'h'
   384  00FA1B  65                 	db	101	;'e'
   385  00FA1C  20                 	db	32
   386  00FA1D  50                 	db	80	;'P'
   387  00FA1E  75                 	db	117	;'u'
   388  00FA1F  54                 	db	84	;'T'
   389  00FA20  54                 	db	84	;'T'
   390  00FA21  59                 	db	89	;'Y'
   391  00FA22  20                 	db	32
   392  00FA23  77                 	db	119	;'w'
   393  00FA24  69                 	db	105	;'i'
   394  00FA25  6E                 	db	110	;'n'
   395  00FA26  64                 	db	100	;'d'
   396  00FA27  6F                 	db	111	;'o'
   397  00FA28  77                 	db	119	;'w'
   398  00FA29  0D                 	db	13
   399  00FA2A  0A                 	db	10
   400  00FA2B  53                 	db	83	;'S'
   401  00FA2C  65                 	db	101	;'e'
   402  00FA2D  6C                 	db	108	;'l'
   403  00FA2E  65                 	db	101	;'e'
   404  00FA2F  63                 	db	99	;'c'
   405  00FA30  74                 	db	116	;'t'
   406  00FA31  3A                 	db	58	;':'
   407  00FA32  20                 	db	32
   408  00FA33  20                 	db	32
   409  00FA34  20                 	db	32
   410  00FA35  20                 	db	32
   411  00FA36  20                 	db	32
   412  00FA37  43                 	db	67	;'C'
   413  00FA38  68                 	db	104	;'h'
   414  00FA39  61                 	db	97	;'a'
   415  00FA3A  6E                 	db	110	;'n'
   416  00FA3B  67                 	db	103	;'g'
   417  00FA3C  65                 	db	101	;'e'
   418  00FA3D  20                 	db	32
   419  00FA3E  73                 	db	115	;'s'
   420  00FA3F  65                 	db	101	;'e'
   421  00FA40  74                 	db	116	;'t'
   422  00FA41  74                 	db	116	;'t'
   423  00FA42  69                 	db	105	;'i'
   424  00FA43  6E                 	db	110	;'n'
   425  00FA44  67                 	db	103	;'g'
   426  00FA45  73                 	db	115	;'s'
   427  00FA46  2E                 	db	46
   428  00FA47  2E                 	db	46
   429  00FA48  2E                 	db	46
   430  00FA49  0D                 	db	13
   431  00FA4A  0A                 	db	10
   432  00FA4B  53                 	db	83	;'S'
   433  00FA4C  65                 	db	101	;'e'
   434  00FA4D  6C                 	db	108	;'l'
   435  00FA4E  65                 	db	101	;'e'
   436  00FA4F  63                 	db	99	;'c'
   437  00FA50  74                 	db	116	;'t'
   438  00FA51  3A                 	db	58	;':'
   439  00FA52  20                 	db	32
   440  00FA53  20                 	db	32
   441  00FA54  20                 	db	32
   442  00FA55  20                 	db	32
   443  00FA56  20                 	db	32
   444  00FA57  4C                 	db	76	;'L'
   445  00FA58  6F                 	db	111	;'o'
   446  00FA59  67                 	db	103	;'g'
   447  00FA5A  67                 	db	103	;'g'
   448  00FA5B  69                 	db	105	;'i'
   449  00FA5C  6E                 	db	110	;'n'
   450  00FA5D  67                 	db	103	;'g'
   451  00FA5E  0D                 	db	13
   452  00FA5F  0A                 	db	10
   453  00FA60  53                 	db	83	;'S'
   454  00FA61  65                 	db	101	;'e'
   455  00FA62  6C                 	db	108	;'l'
   456  00FA63  65                 	db	101	;'e'
   457  00FA64  63                 	db	99	;'c'
   458  00FA65  74                 	db	116	;'t'
   459  00FA66  3A                 	db	58	;':'
   460  00FA67  20                 	db	32
   461  00FA68  20                 	db	32
   462  00FA69  20                 	db	32
   463  00FA6A  20                 	db	32
   464  00FA6B  20                 	db	32
   465  00FA6C  53                 	db	83	;'S'
   466  00FA6D  65                 	db	101	;'e'
   467  00FA6E  73                 	db	115	;'s'
   468  00FA6F  73                 	db	115	;'s'
   469  00FA70  69                 	db	105	;'i'
   470  00FA71  6F                 	db	111	;'o'
   471  00FA72  6E                 	db	110	;'n'
   472  00FA73  20                 	db	32
   473  00FA74  6C                 	db	108	;'l'
   474  00FA75  6F                 	db	111	;'o'
   475  00FA76  67                 	db	103	;'g'
   476  00FA77  67                 	db	103	;'g'
   477  00FA78  69                 	db	105	;'i'
   478  00FA79  6E                 	db	110	;'n'
   479  00FA7A  67                 	db	103	;'g'
   480  00FA7B  3A                 	db	58	;':'
   481  00FA7C  20                 	db	32
   482  00FA7D  41                 	db	65	;'A'
   483  00FA7E  6C                 	db	108	;'l'
   484  00FA7F  6C                 	db	108	;'l'
   485  00FA80  20                 	db	32
   486  00FA81  73                 	db	115	;'s'
   487  00FA82  65                 	db	101	;'e'
   488  00FA83  73                 	db	115	;'s'
   489  00FA84  73                 	db	115	;'s'
   490  00FA85  69                 	db	105	;'i'
   491  00FA86  6F                 	db	111	;'o'
   492  00FA87  6E                 	db	110	;'n'
   493  00FA88  20                 	db	32
   494  00FA89  6F                 	db	111	;'o'
   495  00FA8A  75                 	db	117	;'u'
   496  00FA8B  74                 	db	116	;'t'
   497  00FA8C  70                 	db	112	;'p'
   498  00FA8D  75                 	db	117	;'u'
   499  00FA8E  74                 	db	116	;'t'
   500  00FA8F  0D                 	db	13
   501  00FA90  0A                 	db	10
   502  00FA91  4C                 	db	76	;'L'
   503  00FA92  6F                 	db	111	;'o'
   504  00FA93  67                 	db	103	;'g'
   505  00FA94  20                 	db	32
   506  00FA95  66                 	db	102	;'f'
   507  00FA96  69                 	db	105	;'i'
   508  00FA97  6C                 	db	108	;'l'
   509  00FA98  65                 	db	101	;'e'
   510  00FA99  20                 	db	32
   511  00FA9A  6E                 	db	110	;'n'
   512  00FA9B  61                 	db	97	;'a'
   513  00FA9C  6D                 	db	109	;'m'
   514  00FA9D  65                 	db	101	;'e'
   515  00FA9E  3A                 	db	58	;':'
   516  00FA9F  20                 	db	32
   517  00FAA0  20                 	db	32
   518  00FAA1  42                 	db	66	;'B'
   519  00FAA2  72                 	db	114	;'r'
   520  00FAA3  6F                 	db	111	;'o'
   521  00FAA4  77                 	db	119	;'w'
   522  00FAA5  73                 	db	115	;'s'
   523  00FAA6  65                 	db	101	;'e'
   524  00FAA7  20                 	db	32
   525  00FAA8  61                 	db	97	;'a'
   526  00FAA9  6E                 	db	110	;'n'
   527  00FAAA  64                 	db	100	;'d'
   528  00FAAB  20                 	db	32
   529  00FAAC  70                 	db	112	;'p'
   530  00FAAD  72                 	db	114	;'r'
   531  00FAAE  6F                 	db	111	;'o'
   532  00FAAF  76                 	db	118	;'v'
   533  00FAB0  69                 	db	105	;'i'
   534  00FAB1  64                 	db	100	;'d'
   535  00FAB2  65                 	db	101	;'e'
   536  00FAB3  20                 	db	32
   537  00FAB4  61                 	db	97	;'a'
   538  00FAB5  20                 	db	32
   539  00FAB6  2E                 	db	46
   540  00FAB7  63                 	db	99	;'c'
   541  00FAB8  73                 	db	115	;'s'
   542  00FAB9  76                 	db	118	;'v'
   543  00FABA  20                 	db	32
   544  00FABB  65                 	db	101	;'e'
   545  00FABC  78                 	db	120	;'x'
   546  00FABD  74                 	db	116	;'t'
   547  00FABE  65                 	db	101	;'e'
   548  00FABF  6E                 	db	110	;'n'
   549  00FAC0  73                 	db	115	;'s'
   550  00FAC1  69                 	db	105	;'i'
   551  00FAC2  6F                 	db	111	;'o'
   552  00FAC3  6E                 	db	110	;'n'
   553  00FAC4  20                 	db	32
   554  00FAC5  74                 	db	116	;'t'
   555  00FAC6  6F                 	db	111	;'o'
   556  00FAC7  20                 	db	32
   557  00FAC8  79                 	db	121	;'y'
   558  00FAC9  6F                 	db	111	;'o'
   559  00FACA  75                 	db	117	;'u'
   560  00FACB  72                 	db	114	;'r'
   561  00FACC  20                 	db	32
   562  00FACD  66                 	db	102	;'f'
   563  00FACE  69                 	db	105	;'i'
   564  00FACF  6C                 	db	108	;'l'
   565  00FAD0  65                 	db	101	;'e'
   566  00FAD1  20                 	db	32
   567  00FAD2  6E                 	db	110	;'n'
   568  00FAD3  61                 	db	97	;'a'
   569  00FAD4  6D                 	db	109	;'m'
   570  00FAD5  65                 	db	101	;'e'
   571  00FAD6  0D                 	db	13
   572  00FAD7  0A                 	db	10
   573  00FAD8  53                 	db	83	;'S'
   574  00FAD9  65                 	db	101	;'e'
   575  00FADA  6C                 	db	108	;'l'
   576  00FADB  65                 	db	101	;'e'
   577  00FADC  63                 	db	99	;'c'
   578  00FADD  74                 	db	116	;'t'
   579  00FADE  3A                 	db	58	;':'
   580  00FADF  20                 	db	32
   581  00FAE0  20                 	db	32
   582  00FAE1  20                 	db	32
   583  00FAE2  20                 	db	32
   584  00FAE3  20                 	db	32
   585  00FAE4  41                 	db	65	;'A'
   586  00FAE5  70                 	db	112	;'p'
   587  00FAE6  70                 	db	112	;'p'
   588  00FAE7  6C                 	db	108	;'l'
   589  00FAE8  79                 	db	121	;'y'
   590  00FAE9  0D                 	db	13
   591  00FAEA  0A                 	db	10
   592  00FAEB  50                 	db	80	;'P'
   593  00FAEC  72                 	db	114	;'r'
   594  00FAED  65                 	db	101	;'e'
   595  00FAEE  73                 	db	115	;'s'
   596  00FAEF  73                 	db	115	;'s'
   597  00FAF0  20                 	db	32
   598  00FAF1  61                 	db	97	;'a'
   599  00FAF2  6E                 	db	110	;'n'
   600  00FAF3  79                 	db	121	;'y'
   601  00FAF4  20                 	db	32
   602  00FAF5  6B                 	db	107	;'k'
   603  00FAF6  65                 	db	101	;'e'
   604  00FAF7  79                 	db	121	;'y'
   605  00FAF8  20                 	db	32
   606  00FAF9  74                 	db	116	;'t'
   607  00FAFA  6F                 	db	111	;'o'
   608  00FAFB  20                 	db	32
   609  00FAFC  73                 	db	115	;'s'
   610  00FAFD  74                 	db	116	;'t'
   611  00FAFE  61                 	db	97	;'a'
   612  00FAFF  72                 	db	114	;'r'
   613  00FB00  74                 	db	116	;'t'
   614  00FB01  00                 	db	0
   615  00FB02                     STR_54:
   616  00FB02  53                 	db	83	;'S'
   617  00FB03  70                 	db	112	;'p'
   618  00FB04  6F                 	db	111	;'o'
   619  00FB05  6F                 	db	111	;'o'
   620  00FB06  6C                 	db	108	;'l'
   621  00FB07  65                 	db	101	;'e'
   622  00FB08  64                 	db	100	;'d'
   623  00FB09  20                 	db	32
   624  00FB0A  35                 	db	53	;'5'
   625  00FB0B  31                 	db	49	;'1'
   626  00FB0C  32                 	db	50	;'2'
   627  00FB0D  20                 	db	32
   628  00FB0E  6F                 	db	111	;'o'
   629  00FB0F  75                 	db	117	;'u'
   630  00FB10  74                 	db	116	;'t'
   631  00FB11  20                 	db	32
   632  00FB12  6F                 	db	111	;'o'
   633  00FB13  66                 	db	102	;'f'
   634  00FB14  20                 	db	32
   635  00FB15  74                 	db	116	;'t'
   636  00FB16  68                 	db	104	;'h'
   637  00FB17  65                 	db	101	;'e'
   638  00FB18  20                 	db	32
   639  00FB19  35                 	db	53	;'5'
   640  00FB1A  31                 	db	49	;'1'
   641  00FB1B  32                 	db	50	;'2'
   642  00FB1C  20                 	db	32
   643  00FB1D  62                 	db	98	;'b'
   644  00FB1E  6C                 	db	108	;'l'
   645  00FB1F  6F                 	db	111	;'o'
   646  00FB20  63                 	db	99	;'c'
   647  00FB21  6B                 	db	107	;'k'
   648  00FB22  73                 	db	115	;'s'
   649  00FB23  2E                 	db	46
   650  00FB24  20                 	db	32
   651  00FB25  0D                 	db	13
   652  00FB26  0A                 	db	10
   653  00FB27  54                 	db	84	;'T'
   654  00FB28  6F                 	db	111	;'o'
   655  00FB29  20                 	db	32
   656  00FB2A  63                 	db	99	;'c'
   657  00FB2B  6C                 	db	108	;'l'
   658  00FB2C  6F                 	db	111	;'o'
   659  00FB2D  73                 	db	115	;'s'
   660  00FB2E  65                 	db	101	;'e'
   661  00FB2F  20                 	db	32
   662  00FB30  74                 	db	116	;'t'
   663  00FB31  68                 	db	104	;'h'
   664  00FB32  65                 	db	101	;'e'
   665  00FB33  20                 	db	32
   666  00FB34  66                 	db	102	;'f'
   667  00FB35  69                 	db	105	;'i'
   668  00FB36  6C                 	db	108	;'l'
   669  00FB37  65                 	db	101	;'e'
   670  00FB38  20                 	db	32
   671  00FB39  66                 	db	102	;'f'
   672  00FB3A  6F                 	db	111	;'o'
   673  00FB3B  6C                 	db	108	;'l'
   674  00FB3C  6C                 	db	108	;'l'
   675  00FB3D  6F                 	db	111	;'o'
   676  00FB3E  77                 	db	119	;'w'
   677  00FB3F  20                 	db	32
   678  00FB40  74                 	db	116	;'t'
   679  00FB41  68                 	db	104	;'h'
   680  00FB42  65                 	db	101	;'e'
   681  00FB43  73                 	db	115	;'s'
   682  00FB44  65                 	db	101	;'e'
   683  00FB45  20                 	db	32
   684  00FB46  69                 	db	105	;'i'
   685  00FB47  6E                 	db	110	;'n'
   686  00FB48  73                 	db	115	;'s'
   687  00FB49  74                 	db	116	;'t'
   688  00FB4A  72                 	db	114	;'r'
   689  00FB4B  75                 	db	117	;'u'
   690  00FB4C  63                 	db	99	;'c'
   691  00FB4D  74                 	db	116	;'t'
   692  00FB4E  69                 	db	105	;'i'
   693  00FB4F  6F                 	db	111	;'o'
   694  00FB50  6E                 	db	110	;'n'
   695  00FB51  73                 	db	115	;'s'
   696  00FB52  3A                 	db	58	;':'
   697  00FB53  20                 	db	32
   698  00FB54  0D                 	db	13
   699  00FB55  0A                 	db	10
   700  00FB56  20                 	db	32
   701  00FB57  0D                 	db	13
   702  00FB58  0A                 	db	10
   703  00FB59  52                 	db	82	;'R'
   704  00FB5A  69                 	db	105	;'i'
   705  00FB5B  67                 	db	103	;'g'
   706  00FB5C  68                 	db	104	;'h'
   707  00FB5D  74                 	db	116	;'t'
   708  00FB5E  20                 	db	32
   709  00FB5F  6D                 	db	109	;'m'
   710  00FB60  6F                 	db	111	;'o'
   711  00FB61  75                 	db	117	;'u'
   712  00FB62  73                 	db	115	;'s'
   713  00FB63  65                 	db	101	;'e'
   714  00FB64  20                 	db	32
   715  00FB65  63                 	db	99	;'c'
   716  00FB66  6C                 	db	108	;'l'
   717  00FB67  69                 	db	105	;'i'
   718  00FB68  63                 	db	99	;'c'
   719  00FB69  6B                 	db	107	;'k'
   720  00FB6A  20                 	db	32
   721  00FB6B  6F                 	db	111	;'o'
   722  00FB6C  6E                 	db	110	;'n'
   723  00FB6D  20                 	db	32
   724  00FB6E  74                 	db	116	;'t'
   725  00FB6F  68                 	db	104	;'h'
   726  00FB70  65                 	db	101	;'e'
   727  00FB71  20                 	db	32
   728  00FB72  75                 	db	117	;'u'
   729  00FB73  70                 	db	112	;'p'
   730  00FB74  70                 	db	112	;'p'
   731  00FB75  65                 	db	101	;'e'
   732  00FB76  72                 	db	114	;'r'
   733  00FB77  20                 	db	32
   734  00FB78  6C                 	db	108	;'l'
   735  00FB79  65                 	db	101	;'e'
   736  00FB7A  66                 	db	102	;'f'
   737  00FB7B  74                 	db	116	;'t'
   738  00FB7C  20                 	db	32
   739  00FB7D  6F                 	db	111	;'o'
   740  00FB7E  66                 	db	102	;'f'
   741  00FB7F  20                 	db	32
   742  00FB80  74                 	db	116	;'t'
   743  00FB81  68                 	db	104	;'h'
   744  00FB82  65                 	db	101	;'e'
   745  00FB83  20                 	db	32
   746  00FB84  50                 	db	80	;'P'
   747  00FB85  75                 	db	117	;'u'
   748  00FB86  54                 	db	84	;'T'
   749  00FB87  54                 	db	84	;'T'
   750  00FB88  59                 	db	89	;'Y'
   751  00FB89  20                 	db	32
   752  00FB8A  77                 	db	119	;'w'
   753  00FB8B  69                 	db	105	;'i'
   754  00FB8C  6E                 	db	110	;'n'
   755  00FB8D  64                 	db	100	;'d'
   756  00FB8E  6F                 	db	111	;'o'
   757  00FB8F  77                 	db	119	;'w'
   758  00FB90  20                 	db	32
   759  00FB91  0D                 	db	13
   760  00FB92  0A                 	db	10
   761  00FB93  53                 	db	83	;'S'
   762  00FB94  65                 	db	101	;'e'
   763  00FB95  6C                 	db	108	;'l'
   764  00FB96  65                 	db	101	;'e'
   765  00FB97  63                 	db	99	;'c'
   766  00FB98  74                 	db	116	;'t'
   767  00FB99  3A                 	db	58	;':'
   768  00FB9A  20                 	db	32
   769  00FB9B  20                 	db	32
   770  00FB9C  20                 	db	32
   771  00FB9D  20                 	db	32
   772  00FB9E  20                 	db	32
   773  00FB9F  43                 	db	67	;'C'
   774  00FBA0  68                 	db	104	;'h'
   775  00FBA1  61                 	db	97	;'a'
   776  00FBA2  6E                 	db	110	;'n'
   777  00FBA3  67                 	db	103	;'g'
   778  00FBA4  65                 	db	101	;'e'
   779  00FBA5  20                 	db	32
   780  00FBA6  73                 	db	115	;'s'
   781  00FBA7  65                 	db	101	;'e'
   782  00FBA8  74                 	db	116	;'t'
   783  00FBA9  74                 	db	116	;'t'
   784  00FBAA  69                 	db	105	;'i'
   785  00FBAB  6E                 	db	110	;'n'
   786  00FBAC  67                 	db	103	;'g'
   787  00FBAD  73                 	db	115	;'s'
   788  00FBAE  2E                 	db	46
   789  00FBAF  2E                 	db	46
   790  00FBB0  2E                 	db	46
   791  00FBB1  20                 	db	32
   792  00FBB2  0D                 	db	13
   793  00FBB3  0A                 	db	10
   794  00FBB4  53                 	db	83	;'S'
   795  00FBB5  65                 	db	101	;'e'
   796  00FBB6  6C                 	db	108	;'l'
   797  00FBB7  65                 	db	101	;'e'
   798  00FBB8  63                 	db	99	;'c'
   799  00FBB9  74                 	db	116	;'t'
   800  00FBBA  3A                 	db	58	;':'
   801  00FBBB  20                 	db	32
   802  00FBBC  20                 	db	32
   803  00FBBD  20                 	db	32
   804  00FBBE  20                 	db	32
   805  00FBBF  20                 	db	32
   806  00FBC0  4C                 	db	76	;'L'
   807  00FBC1  6F                 	db	111	;'o'
   808  00FBC2  67                 	db	103	;'g'
   809  00FBC3  67                 	db	103	;'g'
   810  00FBC4  69                 	db	105	;'i'
   811  00FBC5  6E                 	db	110	;'n'
   812  00FBC6  67                 	db	103	;'g'
   813  00FBC7  20                 	db	32
   814  00FBC8  0D                 	db	13
   815  00FBC9  0A                 	db	10
   816  00FBCA  53                 	db	83	;'S'
   817  00FBCB  65                 	db	101	;'e'
   818  00FBCC  6C                 	db	108	;'l'
   819  00FBCD  65                 	db	101	;'e'
   820  00FBCE  63                 	db	99	;'c'
   821  00FBCF  74                 	db	116	;'t'
   822  00FBD0  3A                 	db	58	;':'
   823  00FBD1  20                 	db	32
   824  00FBD2  20                 	db	32
   825  00FBD3  20                 	db	32
   826  00FBD4  20                 	db	32
   827  00FBD5  20                 	db	32
   828  00FBD6  53                 	db	83	;'S'
   829  00FBD7  65                 	db	101	;'e'
   830  00FBD8  73                 	db	115	;'s'
   831  00FBD9  73                 	db	115	;'s'
   832  00FBDA  69                 	db	105	;'i'
   833  00FBDB  6F                 	db	111	;'o'
   834  00FBDC  6E                 	db	110	;'n'
   835  00FBDD  20                 	db	32
   836  00FBDE  20                 	db	32
   837  00FBDF  6C                 	db	108	;'l'
   838  00FBE0  6F                 	db	111	;'o'
   839  00FBE1  67                 	db	103	;'g'
   840  00FBE2  67                 	db	103	;'g'
   841  00FBE3  69                 	db	105	;'i'
   842  00FBE4  6E                 	db	110	;'n'
   843  00FBE5  67                 	db	103	;'g'
   844  00FBE6  3A                 	db	58	;':'
   845  00FBE7  20                 	db	32
   846  00FBE8  4E                 	db	78	;'N'
   847  00FBE9  6F                 	db	111	;'o'
   848  00FBEA  6E                 	db	110	;'n'
   849  00FBEB  65                 	db	101	;'e'
   850  00FBEC  20                 	db	32
   851  00FBED  0D                 	db	13
   852  00FBEE  0A                 	db	10
   853  00FBEF  53                 	db	83	;'S'
   854  00FBF0  65                 	db	101	;'e'
   855  00FBF1  6C                 	db	108	;'l'
   856  00FBF2  65                 	db	101	;'e'
   857  00FBF3  63                 	db	99	;'c'
   858  00FBF4  74                 	db	116	;'t'
   859  00FBF5  3A                 	db	58	;':'
   860  00FBF6  20                 	db	32
   861  00FBF7  20                 	db	32
   862  00FBF8  20                 	db	32
   863  00FBF9  20                 	db	32
   864  00FBFA  20                 	db	32
   865  00FBFB  41                 	db	65	;'A'
   866  00FBFC  70                 	db	112	;'p'
   867  00FBFD  70                 	db	112	;'p'
   868  00FBFE  6C                 	db	108	;'l'
   869  00FBFF  79                 	db	121	;'y'
   870  00FC00  00                 	db	0
   871  00FC01                     STR_45:
   872  00FC01  57                 	db	87	;'W'
   873  00FC02  72                 	db	114	;'r'
   874  00FC03  69                 	db	105	;'i'
   875  00FC04  74                 	db	116	;'t'
   876  00FC05  69                 	db	105	;'i'
   877  00FC06  6E                 	db	110	;'n'
   878  00FC07  67                 	db	103	;'g'
   879  00FC08  20                 	db	32
   880  00FC09  73                 	db	115	;'s'
   881  00FC0A  69                 	db	105	;'i'
   882  00FC0B  6E                 	db	110	;'n'
   883  00FC0C  65                 	db	101	;'e'
   884  00FC0D  20                 	db	32
   885  00FC0E  77                 	db	119	;'w'
   886  00FC0F  61                 	db	97	;'a'
   887  00FC10  76                 	db	118	;'v'
   888  00FC11  65                 	db	101	;'e'
   889  00FC12  20                 	db	32
   890  00FC13  74                 	db	116	;'t'
   891  00FC14  6F                 	db	111	;'o'
   892  00FC15  20                 	db	32
   893  00FC16  6D                 	db	109	;'m'
   894  00FC17  65                 	db	101	;'e'
   895  00FC18  6D                 	db	109	;'m'
   896  00FC19  6F                 	db	111	;'o'
   897  00FC1A  72                 	db	114	;'r'
   898  00FC1B  79                 	db	121	;'y'
   899  00FC1C  2C                 	db	44
   900  00FC1D  20                 	db	32
   901  00FC1E  73                 	db	115	;'s'
   902  00FC1F  74                 	db	116	;'t'
   903  00FC20  61                 	db	97	;'a'
   904  00FC21  72                 	db	114	;'r'
   905  00FC22  74                 	db	116	;'t'
   906  00FC23  69                 	db	105	;'i'
   907  00FC24  6E                 	db	110	;'n'
   908  00FC25  67                 	db	103	;'g'
   909  00FC26  20                 	db	32
   910  00FC27  77                 	db	119	;'w'
   911  00FC28  69                 	db	105	;'i'
   912  00FC29  74                 	db	116	;'t'
   913  00FC2A  68                 	db	104	;'h'
   914  00FC2B  20                 	db	32
   915  00FC2C  74                 	db	116	;'t'
   916  00FC2D  68                 	db	104	;'h'
   917  00FC2E  65                 	db	101	;'e'
   918  00FC2F  20                 	db	32
   919  00FC30  63                 	db	99	;'c'
   920  00FC31  75                 	db	117	;'u'
   921  00FC32  72                 	db	114	;'r'
   922  00FC33  72                 	db	114	;'r'
   923  00FC34  65                 	db	101	;'e'
   924  00FC35  6E                 	db	110	;'n'
   925  00FC36  74                 	db	116	;'t'
   926  00FC37  20                 	db	32
   927  00FC38  61                 	db	97	;'a'
   928  00FC39  64                 	db	100	;'d'
   929  00FC3A  64                 	db	100	;'d'
   930  00FC3B  72                 	db	114	;'r'
   931  00FC3C  65                 	db	101	;'e'
   932  00FC3D  73                 	db	115	;'s'
   933  00FC3E  73                 	db	115	;'s'
   934  00FC3F  2E                 	db	46
   935  00FC40  20                 	db	32
   936  00FC41  50                 	db	80	;'P'
   937  00FC42  72                 	db	114	;'r'
   938  00FC43  65                 	db	101	;'e'
   939  00FC44  73                 	db	115	;'s'
   940  00FC45  73                 	db	115	;'s'
   941  00FC46  20                 	db	32
   942  00FC47  61                 	db	97	;'a'
   943  00FC48  6E                 	db	110	;'n'
   944  00FC49  79                 	db	121	;'y'
   945  00FC4A  20                 	db	32
   946  00FC4B  6B                 	db	107	;'k'
   947  00FC4C  65                 	db	101	;'e'
   948  00FC4D  79                 	db	121	;'y'
   949  00FC4E  20                 	db	32
   950  00FC4F  74                 	db	116	;'t'
   951  00FC50  6F                 	db	111	;'o'
   952  00FC51  20                 	db	32
   953  00FC52  73                 	db	115	;'s'
   954  00FC53  74                 	db	116	;'t'
   955  00FC54  6F                 	db	111	;'o'
   956  00FC55  70                 	db	112	;'p'
   957  00FC56  2E                 	db	46
   958  00FC57  0D                 	db	13
   959  00FC58  0A                 	db	10
   960  00FC59  00                 	db	0
   961  00FC5A                     STR_49:
   962  00FC5A  50                 	db	80	;'P'
   963  00FC5B  72                 	db	114	;'r'
   964  00FC5C  65                 	db	101	;'e'
   965  00FC5D  73                 	db	115	;'s'
   966  00FC5E  73                 	db	115	;'s'
   967  00FC5F  20                 	db	32
   968  00FC60  61                 	db	97	;'a'
   969  00FC61  6E                 	db	110	;'n'
   970  00FC62  79                 	db	121	;'y'
   971  00FC63  20                 	db	32
   972  00FC64  6B                 	db	107	;'k'
   973  00FC65  65                 	db	101	;'e'
   974  00FC66  79                 	db	121	;'y'
   975  00FC67  20                 	db	32
   976  00FC68  74                 	db	116	;'t'
   977  00FC69  6F                 	db	111	;'o'
   978  00FC6A  20                 	db	32
   979  00FC6B  73                 	db	115	;'s'
   980  00FC6C  74                 	db	116	;'t'
   981  00FC6D  61                 	db	97	;'a'
   982  00FC6E  72                 	db	114	;'r'
   983  00FC6F  74                 	db	116	;'t'
   984  00FC70  20                 	db	32
   985  00FC71  72                 	db	114	;'r'
   986  00FC72  65                 	db	101	;'e'
   987  00FC73  63                 	db	99	;'c'
   988  00FC74  6F                 	db	111	;'o'
   989  00FC75  72                 	db	114	;'r'
   990  00FC76  64                 	db	100	;'d'
   991  00FC77  69                 	db	105	;'i'
   992  00FC78  6E                 	db	110	;'n'
   993  00FC79  67                 	db	103	;'g'
   994  00FC7A  20                 	db	32
   995  00FC7B  61                 	db	97	;'a'
   996  00FC7C  75                 	db	117	;'u'
   997  00FC7D  64                 	db	100	;'d'
   998  00FC7E  69                 	db	105	;'i'
   999  00FC7F  6F                 	db	111	;'o'
  1000  00FC80  20                 	db	32
  1001  00FC81  61                 	db	97	;'a'
  1002  00FC82  6E                 	db	110	;'n'
  1003  00FC83  64                 	db	100	;'d'
  1004  00FC84  20                 	db	32
  1005  00FC85  70                 	db	112	;'p'
  1006  00FC86  72                 	db	114	;'r'
  1007  00FC87  65                 	db	101	;'e'
  1008  00FC88  73                 	db	115	;'s'
  1009  00FC89  73                 	db	115	;'s'
  1010  00FC8A  20                 	db	32
  1011  00FC8B  61                 	db	97	;'a'
  1012  00FC8C  6E                 	db	110	;'n'
  1013  00FC8D  79                 	db	121	;'y'
  1014  00FC8E  20                 	db	32
  1015  00FC8F  6B                 	db	107	;'k'
  1016  00FC90  65                 	db	101	;'e'
  1017  00FC91  79                 	db	121	;'y'
  1018  00FC92  20                 	db	32
  1019  00FC93  74                 	db	116	;'t'
  1020  00FC94  6F                 	db	111	;'o'
  1021  00FC95  20                 	db	32
  1022  00FC96  73                 	db	115	;'s'
  1023  00FC97  74                 	db	116	;'t'
  1024  00FC98  6F                 	db	111	;'o'
  1025  00FC99  70                 	db	112	;'p'
  1026  00FC9A  20                 	db	32
  1027  00FC9B  72                 	db	114	;'r'
  1028  00FC9C  65                 	db	101	;'e'
  1029  00FC9D  63                 	db	99	;'c'
  1030  00FC9E  6F                 	db	111	;'o'
  1031  00FC9F  72                 	db	114	;'r'
  1032  00FCA0  64                 	db	100	;'d'
  1033  00FCA1  69                 	db	105	;'i'
  1034  00FCA2  6E                 	db	110	;'n'
  1035  00FCA3  67                 	db	103	;'g'
  1036  00FCA4  0D                 	db	13
  1037  00FCA5  0A                 	db	10
  1038  00FCA6  00                 	db	0
  1039  00FCA7                     STR_21:
  1040  00FCA7  31                 	db	49	;'1'
  1041  00FCA8  3A                 	db	58	;':'
  1042  00FCA9  20                 	db	32
  1043  00FCAA  77                 	db	119	;'w'
  1044  00FCAB  72                 	db	114	;'r'
  1045  00FCAC  69                 	db	105	;'i'
  1046  00FCAD  74                 	db	116	;'t'
  1047  00FCAE  65                 	db	101	;'e'
  1048  00FCAF  20                 	db	32
  1049  00FCB0  61                 	db	97	;'a'
  1050  00FCB1  20                 	db	32
  1051  00FCB2  70                 	db	112	;'p'
  1052  00FCB3  65                 	db	101	;'e'
  1053  00FCB4  72                 	db	114	;'r'
  1054  00FCB5  66                 	db	102	;'f'
  1055  00FCB6  65                 	db	101	;'e'
  1056  00FCB7  63                 	db	99	;'c'
  1057  00FCB8  74                 	db	116	;'t'
  1058  00FCB9  20                 	db	32
  1059  00FCBA  32                 	db	50	;'2'
  1060  00FCBB  36                 	db	54	;'6'
  1061  00FCBC  20                 	db	32
  1062  00FCBD  76                 	db	118	;'v'
  1063  00FCBE  61                 	db	97	;'a'
  1064  00FCBF  6C                 	db	108	;'l'
  1065  00FCC0  75                 	db	117	;'u'
  1066  00FCC1  65                 	db	101	;'e'
  1067  00FCC2  20                 	db	32
  1068  00FCC3  73                 	db	115	;'s'
  1069  00FCC4  69                 	db	105	;'i'
  1070  00FCC5  6E                 	db	110	;'n'
  1071  00FCC6  65                 	db	101	;'e'
  1072  00FCC7  20                 	db	32
  1073  00FCC8  77                 	db	119	;'w'
  1074  00FCC9  61                 	db	97	;'a'
  1075  00FCCA  76                 	db	118	;'v'
  1076  00FCCB  65                 	db	101	;'e'
  1077  00FCCC  20                 	db	32
  1078  00FCCD  74                 	db	116	;'t'
  1079  00FCCE  6F                 	db	111	;'o'
  1080  00FCCF  20                 	db	32
  1081  00FCD0  74                 	db	116	;'t'
  1082  00FCD1  68                 	db	104	;'h'
  1083  00FCD2  65                 	db	101	;'e'
  1084  00FCD3  20                 	db	32
  1085  00FCD4  53                 	db	83	;'S'
  1086  00FCD5  44                 	db	68	;'D'
  1087  00FCD6  20                 	db	32
  1088  00FCD7  63                 	db	99	;'c'
  1089  00FCD8  61                 	db	97	;'a'
  1090  00FCD9  72                 	db	114	;'r'
  1091  00FCDA  64                 	db	100	;'d'
  1092  00FCDB  0D                 	db	13
  1093  00FCDC  0A                 	db	10
  1094  00FCDD  00                 	db	0
  1095  00FCDE                     STR_5:
  1096  00FCDE  0D                 	db	13
  1097  00FCDF  0A                 	db	10
  1098  00FCE0  2D                 	db	45
  1099  00FCE1  2D                 	db	45
  1100  00FCE2  2D                 	db	45
  1101  00FCE3  2D                 	db	45
  1102  00FCE4  2D                 	db	45
  1103  00FCE5  2D                 	db	45
  1104  00FCE6  2D                 	db	45
  1105  00FCE7  2D                 	db	45
  1106  00FCE8  2D                 	db	45
  1107  00FCE9  2D                 	db	45
  1108  00FCEA  2D                 	db	45
  1109  00FCEB  2D                 	db	45
  1110  00FCEC  2D                 	db	45
  1111  00FCED  2D                 	db	45
  1112  00FCEE  2D                 	db	45
  1113  00FCEF  2D                 	db	45
  1114  00FCF0  2D                 	db	45
  1115  00FCF1  2D                 	db	45
  1116  00FCF2  2D                 	db	45
  1117  00FCF3  2D                 	db	45
  1118  00FCF4  2D                 	db	45
  1119  00FCF5  2D                 	db	45
  1120  00FCF6  2D                 	db	45
  1121  00FCF7  2D                 	db	45
  1122  00FCF8  2D                 	db	45
  1123  00FCF9  2D                 	db	45
  1124  00FCFA  2D                 	db	45
  1125  00FCFB  2D                 	db	45
  1126  00FCFC  2D                 	db	45
  1127  00FCFD  2D                 	db	45
  1128  00FCFE  2D                 	db	45
  1129  00FCFF  2D                 	db	45
  1130  00FD00  2D                 	db	45
  1131  00FD01  2D                 	db	45
  1132  00FD02  2D                 	db	45
  1133  00FD03  2D                 	db	45
  1134  00FD04  2D                 	db	45
  1135  00FD05  2D                 	db	45
  1136  00FD06  2D                 	db	45
  1137  00FD07  2D                 	db	45
  1138  00FD08  2D                 	db	45
  1139  00FD09  2D                 	db	45
  1140  00FD0A  2D                 	db	45
  1141  00FD0B  2D                 	db	45
  1142  00FD0C  2D                 	db	45
  1143  00FD0D  2D                 	db	45
  1144  00FD0E  2D                 	db	45
  1145  00FD0F  2D                 	db	45
  1146  00FD10  2D                 	db	45
  1147  00FD11  0D                 	db	13
  1148  00FD12  0A                 	db	10
  1149  00FD13  00                 	db	0
  1150  00FD14                     STR_23:
  1151  00FD14  2B                 	db	43
  1152  00FD15  2F                 	db	47
  1153  00FD16  2D                 	db	45
  1154  00FD17  3A                 	db	58	;':'
  1155  00FD18  20                 	db	32
  1156  00FD19  49                 	db	73	;'I'
  1157  00FD1A  6E                 	db	110	;'n'
  1158  00FD1B  63                 	db	99	;'c'
  1159  00FD1C  72                 	db	114	;'r'
  1160  00FD1D  65                 	db	101	;'e'
  1161  00FD1E  61                 	db	97	;'a'
  1162  00FD1F  73                 	db	115	;'s'
  1163  00FD20  65                 	db	101	;'e'
  1164  00FD21  2F                 	db	47
  1165  00FD22  44                 	db	68	;'D'
  1166  00FD23  65                 	db	101	;'e'
  1167  00FD24  63                 	db	99	;'c'
  1168  00FD25  72                 	db	114	;'r'
  1169  00FD26  65                 	db	101	;'e'
  1170  00FD27  61                 	db	97	;'a'
  1171  00FD28  73                 	db	115	;'s'
  1172  00FD29  65                 	db	101	;'e'
  1173  00FD2A  20                 	db	32
  1174  00FD2B  74                 	db	116	;'t'
  1175  00FD2C  68                 	db	104	;'h'
  1176  00FD2D  65                 	db	101	;'e'
  1177  00FD2E  20                 	db	32
  1178  00FD2F  73                 	db	115	;'s'
  1179  00FD30  61                 	db	97	;'a'
  1180  00FD31  6D                 	db	109	;'m'
  1181  00FD32  70                 	db	112	;'p'
  1182  00FD33  6C                 	db	108	;'l'
  1183  00FD34  65                 	db	101	;'e'
  1184  00FD35  20                 	db	32
  1185  00FD36  72                 	db	114	;'r'
  1186  00FD37  61                 	db	97	;'a'
  1187  00FD38  74                 	db	116	;'t'
  1188  00FD39  65                 	db	101	;'e'
  1189  00FD3A  20                 	db	32
  1190  00FD3B  62                 	db	98	;'b'
  1191  00FD3C  79                 	db	121	;'y'
  1192  00FD3D  20                 	db	32
  1193  00FD3E  31                 	db	49	;'1'
  1194  00FD3F  30                 	db	48	;'0'
  1195  00FD40  20                 	db	32
  1196  00FD41  75                 	db	117	;'u'
  1197  00FD42  73                 	db	115	;'s'
  1198  00FD43  0D                 	db	13
  1199  00FD44  0A                 	db	10
  1200  00FD45  00                 	db	0
  1201  00FD46                     STR_24:
  1202  00FD46  57                 	db	87	;'W'
  1203  00FD47  3A                 	db	58	;':'
  1204  00FD48  20                 	db	32
  1205  00FD49  57                 	db	87	;'W'
  1206  00FD4A  72                 	db	114	;'r'
  1207  00FD4B  69                 	db	105	;'i'
  1208  00FD4C  74                 	db	116	;'t'
  1209  00FD4D  65                 	db	101	;'e'
  1210  00FD4E  20                 	db	32
  1211  00FD4F  6D                 	db	109	;'m'
  1212  00FD50  69                 	db	105	;'i'
  1213  00FD51  63                 	db	99	;'c'
  1214  00FD52  72                 	db	114	;'r'
  1215  00FD53  6F                 	db	111	;'o'
  1216  00FD54  70                 	db	112	;'p'
  1217  00FD55  68                 	db	104	;'h'
  1218  00FD56  6F                 	db	111	;'o'
  1219  00FD57  6E                 	db	110	;'n'
  1220  00FD58  65                 	db	101	;'e'
  1221  00FD59  20                 	db	32
  1222  00FD5A  3D                 	db	61	;'='
  1223  00FD5B  3E                 	db	62	;'>'
  1224  00FD5C  20                 	db	32
  1225  00FD5D  53                 	db	83	;'S'
  1226  00FD5E  44                 	db	68	;'D'
  1227  00FD5F  20                 	db	32
  1228  00FD60  63                 	db	99	;'c'
  1229  00FD61  61                 	db	97	;'a'
  1230  00FD62  72                 	db	114	;'r'
  1231  00FD63  64                 	db	100	;'d'
  1232  00FD64  20                 	db	32
  1233  00FD65  61                 	db	97	;'a'
  1234  00FD66  74                 	db	116	;'t'
  1235  00FD67  20                 	db	32
  1236  00FD68  31                 	db	49	;'1'
  1237  00FD69  36                 	db	54	;'6'
  1238  00FD6A  30                 	db	48	;'0'
  1239  00FD6B  30                 	db	48	;'0'
  1240  00FD6C  20                 	db	32
  1241  00FD6D  75                 	db	117	;'u'
  1242  00FD6E  73                 	db	115	;'s'
  1243  00FD6F  0D                 	db	13
  1244  00FD70  0A                 	db	10
  1245  00FD71  00                 	db	0
  1246  00FD72                     STR_20:
  1247  00FD72  72                 	db	114	;'r'
  1248  00FD73  3A                 	db	58	;':'
  1249  00FD74  20                 	db	32
  1250  00FD75  72                 	db	114	;'r'
  1251  00FD76  65                 	db	101	;'e'
  1252  00FD77  61                 	db	97	;'a'
  1253  00FD78  64                 	db	100	;'d'
  1254  00FD79  20                 	db	32
  1255  00FD7A  61                 	db	97	;'a'
  1256  00FD7B  20                 	db	32
  1257  00FD7C  62                 	db	98	;'b'
  1258  00FD7D  6C                 	db	108	;'l'
  1259  00FD7E  6F                 	db	111	;'o'
  1260  00FD7F  63                 	db	99	;'c'
  1261  00FD80  6B                 	db	107	;'k'
  1262  00FD81  20                 	db	32
  1263  00FD82  6F                 	db	111	;'o'
  1264  00FD83  66                 	db	102	;'f'
  1265  00FD84  20                 	db	32
  1266  00FD85  25                 	db	37
  1267  00FD86  64                 	db	100	;'d'
  1268  00FD87  20                 	db	32
  1269  00FD88  62                 	db	98	;'b'
  1270  00FD89  79                 	db	121	;'y'
  1271  00FD8A  74                 	db	116	;'t'
  1272  00FD8B  65                 	db	101	;'e'
  1273  00FD8C  73                 	db	115	;'s'
  1274  00FD8D  20                 	db	32
  1275  00FD8E  66                 	db	102	;'f'
  1276  00FD8F  72                 	db	114	;'r'
  1277  00FD90  6F                 	db	111	;'o'
  1278  00FD91  6D                 	db	109	;'m'
  1279  00FD92  20                 	db	32
  1280  00FD93  53                 	db	83	;'S'
  1281  00FD94  44                 	db	68	;'D'
  1282  00FD95  20                 	db	32
  1283  00FD96  63                 	db	99	;'c'
  1284  00FD97  61                 	db	97	;'a'
  1285  00FD98  72                 	db	114	;'r'
  1286  00FD99  64                 	db	100	;'d'
  1287  00FD9A  0D                 	db	13
  1288  00FD9B  0A                 	db	10
  1289  00FD9C  00                 	db	0
  1290  00FD9D                     STR_4:
  1291  00FD9D  4E                 	db	78	;'N'
  1292  00FD9E  6F                 	db	111	;'o'
  1293  00FD9F  20                 	db	32
  1294  00FDA0  63                 	db	99	;'c'
  1295  00FDA1  6F                 	db	111	;'o'
  1296  00FDA2  6E                 	db	110	;'n'
  1297  00FDA3  66                 	db	102	;'f'
  1298  00FDA4  69                 	db	105	;'i'
  1299  00FDA5  67                 	db	103	;'g'
  1300  00FDA6  75                 	db	117	;'u'
  1301  00FDA7  72                 	db	114	;'r'
  1302  00FDA8  61                 	db	97	;'a'
  1303  00FDA9  74                 	db	116	;'t'
  1304  00FDAA  69                 	db	105	;'i'
  1305  00FDAB  6F                 	db	111	;'o'
  1306  00FDAC  6E                 	db	110	;'n'
  1307  00FDAD  20                 	db	32
  1308  00FDAE  6F                 	db	111	;'o'
  1309  00FDAF  66                 	db	102	;'f'
  1310  00FDB0  20                 	db	32
  1311  00FDB1  64                 	db	100	;'d'
  1312  00FDB2  65                 	db	101	;'e'
  1313  00FDB3  76                 	db	118	;'v'
  1314  00FDB4  65                 	db	101	;'e'
  1315  00FDB5  6C                 	db	108	;'l'
  1316  00FDB6  6F                 	db	111	;'o'
  1317  00FDB7  70                 	db	112	;'p'
  1318  00FDB8  6D                 	db	109	;'m'
  1319  00FDB9  65                 	db	101	;'e'
  1320  00FDBA  6E                 	db	110	;'n'
  1321  00FDBB  74                 	db	116	;'t'
  1322  00FDBC  20                 	db	32
  1323  00FDBD  62                 	db	98	;'b'
  1324  00FDBE  6F                 	db	111	;'o'
  1325  00FDBF  61                 	db	97	;'a'
  1326  00FDC0  72                 	db	114	;'r'
  1327  00FDC1  64                 	db	100	;'d'
  1328  00FDC2  0D                 	db	13
  1329  00FDC3  0A                 	db	10
  1330  00FDC4  3E                 	db	62	;'>'
  1331  00FDC5  20                 	db	32
  1332  00FDC6  00                 	db	0
  1333  00FDC7                     STR_19:
  1334  00FDC7  61                 	db	97	;'a'
  1335  00FDC8  2F                 	db	47
  1336  00FDC9  41                 	db	65	;'A'
  1337  00FDCA  20                 	db	32
  1338  00FDCB  64                 	db	100	;'d'
  1339  00FDCC  65                 	db	101	;'e'
  1340  00FDCD  63                 	db	99	;'c'
  1341  00FDCE  72                 	db	114	;'r'
  1342  00FDCF  65                 	db	101	;'e'
  1343  00FDD0  61                 	db	97	;'a'
  1344  00FDD1  73                 	db	115	;'s'
  1345  00FDD2  65                 	db	101	;'e'
  1346  00FDD3  2F                 	db	47
  1347  00FDD4  69                 	db	105	;'i'
  1348  00FDD5  6E                 	db	110	;'n'
  1349  00FDD6  63                 	db	99	;'c'
  1350  00FDD7  72                 	db	114	;'r'
  1351  00FDD8  65                 	db	101	;'e'
  1352  00FDD9  61                 	db	97	;'a'
  1353  00FDDA  73                 	db	115	;'s'
  1354  00FDDB  65                 	db	101	;'e'
  1355  00FDDC  20                 	db	32
  1356  00FDDD  72                 	db	114	;'r'
  1357  00FDDE  65                 	db	101	;'e'
  1358  00FDDF  61                 	db	97	;'a'
  1359  00FDE0  64                 	db	100	;'d'
  1360  00FDE1  20                 	db	32
  1361  00FDE2  61                 	db	97	;'a'
  1362  00FDE3  64                 	db	100	;'d'
  1363  00FDE4  64                 	db	100	;'d'
  1364  00FDE5  72                 	db	114	;'r'
  1365  00FDE6  65                 	db	101	;'e'
  1366  00FDE7  73                 	db	115	;'s'
  1367  00FDE8  73                 	db	115	;'s'
  1368  00FDE9  0D                 	db	13
  1369  00FDEA  0A                 	db	10
  1370  00FDEB  00                 	db	0
  1371  00FDEC                     STR_25:
  1372  00FDEC  73                 	db	115	;'s'
  1373  00FDED  3A                 	db	58	;':'
  1374  00FDEE  20                 	db	32
  1375  00FDEF  73                 	db	115	;'s'
  1376  00FDF0  70                 	db	112	;'p'
  1377  00FDF1  6F                 	db	111	;'o'
  1378  00FDF2  6F                 	db	111	;'o'
  1379  00FDF3  6C                 	db	108	;'l'
  1380  00FDF4  20                 	db	32
  1381  00FDF5  6D                 	db	109	;'m'
  1382  00FDF6  65                 	db	101	;'e'
  1383  00FDF7  6D                 	db	109	;'m'
  1384  00FDF8  6F                 	db	111	;'o'
  1385  00FDF9  72                 	db	114	;'r'
  1386  00FDFA  79                 	db	121	;'y'
  1387  00FDFB  20                 	db	32
  1388  00FDFC  74                 	db	116	;'t'
  1389  00FDFD  6F                 	db	111	;'o'
  1390  00FDFE  20                 	db	32
  1391  00FDFF  61                 	db	97	;'a'
  1392  00FE00  20                 	db	32
  1393  00FE01  63                 	db	99	;'c'
  1394  00FE02  73                 	db	115	;'s'
  1395  00FE03  76                 	db	118	;'v'
  1396  00FE04  20                 	db	32
  1397  00FE05  66                 	db	102	;'f'
  1398  00FE06  69                 	db	105	;'i'
  1399  00FE07  6C                 	db	108	;'l'
  1400  00FE08  65                 	db	101	;'e'
  1401  00FE09  0D                 	db	13
  1402  00FE0A  0A                 	db	10
  1403  00FE0B  00                 	db	0
  1404  00FE0C                     STR_30:
  1405  00FE0C  55                 	db	85	;'U'
  1406  00FE0D  6E                 	db	110	;'n'
  1407  00FE0E  64                 	db	100	;'d'
  1408  00FE0F  65                 	db	101	;'e'
  1409  00FE10  72                 	db	114	;'r'
  1410  00FE11  66                 	db	102	;'f'
  1411  00FE12  6C                 	db	108	;'l'
  1412  00FE13  6F                 	db	111	;'o'
  1413  00FE14  77                 	db	119	;'w'
  1414  00FE15  65                 	db	101	;'e'
  1415  00FE16  64                 	db	100	;'d'
  1416  00FE17  20                 	db	32
  1417  00FE18  74                 	db	116	;'t'
  1418  00FE19  6F                 	db	111	;'o'
  1419  00FE1A  20                 	db	32
  1420  00FE1B  68                 	db	104	;'h'
  1421  00FE1C  69                 	db	105	;'i'
  1422  00FE1D  67                 	db	103	;'g'
  1423  00FE1E  68                 	db	104	;'h'
  1424  00FE1F  20                 	db	32
  1425  00FE20  61                 	db	97	;'a'
  1426  00FE21  64                 	db	100	;'d'
  1427  00FE22  64                 	db	100	;'d'
  1428  00FE23  72                 	db	114	;'r'
  1429  00FE24  65                 	db	101	;'e'
  1430  00FE25  73                 	db	115	;'s'
  1431  00FE26  73                 	db	115	;'s'
  1432  00FE27  0D                 	db	13
  1433  00FE28  0A                 	db	10
  1434  00FE29  00                 	db	0
  1435  00FE2A                     STR_47:
  1436  00FE2A  54                 	db	84	;'T'
  1437  00FE2B  68                 	db	104	;'h'
  1438  00FE2C  65                 	db	101	;'e'
  1439  00FE2D  20                 	db	32
  1440  00FE2E  73                 	db	115	;'s'
  1441  00FE2F  61                 	db	97	;'a'
  1442  00FE30  6D                 	db	109	;'m'
  1443  00FE31  70                 	db	112	;'p'
  1444  00FE32  6C                 	db	108	;'l'
  1445  00FE33  69                 	db	105	;'i'
  1446  00FE34  6E                 	db	110	;'n'
  1447  00FE35  67                 	db	103	;'g'
  1448  00FE36  20                 	db	32
  1449  00FE37  72                 	db	114	;'r'
  1450  00FE38  61                 	db	97	;'a'
  1451  00FE39  74                 	db	116	;'t'
  1452  00FE3A  65                 	db	101	;'e'
  1453  00FE3B  20                 	db	32
  1454  00FE3C  69                 	db	105	;'i'
  1455  00FE3D  73                 	db	115	;'s'
  1456  00FE3E  20                 	db	32
  1457  00FE3F  25                 	db	37
  1458  00FE40  75                 	db	117	;'u'
  1459  00FE41  20                 	db	32
  1460  00FE42  75                 	db	117	;'u'
  1461  00FE43  73                 	db	115	;'s'
  1462  00FE44  0D                 	db	13
  1463  00FE45  0A                 	db	10
  1464  00FE46  00                 	db	0
  1465  00FE47                     STR_58:
  1466  00FE47  42                 	db	66	;'B'
  1467  00FE48  6C                 	db	108	;'l'
  1468  00FE49  6F                 	db	111	;'o'
  1469  00FE4A  63                 	db	99	;'c'
  1470  00FE4B  6B                 	db	107	;'k'
  1471  00FE4C  20                 	db	32
  1472  00FE4D  4C                 	db	76	;'L'
  1473  00FE4E  65                 	db	101	;'e'
  1474  00FE4F  6E                 	db	110	;'n'
  1475  00FE50  67                 	db	103	;'g'
  1476  00FE51  74                 	db	116	;'t'
  1477  00FE52  68                 	db	104	;'h'
  1478  00FE53  20                 	db	32
  1479  00FE54  52                 	db	82	;'R'
  1480  00FE55  65                 	db	101	;'e'
  1481  00FE56  73                 	db	115	;'s'
  1482  00FE57  70                 	db	112	;'p'
  1483  00FE58  6F                 	db	111	;'o'
  1484  00FE59  6E                 	db	110	;'n'
  1485  00FE5A  73                 	db	115	;'s'
  1486  00FE5B  65                 	db	101	;'e'
  1487  00FE5C  3A                 	db	58	;':'
  1488  00FE5D  20                 	db	32
  1489  00FE5E  25                 	db	37
  1490  00FE5F  78                 	db	120	;'x'
  1491  00FE60  0D                 	db	13
  1492  00FE61  0A                 	db	10
  1493  00FE62  00                 	db	0
  1494  00FE63                     STR_32:
  1495  00FE63  4F                 	db	79	;'O'
  1496  00FE64  76                 	db	118	;'v'
  1497  00FE65  65                 	db	101	;'e'
  1498  00FE66  72                 	db	114	;'r'
  1499  00FE67  66                 	db	102	;'f'
  1500  00FE68  6C                 	db	108	;'l'
  1501  00FE69  6F                 	db	111	;'o'
  1502  00FE6A  77                 	db	119	;'w'
  1503  00FE6B  65                 	db	101	;'e'
  1504  00FE6C  64                 	db	100	;'d'
  1505  00FE6D  20                 	db	32
  1506  00FE6E  74                 	db	116	;'t'
  1507  00FE6F  6F                 	db	111	;'o'
  1508  00FE70  20                 	db	32
  1509  00FE71  6C                 	db	108	;'l'
  1510  00FE72  6F                 	db	111	;'o'
  1511  00FE73  77                 	db	119	;'w'
  1512  00FE74  20                 	db	32
  1513  00FE75  61                 	db	97	;'a'
  1514  00FE76  64                 	db	100	;'d'
  1515  00FE77  64                 	db	100	;'d'
  1516  00FE78  72                 	db	114	;'r'
  1517  00FE79  65                 	db	101	;'e'
  1518  00FE7A  73                 	db	115	;'s'
  1519  00FE7B  73                 	db	115	;'s'
  1520  00FE7C  0D                 	db	13
  1521  00FE7D  0A                 	db	10
  1522  00FE7E  00                 	db	0
  1523  00FE7F                     STR_56:
  1524  00FE7F  43                 	db	67	;'C'
  1525  00FE80  4D                 	db	77	;'M'
  1526  00FE81  44                 	db	68	;'D'
  1527  00FE82  30                 	db	48	;'0'
  1528  00FE83  2C                 	db	44
  1529  00FE84  20                 	db	32
  1530  00FE85  52                 	db	82	;'R'
  1531  00FE86  65                 	db	101	;'e'
  1532  00FE87  73                 	db	115	;'s'
  1533  00FE88  65                 	db	101	;'e'
  1534  00FE89  74                 	db	116	;'t'
  1535  00FE8A  20                 	db	32
  1536  00FE8B  52                 	db	82	;'R'
  1537  00FE8C  65                 	db	101	;'e'
  1538  00FE8D  73                 	db	115	;'s'
  1539  00FE8E  70                 	db	112	;'p'
  1540  00FE8F  6F                 	db	111	;'o'
  1541  00FE90  6E                 	db	110	;'n'
  1542  00FE91  73                 	db	115	;'s'
  1543  00FE92  65                 	db	101	;'e'
  1544  00FE93  3A                 	db	58	;':'
  1545  00FE94  20                 	db	32
  1546  00FE95  25                 	db	37
  1547  00FE96  78                 	db	120	;'x'
  1548  00FE97  0D                 	db	13
  1549  00FE98  0A                 	db	10
  1550  00FE99  00                 	db	0
  1551  00FE9A                     STR_57:
  1552  00FE9A  43                 	db	67	;'C'
  1553  00FE9B  4D                 	db	77	;'M'
  1554  00FE9C  44                 	db	68	;'D'
  1555  00FE9D  31                 	db	49	;'1'
  1556  00FE9E  2C                 	db	44
  1557  00FE9F  20                 	db	32
  1558  00FEA0  49                 	db	73	;'I'
  1559  00FEA1  6E                 	db	110	;'n'
  1560  00FEA2  69                 	db	105	;'i'
  1561  00FEA3  74                 	db	116	;'t'
  1562  00FEA4  20                 	db	32
  1563  00FEA5  52                 	db	82	;'R'
  1564  00FEA6  65                 	db	101	;'e'
  1565  00FEA7  73                 	db	115	;'s'
  1566  00FEA8  70                 	db	112	;'p'
  1567  00FEA9  6F                 	db	111	;'o'
  1568  00FEAA  6E                 	db	110	;'n'
  1569  00FEAB  73                 	db	115	;'s'
  1570  00FEAC  65                 	db	101	;'e'
  1571  00FEAD  3A                 	db	58	;':'
  1572  00FEAE  20                 	db	32
  1573  00FEAF  25                 	db	37
  1574  00FEB0  78                 	db	120	;'x'
  1575  00FEB1  0D                 	db	13
  1576  00FEB2  0A                 	db	10
  1577  00FEB3  00                 	db	0
  1578  00FEB4                     STR_17:
  1579  00FEB4  69                 	db	105	;'i'
  1580  00FEB5  3A                 	db	58	;':'
  1581  00FEB6  20                 	db	32
  1582  00FEB7  49                 	db	73	;'I'
  1583  00FEB8  6E                 	db	110	;'n'
  1584  00FEB9  69                 	db	105	;'i'
  1585  00FEBA  74                 	db	116	;'t'
  1586  00FEBB  69                 	db	105	;'i'
  1587  00FEBC  61                 	db	97	;'a'
  1588  00FEBD  6C                 	db	108	;'l'
  1589  00FEBE  69                 	db	105	;'i'
  1590  00FEBF  7A                 	db	122	;'z'
  1591  00FEC0  65                 	db	101	;'e'
  1592  00FEC1  20                 	db	32
  1593  00FEC2  53                 	db	83	;'S'
  1594  00FEC3  44                 	db	68	;'D'
  1595  00FEC4  20                 	db	32
  1596  00FEC5  63                 	db	99	;'c'
  1597  00FEC6  61                 	db	97	;'a'
  1598  00FEC7  72                 	db	114	;'r'
  1599  00FEC8  64                 	db	100	;'d'
  1600  00FEC9  0D                 	db	13
  1601  00FECA  0A                 	db	10
  1602  00FECB  00                 	db	0
  1603  00FECC                     STR_51:
  1604  00FECC  4D                 	db	77	;'M'
  1605  00FECD  69                 	db	105	;'i'
  1606  00FECE  63                 	db	99	;'c'
  1607  00FECF  20                 	db	32
  1608  00FED0  73                 	db	115	;'s'
  1609  00FED1  61                 	db	97	;'a'
  1610  00FED2  6D                 	db	109	;'m'
  1611  00FED3  70                 	db	112	;'p'
  1612  00FED4  6C                 	db	108	;'l'
  1613  00FED5  69                 	db	105	;'i'
  1614  00FED6  6E                 	db	110	;'n'
  1615  00FED7  67                 	db	103	;'g'
  1616  00FED8  20                 	db	32
  1617  00FED9  63                 	db	99	;'c'
  1618  00FEDA  6F                 	db	111	;'o'
  1619  00FEDB  6D                 	db	109	;'m'
  1620  00FEDC  70                 	db	112	;'p'
  1621  00FEDD  6C                 	db	108	;'l'
  1622  00FEDE  65                 	db	101	;'e'
  1623  00FEDF  74                 	db	116	;'t'
  1624  00FEE0  65                 	db	101	;'e'
  1625  00FEE1  0D                 	db	13
  1626  00FEE2  0A                 	db	10
  1627  00FEE3  00                 	db	0
  1628  00FEE4                     STR_15:
  1629  00FEE4  7A                 	db	122	;'z'
  1630  00FEE5  3A                 	db	58	;':'
  1631  00FEE6  20                 	db	32
  1632  00FEE7  43                 	db	67	;'C'
  1633  00FEE8  6C                 	db	108	;'l'
  1634  00FEE9  65                 	db	101	;'e'
  1635  00FEEA  61                 	db	97	;'a'
  1636  00FEEB  72                 	db	114	;'r'
  1637  00FEEC  20                 	db	32
  1638  00FEED  74                 	db	116	;'t'
  1639  00FEEE  68                 	db	104	;'h'
  1640  00FEEF  65                 	db	101	;'e'
  1641  00FEF0  20                 	db	32
  1642  00FEF1  74                 	db	116	;'t'
  1643  00FEF2  65                 	db	101	;'e'
  1644  00FEF3  72                 	db	114	;'r'
  1645  00FEF4  6D                 	db	109	;'m'
  1646  00FEF5  69                 	db	105	;'i'
  1647  00FEF6  6E                 	db	110	;'n'
  1648  00FEF7  61                 	db	97	;'a'
  1649  00FEF8  6C                 	db	108	;'l'
  1650  00FEF9  0D                 	db	13
  1651  00FEFA  0A                 	db	10
  1652  00FEFB  00                 	db	0
  1653  00FEFC                     STR_14:
  1654  00FEFC  5A                 	db	90	;'Z'
  1655  00FEFD  3A                 	db	58	;':'
  1656  00FEFE  20                 	db	32
  1657  00FEFF  52                 	db	82	;'R'
  1658  00FF00  65                 	db	101	;'e'
  1659  00FF01  73                 	db	115	;'s'
  1660  00FF02  65                 	db	101	;'e'
  1661  00FF03  74                 	db	116	;'t'
  1662  00FF04  20                 	db	32
  1663  00FF05  70                 	db	112	;'p'
  1664  00FF06  72                 	db	114	;'r'
  1665  00FF07  6F                 	db	111	;'o'
  1666  00FF08  63                 	db	99	;'c'
  1667  00FF09  65                 	db	101	;'e'
  1668  00FF0A  73                 	db	115	;'s'
  1669  00FF0B  73                 	db	115	;'s'
  1670  00FF0C  6F                 	db	111	;'o'
  1671  00FF0D  72                 	db	114	;'r'
  1672  00FF0E  0D                 	db	13
  1673  00FF0F  0A                 	db	10
  1674  00FF10  00                 	db	0
  1675  00FF11                     STR_31:
  1676  00FF11  44                 	db	68	;'D'
  1677  00FF12  65                 	db	101	;'e'
  1678  00FF13  63                 	db	99	;'c'
  1679  00FF14  72                 	db	114	;'r'
  1680  00FF15  65                 	db	101	;'e'
  1681  00FF16  61                 	db	97	;'a'
  1682  00FF17  73                 	db	115	;'s'
  1683  00FF18  65                 	db	101	;'e'
  1684  00FF19  64                 	db	100	;'d'
  1685  00FF1A  20                 	db	32
  1686  00FF1B  61                 	db	97	;'a'
  1687  00FF1C  64                 	db	100	;'d'
  1688  00FF1D  64                 	db	100	;'d'
  1689  00FF1E  72                 	db	114	;'r'
  1690  00FF1F  65                 	db	101	;'e'
  1691  00FF20  73                 	db	115	;'s'
  1692  00FF21  73                 	db	115	;'s'
  1693  00FF22  0D                 	db	13
  1694  00FF23  0A                 	db	10
  1695  00FF24  00                 	db	0
  1696  00FF25                     STR_33:
  1697  00FF25  49                 	db	73	;'I'
  1698  00FF26  6E                 	db	110	;'n'
  1699  00FF27  63                 	db	99	;'c'
  1700  00FF28  72                 	db	114	;'r'
  1701  00FF29  65                 	db	101	;'e'
  1702  00FF2A  61                 	db	97	;'a'
  1703  00FF2B  73                 	db	115	;'s'
  1704  00FF2C  65                 	db	101	;'e'
  1705  00FF2D  64                 	db	100	;'d'
  1706  00FF2E  20                 	db	32
  1707  00FF2F  61                 	db	97	;'a'
  1708  00FF30  64                 	db	100	;'d'
  1709  00FF31  64                 	db	100	;'d'
  1710  00FF32  72                 	db	114	;'r'
  1711  00FF33  65                 	db	101	;'e'
  1712  00FF34  73                 	db	115	;'s'
  1713  00FF35  73                 	db	115	;'s'
  1714  00FF36  0D                 	db	13
  1715  00FF37  0A                 	db	10
  1716  00FF38  00                 	db	0
  1717  00FF39                     STR_6:
  1718  00FF39  53                 	db	83	;'S'
  1719  00FF3A  44                 	db	68	;'D'
  1720  00FF3B  20                 	db	32
  1721  00FF3C  63                 	db	99	;'c'
  1722  00FF3D  61                 	db	97	;'a'
  1723  00FF3E  72                 	db	114	;'r'
  1724  00FF3F  64                 	db	100	;'d'
  1725  00FF40  20                 	db	32
  1726  00FF41  61                 	db	97	;'a'
  1727  00FF42  64                 	db	100	;'d'
  1728  00FF43  64                 	db	100	;'d'
  1729  00FF44  72                 	db	114	;'r'
  1730  00FF45  65                 	db	101	;'e'
  1731  00FF46  73                 	db	115	;'s'
  1732  00FF47  73                 	db	115	;'s'
  1733  00FF48  3A                 	db	58	;':'
  1734  00FF49  20                 	db	32
  1735  00FF4A  20                 	db	32
  1736  00FF4B  00                 	db	0
  1737  00FF4C                     STR_2:
  1738  00FF4C  53                 	db	83	;'S'
  1739  00FF4D  44                 	db	68	;'D'
  1740  00FF4E  20                 	db	32
  1741  00FF4F  63                 	db	99	;'c'
  1742  00FF50  61                 	db	97	;'a'
  1743  00FF51  72                 	db	114	;'r'
  1744  00FF52  64                 	db	100	;'d'
  1745  00FF53  20                 	db	32
  1746  00FF54  74                 	db	116	;'t'
  1747  00FF55  65                 	db	101	;'e'
  1748  00FF56  73                 	db	115	;'s'
  1749  00FF57  74                 	db	116	;'t'
  1750  00FF58  69                 	db	105	;'i'
  1751  00FF59  6E                 	db	110	;'n'
  1752  00FF5A  67                 	db	103	;'g'
  1753  00FF5B  0D                 	db	13
  1754  00FF5C  0A                 	db	10
  1755  00FF5D  00                 	db	0
  1756  00FF5E                     STR_50:
  1757  00FF5E  52                 	db	82	;'R'
  1758  00FF5F  65                 	db	101	;'e'
  1759  00FF60  63                 	db	99	;'c'
  1760  00FF61  6F                 	db	111	;'o'
  1761  00FF62  72                 	db	114	;'r'
  1762  00FF63  64                 	db	100	;'d'
  1763  00FF64  69                 	db	105	;'i'
  1764  00FF65  6E                 	db	110	;'n'
  1765  00FF66  67                 	db	103	;'g'
  1766  00FF67  20                 	db	32
  1767  00FF68  73                 	db	115	;'s'
  1768  00FF69  74                 	db	116	;'t'
  1769  00FF6A  61                 	db	97	;'a'
  1770  00FF6B  72                 	db	114	;'r'
  1771  00FF6C  74                 	db	116	;'t'
  1772  00FF6D  65                 	db	101	;'e'
  1773  00FF6E  64                 	db	100	;'d'
  1774  00FF6F  00                 	db	0
  1775  00FF70                     STR_55:
  1776  00FF70  55                 	db	85	;'U'
  1777  00FF71  6E                 	db	110	;'n'
  1778  00FF72  6B                 	db	107	;'k'
  1779  00FF73  6E                 	db	110	;'n'
  1780  00FF74  6F                 	db	111	;'o'
  1781  00FF75  77                 	db	119	;'w'
  1782  00FF76  6E                 	db	110	;'n'
  1783  00FF77  20                 	db	32
  1784  00FF78  6B                 	db	107	;'k'
  1785  00FF79  65                 	db	101	;'e'
  1786  00FF7A  79                 	db	121	;'y'
  1787  00FF7B  20                 	db	32
  1788  00FF7C  25                 	db	37
  1789  00FF7D  63                 	db	99	;'c'
  1790  00FF7E  0D                 	db	13
  1791  00FF7F  0A                 	db	10
  1792  00FF80  00                 	db	0
  1793  00FF81                     STR_40:
  1794  00FF81  20                 	db	32
  1795  00FF82  20                 	db	32
  1796  00FF83  20                 	db	32
  1797  00FF84  20                 	db	32
  1798  00FF85  41                 	db	65	;'A'
  1799  00FF86  64                 	db	100	;'d'
  1800  00FF87  64                 	db	100	;'d'
  1801  00FF88  72                 	db	114	;'r'
  1802  00FF89  65                 	db	101	;'e'
  1803  00FF8A  73                 	db	115	;'s'
  1804  00FF8B  73                 	db	115	;'s'
  1805  00FF8C  3A                 	db	58	;':'
  1806  00FF8D  20                 	db	32
  1807  00FF8E  20                 	db	32
  1808  00FF8F  20                 	db	32
  1809  00FF90  20                 	db	32
  1810  00FF91  00                 	db	0
  1811  00FF92                     STR_46:
  1812  00FF92  57                 	db	87	;'W'
  1813  00FF93  72                 	db	114	;'r'
  1814  00FF94  69                 	db	105	;'i'
  1815  00FF95  74                 	db	116	;'t'
  1816  00FF96  65                 	db	101	;'e'
  1817  00FF97  20                 	db	32
  1818  00FF98  73                 	db	115	;'s'
  1819  00FF99  74                 	db	116	;'t'
  1820  00FF9A  6F                 	db	111	;'o'
  1821  00FF9B  70                 	db	112	;'p'
  1822  00FF9C  70                 	db	112	;'p'
  1823  00FF9D  65                 	db	101	;'e'
  1824  00FF9E  64                 	db	100	;'d'
  1825  00FF9F  0D                 	db	13
  1826  00FFA0  0A                 	db	10
  1827  00FFA1  00                 	db	0
  1828  00FFA2                     STR_39:
  1829  00FFA2  52                 	db	82	;'R'
  1830  00FFA3  65                 	db	101	;'e'
  1831  00FFA4  61                 	db	97	;'a'
  1832  00FFA5  64                 	db	100	;'d'
  1833  00FFA6  20                 	db	32
  1834  00FFA7  62                 	db	98	;'b'
  1835  00FFA8  6C                 	db	108	;'l'
  1836  00FFA9  6F                 	db	111	;'o'
  1837  00FFAA  63                 	db	99	;'c'
  1838  00FFAB  6B                 	db	107	;'k'
  1839  00FFAC  3A                 	db	58	;':'
  1840  00FFAD  20                 	db	32
  1841  00FFAE  0D                 	db	13
  1842  00FFAF  0A                 	db	10
  1843  00FFB0  00                 	db	0
  1844  00FFB1                     STR_12:
  1845  00FFB1  3F                 	db	63	;'?'
  1846  00FFB2  3A                 	db	58	;':'
  1847  00FFB3  20                 	db	32
  1848  00FFB4  68                 	db	104	;'h'
  1849  00FFB5  65                 	db	101	;'e'
  1850  00FFB6  6C                 	db	108	;'l'
  1851  00FFB7  70                 	db	112	;'p'
  1852  00FFB8  20                 	db	32
  1853  00FFB9  6D                 	db	109	;'m'
  1854  00FFBA  65                 	db	101	;'e'
  1855  00FFBB  6E                 	db	110	;'n'
  1856  00FFBC  75                 	db	117	;'u'
  1857  00FFBD  0D                 	db	13
  1858  00FFBE  0A                 	db	10
  1859  00FFBF  00                 	db	0
  1860  00FFC0                     STR_1:
  1861  00FFC0  69                 	db	105	;'i'
  1862  00FFC1  6E                 	db	110	;'n'
  1863  00FFC2  4C                 	db	76	;'L'
  1864  00FFC3  61                 	db	97	;'a'
  1865  00FFC4  62                 	db	98	;'b'
  1866  00FFC5  20                 	db	32
  1867  00FFC6  30                 	db	48	;'0'
  1868  00FFC7  39                 	db	57	;'9'
  1869  00FFC8  0D                 	db	13
  1870  00FFC9  0A                 	db	10
  1871  00FFCA  00                 	db	0
  1872  00FFCB                     STR_3:
  1873  00FFCB  44                 	db	68	;'D'
  1874  00FFCC  65                 	db	101	;'e'
  1875  00FFCD  76                 	db	118	;'v'
  1876  00FFCE  27                 	db	39
  1877  00FFCF  32                 	db	50	;'2'
  1878  00FFD0  31                 	db	49	;'1'
  1879  00FFD1  0D                 	db	13
  1880  00FFD2  0A                 	db	10
  1881  00FFD3  00                 	db	0
  1882  00FFD4                     STR_27:
  1883  00FFD4  6F                 	db	111	;'o'
  1884  00FFD5  3A                 	db	58	;':'
  1885  00FFD6  09                 	db	9
  1886  00FFD7  6F                 	db	111	;'o'
  1887  00FFD8  6B                 	db	107	;'k'
  1888  00FFD9  0D                 	db	13
  1889  00FFDA  0A                 	db	10
  1890  00FFDB  00                 	db	0
  1891  00FFDC                     STR_13:
  1892  00FFDC  6F                 	db	111	;'o'
  1893  00FFDD  3A                 	db	58	;':'
  1894  00FFDE  20                 	db	32
  1895  00FFDF  6B                 	db	107	;'k'
  1896  00FFE0  0D                 	db	13
  1897  00FFE1  0A                 	db	10
  1898  00FFE2  00                 	db	0
  1899  00FFE3                     STR_65:
  1900  00FFE3  25                 	db	37
  1901  00FFE4  30                 	db	48	;'0'
  1902  00FFE5  32                 	db	50	;'2'
  1903  00FFE6  78                 	db	120	;'x'
  1904  00FFE7  20                 	db	32
  1905  00FFE8  00                 	db	0
  1906  00FFE9                     STR_53:
  1907  00FFE9  25                 	db	37
  1908  00FFEA  64                 	db	100	;'d'
  1909  00FFEB  0D                 	db	13
  1910  00FFEC  0A                 	db	10
  1911  00FFED  00                 	db	0
  1912  00FFEE                     STR_7:
  1913  00FFEE  25                 	db	37
  1914  00FFEF  30                 	db	48	;'0'
  1915  00FFF0  34                 	db	52	;'4'
  1916  00FFF1  78                 	db	120	;'x'
  1917  00FFF2  00                 	db	0
  1918  00FFF3                     STR_59:
  1919  00FFF3  0D                 	db	13
  1920  00FFF4  0A                 	db	10
  1921  00FFF5  0A                 	db	10
  1922  00FFF6  00                 	db	0
  1923  00FFF7                     STR_63:
  1924  00FFF7  25                 	db	37
  1925  00FFF8  63                 	db	99	;'c'
  1926  00FFF9  00                 	db	0
  1927  00FFFA                     STR_62:
  1928  00FFFA  2E                 	db	46
  1929  00FFFB  00                 	db	0
  1930  00FFFC                     STR_8:
  1931  00FFFC  3A                 	db	58	;':'
  1932  00FFFD  00                 	db	0
  1933  00FFFE  00                 	db	0	; dummy byte at the end
  1934  0000                     
  1935                           ; #config settings
  1936                           
  1937                           	psect	cinit
  1938  00268C                     __pcinit:
  1939                           	callstack 0
  1940  00268C                     start_initialization:
  1941                           	callstack 0
  1942  00268C                     __initialization:
  1943                           	callstack 0
  1944                           
  1945                           ; Initialize objects allocated to BANK0 (2 bytes)
  1946                           ; load TBLPTR registers with __pidataBANK0
  1947  00268C  0E10               	movlw	low __pidataBANK0
  1948  00268E  6EF6               	movwf	tblptrl,c
  1949  002690  0E2B               	movlw	high __pidataBANK0
  1950  002692  6EF7               	movwf	tblptrh,c
  1951  002694  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1952  002696  6EF8               	movwf	tblptru,c
  1953  002698  0009               	tblrd		*+	;fetch initializer
  1954  00269A  CFF5 F0F3          	movff	tablat,__pdataBANK0
  1955  00269E  0009               	tblrd		*+	;fetch initializer
  1956  0026A0  CFF5 F0F4          	movff	tablat,__pdataBANK0+1
  1957                           
  1958                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1959  0026A4  EE00  F0F5         	lfsr	0,__pbssBIGRAM
  1960  0026A8  EE14 F000          	lfsr	1,1024
  1961  0026AC                     clear_0:
  1962  0026AC  6AEE               	clrf	postinc0,c
  1963  0026AE  50E5               	movf	postdec1,w,c
  1964  0026B0  50E1               	movf	fsr1l,w,c
  1965  0026B2  E1FC               	bnz	clear_0
  1966  0026B4  50E2               	movf	fsr1h,w,c
  1967  0026B6  E1FA               	bnz	clear_0
  1968                           
  1969                           ; Clear objects allocated to BANK0 (43 bytes)
  1970  0026B8  EE00  F0C8         	lfsr	0,__pbssBANK0
  1971  0026BC  0E2B               	movlw	43
  1972  0026BE                     clear_1:
  1973  0026BE  6AEE               	clrf	postinc0,c
  1974  0026C0  06E8               	decf	wreg,f,c
  1975  0026C2  E1FD               	bnz	clear_1
  1976                           
  1977                           ; Clear objects allocated to COMRAM (16 bytes)
  1978  0026C4  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1979  0026C8  0E10               	movlw	16
  1980  0026CA                     clear_2:
  1981  0026CA  6AEE               	clrf	postinc0,c
  1982  0026CC  06E8               	decf	wreg,f,c
  1983  0026CE  E1FD               	bnz	clear_2
  1984  0026D0                     end_of_initialization:
  1985                           	callstack 0
  1986  0026D0                     __end_of__initialization:
  1987                           	callstack 0
  1988  0026D0  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1989  0026D2  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1990  0026D4  0100               	movlb	0
  1991  0026D6  EF29  F000         	goto	_main	;jump to C main() function
  1992                           
  1993                           	psect	bssCOMRAM
  1994  00003E                     __pbssCOMRAM:
  1995                           	callstack 0
  1996  00003E                     _width:
  1997                           	callstack 0
  1998  00003E                     	ds	2
  1999  000040                     _prec:
  2000                           	callstack 0
  2001  000040                     	ds	2
  2002  000042                     _flags:
  2003                           	callstack 0
  2004  000042                     	ds	2
  2005  000044                     _bufferIdx:
  2006                           	callstack 0
  2007  000044                     	ds	2
  2008  000046                     _EUSART1_FramingErrorHandler:
  2009                           	callstack 0
  2010  000046                     	ds	2
  2011  000048                     _timer0ReloadVal:
  2012                           	callstack 0
  2013  000048                     	ds	2
  2014  00004A                     _TMR0_InterruptHandler:
  2015                           	callstack 0
  2016  00004A                     	ds	2
  2017  00004C                     _timerState:
  2018                           	callstack 0
  2019  00004C                     	ds	1
  2020  00004D                     _eusart1RxLastError:
  2021                           	callstack 0
  2022  00004D                     	ds	1
  2023                           
  2024                           	psect	bssBANK0
  2025  0000C8                     __pbssBANK0:
  2026                           	callstack 0
  2027  0000C8                     _nout:
  2028                           	callstack 0
  2029  0000C8                     	ds	2
  2030  0000CA                     _ADC_InterruptHandler:
  2031                           	callstack 0
  2032  0000CA                     	ds	2
  2033  0000CC                     _EUSART1_ErrorHandler:
  2034                           	callstack 0
  2035  0000CC                     	ds	2
  2036  0000CE                     _EUSART1_OverrunErrorHandler:
  2037                           	callstack 0
  2038  0000CE                     	ds	2
  2039  0000D0                     _redFull:
  2040                           	callstack 0
  2041  0000D0                     	ds	1
  2042  0000D1                     _blueFull:
  2043                           	callstack 0
  2044  0000D1                     	ds	1
  2045  0000D2                     _beginSampling:
  2046                           	callstack 0
  2047  0000D2                     	ds	1
  2048  0000D3                     _dbuf:
  2049                           	callstack 0
  2050  0000D3                     	ds	32
  2051                           
  2052                           	psect	dataBANK0
  2053  0000F3                     __pdataBANK0:
  2054                           	callstack 0
  2055  0000F3                     _sampleRate:
  2056                           	callstack 0
  2057  0000F3                     	ds	2
  2058                           
  2059                           	psect	bssBIGRAM
  2060  0000F5                     __pbssBIGRAM:
  2061                           	callstack 0
  2062  0000F5                     _redBuffer:
  2063                           	callstack 0
  2064  0000F5                     	ds	512
  2065  0002F5                     _blueBuffer:
  2066                           	callstack 0
  2067  0002F5                     	ds	512
  2068                           
  2069                           	psect	cstackBANK0
  2070  000060                     __pcstackBANK0:
  2071                           	callstack 0
  2072  000060                     ??_dtoa:
  2073  000060                     ??_utoa:
  2074  000060                     ??_xtoa:
  2075                           
  2076                           ; 1 bytes @ 0x0
  2077  000060                     	ds	8
  2078  000068                     _dtoa$1812:
  2079                           	callstack 0
  2080  000068                     utoa@p:
  2081                           	callstack 0
  2082  000068                     _xtoa$1830:
  2083                           	callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x8
  2086  000068                     	ds	2
  2087  00006A                     dtoa@p:
  2088                           	callstack 0
  2089  00006A                     utoa@w:
  2090                           	callstack 0
  2091  00006A                     _xtoa$1831:
  2092                           	callstack 0
  2093                           
  2094                           ; 2 bytes @ 0xA
  2095  00006A                     	ds	2
  2096  00006C                     dtoa@w:
  2097                           	callstack 0
  2098  00006C                     xtoa@p:
  2099                           	callstack 0
  2100  00006C                     utoa@n:
  2101                           	callstack 0
  2102                           
  2103                           ; 8 bytes @ 0xC
  2104  00006C                     	ds	2
  2105  00006E                     dtoa@s:
  2106                           	callstack 0
  2107  00006E                     xtoa@w:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0xE
  2111  00006E                     	ds	2
  2112  000070                     dtoa@n:
  2113                           	callstack 0
  2114  000070                     xtoa@n:
  2115                           	callstack 0
  2116                           
  2117                           ; 8 bytes @ 0x10
  2118  000070                     	ds	4
  2119  000074                     utoa@i:
  2120                           	callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x14
  2123  000074                     	ds	4
  2124  000078                     dtoa@i:
  2125                           	callstack 0
  2126  000078                     xtoa@i:
  2127                           	callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x18
  2130  000078                     	ds	2
  2131  00007A                     xtoa@c:
  2132                           	callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x1A
  2135  00007A                     	ds	2
  2136  00007C                     ?_vfpfcnvrt:
  2137                           	callstack 0
  2138  00007C                     vfpfcnvrt@fp:
  2139                           	callstack 0
  2140                           
  2141                           ; 2 bytes @ 0x1C
  2142  00007C                     	ds	2
  2143  00007E                     vfpfcnvrt@fmt:
  2144                           	callstack 0
  2145                           
  2146                           ; 2 bytes @ 0x1E
  2147  00007E                     	ds	2
  2148  000080                     vfpfcnvrt@ap:
  2149                           	callstack 0
  2150                           
  2151                           ; 2 bytes @ 0x20
  2152  000080                     	ds	2
  2153  000082                     vfpfcnvrt@ll:
  2154                           	callstack 0
  2155                           
  2156                           ; 8 bytes @ 0x22
  2157  000082                     	ds	8
  2158  00008A                     vfpfcnvrt@done:
  2159                           	callstack 0
  2160                           
  2161                           ; 2 bytes @ 0x2A
  2162  00008A                     	ds	2
  2163  00008C                     _vfpfcnvrt$1845:
  2164                           	callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x2C
  2167  00008C                     	ds	2
  2168  00008E                     vfpfcnvrt@llu:
  2169                           	callstack 0
  2170                           
  2171                           ; 8 bytes @ 0x2E
  2172  00008E                     	ds	8
  2173  000096                     vfpfcnvrt@c:
  2174                           	callstack 0
  2175                           
  2176                           ; 1 bytes @ 0x36
  2177  000096                     	ds	1
  2178  000097                     ?_vfprintf:
  2179                           	callstack 0
  2180  000097                     vfprintf@fp:
  2181                           	callstack 0
  2182                           
  2183                           ; 2 bytes @ 0x37
  2184  000097                     	ds	2
  2185  000099                     vfprintf@fmt:
  2186                           	callstack 0
  2187                           
  2188                           ; 2 bytes @ 0x39
  2189  000099                     	ds	2
  2190  00009B                     vfprintf@ap:
  2191                           	callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x3B
  2194  00009B                     	ds	2
  2195  00009D                     vfprintf@cfmt:
  2196                           	callstack 0
  2197                           
  2198                           ; 2 bytes @ 0x3D
  2199  00009D                     	ds	2
  2200  00009F                     ?_printf:
  2201                           	callstack 0
  2202  00009F                     printf@fmt:
  2203                           	callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x3F
  2206  00009F                     	ds	8
  2207  0000A7                     printf@ap:
  2208                           	callstack 0
  2209                           
  2210                           ; 2 bytes @ 0x47
  2211  0000A7                     	ds	2
  2212  0000A9                     SDCARD_Initialize@i:
  2213                           	callstack 0
  2214  0000A9                     hexDumpBuffer@sdCardBuffer:
  2215                           	callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x49
  2218  0000A9                     	ds	2
  2219  0000AB                     ??_hexDumpBuffer:
  2220  0000AB                     SDCARD_Initialize@verbose:
  2221                           	callstack 0
  2222                           
  2223                           ; 1 bytes @ 0x4B
  2224  0000AB                     	ds	1
  2225  0000AC                     SDCARD_Initialize@response:
  2226                           	callstack 0
  2227                           
  2228                           ; 1 bytes @ 0x4C
  2229  0000AC                     	ds	1
  2230  0000AD                     hexDumpBuffer@j:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0x4D
  2234  0000AD                     	ds	2
  2235  0000AF                     hexDumpBuffer@j_1202:
  2236                           	callstack 0
  2237                           
  2238                           ; 2 bytes @ 0x4F
  2239  0000AF                     	ds	2
  2240  0000B1                     hexDumpBuffer@i:
  2241                           	callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x51
  2244  0000B1                     	ds	2
  2245  0000B3                     ??_main:
  2246                           
  2247                           ; 1 bytes @ 0x53
  2248  0000B3                     	ds	3
  2249  0000B6                     main@status:
  2250                           	callstack 0
  2251                           
  2252                           ; 1 bytes @ 0x56
  2253  0000B6                     	ds	1
  2254  0000B7                     main@letter:
  2255                           	callstack 0
  2256                           
  2257                           ; 1 bytes @ 0x57
  2258  0000B7                     	ds	1
  2259  0000B8                     main@waveIdx:
  2260                           	callstack 0
  2261                           
  2262                           ; 1 bytes @ 0x58
  2263  0000B8                     	ds	1
  2264  0000B9                     main@cmd:
  2265                           	callstack 0
  2266                           
  2267                           ; 1 bytes @ 0x59
  2268  0000B9                     	ds	1
  2269  0000BA                     main@i_1142:
  2270                           	callstack 0
  2271                           
  2272                           ; 2 bytes @ 0x5A
  2273  0000BA                     	ds	2
  2274  0000BC                     main@bufIdx:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x5C
  2278  0000BC                     	ds	2
  2279  0000BE                     main@i:
  2280                           	callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x5E
  2283  0000BE                     	ds	2
  2284  0000C0                     main@localAddress:
  2285                           	callstack 0
  2286                           
  2287                           ; 4 bytes @ 0x60
  2288  0000C0                     	ds	4
  2289  0000C4                     main@sdCardAddress:
  2290                           	callstack 0
  2291                           
  2292                           ; 4 bytes @ 0x64
  2293  0000C4                     	ds	4
  2294                           
  2295                           	psect	cstackCOMRAM
  2296  000001                     __pcstackCOMRAM:
  2297                           	callstack 0
  2298  000001                     ?_TMR0_ReadTimer:
  2299                           	callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x0
  2302  000001                     	ds	2
  2303  000003                     ??_TMR0_ReadTimer:
  2304                           
  2305                           ; 1 bytes @ 0x2
  2306  000003                     	ds	2
  2307  000005                     TMR0_ReadTimer@readVal:
  2308                           	callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x4
  2311  000005                     	ds	2
  2312  000007                     TMR0_ReadTimer@readValLow:
  2313                           	callstack 0
  2314                           
  2315                           ; 1 bytes @ 0x6
  2316  000007                     	ds	1
  2317  000008                     TMR0_ReadTimer@readValHigh:
  2318                           	callstack 0
  2319                           
  2320                           ; 1 bytes @ 0x7
  2321  000008                     	ds	1
  2322  000009                     i2TMR0_WriteTimer@timerVal:
  2323                           	callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x8
  2326  000009                     	ds	2
  2327  00000B                     ??_myTMR0ISR:
  2328  00000B                     
  2329                           ; 1 bytes @ 0xA
  2330  00000B                     	ds	2
  2331  00000D                     myTMR0ISR@micReading:
  2332                           	callstack 0
  2333                           
  2334                           ; 1 bytes @ 0xC
  2335  00000D                     	ds	1
  2336  00000E                     ??_INTERRUPT_InterruptManager:
  2337                           
  2338                           ; 1 bytes @ 0xD
  2339  00000E                     	ds	4
  2340  000012                     ??_SPI2_Open:
  2341  000012                     ?_strlen:
  2342                           	callstack 0
  2343  000012                     ?_isupper:
  2344                           	callstack 0
  2345  000012                     ?_isalpha:
  2346                           	callstack 0
  2347  000012                     ?_isdigit:
  2348                           	callstack 0
  2349  000012                     ?_isspace:
  2350                           	callstack 0
  2351  000012                     ?_islower:
  2352                           	callstack 0
  2353  000012                     ?___wmul:
  2354                           	callstack 0
  2355  000012                     ?___awmod:
  2356                           	callstack 0
  2357  000012                     ?___aodiv:
  2358                           	callstack 0
  2359  000012                     ?___aomod:
  2360                           	callstack 0
  2361  000012                     ?___lodiv:
  2362                           	callstack 0
  2363  000012                     ?___lomod:
  2364                           	callstack 0
  2365  000012                     SPI2_ExchangeByte@data:
  2366                           	callstack 0
  2367  000012                     EUSART1_Write@txData:
  2368                           	callstack 0
  2369  000012                     TMR0_WriteTimer@timerVal:
  2370                           	callstack 0
  2371  000012                     TMR0_SetInterruptHandler@InterruptHandler:
  2372                           	callstack 0
  2373  000012                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2374                           	callstack 0
  2375  000012                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2376                           	callstack 0
  2377  000012                     EUSART1_SetErrorHandler@interruptHandler:
  2378                           	callstack 0
  2379  000012                     ___wmul@multiplier:
  2380                           	callstack 0
  2381  000012                     ___awmod@dividend:
  2382                           	callstack 0
  2383  000012                     isalpha@c:
  2384                           	callstack 0
  2385  000012                     isdigit@c:
  2386                           	callstack 0
  2387  000012                     isspace@c:
  2388                           	callstack 0
  2389  000012                     isupper@c:
  2390                           	callstack 0
  2391  000012                     strlen@s:
  2392                           	callstack 0
  2393  000012                     islower@c:
  2394                           	callstack 0
  2395  000012                     ___aodiv@dividend:
  2396                           	callstack 0
  2397  000012                     ___aomod@dividend:
  2398                           	callstack 0
  2399  000012                     ___lodiv@dividend:
  2400                           	callstack 0
  2401  000012                     ___lomod@dividend:
  2402                           	callstack 0
  2403                           
  2404                           ; 8 bytes @ 0x11
  2405  000012                     	ds	1
  2406  000013                     SPI2_Open@spi2UniqueConfiguration:
  2407                           	callstack 0
  2408  000013                     putch@txData:
  2409                           	callstack 0
  2410  000013                     SDCARD_PollWriteComplete@status:
  2411                           	callstack 0
  2412  000013                     SDCARD_ReadBlock@addr:
  2413                           	callstack 0
  2414  000013                     SDCARD_WriteBlock@addr:
  2415                           	callstack 0
  2416                           
  2417                           ; 4 bytes @ 0x12
  2418  000013                     	ds	1
  2419  000014                     ??_isupper:
  2420  000014                     ??_isalpha:
  2421  000014                     ??_isdigit:
  2422  000014                     ??_isspace:
  2423  000014                     ??_islower:
  2424  000014                     ??_TMR0_Initialize:
  2425  000014                     ___wmul@multiplicand:
  2426                           	callstack 0
  2427  000014                     ___awmod@divisor:
  2428                           	callstack 0
  2429  000014                     fputc@c:
  2430                           	callstack 0
  2431  000014                     strlen@a:
  2432                           	callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x13
  2435  000014                     	ds	2
  2436  000016                     ___awmod@counter:
  2437                           	callstack 0
  2438  000016                     ___wmul@product:
  2439                           	callstack 0
  2440  000016                     fputc@fp:
  2441                           	callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x15
  2444  000016                     	ds	1
  2445  000017                     ___awmod@sign:
  2446                           	callstack 0
  2447  000017                     SDCARD_ReadBlock@sdCardBuffer:
  2448                           	callstack 0
  2449  000017                     SDCARD_WriteBlock@sdCardBuffer:
  2450                           	callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x16
  2453  000017                     	ds	1
  2454  000018                     ??_fputc:
  2455  000018                     ?_toupper:
  2456                           	callstack 0
  2457  000018                     _isspace$1895:
  2458                           	callstack 0
  2459  000018                     toupper@c:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x17
  2463  000018                     	ds	1
  2464  000019                     ?_atoi:
  2465                           	callstack 0
  2466  000019                     SDCARD_ReadBlock@i:
  2467                           	callstack 0
  2468  000019                     SDCARD_WriteBlock@i:
  2469                           	callstack 0
  2470  000019                     atoi@s:
  2471                           	callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x18
  2474  000019                     	ds	1
  2475  00001A                     ??_toupper:
  2476  00001A                     ___aodiv@divisor:
  2477                           	callstack 0
  2478  00001A                     ___aomod@divisor:
  2479                           	callstack 0
  2480  00001A                     ___lodiv@divisor:
  2481                           	callstack 0
  2482  00001A                     ___lomod@divisor:
  2483                           	callstack 0
  2484                           
  2485                           ; 8 bytes @ 0x19
  2486  00001A                     	ds	1
  2487  00001B                     ??_atoi:
  2488                           
  2489                           ; 1 bytes @ 0x1A
  2490  00001B                     	ds	2
  2491  00001D                     ?_ctoa:
  2492                           	callstack 0
  2493  00001D                     ctoa@fp:
  2494                           	callstack 0
  2495  00001D                     fputs@s:
  2496                           	callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x1C
  2499  00001D                     	ds	1
  2500  00001E                     _toupper$1944:
  2501                           	callstack 0
  2502                           
  2503                           ; 2 bytes @ 0x1D
  2504  00001E                     	ds	1
  2505  00001F                     ctoa@c:
  2506                           	callstack 0
  2507  00001F                     atoi@neg:
  2508                           	callstack 0
  2509  00001F                     fputs@fp:
  2510                           	callstack 0
  2511                           
  2512                           ; 2 bytes @ 0x1E
  2513  00001F                     	ds	1
  2514  000020                     ??_ctoa:
  2515                           
  2516                           ; 1 bytes @ 0x1F
  2517  000020                     	ds	1
  2518  000021                     fputs@c:
  2519                           	callstack 0
  2520  000021                     ctoa@l:
  2521                           	callstack 0
  2522  000021                     _atoi$1868:
  2523                           	callstack 0
  2524                           
  2525                           ; 2 bytes @ 0x20
  2526  000021                     	ds	1
  2527  000022                     ___aodiv@counter:
  2528                           	callstack 0
  2529  000022                     ___aomod@counter:
  2530                           	callstack 0
  2531  000022                     ___lomod@counter:
  2532                           	callstack 0
  2533  000022                     fputs@i:
  2534                           	callstack 0
  2535  000022                     ___lodiv@quotient:
  2536                           	callstack 0
  2537                           
  2538                           ; 8 bytes @ 0x21
  2539  000022                     	ds	1
  2540  000023                     ___aodiv@sign:
  2541                           	callstack 0
  2542  000023                     ___aomod@sign:
  2543                           	callstack 0
  2544  000023                     ctoa@w:
  2545                           	callstack 0
  2546  000023                     _atoi$1870:
  2547                           	callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x22
  2550  000023                     	ds	1
  2551  000024                     ?_abs:
  2552                           	callstack 0
  2553  000024                     ?_pad:
  2554                           	callstack 0
  2555  000024                     pad@fp:
  2556                           	callstack 0
  2557  000024                     abs@a:
  2558                           	callstack 0
  2559  000024                     ___aodiv@quotient:
  2560                           	callstack 0
  2561                           
  2562                           ; 8 bytes @ 0x23
  2563  000024                     	ds	1
  2564  000025                     _atoi$1869:
  2565                           	callstack 0
  2566                           
  2567                           ; 1 bytes @ 0x24
  2568  000025                     	ds	1
  2569  000026                     ??_abs:
  2570  000026                     pad@buf:
  2571                           	callstack 0
  2572  000026                     atoi@n:
  2573                           	callstack 0
  2574                           
  2575                           ; 2 bytes @ 0x25
  2576  000026                     	ds	2
  2577  000028                     pad@p:
  2578                           	callstack 0
  2579                           
  2580                           ; 2 bytes @ 0x27
  2581  000028                     	ds	2
  2582  00002A                     ??_pad:
  2583  00002A                     ___lodiv@counter:
  2584                           	callstack 0
  2585                           
  2586                           ; 1 bytes @ 0x29
  2587  00002A                     	ds	1
  2588  00002B                     pad@i:
  2589                           	callstack 0
  2590                           
  2591                           ; 2 bytes @ 0x2A
  2592  00002B                     	ds	2
  2593  00002D                     pad@w:
  2594                           	callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x2C
  2597  00002D                     	ds	2
  2598  00002F                     ?_dtoa:
  2599                           	callstack 0
  2600  00002F                     ?_utoa:
  2601                           	callstack 0
  2602  00002F                     ?_xtoa:
  2603                           	callstack 0
  2604  00002F                     dtoa@fp:
  2605                           	callstack 0
  2606  00002F                     utoa@fp:
  2607                           	callstack 0
  2608  00002F                     xtoa@fp:
  2609                           	callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x2E
  2612  00002F                     	ds	2
  2613  000031                     dtoa@d:
  2614                           	callstack 0
  2615  000031                     utoa@d:
  2616                           	callstack 0
  2617  000031                     xtoa@d:
  2618                           	callstack 0
  2619                           
  2620                           ; 8 bytes @ 0x30
  2621  000031                     	ds	8
  2622  000039                     xtoa@x:
  2623                           	callstack 0
  2624                           
  2625                           ; 1 bytes @ 0x38
  2626  000039                     	ds	1
  2627  00003A                     ??_vfpfcnvrt:
  2628                           
  2629                           ; 1 bytes @ 0x39
  2630  00003A                     	ds	4
  2631  00003E                     
  2632                           ; 1 bytes @ 0x3D
  2633 ;;
  2634 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2635 ;;
  2636 ;; *************** function _main *****************
  2637 ;; Defined at:
  2638 ;;		line 51 in file "main.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  i               2   90[BANK0 ] int 
  2643 ;;  sdCardAddres    4  100[BANK0 ] unsigned long 
  2644 ;;  localAddress    4   96[BANK0 ] unsigned long 
  2645 ;;  i               2   94[BANK0 ] unsigned short 
  2646 ;;  bufIdx          2   92[BANK0 ] unsigned short 
  2647 ;;  cmd             1   89[BANK0 ] unsigned char 
  2648 ;;  waveIdx         1   88[BANK0 ] unsigned char 
  2649 ;;  letter          1   87[BANK0 ] unsigned char 
  2650 ;;  status          1   86[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:       21 bytes
  2665 ;; Hardware stack levels required when called:   14
  2666 ;; This function calls:
  2667 ;;		_EUSART1_Read
  2668 ;;		_EUSART1_is_rx_ready
  2669 ;;		_SDCARD_Initialize
  2670 ;;		_SDCARD_PollWriteComplete
  2671 ;;		_SDCARD_ReadBlock
  2672 ;;		_SDCARD_WriteBlock
  2673 ;;		_SPI2_Close
  2674 ;;		_SPI2_Open
  2675 ;;		_SYSTEM_Initialize
  2676 ;;		_TMR0_SetInterruptHandler
  2677 ;;		_TMR0_WriteTimer
  2678 ;;		___awmod
  2679 ;;		_hexDumpBuffer
  2680 ;;		_printf
  2681 ;; This function is called by:
  2682 ;;		Startup code after reset
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text0
  2687  000052                     __ptext0:
  2688                           	callstack 0
  2689  000052                     _main:
  2690                           	callstack 17
  2691  000052                     
  2692                           ;main.c: 57:     printf("Dev'21\r\n");;main.c: 58:     printf("No configuration of devel
      +                          opment board\r\n> ");;main.c: 59: 
  2693  000052  0E00               	movlw	0
  2694  000054  0100               	movlb	0	; () banked
  2695  000056  6FC4               	movwf	main@sdCardAddress& (0+255),b
  2696  000058  0E00               	movlw	0
  2697  00005A  6FC5               	movwf	(main@sdCardAddress+1)& (0+255),b
  2698  00005C  0E00               	movlw	0
  2699  00005E  6FC6               	movwf	(main@sdCardAddress+2)& (0+255),b
  2700  000060  0E00               	movlw	0
  2701  000062  6FC7               	movwf	(main@sdCardAddress+3)& (0+255),b
  2702                           
  2703                           ;main.c: 61:     SPI2_Open(SPI2_DEFAULT);
  2704  000064  0E00               	movlw	0
  2705  000066  6FB8               	movwf	main@waveIdx& (0+255),b
  2706                           
  2707                           ;main.c: 62: ;main.c: 63: ;main.c: 65:     ADCON0bits.GO_NOT_DONE = 1;
  2708  000068  0E30               	movlw	48
  2709  00006A  6FB7               	movwf	main@letter& (0+255),b
  2710  00006C                     
  2711                           ; BSR set to: 0
  2712                           ;main.c: 67: 
  2713  00006C  ECFF  F014         	call	_SYSTEM_Initialize	;wreg free
  2714  000070  888A               	bsf	138,4,c	;volatile
  2715  000072                     
  2716                           ;main.c: 71:             cmd = EUSART1_Read();
  2717  000072  0E00               	movlw	0
  2718  000074  6E13               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2719  000076  0E00               	movlw	0
  2720  000078  6E12               	movwf	TMR0_WriteTimer@timerVal^0,c
  2721  00007A  EC61  F015         	call	_TMR0_WriteTimer	;wreg free
  2722  00007E                     
  2723                           ;main.c: 72:             switch (cmd) {
  2724  00007E  94F2               	bcf	242,2,c	;volatile
  2725  000080                     l345:
  2726  000080  A4F2               	btfss	242,2,c	;volatile
  2727  000082  EF45  F000         	goto	u4811
  2728  000086  EF47  F000         	goto	u4810
  2729  00008A                     u4811:
  2730  00008A  EF40  F000         	goto	l345
  2731  00008E                     u4810:
  2732  00008E                     
  2733                           ;main.c: 75: 
  2734  00008E  0ECE               	movlw	low _myTMR0ISR
  2735  000090  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2736  000092  0E20               	movlw	high _myTMR0ISR
  2737  000094  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2738  000096  EC66  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  2739  00009A                     
  2740                           ;main.c: 77:                 case '?':
  2741  00009A  8EF2               	bsf	242,7,c	;volatile
  2742  00009C                     
  2743                           ;main.c: 78:                     printf("\r\n-------------------------------------------
      +                          ------\r\n");
  2744  00009C  8CF2               	bsf	242,6,c	;volatile
  2745  00009E                     
  2746                           ;main.c: 80:                     printf("%04x", sdCardAddress >> 16);
  2747  00009E  0EC0               	movlw	low STR_1
  2748  0000A0  0100               	movlb	0	; () banked
  2749  0000A2  6F9F               	movwf	printf@fmt& (0+255),b
  2750  0000A4  0EFF               	movlw	high STR_1
  2751  0000A6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2752  0000A8  ECC4  F014         	call	_printf	;wreg free
  2753  0000AC                     
  2754                           ;main.c: 81:                     printf(":");
  2755  0000AC  0E4C               	movlw	low STR_2
  2756  0000AE  0100               	movlb	0	; () banked
  2757  0000B0  6F9F               	movwf	printf@fmt& (0+255),b
  2758  0000B2  0EFF               	movlw	high STR_2
  2759  0000B4  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2760  0000B6  ECC4  F014         	call	_printf	;wreg free
  2761  0000BA                     
  2762                           ;main.c: 82:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  2763  0000BA  0ECB               	movlw	low STR_3
  2764  0000BC  0100               	movlb	0	; () banked
  2765  0000BE  6F9F               	movwf	printf@fmt& (0+255),b
  2766  0000C0  0EFF               	movlw	high STR_3
  2767  0000C2  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2768  0000C4  ECC4  F014         	call	_printf	;wreg free
  2769  0000C8                     
  2770                           ;main.c: 83:                     printf("\r\n");
  2771  0000C8  0E9D               	movlw	low STR_4
  2772  0000CA  0100               	movlb	0	; () banked
  2773  0000CC  6F9F               	movwf	printf@fmt& (0+255),b
  2774  0000CE  0EFD               	movlw	high STR_4
  2775  0000D0  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2776  0000D2  ECC4  F014         	call	_printf	;wreg free
  2777  0000D6                     
  2778                           ;main.c: 85:                     printf("?: help menu\r\n");
  2779  0000D6  EC86  F015         	call	_SPI2_Close	;wreg free
  2780  0000DA                     
  2781                           ;main.c: 86:                     printf("o: k\r\n");
  2782  0000DA  0E00               	movlw	0
  2783  0000DC  EC87  F011         	call	_SPI2_Open
  2784  0000E0                     
  2785                           ;main.c: 90:                     printf("i: Initialize SD card\r\n");
  2786  0000E0  82C2               	bsf	194,1,c	;volatile
  2787  0000E2                     l348:
  2788  0000E2  B2C2               	btfsc	194,1,c	;volatile
  2789  0000E4  EF76  F000         	goto	u4821
  2790  0000E8  EF78  F000         	goto	u4820
  2791  0000EC                     u4821:
  2792  0000EC  EF71  F000         	goto	l348
  2793  0000F0                     u4820:
  2794  0000F0                     l5122:
  2795                           
  2796                           ;main.c: 95:                     printf("a/A decrease/increase read address\r\n");
  2797  0000F0  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  2798  0000F4  0900               	iorlw	0
  2799  0000F6  B4D8               	btfsc	status,2,c
  2800  0000F8  EF80  F000         	goto	u4831
  2801  0000FC  EF82  F000         	goto	u4830
  2802  000100                     u4831:
  2803  000100  EF78  F000         	goto	l5122
  2804  000104                     u4830:
  2805  000104                     
  2806                           ;main.c: 96:                     printf("r: read a block of %d bytes from SD card\r\n", 
      +                          512);
  2807  000104  ECD8  F014         	call	_EUSART1_Read	;wreg free
  2808  000108  0100               	movlb	0	; () banked
  2809  00010A  6FB9               	movwf	main@cmd& (0+255),b
  2810                           
  2811                           ;main.c: 97:                     printf("1: write a perfect 26 value sine wave to the SD
      +                           card\r\n", 512);
  2812  00010C  EF42  F004         	goto	l5318
  2813  000110                     l5126:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;main.c: 103:                     break;
  2817  000110  0EDE               	movlw	low STR_5
  2818  000112  6F9F               	movwf	printf@fmt& (0+255),b
  2819  000114  0EFC               	movlw	high STR_5
  2820  000116  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2821  000118  ECC4  F014         	call	_printf	;wreg free
  2822                           
  2823                           ;main.c: 104: 
  2824  00011C  0E39               	movlw	low STR_6
  2825  00011E  0100               	movlb	0	; () banked
  2826  000120  6F9F               	movwf	printf@fmt& (0+255),b
  2827  000122  0EFF               	movlw	high STR_6
  2828  000124  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2829  000126  ECC4  F014         	call	_printf	;wreg free
  2830                           
  2831                           ;main.c: 105: 
  2832  00012A  0EEE               	movlw	low STR_7
  2833  00012C  0100               	movlb	0	; () banked
  2834  00012E  6F9F               	movwf	printf@fmt& (0+255),b
  2835  000130  0EFF               	movlw	high STR_7
  2836  000132  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2837  000134  C0C6  F0A1         	movff	main@sdCardAddress+2,?_printf+2
  2838  000138  C0C7  F0A2         	movff	main@sdCardAddress+3,?_printf+3
  2839  00013C  6BA3               	clrf	(?_printf+4)& (0+255),b
  2840  00013E  6BA4               	clrf	(?_printf+5)& (0+255),b
  2841  000140  ECC4  F014         	call	_printf	;wreg free
  2842                           
  2843                           ;main.c: 106: 
  2844  000144  0EFC               	movlw	low STR_8
  2845  000146  0100               	movlb	0	; () banked
  2846  000148  6F9F               	movwf	printf@fmt& (0+255),b
  2847  00014A  0EFF               	movlw	high STR_8
  2848  00014C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2849  00014E  ECC4  F014         	call	_printf	;wreg free
  2850                           
  2851                           ;main.c: 107: 
  2852  000152  0EEE               	movlw	low STR_7
  2853  000154  0100               	movlb	0	; () banked
  2854  000156  6F9F               	movwf	printf@fmt& (0+255),b
  2855  000158  0EFF               	movlw	high STR_7
  2856  00015A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2857  00015C  0EFF               	movlw	255
  2858  00015E  15C4               	andwf	main@sdCardAddress& (0+255),w,b
  2859  000160  6FA1               	movwf	(?_printf+2)& (0+255),b
  2860  000162  0EFF               	movlw	255
  2861  000164  15C5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2862  000166  6FA2               	movwf	(?_printf+3)& (0+255),b
  2863  000168  0E00               	movlw	0
  2864  00016A  15C6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2865  00016C  6FA3               	movwf	(?_printf+4)& (0+255),b
  2866  00016E  0E00               	movlw	0
  2867  000170  15C7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2868  000172  6FA4               	movwf	(?_printf+5)& (0+255),b
  2869  000174  ECC4  F014         	call	_printf	;wreg free
  2870                           
  2871                           ;main.c: 108:                 case 'o':
  2872  000178  0EAE               	movlw	low (STR_39+12)
  2873  00017A  0100               	movlb	0	; () banked
  2874  00017C  6F9F               	movwf	printf@fmt& (0+255),b
  2875  00017E  0EFF               	movlw	high (STR_39+12)
  2876  000180  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2877  000182  ECC4  F014         	call	_printf	;wreg free
  2878                           
  2879                           ;main.c: 109:                     printf("o:	ok\r\n");
  2880  000186  0EE0               	movlw	low (STR_5+2)
  2881  000188  0100               	movlb	0	; () banked
  2882  00018A  6F9F               	movwf	printf@fmt& (0+255),b
  2883  00018C  0EFC               	movlw	high (STR_5+2)
  2884  00018E  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2885  000190  ECC4  F014         	call	_printf	;wreg free
  2886                           
  2887                           ;main.c: 110:                     break;
  2888  000194  0EB1               	movlw	low STR_12
  2889  000196  0100               	movlb	0	; () banked
  2890  000198  6F9F               	movwf	printf@fmt& (0+255),b
  2891  00019A  0EFF               	movlw	high STR_12
  2892  00019C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2893  00019E  ECC4  F014         	call	_printf	;wreg free
  2894                           
  2895                           ;main.c: 111: 
  2896  0001A2  0EDC               	movlw	low STR_13
  2897  0001A4  0100               	movlb	0	; () banked
  2898  0001A6  6F9F               	movwf	printf@fmt& (0+255),b
  2899  0001A8  0EFF               	movlw	high STR_13
  2900  0001AA  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2901  0001AC  ECC4  F014         	call	_printf	;wreg free
  2902                           
  2903                           ;main.c: 112: 
  2904  0001B0  0EFC               	movlw	low STR_14
  2905  0001B2  0100               	movlb	0	; () banked
  2906  0001B4  6F9F               	movwf	printf@fmt& (0+255),b
  2907  0001B6  0EFE               	movlw	high STR_14
  2908  0001B8  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2909  0001BA  ECC4  F014         	call	_printf	;wreg free
  2910                           
  2911                           ;main.c: 113: 
  2912  0001BE  0EE4               	movlw	low STR_15
  2913  0001C0  0100               	movlb	0	; () banked
  2914  0001C2  6F9F               	movwf	printf@fmt& (0+255),b
  2915  0001C4  0EFE               	movlw	high STR_15
  2916  0001C6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2917  0001C8  ECC4  F014         	call	_printf	;wreg free
  2918                           
  2919                           ;main.c: 114: 
  2920  0001CC  0EE0               	movlw	low (STR_5+2)
  2921  0001CE  0100               	movlb	0	; () banked
  2922  0001D0  6F9F               	movwf	printf@fmt& (0+255),b
  2923  0001D2  0EFC               	movlw	high (STR_5+2)
  2924  0001D4  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2925  0001D6  ECC4  F014         	call	_printf	;wreg free
  2926                           
  2927                           ;main.c: 115:                 case 'Z':
  2928  0001DA  0EB4               	movlw	low STR_17
  2929  0001DC  0100               	movlb	0	; () banked
  2930  0001DE  6F9F               	movwf	printf@fmt& (0+255),b
  2931  0001E0  0EFE               	movlw	high STR_17
  2932  0001E2  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2933  0001E4  ECC4  F014         	call	_printf	;wreg free
  2934                           
  2935                           ;main.c: 116:                     for (i = 0; i < 40; i++) printf("\n");
  2936  0001E8  0EE0               	movlw	low (STR_5+2)
  2937  0001EA  0100               	movlb	0	; () banked
  2938  0001EC  6F9F               	movwf	printf@fmt& (0+255),b
  2939  0001EE  0EFC               	movlw	high (STR_5+2)
  2940  0001F0  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2941  0001F2  ECC4  F014         	call	_printf	;wreg free
  2942                           
  2943                           ;main.c: 120: 
  2944  0001F6  0EC7               	movlw	low STR_19
  2945  0001F8  0100               	movlb	0	; () banked
  2946  0001FA  6F9F               	movwf	printf@fmt& (0+255),b
  2947  0001FC  0EFD               	movlw	high STR_19
  2948  0001FE  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2949  000200  ECC4  F014         	call	_printf	;wreg free
  2950                           
  2951                           ;main.c: 121: 
  2952  000204  0E72               	movlw	low STR_20
  2953  000206  0100               	movlb	0	; () banked
  2954  000208  6F9F               	movwf	printf@fmt& (0+255),b
  2955  00020A  0EFD               	movlw	high STR_20
  2956  00020C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2957  00020E  0E02               	movlw	2
  2958  000210  6FA2               	movwf	(?_printf+3)& (0+255),b
  2959  000212  0E00               	movlw	0
  2960  000214  6FA1               	movwf	(?_printf+2)& (0+255),b
  2961  000216  ECC4  F014         	call	_printf	;wreg free
  2962                           
  2963                           ;main.c: 122: 
  2964  00021A  0EA7               	movlw	low STR_21
  2965  00021C  0100               	movlb	0	; () banked
  2966  00021E  6F9F               	movwf	printf@fmt& (0+255),b
  2967  000220  0EFC               	movlw	high STR_21
  2968  000222  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2969  000224  0E02               	movlw	2
  2970  000226  6FA2               	movwf	(?_printf+3)& (0+255),b
  2971  000228  0E00               	movlw	0
  2972  00022A  6FA1               	movwf	(?_printf+2)& (0+255),b
  2973  00022C  ECC4  F014         	call	_printf	;wreg free
  2974                           
  2975                           ;main.c: 123:                 case 'z':
  2976  000230  0EE0               	movlw	low (STR_5+2)
  2977  000232  0100               	movlb	0	; () banked
  2978  000234  6F9F               	movwf	printf@fmt& (0+255),b
  2979  000236  0EFC               	movlw	high (STR_5+2)
  2980  000238  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2981  00023A  ECC4  F014         	call	_printf	;wreg free
  2982                           
  2983                           ;main.c: 124:                     for (i = 0; i < 40; i++) printf("\n");
  2984  00023E  0E14               	movlw	low STR_23
  2985  000240  0100               	movlb	0	; () banked
  2986  000242  6F9F               	movwf	printf@fmt& (0+255),b
  2987  000244  0EFD               	movlw	high STR_23
  2988  000246  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  2989  000248  0E02               	movlw	2
  2990  00024A  6FA2               	movwf	(?_printf+3)& (0+255),b
  2991  00024C  0E00               	movlw	0
  2992  00024E  6FA1               	movwf	(?_printf+2)& (0+255),b
  2993  000250  ECC4  F014         	call	_printf	;wreg free
  2994                           
  2995                           ;main.c: 125:                     break;
  2996  000254  0E46               	movlw	low STR_24
  2997  000256  0100               	movlb	0	; () banked
  2998  000258  6F9F               	movwf	printf@fmt& (0+255),b
  2999  00025A  0EFD               	movlw	high STR_24
  3000  00025C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3001  00025E  0E02               	movlw	2
  3002  000260  6FA2               	movwf	(?_printf+3)& (0+255),b
  3003  000262  0E00               	movlw	0
  3004  000264  6FA1               	movwf	(?_printf+2)& (0+255),b
  3005  000266  ECC4  F014         	call	_printf	;wreg free
  3006  00026A  0EEC               	movlw	low STR_25
  3007  00026C  0100               	movlb	0	; () banked
  3008  00026E  6F9F               	movwf	printf@fmt& (0+255),b
  3009  000270  0EFD               	movlw	high STR_25
  3010  000272  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3011  000274  0E02               	movlw	2
  3012  000276  6FA2               	movwf	(?_printf+3)& (0+255),b
  3013  000278  0E00               	movlw	0
  3014  00027A  6FA1               	movwf	(?_printf+2)& (0+255),b
  3015  00027C  ECC4  F014         	call	_printf	;wreg free
  3016  000280  0EE0               	movlw	low (STR_5+2)
  3017  000282  0100               	movlb	0	; () banked
  3018  000284  6F9F               	movwf	printf@fmt& (0+255),b
  3019  000286  0EFC               	movlw	high (STR_5+2)
  3020  000288  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3021  00028A  ECC4  F014         	call	_printf	;wreg free
  3022  00028E  EF78  F000         	goto	l5122
  3023  000292                     l5128:
  3024                           
  3025                           ; BSR set to: 0
  3026  000292  0ED4               	movlw	low STR_27
  3027  000294  6F9F               	movwf	printf@fmt& (0+255),b
  3028  000296  0EFF               	movlw	high STR_27
  3029  000298  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3030  00029A  ECC4  F014         	call	_printf	;wreg free
  3031  00029E  EF78  F000         	goto	l5122
  3032  0002A2                     l5130:
  3033                           
  3034                           ; BSR set to: 0
  3035  0002A2  0E00               	movlw	0
  3036  0002A4  6FBF               	movwf	(main@i+1)& (0+255),b
  3037  0002A6  0E00               	movlw	0
  3038  0002A8  6FBE               	movwf	main@i& (0+255),b
  3039  0002AA                     l5136:
  3040                           
  3041                           ; BSR set to: 0
  3042  0002AA  0EF5               	movlw	low (STR_59+2)
  3043  0002AC  6F9F               	movwf	printf@fmt& (0+255),b
  3044  0002AE  0EFF               	movlw	high (STR_59+2)
  3045  0002B0  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3046  0002B2  ECC4  F014         	call	_printf	;wreg free
  3047  0002B6  0100               	movlb	0	; () banked
  3048  0002B8  4BBE               	infsnz	main@i& (0+255),f,b
  3049  0002BA  2BBF               	incf	(main@i+1)& (0+255),f,b
  3050  0002BC                     
  3051                           ; BSR set to: 0
  3052  0002BC  51BF               	movf	(main@i+1)& (0+255),w,b
  3053  0002BE  E109               	bnz	u4840
  3054  0002C0  0E28               	movlw	40
  3055  0002C2  5DBE               	subwf	main@i& (0+255),w,b
  3056  0002C4  A0D8               	btfss	status,0,c
  3057  0002C6  EF67  F001         	goto	u4841
  3058  0002CA  EF69  F001         	goto	u4840
  3059  0002CE                     u4841:
  3060  0002CE  EF55  F001         	goto	l5136
  3061  0002D2                     u4840:
  3062  0002D2                     
  3063                           ; BSR set to: 0
  3064  0002D2  00FF               	reset		;# 
  3065  0002D4  EF78  F000         	goto	l5122
  3066  0002D8                     l5142:
  3067                           
  3068                           ; BSR set to: 0
  3069  0002D8  0E00               	movlw	0
  3070  0002DA  6FBF               	movwf	(main@i+1)& (0+255),b
  3071  0002DC  0E00               	movlw	0
  3072  0002DE  6FBE               	movwf	main@i& (0+255),b
  3073  0002E0                     l5148:
  3074                           
  3075                           ; BSR set to: 0
  3076  0002E0  0EF5               	movlw	low (STR_59+2)
  3077  0002E2  6F9F               	movwf	printf@fmt& (0+255),b
  3078  0002E4  0EFF               	movlw	high (STR_59+2)
  3079  0002E6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3080  0002E8  ECC4  F014         	call	_printf	;wreg free
  3081  0002EC  0100               	movlb	0	; () banked
  3082  0002EE  4BBE               	infsnz	main@i& (0+255),f,b
  3083  0002F0  2BBF               	incf	(main@i+1)& (0+255),f,b
  3084  0002F2                     
  3085                           ; BSR set to: 0
  3086  0002F2  51BF               	movf	(main@i+1)& (0+255),w,b
  3087  0002F4  E109               	bnz	u4850
  3088  0002F6  0E28               	movlw	40
  3089  0002F8  5DBE               	subwf	main@i& (0+255),w,b
  3090  0002FA  A0D8               	btfss	status,0,c
  3091  0002FC  EF82  F001         	goto	u4851
  3092  000300  EF84  F001         	goto	u4850
  3093  000304                     u4851:
  3094  000304  EF70  F001         	goto	l5148
  3095  000308                     u4850:
  3096  000308  EF78  F000         	goto	l5122
  3097  00030C                     l5154:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;main.c: 174:                     SPI2_Close();
  3101  00030C  EC86  F015         	call	_SPI2_Close	;wreg free
  3102  000310                     
  3103                           ;main.c: 175:                     SPI2_Open(SPI2_DEFAULT);
  3104  000310  0E00               	movlw	0
  3105  000312  EC87  F011         	call	_SPI2_Open
  3106  000316                     
  3107                           ;main.c: 176:                     SDCARD_Initialize(1);
  3108  000316  0E01               	movlw	1
  3109  000318  ECAF  F00D         	call	_SDCARD_Initialize
  3110                           
  3111                           ;main.c: 177:                     break;
  3112  00031C  EF78  F000         	goto	l5122
  3113  000320                     l5160:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;main.c: 184:                     if (cmd == 'a') {
  3117  000320  0E61               	movlw	97
  3118  000322  19B9               	xorwf	main@cmd& (0+255),w,b
  3119  000324  A4D8               	btfss	status,2,c
  3120  000326  EF97  F001         	goto	u4861
  3121  00032A  EF99  F001         	goto	u4860
  3122  00032E                     u4861:
  3123  00032E  EFC3  F001         	goto	l5170
  3124  000332                     u4860:
  3125  000332                     
  3126                           ; BSR set to: 0
  3127                           ;main.c: 185:                         sdCardAddress -= 512;
  3128  000332  0E00               	movlw	0
  3129  000334  5FC4               	subwf	main@sdCardAddress& (0+255),f,b
  3130  000336  0E02               	movlw	2
  3131  000338  5BC5               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  3132  00033A  0E00               	movlw	0
  3133  00033C  5BC6               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  3134  00033E  0E00               	movlw	0
  3135  000340  5BC7               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  3136                           
  3137                           ;main.c: 186:                         if (sdCardAddress >= 0x04000000) {
  3138  000342  0E04               	movlw	4
  3139  000344  5DC7               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  3140  000346  A0D8               	btfss	status,0,c
  3141  000348  EFA8  F001         	goto	u4871
  3142  00034C  EFAA  F001         	goto	u4870
  3143  000350                     u4871:
  3144  000350  EFBB  F001         	goto	l5168
  3145  000354                     u4870:
  3146  000354                     
  3147                           ; BSR set to: 0
  3148                           ;main.c: 187:                             printf("Underflowed to high address\r\n");
  3149  000354  0E0C               	movlw	low STR_30
  3150  000356  6F9F               	movwf	printf@fmt& (0+255),b
  3151  000358  0EFE               	movlw	high STR_30
  3152  00035A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3153  00035C  ECC4  F014         	call	_printf	;wreg free
  3154  000360                     
  3155                           ;main.c: 188:                             sdCardAddress = 0x04000000 - 512;
  3156  000360  0E00               	movlw	0
  3157  000362  0100               	movlb	0	; () banked
  3158  000364  6FC4               	movwf	main@sdCardAddress& (0+255),b
  3159  000366  0EFE               	movlw	254
  3160  000368  6FC5               	movwf	(main@sdCardAddress+1)& (0+255),b
  3161  00036A  0EFF               	movlw	255
  3162  00036C  6FC6               	movwf	(main@sdCardAddress+2)& (0+255),b
  3163  00036E  0E03               	movlw	3
  3164  000370  6FC7               	movwf	(main@sdCardAddress+3)& (0+255),b
  3165                           
  3166                           ;main.c: 189:                         } else {
  3167  000372  EFEB  F001         	goto	l369
  3168  000376                     l5168:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;main.c: 190:                             printf("Decreased address\r\n");
  3172  000376  0E11               	movlw	low STR_31
  3173  000378  6F9F               	movwf	printf@fmt& (0+255),b
  3174  00037A  0EFF               	movlw	high STR_31
  3175  00037C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3176  00037E  ECC4  F014         	call	_printf	;wreg free
  3177  000382  EFEB  F001         	goto	l369
  3178  000386                     l5170:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;main.c: 193:                         sdCardAddress += 512;
  3182  000386  0E00               	movlw	0
  3183  000388  27C4               	addwf	main@sdCardAddress& (0+255),f,b
  3184  00038A  0E02               	movlw	2
  3185  00038C  23C5               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3186  00038E  0E00               	movlw	0
  3187  000390  23C6               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3188  000392  0E00               	movlw	0
  3189  000394  23C7               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3190                           
  3191                           ;main.c: 194:                         if (sdCardAddress >= 0x04000000) {
  3192  000396  0E04               	movlw	4
  3193  000398  5DC7               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  3194  00039A  A0D8               	btfss	status,0,c
  3195  00039C  EFD2  F001         	goto	u4881
  3196  0003A0  EFD4  F001         	goto	u4880
  3197  0003A4                     u4881:
  3198  0003A4  EFE5  F001         	goto	l5176
  3199  0003A8                     u4880:
  3200  0003A8                     
  3201                           ; BSR set to: 0
  3202                           ;main.c: 195:                             printf("Overflowed to low address\r\n");
  3203  0003A8  0E63               	movlw	low STR_32
  3204  0003AA  6F9F               	movwf	printf@fmt& (0+255),b
  3205  0003AC  0EFE               	movlw	high STR_32
  3206  0003AE  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3207  0003B0  ECC4  F014         	call	_printf	;wreg free
  3208  0003B4                     
  3209                           ;main.c: 196:                             sdCardAddress = 0x00000000;
  3210  0003B4  0E00               	movlw	0
  3211  0003B6  0100               	movlb	0	; () banked
  3212  0003B8  6FC4               	movwf	main@sdCardAddress& (0+255),b
  3213  0003BA  0E00               	movlw	0
  3214  0003BC  6FC5               	movwf	(main@sdCardAddress+1)& (0+255),b
  3215  0003BE  0E00               	movlw	0
  3216  0003C0  6FC6               	movwf	(main@sdCardAddress+2)& (0+255),b
  3217  0003C2  0E00               	movlw	0
  3218  0003C4  6FC7               	movwf	(main@sdCardAddress+3)& (0+255),b
  3219                           
  3220                           ;main.c: 197:                         } else {
  3221  0003C6  EFEB  F001         	goto	l369
  3222  0003CA                     l5176:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;main.c: 198:                             printf("Increased address\r\n");
  3226  0003CA  0E25               	movlw	low STR_33
  3227  0003CC  6F9F               	movwf	printf@fmt& (0+255),b
  3228  0003CE  0EFF               	movlw	high STR_33
  3229  0003D0  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3230  0003D2  ECC4  F014         	call	_printf	;wreg free
  3231  0003D6                     l369:
  3232                           
  3233                           ;main.c: 203:                     printf("SD card address:  ");
  3234  0003D6  0E39               	movlw	low STR_6
  3235  0003D8  0100               	movlb	0	; () banked
  3236  0003DA  6F9F               	movwf	printf@fmt& (0+255),b
  3237  0003DC  0EFF               	movlw	high STR_6
  3238  0003DE  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3239  0003E0  ECC4  F014         	call	_printf	;wreg free
  3240                           
  3241                           ;main.c: 204:                     printf("%04x", sdCardAddress >> 16);
  3242  0003E4  0EEE               	movlw	low STR_7
  3243  0003E6  0100               	movlb	0	; () banked
  3244  0003E8  6F9F               	movwf	printf@fmt& (0+255),b
  3245  0003EA  0EFF               	movlw	high STR_7
  3246  0003EC  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3247  0003EE  C0C6  F0A1         	movff	main@sdCardAddress+2,?_printf+2
  3248  0003F2  C0C7  F0A2         	movff	main@sdCardAddress+3,?_printf+3
  3249  0003F6  6BA3               	clrf	(?_printf+4)& (0+255),b
  3250  0003F8  6BA4               	clrf	(?_printf+5)& (0+255),b
  3251  0003FA  ECC4  F014         	call	_printf	;wreg free
  3252                           
  3253                           ;main.c: 205:                     printf(":");
  3254  0003FE  0EFC               	movlw	low STR_8
  3255  000400  0100               	movlb	0	; () banked
  3256  000402  6F9F               	movwf	printf@fmt& (0+255),b
  3257  000404  0EFF               	movlw	high STR_8
  3258  000406  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3259  000408  ECC4  F014         	call	_printf	;wreg free
  3260                           
  3261                           ;main.c: 206:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3262  00040C  0EEE               	movlw	low STR_7
  3263  00040E  0100               	movlb	0	; () banked
  3264  000410  6F9F               	movwf	printf@fmt& (0+255),b
  3265  000412  0EFF               	movlw	high STR_7
  3266  000414  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3267  000416  0EFF               	movlw	255
  3268  000418  15C4               	andwf	main@sdCardAddress& (0+255),w,b
  3269  00041A  6FA1               	movwf	(?_printf+2)& (0+255),b
  3270  00041C  0EFF               	movlw	255
  3271  00041E  15C5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3272  000420  6FA2               	movwf	(?_printf+3)& (0+255),b
  3273  000422  0E00               	movlw	0
  3274  000424  15C6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3275  000426  6FA3               	movwf	(?_printf+4)& (0+255),b
  3276  000428  0E00               	movlw	0
  3277  00042A  15C7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3278  00042C  6FA4               	movwf	(?_printf+5)& (0+255),b
  3279  00042E  ECC4  F014         	call	_printf	;wreg free
  3280                           
  3281                           ;main.c: 207:                     printf("\r\n");
  3282  000432  0EAE               	movlw	low (STR_39+12)
  3283  000434  0100               	movlb	0	; () banked
  3284  000436  6F9F               	movwf	printf@fmt& (0+255),b
  3285  000438  0EFF               	movlw	high (STR_39+12)
  3286  00043A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3287  00043C  ECC4  F014         	call	_printf	;wreg free
  3288                           
  3289                           ;main.c: 208:                     break;
  3290  000440  EF78  F000         	goto	l5122
  3291  000444                     l373:
  3292                           
  3293                           ; BSR set to: 0
  3294  000444  8A8B               	bsf	139,5,c	;volatile
  3295  000446                     
  3296                           ; BSR set to: 0
  3297                           ;main.c: 217:                     SDCARD_ReadBlock(sdCardAddress, blueBuffer);
  3298  000446  C0C4  F013         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3299  00044A  C0C5  F014         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3300  00044E  C0C6  F015         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3301  000452  C0C7  F016         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3302  000456  0EF5               	movlw	low _blueBuffer
  3303  000458  6E17               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3304  00045A  0E02               	movlw	high _blueBuffer
  3305  00045C  6E18               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3306  00045E  ECDD  F011         	call	_SDCARD_ReadBlock	;wreg free
  3307  000462  9A8B               	bcf	139,5,c	;volatile
  3308  000464                     
  3309                           ;main.c: 219:                     printf("Read block: \r\n");
  3310  000464  0EA2               	movlw	low STR_39
  3311  000466  0100               	movlb	0	; () banked
  3312  000468  6F9F               	movwf	printf@fmt& (0+255),b
  3313  00046A  0EFF               	movlw	high STR_39
  3314  00046C  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3315  00046E  ECC4  F014         	call	_printf	;wreg free
  3316  000472                     
  3317                           ;main.c: 220:                     printf("    Address:    ");
  3318  000472  0E81               	movlw	low STR_40
  3319  000474  0100               	movlb	0	; () banked
  3320  000476  6F9F               	movwf	printf@fmt& (0+255),b
  3321  000478  0EFF               	movlw	high STR_40
  3322  00047A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3323  00047C  ECC4  F014         	call	_printf	;wreg free
  3324  000480                     
  3325                           ;main.c: 221:                     printf("%04x", sdCardAddress >> 16);
  3326  000480  0EEE               	movlw	low STR_7
  3327  000482  0100               	movlb	0	; () banked
  3328  000484  6F9F               	movwf	printf@fmt& (0+255),b
  3329  000486  0EFF               	movlw	high STR_7
  3330  000488  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3331  00048A  C0C6  F0A1         	movff	main@sdCardAddress+2,?_printf+2
  3332  00048E  C0C7  F0A2         	movff	main@sdCardAddress+3,?_printf+3
  3333  000492  6BA3               	clrf	(?_printf+4)& (0+255),b
  3334  000494  6BA4               	clrf	(?_printf+5)& (0+255),b
  3335  000496  ECC4  F014         	call	_printf	;wreg free
  3336  00049A                     
  3337                           ;main.c: 222:                     printf(":");
  3338  00049A  0EFC               	movlw	low STR_8
  3339  00049C  0100               	movlb	0	; () banked
  3340  00049E  6F9F               	movwf	printf@fmt& (0+255),b
  3341  0004A0  0EFF               	movlw	high STR_8
  3342  0004A2  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3343  0004A4  ECC4  F014         	call	_printf	;wreg free
  3344  0004A8                     
  3345                           ;main.c: 223:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3346  0004A8  0EEE               	movlw	low STR_7
  3347  0004AA  0100               	movlb	0	; () banked
  3348  0004AC  6F9F               	movwf	printf@fmt& (0+255),b
  3349  0004AE  0EFF               	movlw	high STR_7
  3350  0004B0  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3351  0004B2  0EFF               	movlw	255
  3352  0004B4  15C4               	andwf	main@sdCardAddress& (0+255),w,b
  3353  0004B6  6FA1               	movwf	(?_printf+2)& (0+255),b
  3354  0004B8  0EFF               	movlw	255
  3355  0004BA  15C5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3356  0004BC  6FA2               	movwf	(?_printf+3)& (0+255),b
  3357  0004BE  0E00               	movlw	0
  3358  0004C0  15C6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3359  0004C2  6FA3               	movwf	(?_printf+4)& (0+255),b
  3360  0004C4  0E00               	movlw	0
  3361  0004C6  15C7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3362  0004C8  6FA4               	movwf	(?_printf+5)& (0+255),b
  3363  0004CA  ECC4  F014         	call	_printf	;wreg free
  3364  0004CE                     
  3365                           ;main.c: 224:                     printf("\r\n");
  3366  0004CE  0EAE               	movlw	low (STR_39+12)
  3367  0004D0  0100               	movlb	0	; () banked
  3368  0004D2  6F9F               	movwf	printf@fmt& (0+255),b
  3369  0004D4  0EFF               	movlw	high (STR_39+12)
  3370  0004D6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3371  0004D8  ECC4  F014         	call	_printf	;wreg free
  3372  0004DC                     
  3373                           ;main.c: 225:                     hexDumpBuffer(blueBuffer);
  3374  0004DC  0EF5               	movlw	low _blueBuffer
  3375  0004DE  0100               	movlb	0	; () banked
  3376  0004E0  6FA9               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3377  0004E2  0E02               	movlw	high _blueBuffer
  3378  0004E4  6FAA               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3379  0004E6  EC28  F00B         	call	_hexDumpBuffer	;wreg free
  3380                           
  3381                           ;main.c: 226:                     break;
  3382  0004EA  EF78  F000         	goto	l5122
  3383  0004EE                     l5196:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;main.c: 230:                     waveIdx = 0;
  3387  0004EE  0E00               	movlw	0
  3388  0004F0  6FB8               	movwf	main@waveIdx& (0+255),b
  3389  0004F2                     
  3390                           ; BSR set to: 0
  3391                           ;main.c: 231:                     localAddress = sdCardAddress;
  3392  0004F2  C0C4  F0C0         	movff	main@sdCardAddress,main@localAddress
  3393  0004F6  C0C5  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3394  0004FA  C0C6  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3395  0004FE  C0C7  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3396  000502                     
  3397                           ; BSR set to: 0
  3398                           ;main.c: 232:                     printf("Writing sine wave to memory, starting with the
      +                           current address. Press any key to stop.\r\n");
  3399  000502  0E01               	movlw	low STR_45
  3400  000504  6F9F               	movwf	printf@fmt& (0+255),b
  3401  000506  0EFC               	movlw	high STR_45
  3402  000508  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3403  00050A  ECC4  F014         	call	_printf	;wreg free
  3404                           
  3405                           ;main.c: 233:                     while (!(EUSART1_is_rx_ready())){
  3406  00050E  EFDE  F002         	goto	l5222
  3407  000512                     l5202:
  3408                           
  3409                           ;main.c: 235:                     for(bufIdx = 0;bufIdx < 512;waveIdx = (waveIdx + 1) % 
      +                          26, bufIdx++){
  3410  000512  0E00               	movlw	0
  3411  000514  0100               	movlb	0	; () banked
  3412  000516  6FBD               	movwf	(main@bufIdx+1)& (0+255),b
  3413  000518  0E00               	movlw	0
  3414  00051A  6FBC               	movwf	main@bufIdx& (0+255),b
  3415  00051C                     l5208:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;main.c: 236:                         blueBuffer[bufIdx] = sin[waveIdx];
  3419  00051C  0E55               	movlw	low _sin
  3420  00051E  25B8               	addwf	main@waveIdx& (0+255),w,b
  3421  000520  6EF6               	movwf	tblptrl,c
  3422  000522  6AF7               	clrf	tblptrh,c
  3423  000524  0EF9               	movlw	high _sin
  3424  000526  22F7               	addwfc	tblptrh,f,c
  3425  000528                     	if	1	;There are 3 active tblptr bytes
  3426  000528  6AF8               	clrf	tblptru,c
  3427  00052A  0E00               	movlw	low (__mediumconst shr (0+16))
  3428  00052C  22F8               	addwfc	tblptru,f,c
  3429  00052E                     	endif
  3430  00052E  0EF5               	movlw	low _blueBuffer
  3431  000530  25BC               	addwf	main@bufIdx& (0+255),w,b
  3432  000532  6ED9               	movwf	fsr2l,c
  3433  000534  0E02               	movlw	high _blueBuffer
  3434  000536  21BD               	addwfc	(main@bufIdx+1)& (0+255),w,b
  3435  000538  6EDA               	movwf	fsr2h,c
  3436  00053A  0008               	tblrd		*
  3437  00053C  CFF5 FFDF          	movff	tablat,indf2
  3438  000540                     
  3439                           ; BSR set to: 0
  3440                           ;main.c: 237:                     }
  3441  000540  0E01               	movlw	1
  3442  000542  25B8               	addwf	main@waveIdx& (0+255),w,b
  3443  000544  6E12               	movwf	___awmod@dividend^0,c
  3444  000546  6A13               	clrf	(___awmod@dividend+1)^0,c
  3445  000548  0E00               	movlw	0
  3446  00054A  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  3447  00054C  0E00               	movlw	0
  3448  00054E  6E15               	movwf	(___awmod@divisor+1)^0,c
  3449  000550  0E1A               	movlw	26
  3450  000552  6E14               	movwf	___awmod@divisor^0,c
  3451  000554  EC2F  F011         	call	___awmod	;wreg free
  3452  000558  5012               	movf	?___awmod^0,w,c
  3453  00055A  0100               	movlb	0	; () banked
  3454  00055C  6FB8               	movwf	main@waveIdx& (0+255),b
  3455  00055E                     
  3456                           ; BSR set to: 0
  3457  00055E  4BBC               	infsnz	main@bufIdx& (0+255),f,b
  3458  000560  2BBD               	incf	(main@bufIdx+1)& (0+255),f,b
  3459  000562                     
  3460                           ; BSR set to: 0
  3461  000562  0E02               	movlw	2
  3462  000564  5DBD               	subwf	(main@bufIdx+1)& (0+255),w,b
  3463  000566  A0D8               	btfss	status,0,c
  3464  000568  EFB8  F002         	goto	u4891
  3465  00056C  EFBA  F002         	goto	u4890
  3466  000570                     u4891:
  3467  000570  EF8E  F002         	goto	l5208
  3468  000574                     u4890:
  3469  000574                     
  3470                           ; BSR set to: 0
  3471                           ;main.c: 239:                     SDCARD_WriteBlock(localAddress, blueBuffer);
  3472  000574  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3473  000578  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3474  00057C  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3475  000580  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3476  000584  0EF5               	movlw	low _blueBuffer
  3477  000586  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3478  000588  0E02               	movlw	high _blueBuffer
  3479  00058A  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3480  00058C  EC75  F012         	call	_SDCARD_WriteBlock	;wreg free
  3481  000590                     l5218:
  3482  000590  ECEC  F013         	call	_SDCARD_PollWriteComplete	;wreg free
  3483  000594  0100               	movlb	0	; () banked
  3484  000596  6FB6               	movwf	main@status& (0+255),b
  3485  000598  29B6               	incf	main@status& (0+255),w,b
  3486  00059A  B4D8               	btfsc	status,2,c
  3487  00059C  EFD2  F002         	goto	u4901
  3488  0005A0  EFD4  F002         	goto	u4900
  3489  0005A4                     u4901:
  3490  0005A4  EFC8  F002         	goto	l5218
  3491  0005A8                     u4900:
  3492  0005A8                     
  3493                           ; BSR set to: 0
  3494                           ;main.c: 241:                     __nop();
  3495  0005A8  F000               	nop	
  3496  0005AA                     
  3497                           ;main.c: 242:                     localAddress += 512;
  3498  0005AA  0E00               	movlw	0
  3499  0005AC  0100               	movlb	0	; () banked
  3500  0005AE  27C0               	addwf	main@localAddress& (0+255),f,b
  3501  0005B0  0E02               	movlw	2
  3502  0005B2  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3503  0005B4  0E00               	movlw	0
  3504  0005B6  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3505  0005B8  0E00               	movlw	0
  3506  0005BA  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3507  0005BC                     l5222:
  3508                           
  3509                           ;main.c: 233:                     while (!(EUSART1_is_rx_ready())){
  3510  0005BC  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3511  0005C0  0900               	iorlw	0
  3512  0005C2  B4D8               	btfsc	status,2,c
  3513  0005C4  EFE6  F002         	goto	u4911
  3514  0005C8  EFE8  F002         	goto	u4910
  3515  0005CC                     u4911:
  3516  0005CC  EF89  F002         	goto	l5202
  3517  0005D0                     u4910:
  3518  0005D0                     
  3519                           ;main.c: 246:                     (void) EUSART1_Read();
  3520  0005D0  ECD8  F014         	call	_EUSART1_Read	;wreg free
  3521  0005D4                     
  3522                           ;main.c: 247:                     printf("Write stopped\r\n");
  3523  0005D4  0E92               	movlw	low STR_46
  3524  0005D6  0100               	movlb	0	; () banked
  3525  0005D8  6F9F               	movwf	printf@fmt& (0+255),b
  3526  0005DA  0EFF               	movlw	high STR_46
  3527  0005DC  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3528  0005DE  ECC4  F014         	call	_printf	;wreg free
  3529                           
  3530                           ;main.c: 248:                     break;
  3531  0005E2  EF78  F000         	goto	l5122
  3532  0005E6                     l5228:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;main.c: 250:                     sampleRate += 160;
  3536  0005E6  0EA0               	movlw	160
  3537  0005E8  27F3               	addwf	_sampleRate& (0+255),f,b
  3538  0005EA  0E00               	movlw	0
  3539  0005EC  23F4               	addwfc	(_sampleRate+1)& (0+255),f,b
  3540  0005EE                     
  3541                           ; BSR set to: 0
  3542                           ;main.c: 251:                     printf("The sampling rate is %u us\r\n", sampleRate/16
      +                          );
  3543  0005EE  0E2A               	movlw	low STR_47
  3544  0005F0  6F9F               	movwf	printf@fmt& (0+255),b
  3545  0005F2  0EFE               	movlw	high STR_47
  3546  0005F4  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3547  0005F6  C0F3  F0B3         	movff	_sampleRate,??_main
  3548  0005FA  C0F4  F0B4         	movff	_sampleRate+1,??_main+1
  3549  0005FE  0E04               	movlw	4
  3550  000600  6FB5               	movwf	(??_main+2)& (0+255),b
  3551  000602                     u4925:
  3552  000602  90D8               	bcf	status,0,c
  3553  000604  33B4               	rrcf	(??_main+1)& (0+255),f,b
  3554  000606  33B3               	rrcf	??_main& (0+255),f,b
  3555  000608  2FB5               	decfsz	(??_main+2)& (0+255),f,b
  3556  00060A  EF01  F003         	goto	u4925
  3557  00060E  C0B3  F0A1         	movff	??_main,?_printf+2
  3558  000612  C0B4  F0A2         	movff	??_main+1,?_printf+3
  3559  000616  ECC4  F014         	call	_printf	;wreg free
  3560                           
  3561                           ;main.c: 252:                     break;
  3562  00061A  EF78  F000         	goto	l5122
  3563  00061E                     l5232:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;main.c: 254:                     sampleRate -= 160;
  3567  00061E  0EA0               	movlw	160
  3568  000620  5FF3               	subwf	_sampleRate& (0+255),f,b
  3569  000622  0E00               	movlw	0
  3570  000624  5BF4               	subwfb	(_sampleRate+1)& (0+255),f,b
  3571                           
  3572                           ;main.c: 255:                     if(sampleRate < 320) sampleRate = 320;
  3573  000626  0E40               	movlw	64
  3574  000628  5DF3               	subwf	_sampleRate& (0+255),w,b
  3575  00062A  0E01               	movlw	1
  3576  00062C  59F4               	subwfb	(_sampleRate+1)& (0+255),w,b
  3577  00062E  B0D8               	btfsc	status,0,c
  3578  000630  EF1C  F003         	goto	u4931
  3579  000634  EF1E  F003         	goto	u4930
  3580  000638                     u4931:
  3581  000638  EF22  F003         	goto	l5236
  3582  00063C                     u4930:
  3583  00063C                     
  3584                           ; BSR set to: 0
  3585  00063C  0E01               	movlw	1
  3586  00063E  6FF4               	movwf	(_sampleRate+1)& (0+255),b
  3587  000640  0E40               	movlw	64
  3588  000642  6FF3               	movwf	_sampleRate& (0+255),b
  3589  000644                     l5236:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;main.c: 256:                     printf("The sampling rate is %u us\r\n", sampleRate/16
      +                          );
  3593  000644  0E2A               	movlw	low STR_47
  3594  000646  6F9F               	movwf	printf@fmt& (0+255),b
  3595  000648  0EFE               	movlw	high STR_47
  3596  00064A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3597  00064C  C0F3  F0B3         	movff	_sampleRate,??_main
  3598  000650  C0F4  F0B4         	movff	_sampleRate+1,??_main+1
  3599  000654  0E04               	movlw	4
  3600  000656  6FB5               	movwf	(??_main+2)& (0+255),b
  3601  000658                     u4945:
  3602  000658  90D8               	bcf	status,0,c
  3603  00065A  33B4               	rrcf	(??_main+1)& (0+255),f,b
  3604  00065C  33B3               	rrcf	??_main& (0+255),f,b
  3605  00065E  2FB5               	decfsz	(??_main+2)& (0+255),f,b
  3606  000660  EF2C  F003         	goto	u4945
  3607  000664  C0B3  F0A1         	movff	??_main,?_printf+2
  3608  000668  C0B4  F0A2         	movff	??_main+1,?_printf+3
  3609  00066C  ECC4  F014         	call	_printf	;wreg free
  3610                           
  3611                           ;main.c: 257:                     break;
  3612  000670  EF78  F000         	goto	l5122
  3613  000674                     l5238:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;main.c: 259:                     printf("Press any key to start recording audio and pre
      +                          ss any key to stop recording\r\n");
  3617  000674  0E5A               	movlw	low STR_49
  3618  000676  6F9F               	movwf	printf@fmt& (0+255),b
  3619  000678  0EFC               	movlw	high STR_49
  3620  00067A  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3621  00067C  ECC4  F014         	call	_printf	;wreg free
  3622  000680                     
  3623                           ;main.c: 261:                     localAddress = sdCardAddress;
  3624  000680  C0C4  F0C0         	movff	main@sdCardAddress,main@localAddress
  3625  000684  C0C5  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3626  000688  C0C6  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3627  00068C  C0C7  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3628  000690                     
  3629                           ;main.c: 262:                     bufferIdx = 0;
  3630  000690  0E00               	movlw	0
  3631  000692  6E45               	movwf	(_bufferIdx+1)^0,c
  3632  000694  0E00               	movlw	0
  3633  000696  6E44               	movwf	_bufferIdx^0,c
  3634  000698                     l5244:
  3635  000698  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3636  00069C  0900               	iorlw	0
  3637  00069E  B4D8               	btfsc	status,2,c
  3638  0006A0  EF54  F003         	goto	u4951
  3639  0006A4  EF56  F003         	goto	u4950
  3640  0006A8                     u4951:
  3641  0006A8  EF4C  F003         	goto	l5244
  3642  0006AC                     u4950:
  3643  0006AC                     
  3644                           ;main.c: 264:                     printf("Recording started");
  3645  0006AC  0E5E               	movlw	low STR_50
  3646  0006AE  0100               	movlb	0	; () banked
  3647  0006B0  6F9F               	movwf	printf@fmt& (0+255),b
  3648  0006B2  0EFF               	movlw	high STR_50
  3649  0006B4  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3650  0006B6  ECC4  F014         	call	_printf	;wreg free
  3651  0006BA                     
  3652                           ;main.c: 266:                     (void) EUSART1_Read();
  3653  0006BA  ECD8  F014         	call	_EUSART1_Read	;wreg free
  3654  0006BE                     
  3655                           ;main.c: 267:                     beginSampling = 1;
  3656  0006BE  0E01               	movlw	1
  3657  0006C0  0100               	movlb	0	; () banked
  3658  0006C2  6FD2               	movwf	_beginSampling& (0+255),b
  3659  0006C4                     l5252:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;main.c: 268:                     timerState = MIC_ACQUIRE_BLUE;
  3663  0006C4  0E01               	movlw	1
  3664  0006C6  6E4C               	movwf	_timerState^0,c
  3665                           
  3666                           ;main.c: 270:                     while(!(EUSART1_is_rx_ready())){
  3667  0006C8  EFAD  F003         	goto	l5274
  3668  0006CC                     l5254:
  3669                           
  3670                           ;main.c: 276:                         if(blueFull == 1){
  3671  0006CC  0100               	movlb	0	; () banked
  3672  0006CE  05D1               	decf	_blueFull& (0+255),w,b
  3673  0006D0  A4D8               	btfss	status,2,c
  3674  0006D2  EF6D  F003         	goto	u4961
  3675  0006D6  EF6F  F003         	goto	u4960
  3676  0006DA                     u4961:
  3677  0006DA  EF8A  F003         	goto	l5264
  3678  0006DE                     u4960:
  3679  0006DE                     
  3680                           ; BSR set to: 0
  3681                           ;main.c: 277:                             SDCARD_WriteBlock(localAddress, blueBuffer);
  3682  0006DE  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3683  0006E2  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3684  0006E6  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3685  0006EA  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3686  0006EE  0EF5               	movlw	low _blueBuffer
  3687  0006F0  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3688  0006F2  0E02               	movlw	high _blueBuffer
  3689  0006F4  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3690  0006F6  EC75  F012         	call	_SDCARD_WriteBlock	;wreg free
  3691  0006FA                     
  3692                           ;main.c: 279:                             localAddress += 512;
  3693  0006FA  0E00               	movlw	0
  3694  0006FC  0100               	movlb	0	; () banked
  3695  0006FE  27C0               	addwf	main@localAddress& (0+255),f,b
  3696  000700  0E02               	movlw	2
  3697  000702  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3698  000704  0E00               	movlw	0
  3699  000706  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3700  000708  0E00               	movlw	0
  3701  00070A  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3702  00070C                     
  3703                           ; BSR set to: 0
  3704                           ;main.c: 280:                             blueFull = 0;
  3705  00070C  0E00               	movlw	0
  3706  00070E  6FD1               	movwf	_blueFull& (0+255),b
  3707  000710                     
  3708                           ; BSR set to: 0
  3709                           ;main.c: 281:                             timerState = MIC_ACQUIRE_RED;
  3710  000710  0E02               	movlw	2
  3711  000712  6E4C               	movwf	_timerState^0,c
  3712  000714                     l5264:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 284:                         if(redFull == 1){
  3716  000714  05D0               	decf	_redFull& (0+255),w,b
  3717  000716  A4D8               	btfss	status,2,c
  3718  000718  EF90  F003         	goto	u4971
  3719  00071C  EF92  F003         	goto	u4970
  3720  000720                     u4971:
  3721  000720  EFAD  F003         	goto	l5274
  3722  000724                     u4970:
  3723  000724                     
  3724                           ; BSR set to: 0
  3725                           ;main.c: 285:                             SDCARD_WriteBlock(localAddress, redBuffer);
  3726  000724  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3727  000728  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3728  00072C  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3729  000730  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3730  000734  0EF5               	movlw	low _redBuffer
  3731  000736  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3732  000738  0E00               	movlw	high _redBuffer
  3733  00073A  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3734  00073C  EC75  F012         	call	_SDCARD_WriteBlock	;wreg free
  3735  000740                     
  3736                           ;main.c: 287:                             localAddress += 512;
  3737  000740  0E00               	movlw	0
  3738  000742  0100               	movlb	0	; () banked
  3739  000744  27C0               	addwf	main@localAddress& (0+255),f,b
  3740  000746  0E02               	movlw	2
  3741  000748  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3742  00074A  0E00               	movlw	0
  3743  00074C  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3744  00074E  0E00               	movlw	0
  3745  000750  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3746  000752                     
  3747                           ; BSR set to: 0
  3748                           ;main.c: 288:                             redFull = 0;
  3749  000752  0E00               	movlw	0
  3750  000754  6FD0               	movwf	_redFull& (0+255),b
  3751  000756  EF62  F003         	goto	l5252
  3752  00075A                     l5274:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 270:                     while(!(EUSART1_is_rx_ready())){
  3756  00075A  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3757  00075E  0900               	iorlw	0
  3758  000760  B4D8               	btfsc	status,2,c
  3759  000762  EFB5  F003         	goto	u4981
  3760  000766  EFB7  F003         	goto	u4980
  3761  00076A                     u4981:
  3762  00076A  EF66  F003         	goto	l5254
  3763  00076E                     u4980:
  3764  00076E                     
  3765                           ;main.c: 293:                     (void) EUSART1_Read();
  3766  00076E  ECD8  F014         	call	_EUSART1_Read	;wreg free
  3767  000772                     
  3768                           ;main.c: 294:                     beginSampling = 0;
  3769  000772  0E00               	movlw	0
  3770  000774  0100               	movlb	0	; () banked
  3771  000776  6FD2               	movwf	_beginSampling& (0+255),b
  3772  000778                     
  3773                           ; BSR set to: 0
  3774                           ;main.c: 295:                     timerState = MIC_IDLE;
  3775  000778  0E00               	movlw	0
  3776  00077A  6E4C               	movwf	_timerState^0,c
  3777  00077C                     
  3778                           ; BSR set to: 0
  3779                           ;main.c: 296:                     printf("Mic sampling complete\r\n");
  3780  00077C  0ECC               	movlw	low STR_51
  3781  00077E  6F9F               	movwf	printf@fmt& (0+255),b
  3782  000780  0EFE               	movlw	high STR_51
  3783  000782  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3784  000784  ECC4  F014         	call	_printf	;wreg free
  3785                           
  3786                           ;main.c: 302:                     break;
  3787  000788  EF78  F000         	goto	l5122
  3788  00078C                     l5284:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 305:                     printf("\r\nYou may terminate spooling at anytime with
      +                           a keypress.\r\nTo spool terminal contents into a file follow these instructions:\r\n\r\
      +                          nRight mouse click on the upper left of the PuTTY window\r\nSelect:     Change settings.
      +                          ..\r\nSelect:     Logging\r\nSelect:     Session logging: All session output\r\nLog file
      +                           name:  Browse and provide a .csv extension to your file name\r\nSelect:     Apply\r\nPr
      +                          ess any key to start");
  3792  00078C  0E73               	movlw	low STR_52
  3793  00078E  6F9F               	movwf	printf@fmt& (0+255),b
  3794  000790  0EF9               	movlw	high STR_52
  3795  000792  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3796  000794  ECC4  F014         	call	_printf	;wreg free
  3797  000798                     
  3798                           ;main.c: 309:                     localAddress = sdCardAddress;
  3799  000798  C0C4  F0C0         	movff	main@sdCardAddress,main@localAddress
  3800  00079C  C0C5  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3801  0007A0  C0C6  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3802  0007A4  C0C7  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3803                           
  3804                           ;main.c: 310:                     while(!(EUSART1_is_rx_ready())){
  3805  0007A8  EF22  F004         	goto	l5308
  3806  0007AC                     l5288:
  3807                           
  3808                           ;main.c: 311:                     SDCARD_ReadBlock(localAddress, blueBuffer);
  3809  0007AC  C0C0  F013         	movff	main@localAddress,SDCARD_ReadBlock@addr
  3810  0007B0  C0C1  F014         	movff	main@localAddress+1,SDCARD_ReadBlock@addr+1
  3811  0007B4  C0C2  F015         	movff	main@localAddress+2,SDCARD_ReadBlock@addr+2
  3812  0007B8  C0C3  F016         	movff	main@localAddress+3,SDCARD_ReadBlock@addr+3
  3813  0007BC  0EF5               	movlw	low _blueBuffer
  3814  0007BE  6E17               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3815  0007C0  0E02               	movlw	high _blueBuffer
  3816  0007C2  6E18               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3817  0007C4  ECDD  F011         	call	_SDCARD_ReadBlock	;wreg free
  3818  0007C8                     
  3819                           ;main.c: 312:                     for(int i = 0;i<512;i++){
  3820  0007C8  0E00               	movlw	0
  3821  0007CA  0100               	movlb	0	; () banked
  3822  0007CC  6FBB               	movwf	(main@i_1142+1)& (0+255),b
  3823  0007CE  0E00               	movlw	0
  3824  0007D0  6FBA               	movwf	main@i_1142& (0+255),b
  3825  0007D2                     l5292:
  3826                           
  3827                           ; BSR set to: 0
  3828  0007D2  BFBB               	btfsc	(main@i_1142+1)& (0+255),7,b
  3829  0007D4  EFF3  F003         	goto	u4991
  3830  0007D8  0E02               	movlw	2
  3831  0007DA  5DBB               	subwf	(main@i_1142+1)& (0+255),w,b
  3832  0007DC  A0D8               	btfss	status,0,c
  3833  0007DE  EFF3  F003         	goto	u4991
  3834  0007E2  EFF5  F003         	goto	u4990
  3835  0007E6                     u4991:
  3836  0007E6  EFF7  F003         	goto	l5296
  3837  0007EA                     u4990:
  3838  0007EA  EF19  F004         	goto	l5306
  3839  0007EE                     l5296:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 313:                         printf("%d\r\n", blueBuffer[i]);
  3843  0007EE  0EE9               	movlw	low STR_53
  3844  0007F0  6F9F               	movwf	printf@fmt& (0+255),b
  3845  0007F2  0EFF               	movlw	high STR_53
  3846  0007F4  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3847  0007F6  0EF5               	movlw	low _blueBuffer
  3848  0007F8  25BA               	addwf	main@i_1142& (0+255),w,b
  3849  0007FA  6ED9               	movwf	fsr2l,c
  3850  0007FC  0E02               	movlw	high _blueBuffer
  3851  0007FE  21BB               	addwfc	(main@i_1142+1)& (0+255),w,b
  3852  000800  6EDA               	movwf	fsr2h,c
  3853  000802  50DF               	movf	indf2,w,c
  3854  000804  6FB3               	movwf	??_main& (0+255),b
  3855  000806  51B3               	movf	??_main& (0+255),w,b
  3856  000808  6FA1               	movwf	(?_printf+2)& (0+255),b
  3857  00080A  6BA2               	clrf	(?_printf+3)& (0+255),b
  3858  00080C  ECC4  F014         	call	_printf	;wreg free
  3859  000810                     
  3860                           ;main.c: 314:                         if((EUSART1_is_rx_ready())){
  3861  000810  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3862  000814  0900               	iorlw	0
  3863  000816  B4D8               	btfsc	status,2,c
  3864  000818  EF10  F004         	goto	u5001
  3865  00081C  EF12  F004         	goto	u5000
  3866  000820                     u5001:
  3867  000820  EF14  F004         	goto	l5302
  3868  000824                     u5000:
  3869  000824  EF19  F004         	goto	l5306
  3870  000828                     l5302:
  3871                           
  3872                           ;main.c: 318:                     }
  3873  000828  0100               	movlb	0	; () banked
  3874  00082A  4BBA               	infsnz	main@i_1142& (0+255),f,b
  3875  00082C  2BBB               	incf	(main@i_1142+1)& (0+255),f,b
  3876  00082E  EFE9  F003         	goto	l5292
  3877  000832                     l5306:
  3878                           
  3879                           ;main.c: 319:                     localAddress += 512;
  3880  000832  0E00               	movlw	0
  3881  000834  0100               	movlb	0	; () banked
  3882  000836  27C0               	addwf	main@localAddress& (0+255),f,b
  3883  000838  0E02               	movlw	2
  3884  00083A  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3885  00083C  0E00               	movlw	0
  3886  00083E  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3887  000840  0E00               	movlw	0
  3888  000842  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3889  000844                     l5308:
  3890                           
  3891                           ;main.c: 310:                     while(!(EUSART1_is_rx_ready())){
  3892  000844  EC4E  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3893  000848  0900               	iorlw	0
  3894  00084A  B4D8               	btfsc	status,2,c
  3895  00084C  EF2A  F004         	goto	u5011
  3896  000850  EF2C  F004         	goto	u5010
  3897  000854                     u5011:
  3898  000854  EFD6  F003         	goto	l5288
  3899  000858                     u5010:
  3900  000858                     
  3901                           ;main.c: 322:                     (void) EUSART1_Read();
  3902  000858  ECD8  F014         	call	_EUSART1_Read	;wreg free
  3903  00085C                     
  3904                           ;main.c: 324:                     printf("Spooled 512 out of the 512 blocks. \r\nTo clos
      +                          e the file follow these instructions: \r\n \r\nRight mouse click on the upper left of th
      +                          e PuTTY window \r\nSelect:     Change settings... \r\nSelect:     Logging \r\nSelect:   
      +                            Session  logging: None \r\nSelect:     Apply");
  3905  00085C  0E02               	movlw	low STR_54
  3906  00085E  0100               	movlb	0	; () banked
  3907  000860  6F9F               	movwf	printf@fmt& (0+255),b
  3908  000862  0EFB               	movlw	high STR_54
  3909  000864  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3910  000866  ECC4  F014         	call	_printf	;wreg free
  3911                           
  3912                           ;main.c: 325:                     break;
  3913  00086A  EF78  F000         	goto	l5122
  3914  00086E                     l5314:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 330:                     printf("Unknown key %c\r\n", cmd);
  3918  00086E  0E70               	movlw	low STR_55
  3919  000870  6F9F               	movwf	printf@fmt& (0+255),b
  3920  000872  0EFF               	movlw	high STR_55
  3921  000874  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  3922  000876  C0B9  F0A1         	movff	main@cmd,?_printf+2
  3923  00087A  6BA2               	clrf	(?_printf+3)& (0+255),b
  3924  00087C  ECC4  F014         	call	_printf	;wreg free
  3925                           
  3926                           ;main.c: 331:                     break;
  3927  000880  EF78  F000         	goto	l5122
  3928  000884                     l5318:
  3929                           
  3930                           ; BSR set to: 0
  3931  000884  51B9               	movf	main@cmd& (0+255),w,b
  3932  000886  6FB3               	movwf	??_main& (0+255),b
  3933  000888  6BB4               	clrf	(??_main+1)& (0+255),b
  3934                           
  3935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3936                           ; Switch size 1, requested type "simple"
  3937                           ; Number of cases is 1, Range of values is 0 to 0
  3938                           ; switch strategies available:
  3939                           ; Name         Instructions Cycles
  3940                           ; simple_byte            4     3 (average)
  3941                           ;	Chosen strategy is simple_byte
  3942  00088A  51B4               	movf	(??_main+1)& (0+255),w,b
  3943  00088C  0A00               	xorlw	0	; case 0
  3944  00088E  B4D8               	btfsc	status,2,c
  3945  000890  EF4C  F004         	goto	l5446
  3946  000894  EF37  F004         	goto	l5314
  3947  000898                     l5446:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 13, Range of values is 43 to 122
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           40    21 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956  000898  51B3               	movf	??_main& (0+255),w,b
  3957  00089A  0A2B               	xorlw	43	; case 43
  3958  00089C  B4D8               	btfsc	status,2,c
  3959  00089E  EFF3  F002         	goto	l5228
  3960  0008A2  0A06               	xorlw	6	; case 45
  3961  0008A4  B4D8               	btfsc	status,2,c
  3962  0008A6  EF0F  F003         	goto	l5232
  3963  0008AA  0A1C               	xorlw	28	; case 49
  3964  0008AC  B4D8               	btfsc	status,2,c
  3965  0008AE  EF77  F002         	goto	l5196
  3966  0008B2  0A0E               	xorlw	14	; case 63
  3967  0008B4  B4D8               	btfsc	status,2,c
  3968  0008B6  EF88  F000         	goto	l5126
  3969  0008BA  0A7E               	xorlw	126	; case 65
  3970  0008BC  B4D8               	btfsc	status,2,c
  3971  0008BE  EF90  F001         	goto	l5160
  3972  0008C2  0A16               	xorlw	22	; case 87
  3973  0008C4  B4D8               	btfsc	status,2,c
  3974  0008C6  EF3A  F003         	goto	l5238
  3975  0008CA  0A0D               	xorlw	13	; case 90
  3976  0008CC  B4D8               	btfsc	status,2,c
  3977  0008CE  EF51  F001         	goto	l5130
  3978  0008D2  0A3B               	xorlw	59	; case 97
  3979  0008D4  B4D8               	btfsc	status,2,c
  3980  0008D6  EF90  F001         	goto	l5160
  3981  0008DA  0A08               	xorlw	8	; case 105
  3982  0008DC  B4D8               	btfsc	status,2,c
  3983  0008DE  EF86  F001         	goto	l5154
  3984  0008E2  0A06               	xorlw	6	; case 111
  3985  0008E4  B4D8               	btfsc	status,2,c
  3986  0008E6  EF49  F001         	goto	l5128
  3987  0008EA  0A1D               	xorlw	29	; case 114
  3988  0008EC  B4D8               	btfsc	status,2,c
  3989  0008EE  EF22  F002         	goto	l373
  3990  0008F2  0A01               	xorlw	1	; case 115
  3991  0008F4  B4D8               	btfsc	status,2,c
  3992  0008F6  EFC6  F003         	goto	l5284
  3993  0008FA  0A09               	xorlw	9	; case 122
  3994  0008FC  B4D8               	btfsc	status,2,c
  3995  0008FE  EF6C  F001         	goto	l5142
  3996  000902  EF37  F004         	goto	l5314
  3997  000906  EF27  F000         	goto	start
  3998  00090A                     __end_of_main:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _hexDumpBuffer *****************
  4002 ;; Defined at:
  4003 ;;		line 179 in file "sdCard.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  sdCardBuffer    2   73[BANK0 ] PTR unsigned char 
  4006 ;;		 -> blueBuffer(512), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  j               2   77[BANK0 ] int 
  4009 ;;  j               2   79[BANK0 ] int 
  4010 ;;  i               2   81[BANK0 ] unsigned short 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;Total ram usage:       10 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   13
  4027 ;; This function calls:
  4028 ;;		_printf
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text1
  4035  001650                     __ptext1:
  4036                           	callstack 0
  4037  001650                     _hexDumpBuffer:
  4038                           	callstack 17
  4039  001650                     
  4040                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  4041  001650  0EF3               	movlw	low STR_59
  4042  001652  0100               	movlb	0	; () banked
  4043  001654  6F9F               	movwf	printf@fmt& (0+255),b
  4044  001656  0EFF               	movlw	high STR_59
  4045  001658  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4046  00165A  ECC4  F014         	call	_printf	;wreg free
  4047  00165E                     
  4048                           ;sdCard.c: 185:                     printf(".");
  4049  00165E  0E00               	movlw	0
  4050  001660  0100               	movlb	0	; () banked
  4051  001662  6FB2               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  4052  001664  0E00               	movlw	0
  4053  001666  6FB1               	movwf	hexDumpBuffer@i& (0+255),b
  4054  001668                     l5046:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;sdCard.c: 186:                 } else {
  4058  001668  51B1               	movf	hexDumpBuffer@i& (0+255),w,b
  4059  00166A  11B2               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4060  00166C  B4D8               	btfsc	status,2,c
  4061  00166E  EF3B  F00B         	goto	u4721
  4062  001672  EF3D  F00B         	goto	u4720
  4063  001676                     u4721:
  4064  001676  EF52  F00B         	goto	l5052
  4065  00167A                     u4720:
  4066  00167A                     
  4067                           ; BSR set to: 0
  4068  00167A  0E07               	movlw	7
  4069  00167C  15B1               	andwf	hexDumpBuffer@i& (0+255),w,b
  4070  00167E  6FAB               	movwf	??_hexDumpBuffer& (0+255),b
  4071  001680  0E00               	movlw	0
  4072  001682  15B2               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4073  001684  6FAC               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4074  001686  51AB               	movf	??_hexDumpBuffer& (0+255),w,b
  4075  001688  11AC               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4076  00168A  A4D8               	btfss	status,2,c
  4077  00168C  EF4A  F00B         	goto	u4731
  4078  001690  EF4C  F00B         	goto	u4730
  4079  001694                     u4731:
  4080  001694  EF52  F00B         	goto	l5052
  4081  001698                     u4730:
  4082  001698                     
  4083                           ; BSR set to: 0
  4084  001698  0E90               	movlw	low (STR_40+15)
  4085  00169A  6F9F               	movwf	printf@fmt& (0+255),b
  4086  00169C  0EFF               	movlw	high (STR_40+15)
  4087  00169E  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4088  0016A0  ECC4  F014         	call	_printf	;wreg free
  4089  0016A4                     l5052:
  4090                           
  4091                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  4092  0016A4  0100               	movlb	0	; () banked
  4093  0016A6  51B1               	movf	hexDumpBuffer@i& (0+255),w,b
  4094  0016A8  11B2               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4095  0016AA  B4D8               	btfsc	status,2,c
  4096  0016AC  EF5A  F00B         	goto	u4741
  4097  0016B0  EF5C  F00B         	goto	u4740
  4098  0016B4                     u4741:
  4099  0016B4  EFB5  F00B         	goto	l489
  4100  0016B8                     u4740:
  4101  0016B8                     
  4102                           ; BSR set to: 0
  4103  0016B8  0E0F               	movlw	15
  4104  0016BA  15B1               	andwf	hexDumpBuffer@i& (0+255),w,b
  4105  0016BC  6FAB               	movwf	??_hexDumpBuffer& (0+255),b
  4106  0016BE  0E00               	movlw	0
  4107  0016C0  15B2               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4108  0016C2  6FAC               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4109  0016C4  51AB               	movf	??_hexDumpBuffer& (0+255),w,b
  4110  0016C6  11AC               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4111  0016C8  A4D8               	btfss	status,2,c
  4112  0016CA  EF69  F00B         	goto	u4751
  4113  0016CE  EF6B  F00B         	goto	u4750
  4114  0016D2                     u4751:
  4115  0016D2  EFB5  F00B         	goto	l489
  4116  0016D6                     u4750:
  4117  0016D6                     
  4118                           ; BSR set to: 0
  4119                           ;sdCard.c: 188:                 }
  4120  0016D6  0E8F               	movlw	low (STR_40+14)
  4121  0016D8  6F9F               	movwf	printf@fmt& (0+255),b
  4122  0016DA  0EFF               	movlw	high (STR_40+14)
  4123  0016DC  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4124  0016DE  ECC4  F014         	call	_printf	;wreg free
  4125  0016E2                     
  4126                           ;sdCard.c: 189:             }
  4127  0016E2  0EF0               	movlw	240
  4128  0016E4  0100               	movlb	0	; () banked
  4129  0016E6  25B1               	addwf	hexDumpBuffer@i& (0+255),w,b
  4130  0016E8  6FAD               	movwf	hexDumpBuffer@j& (0+255),b
  4131  0016EA  0EFF               	movlw	255
  4132  0016EC  21B2               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4133  0016EE  6FAE               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  4134  0016F0  EFA4  F00B         	goto	l5068
  4135  0016F4                     l5060:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;sdCard.c: 190:             printf("\r\n");
  4139  0016F4  51AD               	movf	hexDumpBuffer@j& (0+255),w,b
  4140  0016F6  25A9               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4141  0016F8  6ED9               	movwf	fsr2l,c
  4142  0016FA  51AE               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4143  0016FC  21AA               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4144  0016FE  6EDA               	movwf	fsr2h,c
  4145  001700  0E20               	movlw	32
  4146  001702  60DF               	cpfslt	indf2,c
  4147  001704  EF86  F00B         	goto	u4761
  4148  001708  EF88  F00B         	goto	u4760
  4149  00170C                     u4761:
  4150  00170C  EF90  F00B         	goto	l5064
  4151  001710                     u4760:
  4152  001710                     
  4153                           ; BSR set to: 0
  4154                           ;sdCard.c: 191:         }
  4155  001710  0EFA               	movlw	low STR_62
  4156  001712  6F9F               	movwf	printf@fmt& (0+255),b
  4157  001714  0EFF               	movlw	high STR_62
  4158  001716  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4159  001718  ECC4  F014         	call	_printf	;wreg free
  4160                           
  4161                           ;sdCard.c: 192: 
  4162  00171C  EFA1  F00B         	goto	l5066
  4163  001720                     l5064:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  4167  001720  0EF7               	movlw	low STR_63
  4168  001722  6F9F               	movwf	printf@fmt& (0+255),b
  4169  001724  0EFF               	movlw	high STR_63
  4170  001726  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4171  001728  51AD               	movf	hexDumpBuffer@j& (0+255),w,b
  4172  00172A  25A9               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4173  00172C  6ED9               	movwf	fsr2l,c
  4174  00172E  51AE               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4175  001730  21AA               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4176  001732  6EDA               	movwf	fsr2h,c
  4177  001734  50DF               	movf	indf2,w,c
  4178  001736  6FAB               	movwf	??_hexDumpBuffer& (0+255),b
  4179  001738  51AB               	movf	??_hexDumpBuffer& (0+255),w,b
  4180  00173A  6FA1               	movwf	(?_printf+2)& (0+255),b
  4181  00173C  6BA2               	clrf	(?_printf+3)& (0+255),b
  4182  00173E  ECC4  F014         	call	_printf	;wreg free
  4183  001742                     l5066:
  4184                           
  4185                           ;sdCard.c: 195: 
  4186  001742  0100               	movlb	0	; () banked
  4187  001744  4BAD               	infsnz	hexDumpBuffer@j& (0+255),f,b
  4188  001746  2BAE               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  4189  001748                     l5068:
  4190                           
  4191                           ; BSR set to: 0
  4192  001748  51B1               	movf	hexDumpBuffer@i& (0+255),w,b
  4193  00174A  5DAD               	subwf	hexDumpBuffer@j& (0+255),w,b
  4194  00174C  51B2               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4195  00174E  59AE               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  4196  001750  A0D8               	btfss	status,0,c
  4197  001752  EFAD  F00B         	goto	u4771
  4198  001756  EFAF  F00B         	goto	u4770
  4199  00175A                     u4771:
  4200  00175A  EF7A  F00B         	goto	l5060
  4201  00175E                     u4770:
  4202  00175E                     
  4203                           ; BSR set to: 0
  4204                           ;sdCard.c: 196:     printf("   ");
  4205  00175E  0EAE               	movlw	low (STR_39+12)
  4206  001760  6F9F               	movwf	printf@fmt& (0+255),b
  4207  001762  0EFF               	movlw	high (STR_39+12)
  4208  001764  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4209  001766  ECC4  F014         	call	_printf	;wreg free
  4210  00176A                     l489:
  4211                           
  4212                           ;sdCard.c: 199:             printf(".");
  4213  00176A  0EE3               	movlw	low STR_65
  4214  00176C  0100               	movlb	0	; () banked
  4215  00176E  6F9F               	movwf	printf@fmt& (0+255),b
  4216  001770  0EFF               	movlw	high STR_65
  4217  001772  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4218  001774  51B1               	movf	hexDumpBuffer@i& (0+255),w,b
  4219  001776  25A9               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4220  001778  6ED9               	movwf	fsr2l,c
  4221  00177A  51B2               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4222  00177C  21AA               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4223  00177E  6EDA               	movwf	fsr2h,c
  4224  001780  50DF               	movf	indf2,w,c
  4225  001782  6FAB               	movwf	??_hexDumpBuffer& (0+255),b
  4226  001784  51AB               	movf	??_hexDumpBuffer& (0+255),w,b
  4227  001786  6FA1               	movwf	(?_printf+2)& (0+255),b
  4228  001788  6BA2               	clrf	(?_printf+3)& (0+255),b
  4229  00178A  ECC4  F014         	call	_printf	;wreg free
  4230  00178E                     
  4231                           ;sdCard.c: 200:         } else {
  4232  00178E  0100               	movlb	0	; () banked
  4233  001790  4BB1               	infsnz	hexDumpBuffer@i& (0+255),f,b
  4234  001792  2BB2               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  4235  001794                     
  4236                           ; BSR set to: 0
  4237  001794  0E02               	movlw	2
  4238  001796  5DB2               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4239  001798  A0D8               	btfss	status,0,c
  4240  00179A  EFD1  F00B         	goto	u4781
  4241  00179E  EFD3  F00B         	goto	u4780
  4242  0017A2                     u4781:
  4243  0017A2  EF34  F00B         	goto	l5046
  4244  0017A6                     u4780:
  4245  0017A6                     
  4246                           ; BSR set to: 0
  4247                           ;sdCard.c: 202:         }
  4248  0017A6  0E8E               	movlw	low (STR_40+13)
  4249  0017A8  6F9F               	movwf	printf@fmt& (0+255),b
  4250  0017AA  0EFF               	movlw	high (STR_40+13)
  4251  0017AC  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4252  0017AE  ECC4  F014         	call	_printf	;wreg free
  4253  0017B2                     
  4254                           ;sdCard.c: 203:     }
  4255  0017B2  0EF0               	movlw	240
  4256  0017B4  0100               	movlb	0	; () banked
  4257  0017B6  25B1               	addwf	hexDumpBuffer@i& (0+255),w,b
  4258  0017B8  6FAF               	movwf	hexDumpBuffer@j_1202& (0+255),b
  4259  0017BA  0EFF               	movlw	255
  4260  0017BC  21B2               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4261  0017BE  6FB0               	movwf	(hexDumpBuffer@j_1202+1)& (0+255),b
  4262  0017C0  EF0C  F00C         	goto	l5088
  4263  0017C4                     l5080:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;sdCard.c: 204:     printf("\r\n");
  4267  0017C4  51AF               	movf	hexDumpBuffer@j_1202& (0+255),w,b
  4268  0017C6  25A9               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4269  0017C8  6ED9               	movwf	fsr2l,c
  4270  0017CA  51B0               	movf	(hexDumpBuffer@j_1202+1)& (0+255),w,b
  4271  0017CC  21AA               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4272  0017CE  6EDA               	movwf	fsr2h,c
  4273  0017D0  0E20               	movlw	32
  4274  0017D2  60DF               	cpfslt	indf2,c
  4275  0017D4  EFEE  F00B         	goto	u4791
  4276  0017D8  EFF0  F00B         	goto	u4790
  4277  0017DC                     u4791:
  4278  0017DC  EFF8  F00B         	goto	l5084
  4279  0017E0                     u4790:
  4280  0017E0                     
  4281                           ; BSR set to: 0
  4282                           ;sdCard.c: 205: }
  4283  0017E0  0EFA               	movlw	low STR_62
  4284  0017E2  6F9F               	movwf	printf@fmt& (0+255),b
  4285  0017E4  0EFF               	movlw	high STR_62
  4286  0017E6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4287  0017E8  ECC4  F014         	call	_printf	;wreg free
  4288  0017EC  EF09  F00C         	goto	l5086
  4289  0017F0                     l5084:
  4290                           
  4291                           ; BSR set to: 0
  4292  0017F0  0EF7               	movlw	low STR_63
  4293  0017F2  6F9F               	movwf	printf@fmt& (0+255),b
  4294  0017F4  0EFF               	movlw	high STR_63
  4295  0017F6  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4296  0017F8  51AF               	movf	hexDumpBuffer@j_1202& (0+255),w,b
  4297  0017FA  25A9               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4298  0017FC  6ED9               	movwf	fsr2l,c
  4299  0017FE  51B0               	movf	(hexDumpBuffer@j_1202+1)& (0+255),w,b
  4300  001800  21AA               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4301  001802  6EDA               	movwf	fsr2h,c
  4302  001804  50DF               	movf	indf2,w,c
  4303  001806  6FAB               	movwf	??_hexDumpBuffer& (0+255),b
  4304  001808  51AB               	movf	??_hexDumpBuffer& (0+255),w,b
  4305  00180A  6FA1               	movwf	(?_printf+2)& (0+255),b
  4306  00180C  6BA2               	clrf	(?_printf+3)& (0+255),b
  4307  00180E  ECC4  F014         	call	_printf	;wreg free
  4308  001812                     l5086:
  4309  001812  0100               	movlb	0	; () banked
  4310  001814  4BAF               	infsnz	hexDumpBuffer@j_1202& (0+255),f,b
  4311  001816  2BB0               	incf	(hexDumpBuffer@j_1202+1)& (0+255),f,b
  4312  001818                     l5088:
  4313                           
  4314                           ; BSR set to: 0
  4315  001818  51B1               	movf	hexDumpBuffer@i& (0+255),w,b
  4316  00181A  5DAF               	subwf	hexDumpBuffer@j_1202& (0+255),w,b
  4317  00181C  51B2               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4318  00181E  59B0               	subwfb	(hexDumpBuffer@j_1202+1)& (0+255),w,b
  4319  001820  A0D8               	btfss	status,0,c
  4320  001822  EF15  F00C         	goto	u4801
  4321  001826  EF17  F00C         	goto	u4800
  4322  00182A                     u4801:
  4323  00182A  EFE2  F00B         	goto	l5080
  4324  00182E                     u4800:
  4325  00182E                     
  4326                           ; BSR set to: 0
  4327  00182E  0EAE               	movlw	low (STR_39+12)
  4328  001830  6F9F               	movwf	printf@fmt& (0+255),b
  4329  001832  0EFF               	movlw	high (STR_39+12)
  4330  001834  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  4331  001836  ECC4  F014         	call	_printf	;wreg free
  4332  00183A  0012               	return		;funcret
  4333  00183C                     __end_of_hexDumpBuffer:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function ___awmod *****************
  4337 ;; Defined at:
  4338 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  dividend        2   17[COMRAM] int 
  4341 ;;  divisor         2   19[COMRAM] int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  sign            1   22[COMRAM] unsigned char 
  4344 ;;  counter         1   21[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2   17[COMRAM] int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:        6 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    4
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text2
  4369  00225E                     __ptext2:
  4370                           	callstack 0
  4371  00225E                     ___awmod:
  4372                           	callstack 26
  4373  00225E  0E00               	movlw	0
  4374  002260  6E17               	movwf	___awmod@sign^0,c
  4375  002262  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
  4376  002264  EF38  F011         	goto	u3230
  4377  002268  EF36  F011         	goto	u3231
  4378  00226C                     u3231:
  4379  00226C  EF3E  F011         	goto	l3948
  4380  002270                     u3230:
  4381  002270  6C12               	negf	___awmod@dividend^0,c
  4382  002272  1E13               	comf	(___awmod@dividend+1)^0,f,c
  4383  002274  B0D8               	btfsc	status,0,c
  4384  002276  2A13               	incf	(___awmod@dividend+1)^0,f,c
  4385  002278  0E01               	movlw	1
  4386  00227A  6E17               	movwf	___awmod@sign^0,c
  4387  00227C                     l3948:
  4388  00227C  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
  4389  00227E  EF45  F011         	goto	u3240
  4390  002282  EF43  F011         	goto	u3241
  4391  002286                     u3241:
  4392  002286  EF49  F011         	goto	l3952
  4393  00228A                     u3240:
  4394  00228A  6C14               	negf	___awmod@divisor^0,c
  4395  00228C  1E15               	comf	(___awmod@divisor+1)^0,f,c
  4396  00228E  B0D8               	btfsc	status,0,c
  4397  002290  2A15               	incf	(___awmod@divisor+1)^0,f,c
  4398  002292                     l3952:
  4399  002292  5014               	movf	___awmod@divisor^0,w,c
  4400  002294  1015               	iorwf	(___awmod@divisor+1)^0,w,c
  4401  002296  B4D8               	btfsc	status,2,c
  4402  002298  EF50  F011         	goto	u3251
  4403  00229C  EF52  F011         	goto	u3250
  4404  0022A0                     u3251:
  4405  0022A0  EF76  F011         	goto	l3968
  4406  0022A4                     u3250:
  4407  0022A4  0E01               	movlw	1
  4408  0022A6  6E16               	movwf	___awmod@counter^0,c
  4409  0022A8  EF5A  F011         	goto	l3958
  4410  0022AC                     l3956:
  4411  0022AC  90D8               	bcf	status,0,c
  4412  0022AE  3614               	rlcf	___awmod@divisor^0,f,c
  4413  0022B0  3615               	rlcf	(___awmod@divisor+1)^0,f,c
  4414  0022B2  2A16               	incf	___awmod@counter^0,f,c
  4415  0022B4                     l3958:
  4416  0022B4  AE15               	btfss	(___awmod@divisor+1)^0,7,c
  4417  0022B6  EF5F  F011         	goto	u3261
  4418  0022BA  EF61  F011         	goto	u3260
  4419  0022BE                     u3261:
  4420  0022BE  EF56  F011         	goto	l3956
  4421  0022C2                     u3260:
  4422  0022C2                     l3960:
  4423  0022C2  5014               	movf	___awmod@divisor^0,w,c
  4424  0022C4  5C12               	subwf	___awmod@dividend^0,w,c
  4425  0022C6  5015               	movf	(___awmod@divisor+1)^0,w,c
  4426  0022C8  5813               	subwfb	(___awmod@dividend+1)^0,w,c
  4427  0022CA  A0D8               	btfss	status,0,c
  4428  0022CC  EF6A  F011         	goto	u3271
  4429  0022D0  EF6C  F011         	goto	u3270
  4430  0022D4                     u3271:
  4431  0022D4  EF70  F011         	goto	l3964
  4432  0022D8                     u3270:
  4433  0022D8  5014               	movf	___awmod@divisor^0,w,c
  4434  0022DA  5E12               	subwf	___awmod@dividend^0,f,c
  4435  0022DC  5015               	movf	(___awmod@divisor+1)^0,w,c
  4436  0022DE  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
  4437  0022E0                     l3964:
  4438  0022E0  90D8               	bcf	status,0,c
  4439  0022E2  3215               	rrcf	(___awmod@divisor+1)^0,f,c
  4440  0022E4  3214               	rrcf	___awmod@divisor^0,f,c
  4441  0022E6  2E16               	decfsz	___awmod@counter^0,f,c
  4442  0022E8  EF61  F011         	goto	l3960
  4443  0022EC                     l3968:
  4444  0022EC  5017               	movf	___awmod@sign^0,w,c
  4445  0022EE  B4D8               	btfsc	status,2,c
  4446  0022F0  EF7C  F011         	goto	u3281
  4447  0022F4  EF7E  F011         	goto	u3280
  4448  0022F8                     u3281:
  4449  0022F8  EF82  F011         	goto	l3972
  4450  0022FC                     u3280:
  4451  0022FC  6C12               	negf	___awmod@dividend^0,c
  4452  0022FE  1E13               	comf	(___awmod@dividend+1)^0,f,c
  4453  002300  B0D8               	btfsc	status,0,c
  4454  002302  2A13               	incf	(___awmod@dividend+1)^0,f,c
  4455  002304                     l3972:
  4456  002304  C012  F012         	movff	___awmod@dividend,?___awmod
  4457  002308  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  4458  00230C  0012               	return		;funcret
  4459  00230E                     __end_of___awmod:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _TMR0_WriteTimer *****************
  4463 ;; Defined at:
  4464 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  timerVal        2   17[COMRAM] unsigned short 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    4
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text3
  4493  002AC2                     __ptext3:
  4494                           	callstack 0
  4495  002AC2                     _TMR0_WriteTimer:
  4496                           	callstack 26
  4497  002AC2                     
  4498                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4499  002AC2  5013               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4500  002AC4  6ED7               	movwf	215,c	;volatile
  4501  002AC6                     
  4502                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4503  002AC6  C012  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4504  002ACA  0012               	return		;funcret
  4505  002ACC                     __end_of_TMR0_WriteTimer:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _SYSTEM_Initialize *****************
  4509 ;; Defined at:
  4510 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    6
  4531 ;; This function calls:
  4532 ;;		_ADC_Initialize
  4533 ;;		_EUSART1_Initialize
  4534 ;;		_INTERRUPT_Initialize
  4535 ;;		_OSCILLATOR_Initialize
  4536 ;;		_PIN_MANAGER_Initialize
  4537 ;;		_SPI2_Initialize
  4538 ;;		_TMR0_Initialize
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text4
  4545  0029FE                     __ptext4:
  4546                           	callstack 0
  4547  0029FE                     _SYSTEM_Initialize:
  4548                           	callstack 24
  4549  0029FE                     
  4550                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4551  0029FE  EC84  F015         	call	_INTERRUPT_Initialize	;wreg free
  4552  002A02                     
  4553                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  4554  002A02  EC58  F015         	call	_SPI2_Initialize	;wreg free
  4555  002A06                     
  4556                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  4557  002A06  ECAD  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  4558  002A0A                     
  4559                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  4560  002A0A  EC1D  F015         	call	_OSCILLATOR_Initialize	;wreg free
  4561  002A0E                     
  4562                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4563  002A0E  EC5C  F014         	call	_TMR0_Initialize	;wreg free
  4564  002A12                     
  4565                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  4566  002A12  EC38  F015         	call	_ADC_Initialize	;wreg free
  4567  002A16                     
  4568                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  4569  002A16  ECAF  F013         	call	_EUSART1_Initialize	;wreg free
  4570  002A1A  0012               	return		;funcret
  4571  002A1C                     __end_of_SYSTEM_Initialize:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _TMR0_Initialize *****************
  4575 ;; Defined at:
  4576 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        2 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    5
  4597 ;; This function calls:
  4598 ;;		_TMR0_SetInterruptHandler
  4599 ;; This function is called by:
  4600 ;;		_SYSTEM_Initialize
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text5
  4605  0028B8                     __ptext5:
  4606                           	callstack 0
  4607  0028B8                     _TMR0_Initialize:
  4608                           	callstack 24
  4609  0028B8                     
  4610                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4611  0028B8  9CD5               	bcf	213,6,c	;volatile
  4612  0028BA                     
  4613                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4614  0028BA  0E00               	movlw	0
  4615  0028BC  6ED7               	movwf	215,c	;volatile
  4616                           
  4617                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4618  0028BE  0E00               	movlw	0
  4619  0028C0  6ED6               	movwf	214,c	;volatile
  4620  0028C2                     
  4621                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4622  0028C2  50D6               	movf	214,w,c	;volatile
  4623  0028C4  CFD7 F014          	movff	4055,??_TMR0_Initialize	;volatile
  4624  0028C8  6A15               	clrf	(??_TMR0_Initialize+1)^0,c
  4625  0028CA  C014  F015         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4626  0028CE  6A14               	clrf	??_TMR0_Initialize^0,c
  4627  0028D0  1014               	iorwf	??_TMR0_Initialize^0,w,c
  4628  0028D2  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  4629  0028D4  5015               	movf	(??_TMR0_Initialize+1)^0,w,c
  4630  0028D6  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4631  0028D8                     
  4632                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4633  0028D8  94F2               	bcf	242,2,c	;volatile
  4634  0028DA                     
  4635                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4636  0028DA  8AF2               	bsf	242,5,c	;volatile
  4637  0028DC                     
  4638                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4639  0028DC  0E12               	movlw	low _TMR0_DefaultInterruptHandler
  4640  0028DE  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4641  0028E0  0E2B               	movlw	high _TMR0_DefaultInterruptHandler
  4642  0028E2  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4643  0028E4  EC66  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  4644  0028E8                     
  4645                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4646  0028E8  0E9F               	movlw	159
  4647  0028EA  6ED5               	movwf	213,c	;volatile
  4648  0028EC  0012               	return		;funcret
  4649  0028EE                     __end_of_TMR0_Initialize:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _TMR0_SetInterruptHandler *****************
  4653 ;; Defined at:
  4654 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  InterruptHan    2   17[COMRAM] PTR FTN()void 
  4657 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    4
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_TMR0_Initialize
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text6
  4685  002ACC                     __ptext6:
  4686                           	callstack 0
  4687  002ACC                     _TMR0_SetInterruptHandler:
  4688                           	callstack 26
  4689  002ACC                     
  4690                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4691  002ACC  C012  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4692  002AD0  C013  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4693  002AD4  0012               	return		;funcret
  4694  002AD6                     __end_of_TMR0_SetInterruptHandler:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _SPI2_Initialize *****************
  4698 ;; Defined at:
  4699 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    4
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_SYSTEM_Initialize
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text7
  4728  002AB0                     __ptext7:
  4729                           	callstack 0
  4730  002AB0                     _SPI2_Initialize:
  4731                           	callstack 25
  4732  002AB0                     
  4733                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  4734  002AB0  0E40               	movlw	64
  4735  002AB2  6E6D               	movwf	109,c	;volatile
  4736                           
  4737                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  4738  002AB4  0E01               	movlw	1
  4739  002AB6  6E6C               	movwf	108,c	;volatile
  4740                           
  4741                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  4742  002AB8  0E01               	movlw	1
  4743  002ABA  6E6E               	movwf	110,c	;volatile
  4744  002ABC                     
  4745                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  4746  002ABC  9293               	bcf	147,1,c	;volatile
  4747  002ABE                     
  4748                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  4749  002ABE  9A6C               	bcf	108,5,c	;volatile
  4750  002AC0  0012               	return		;funcret
  4751  002AC2                     __end_of_SPI2_Initialize:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _PIN_MANAGER_Initialize *****************
  4755 ;; Defined at:
  4756 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    4
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_SYSTEM_Initialize
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text8
  4785  00295A                     __ptext8:
  4786                           	callstack 0
  4787  00295A                     _PIN_MANAGER_Initialize:
  4788                           	callstack 25
  4789  00295A                     
  4790                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4791  00295A  0E00               	movlw	0
  4792  00295C  6E89               	movwf	137,c	;volatile
  4793                           
  4794                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4795  00295E  0E00               	movlw	0
  4796  002960  6E8A               	movwf	138,c	;volatile
  4797                           
  4798                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4799  002962  0E00               	movlw	0
  4800  002964  6E8B               	movwf	139,c	;volatile
  4801                           
  4802                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4803  002966  0EBF               	movlw	191
  4804  002968  6E92               	movwf	146,c	;volatile
  4805                           
  4806                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  4807  00296A  0EE5               	movlw	229
  4808  00296C  6E93               	movwf	147,c	;volatile
  4809                           
  4810                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  4811  00296E  0E8F               	movlw	143
  4812  002970  6E94               	movwf	148,c	;volatile
  4813                           
  4814                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0C;
  4815  002972  0E0C               	movlw	12
  4816  002974  010F               	movlb	15	; () banked
  4817  002976  6F3A               	movwf	58,b	;volatile
  4818                           
  4819                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  4820  002978  0E31               	movlw	49
  4821  00297A  6F39               	movwf	57,b	;volatile
  4822                           
  4823                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4824  00297C  0E2F               	movlw	47
  4825  00297E  6F38               	movwf	56,b	;volatile
  4826                           
  4827                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4828  002980  0E00               	movlw	0
  4829  002982  6E61               	movwf	97,c	;volatile
  4830  002984                     
  4831                           ; BSR set to: 15
  4832                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4833  002984  8EF1               	bsf	241,7,c	;volatile
  4834  002986                     
  4835                           ; BSR set to: 15
  4836  002986  0012               	return		;funcret
  4837  002988                     __end_of_PIN_MANAGER_Initialize:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _OSCILLATOR_Initialize *****************
  4841 ;; Defined at:
  4842 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    4
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_SYSTEM_Initialize
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text9
  4871  002A3A                     __ptext9:
  4872                           	callstack 0
  4873  002A3A                     _OSCILLATOR_Initialize:
  4874                           	callstack 25
  4875  002A3A                     
  4876                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  4877  002A3A  0E70               	movlw	112
  4878  002A3C  6ED3               	movwf	211,c	;volatile
  4879                           
  4880                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  4881  002A3E  0E04               	movlw	4
  4882  002A40  6ED2               	movwf	210,c	;volatile
  4883                           
  4884                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  4885  002A42  0E40               	movlw	64
  4886  002A44  6E9B               	movwf	155,c	;volatile
  4887  002A46                     l259:
  4888                           
  4889                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  4890  002A46  AED2               	btfss	4050,7,c	;volatile
  4891  002A48  EF28  F015         	goto	u2931
  4892  002A4C  EF2A  F015         	goto	u2930
  4893  002A50                     u2931:
  4894  002A50  EF23  F015         	goto	l259
  4895  002A54                     u2930:
  4896  002A54  0012               	return		;funcret
  4897  002A56                     __end_of_OSCILLATOR_Initialize:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function _INTERRUPT_Initialize *****************
  4901 ;; Defined at:
  4902 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		None
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    4
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_SYSTEM_Initialize
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text10
  4931  002B08                     __ptext10:
  4932                           	callstack 0
  4933  002B08                     _INTERRUPT_Initialize:
  4934                           	callstack 25
  4935  002B08                     
  4936                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4937  002B08  9ED0               	bcf	208,7,c	;volatile
  4938  002B0A  0012               	return		;funcret
  4939  002B0C                     __end_of_INTERRUPT_Initialize:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _EUSART1_Initialize *****************
  4943 ;; Defined at:
  4944 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    5
  4965 ;; This function calls:
  4966 ;;		_EUSART1_SetErrorHandler
  4967 ;;		_EUSART1_SetFramingErrorHandler
  4968 ;;		_EUSART1_SetOverrunErrorHandler
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text11
  4975  00275E                     __ptext11:
  4976                           	callstack 0
  4977  00275E                     _EUSART1_Initialize:
  4978                           	callstack 24
  4979  00275E                     
  4980                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4981  00275E  0E08               	movlw	8
  4982  002760  6EB8               	movwf	184,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4985  002762  0E90               	movlw	144
  4986  002764  6EAB               	movwf	171,c	;volatile
  4987                           
  4988                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4989  002766  0E24               	movlw	36
  4990  002768  6EAC               	movwf	172,c	;volatile
  4991                           
  4992                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4993  00276A  0E82               	movlw	130
  4994  00276C  6EAF               	movwf	175,c	;volatile
  4995                           
  4996                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4997  00276E  0E06               	movlw	6
  4998  002770  6EB0               	movwf	176,c	;volatile
  4999  002772                     
  5000                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5001  002772  0E00               	movlw	0
  5002  002774  6E12               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5003  002776  0E00               	movlw	0
  5004  002778  6E13               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5005  00277A  EC70  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5006  00277E                     
  5007                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5008  00277E  0E00               	movlw	0
  5009  002780  6E12               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5010  002782  0E00               	movlw	0
  5011  002784  6E13               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5012  002786  EC6B  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5013  00278A                     
  5014                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5015  00278A  0E00               	movlw	0
  5016  00278C  6E12               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5017  00278E  0E00               	movlw	0
  5018  002790  6E13               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5019  002792  EC75  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  5020  002796                     
  5021                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5022  002796  0E00               	movlw	0
  5023  002798  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  5024  00279A  0012               	return		;funcret
  5025  00279C                     __end_of_EUSART1_Initialize:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5029 ;; Defined at:
  5030 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5033 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;Total ram usage:        2 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_EUSART1_Initialize
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text12
  5060  002AD6                     __ptext12:
  5061                           	callstack 0
  5062  002AD6                     _EUSART1_SetOverrunErrorHandler:
  5063                           	callstack 24
  5064  002AD6                     
  5065                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5066  002AD6  C012  F0CE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5067  002ADA  C013  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5068  002ADE  0012               	return		;funcret
  5069  002AE0                     __end_of_EUSART1_SetOverrunErrorHandler:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5073 ;; Defined at:
  5074 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5077 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:        2 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    4
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_EUSART1_Initialize
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text13
  5104  002AE0                     __ptext13:
  5105                           	callstack 0
  5106  002AE0                     _EUSART1_SetFramingErrorHandler:
  5107                           	callstack 24
  5108  002AE0                     
  5109                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5110  002AE0  C012  F046         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5111  002AE4  C013  F047         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5112  002AE8  0012               	return		;funcret
  5113  002AEA                     __end_of_EUSART1_SetFramingErrorHandler:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _EUSART1_SetErrorHandler *****************
  5117 ;; Defined at:
  5118 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5121 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;Total ram usage:        2 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    4
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_EUSART1_Initialize
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text14
  5148  002AEA                     __ptext14:
  5149                           	callstack 0
  5150  002AEA                     _EUSART1_SetErrorHandler:
  5151                           	callstack 24
  5152  002AEA                     
  5153                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5154  002AEA  C012  F0CC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5155  002AEE  C013  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5156  002AF2  0012               	return		;funcret
  5157  002AF4                     __end_of_EUSART1_SetErrorHandler:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _ADC_Initialize *****************
  5161 ;; Defined at:
  5162 ;;		line 62 in file "mcc_generated_files/adc.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    4
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_SYSTEM_Initialize
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text15
  5191  002A70                     __ptext15:
  5192                           	callstack 0
  5193  002A70                     _ADC_Initialize:
  5194                           	callstack 25
  5195  002A70                     
  5196                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5197  002A70  0E00               	movlw	0
  5198  002A72  6EC1               	movwf	193,c	;volatile
  5199                           
  5200                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5201  002A74  0E26               	movlw	38
  5202  002A76  6EC0               	movwf	192,c	;volatile
  5203                           
  5204                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5205  002A78  0E00               	movlw	0
  5206  002A7A  6EC3               	movwf	195,c	;volatile
  5207                           
  5208                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5209  002A7C  0E00               	movlw	0
  5210  002A7E  6EC4               	movwf	196,c	;volatile
  5211                           
  5212                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5213  002A80  0E11               	movlw	17
  5214  002A82  6EC2               	movwf	194,c	;volatile
  5215  002A84  0012               	return		;funcret
  5216  002A86                     __end_of_ADC_Initialize:
  5217                           	callstack 0
  5218                           
  5219 ;; *************** function _SPI2_Open *****************
  5220 ;; Defined at:
  5221 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  spi2UniqueCo    1    wreg     enum E355
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  spi2UniqueCo    1   18[COMRAM] enum E355
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      _Bool 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;Total ram usage:        2 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    4
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text16
  5250  00230E                     __ptext16:
  5251                           	callstack 0
  5252  00230E                     _SPI2_Open:
  5253                           	callstack 26
  5254                           
  5255                           ;incstack = 0
  5256                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5257  00230E  6E13               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5258  002310                     
  5259                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  5260  002310  BA6C               	btfsc	108,5,c	;volatile
  5261  002312  EF8D  F011         	goto	u2961
  5262  002316  EF8F  F011         	goto	u2960
  5263  00231A                     u2961:
  5264  00231A  EFDC  F011         	goto	l25
  5265  00231E                     u2960:
  5266  00231E                     
  5267                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  5268  00231E  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5269  002320  0D04               	mullw	4
  5270  002322  0E01               	movlw	1
  5271  002324  26F3               	addwf	243,f,c
  5272  002326  0E00               	movlw	0
  5273  002328  22F4               	addwfc	244,f,c
  5274  00232A  0E6F               	movlw	low _spi2_configuration
  5275  00232C  24F3               	addwf	243,w,c
  5276  00232E  6EF6               	movwf	tblptrl,c
  5277  002330  0EF9               	movlw	high _spi2_configuration
  5278  002332  20F4               	addwfc	244,w,c
  5279  002334  6EF7               	movwf	tblptrh,c
  5280  002336                     	if	1	;There are 3 active tblptr bytes
  5281  002336  6AF8               	clrf	tblptru,c
  5282  002338  0E00               	movlw	low (__mediumconst shr (0+16))
  5283  00233A  22F8               	addwfc	tblptru,f,c
  5284  00233C                     	endif
  5285  00233C  0008               	tblrd		*
  5286  00233E  CFF5 FF6D          	movff	tablat,3949	;volatile
  5287                           
  5288                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  5289  002342  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5290  002344  0D04               	mullw	4
  5291  002346  0E6F               	movlw	low _spi2_configuration
  5292  002348  24F3               	addwf	243,w,c
  5293  00234A  6EF6               	movwf	tblptrl,c
  5294  00234C  0EF9               	movlw	high _spi2_configuration
  5295  00234E  20F4               	addwfc	244,w,c
  5296  002350  6EF7               	movwf	tblptrh,c
  5297  002352                     	if	1	;There are 3 active tblptr bytes
  5298  002352  6AF8               	clrf	tblptru,c
  5299  002354  0E00               	movlw	low (__mediumconst shr (0+16))
  5300  002356  22F8               	addwfc	tblptru,f,c
  5301  002358                     	endif
  5302  002358  0008               	tblrd		*
  5303  00235A  CFF5 FF6C          	movff	tablat,3948	;volatile
  5304  00235E                     
  5305                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  5306  00235E  0E00               	movlw	0
  5307  002360  6E6B               	movwf	107,c	;volatile
  5308  002362                     
  5309                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  5310  002362  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5311  002364  0D04               	mullw	4
  5312  002366  0E02               	movlw	2
  5313  002368  26F3               	addwf	243,f,c
  5314  00236A  0E00               	movlw	0
  5315  00236C  22F4               	addwfc	244,f,c
  5316  00236E  0E6F               	movlw	low _spi2_configuration
  5317  002370  24F3               	addwf	243,w,c
  5318  002372  6EF6               	movwf	tblptrl,c
  5319  002374  0EF9               	movlw	high _spi2_configuration
  5320  002376  20F4               	addwfc	244,w,c
  5321  002378  6EF7               	movwf	tblptrh,c
  5322  00237A                     	if	1	;There are 3 active tblptr bytes
  5323  00237A  6AF8               	clrf	tblptru,c
  5324  00237C  0E00               	movlw	low (__mediumconst shr (0+16))
  5325  00237E  22F8               	addwfc	tblptru,f,c
  5326  002380                     	endif
  5327  002380  0008               	tblrd		*
  5328  002382  CFF5 FF6E          	movff	tablat,3950	;volatile
  5329  002386                     
  5330                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  5331  002386  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5332  002388  0D04               	mullw	4
  5333  00238A  0E03               	movlw	3
  5334  00238C  26F3               	addwf	243,f,c
  5335  00238E  0E00               	movlw	0
  5336  002390  22F4               	addwfc	244,f,c
  5337  002392  0E6F               	movlw	low _spi2_configuration
  5338  002394  24F3               	addwf	243,w,c
  5339  002396  6EF6               	movwf	tblptrl,c
  5340  002398  0EF9               	movlw	high _spi2_configuration
  5341  00239A  20F4               	addwfc	244,w,c
  5342  00239C  6EF7               	movwf	tblptrh,c
  5343  00239E                     	if	1	;There are 3 active tblptr bytes
  5344  00239E  6AF8               	clrf	tblptru,c
  5345  0023A0  0E00               	movlw	low (__mediumconst shr (0+16))
  5346  0023A2  22F8               	addwfc	tblptru,f,c
  5347  0023A4                     	endif
  5348  0023A4  0008               	tblrd		*
  5349  0023A6  CFF5 F012          	movff	tablat,??_SPI2_Open
  5350  0023AA  4612               	rlncf	??_SPI2_Open^0,f,c
  5351  0023AC  5093               	movf	147,w,c	;volatile
  5352  0023AE  1812               	xorwf	??_SPI2_Open^0,w,c
  5353  0023B0  0BFD               	andlw	-3
  5354  0023B2  1812               	xorwf	??_SPI2_Open^0,w,c
  5355  0023B4  6E93               	movwf	147,c	;volatile
  5356  0023B6                     
  5357                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  5358  0023B6  8A6C               	bsf	108,5,c	;volatile
  5359  0023B8                     l25:
  5360  0023B8  0012               	return		;funcret
  5361  0023BA                     __end_of_SPI2_Open:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _SPI2_Close *****************
  5365 ;; Defined at:
  5366 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		None
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    4
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text17
  5395  002B0C                     __ptext17:
  5396                           	callstack 0
  5397  002B0C                     _SPI2_Close:
  5398                           	callstack 26
  5399  002B0C                     
  5400                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  5401  002B0C  9A6C               	bcf	108,5,c	;volatile
  5402  002B0E  0012               	return		;funcret
  5403  002B10                     __end_of_SPI2_Close:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _SDCARD_WriteBlock *****************
  5407 ;; Defined at:
  5408 ;;		line 48 in file "sdCard.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  addr            4   18[COMRAM] unsigned long 
  5411 ;;  sdCardBuffer    2   22[COMRAM] PTR unsigned char 
  5412 ;;		 -> redBuffer(512), blueBuffer(512), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  i               2   24[COMRAM] unsigned short 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5424 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;Total ram usage:        8 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    5
  5431 ;; This function calls:
  5432 ;;		_SPI2_ExchangeByte
  5433 ;; This function is called by:
  5434 ;;		_main
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text18
  5439  0024EA                     __ptext18:
  5440                           	callstack 0
  5441  0024EA                     _SDCARD_WriteBlock:
  5442                           	callstack 25
  5443  0024EA  988A               	bcf	138,4,c	;volatile
  5444  0024EC                     
  5445                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  5446  0024EC  0EFF               	movlw	255
  5447  0024EE  EC2B  F015         	call	_SPI2_ExchangeByte
  5448  0024F2                     
  5449                           ;sdCard.c: 55: 
  5450  0024F2  0E58               	movlw	88
  5451  0024F4  EC2B  F015         	call	_SPI2_ExchangeByte
  5452  0024F8                     
  5453                           ;sdCard.c: 56: 
  5454  0024F8  5016               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5455  0024FA  EC2B  F015         	call	_SPI2_ExchangeByte
  5456  0024FE                     
  5457                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5458  0024FE  5015               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5459  002500  EC2B  F015         	call	_SPI2_ExchangeByte
  5460  002504                     
  5461                           ;sdCard.c: 58: 
  5462  002504  5014               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5463  002506  EC2B  F015         	call	_SPI2_ExchangeByte
  5464  00250A                     
  5465                           ;sdCard.c: 59: 
  5466  00250A  5013               	movf	SDCARD_WriteBlock@addr^0,w,c
  5467  00250C  EC2B  F015         	call	_SPI2_ExchangeByte
  5468  002510                     
  5469                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  5470  002510  0EFF               	movlw	255
  5471  002512  EC2B  F015         	call	_SPI2_ExchangeByte
  5472  002516                     l3906:
  5473  002516  0EFF               	movlw	255
  5474  002518  EC2B  F015         	call	_SPI2_ExchangeByte
  5475  00251C  0AFF               	xorlw	255
  5476  00251E  B4D8               	btfsc	status,2,c
  5477  002520  EF94  F012         	goto	u3201
  5478  002524  EF96  F012         	goto	u3200
  5479  002528                     u3201:
  5480  002528  EF8B  F012         	goto	l3906
  5481  00252C                     u3200:
  5482  00252C                     
  5483                           ;sdCard.c: 66: 
  5484  00252C  0EFF               	movlw	255
  5485  00252E  EC2B  F015         	call	_SPI2_ExchangeByte
  5486                           
  5487                           ;sdCard.c: 67: 
  5488  002532  0EFF               	movlw	255
  5489  002534  EC2B  F015         	call	_SPI2_ExchangeByte
  5490                           
  5491                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  5492  002538  0EFF               	movlw	255
  5493  00253A  EC2B  F015         	call	_SPI2_ExchangeByte
  5494                           
  5495                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  5496  00253E  0EFE               	movlw	254
  5497  002540  EC2B  F015         	call	_SPI2_ExchangeByte
  5498  002544                     
  5499                           ;sdCard.c: 74: 
  5500  002544  0E00               	movlw	0
  5501  002546  6E1A               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  5502  002548  0E00               	movlw	0
  5503  00254A  6E19               	movwf	SDCARD_WriteBlock@i^0,c
  5504  00254C                     l3916:
  5505                           
  5506                           ;sdCard.c: 75: 
  5507  00254C  5019               	movf	SDCARD_WriteBlock@i^0,w,c
  5508  00254E  2417               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  5509  002550  6ED9               	movwf	fsr2l,c
  5510  002552  501A               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  5511  002554  2018               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  5512  002556  6EDA               	movwf	fsr2h,c
  5513  002558  50DF               	movf	indf2,w,c
  5514  00255A  EC2B  F015         	call	_SPI2_ExchangeByte
  5515  00255E  4A19               	infsnz	SDCARD_WriteBlock@i^0,f,c
  5516  002560  2A1A               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  5517  002562  0E02               	movlw	2
  5518  002564  5C1A               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  5519  002566  A0D8               	btfss	status,0,c
  5520  002568  EFB8  F012         	goto	u3211
  5521  00256C  EFBA  F012         	goto	u3210
  5522  002570                     u3211:
  5523  002570  EFA6  F012         	goto	l3916
  5524  002574                     u3210:
  5525  002574  888A               	bsf	138,4,c	;volatile
  5526  002576  0012               	return		;funcret
  5527  002578                     __end_of_SDCARD_WriteBlock:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function _SDCARD_ReadBlock *****************
  5531 ;; Defined at:
  5532 ;;		line 13 in file "sdCard.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  addr            4   18[COMRAM] unsigned long 
  5535 ;;  sdCardBuffer    2   22[COMRAM] PTR unsigned char 
  5536 ;;		 -> blueBuffer(512), 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  i               2   24[COMRAM] unsigned short 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:        8 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    5
  5555 ;; This function calls:
  5556 ;;		_SPI2_ExchangeByte
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text19
  5563  0023BA                     __ptext19:
  5564                           	callstack 0
  5565  0023BA                     _SDCARD_ReadBlock:
  5566                           	callstack 25
  5567  0023BA  988A               	bcf	138,4,c	;volatile
  5568  0023BC                     
  5569                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  5570  0023BC  0EFF               	movlw	255
  5571  0023BE  EC2B  F015         	call	_SPI2_ExchangeByte
  5572  0023C2                     
  5573                           ;sdCard.c: 19: 
  5574  0023C2  0E51               	movlw	81
  5575  0023C4  EC2B  F015         	call	_SPI2_ExchangeByte
  5576  0023C8                     
  5577                           ;sdCard.c: 20: 
  5578  0023C8  5016               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  5579  0023CA  EC2B  F015         	call	_SPI2_ExchangeByte
  5580  0023CE                     
  5581                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5582  0023CE  5015               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  5583  0023D0  EC2B  F015         	call	_SPI2_ExchangeByte
  5584  0023D4                     
  5585                           ;sdCard.c: 22: 
  5586  0023D4  5014               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  5587  0023D6  EC2B  F015         	call	_SPI2_ExchangeByte
  5588  0023DA                     
  5589                           ;sdCard.c: 23: 
  5590  0023DA  5013               	movf	SDCARD_ReadBlock@addr^0,w,c
  5591  0023DC  EC2B  F015         	call	_SPI2_ExchangeByte
  5592  0023E0                     
  5593                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5594  0023E0  0EFF               	movlw	255
  5595  0023E2  EC2B  F015         	call	_SPI2_ExchangeByte
  5596  0023E6                     l3814:
  5597  0023E6  0EFF               	movlw	255
  5598  0023E8  EC2B  F015         	call	_SPI2_ExchangeByte
  5599  0023EC  0AFF               	xorlw	255
  5600  0023EE  B4D8               	btfsc	status,2,c
  5601  0023F0  EFFC  F011         	goto	u3081
  5602  0023F4  EFFE  F011         	goto	u3080
  5603  0023F8                     u3081:
  5604  0023F8  EFF3  F011         	goto	l3814
  5605  0023FC                     u3080:
  5606  0023FC                     l3816:
  5607  0023FC  0EFF               	movlw	255
  5608  0023FE  EC2B  F015         	call	_SPI2_ExchangeByte
  5609  002402  0AFF               	xorlw	255
  5610  002404  B4D8               	btfsc	status,2,c
  5611  002406  EF07  F012         	goto	u3091
  5612  00240A  EF09  F012         	goto	u3090
  5613  00240E                     u3091:
  5614  00240E  EFFE  F011         	goto	l3816
  5615  002412                     u3090:
  5616  002412                     
  5617                           ;sdCard.c: 33: 
  5618  002412  0E00               	movlw	0
  5619  002414  6E1A               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  5620  002416  0E00               	movlw	0
  5621  002418  6E19               	movwf	SDCARD_ReadBlock@i^0,c
  5622  00241A                     l3824:
  5623                           
  5624                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  5625  00241A  5019               	movf	SDCARD_ReadBlock@i^0,w,c
  5626  00241C  2417               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  5627  00241E  6ED9               	movwf	fsr2l,c
  5628  002420  501A               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  5629  002422  2018               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  5630  002424  6EDA               	movwf	fsr2h,c
  5631  002426  0EFF               	movlw	255
  5632  002428  EC2B  F015         	call	_SPI2_ExchangeByte
  5633  00242C  6EDF               	movwf	indf2,c
  5634  00242E  4A19               	infsnz	SDCARD_ReadBlock@i^0,f,c
  5635  002430  2A1A               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  5636  002432  0E02               	movlw	2
  5637  002434  5C1A               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  5638  002436  A0D8               	btfss	status,0,c
  5639  002438  EF20  F012         	goto	u3101
  5640  00243C  EF22  F012         	goto	u3100
  5641  002440                     u3101:
  5642  002440  EF0D  F012         	goto	l3824
  5643  002444                     u3100:
  5644  002444                     
  5645                           ;sdCard.c: 37: 
  5646  002444  0EFF               	movlw	255
  5647  002446  EC2B  F015         	call	_SPI2_ExchangeByte
  5648                           
  5649                           ;sdCard.c: 38: 
  5650  00244A  0EFF               	movlw	255
  5651  00244C  EC2B  F015         	call	_SPI2_ExchangeByte
  5652  002450  888A               	bsf	138,4,c	;volatile
  5653  002452  0012               	return		;funcret
  5654  002454                     __end_of_SDCARD_ReadBlock:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _SDCARD_PollWriteComplete *****************
  5658 ;; Defined at:
  5659 ;;		line 86 in file "sdCard.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  status          1   18[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      unsigned char 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        1 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    5
  5680 ;; This function calls:
  5681 ;;		_SPI2_ExchangeByte
  5682 ;; This function is called by:
  5683 ;;		_main
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text20
  5688  0027D8                     __ptext20:
  5689                           	callstack 0
  5690  0027D8                     _SDCARD_PollWriteComplete:
  5691                           	callstack 25
  5692  0027D8  988A               	bcf	138,4,c	;volatile
  5693  0027DA                     
  5694                           ;sdCard.c: 91: 
  5695  0027DA  0E0D               	movlw	13
  5696  0027DC  EC2B  F015         	call	_SPI2_ExchangeByte
  5697  0027E0  6E13               	movwf	SDCARD_PollWriteComplete@status^0,c
  5698  0027E2  888A               	bsf	138,4,c	;volatile
  5699  0027E4                     
  5700                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  5701  0027E4  2813               	incf	SDCARD_PollWriteComplete@status^0,w,c
  5702  0027E6  A4D8               	btfss	status,2,c
  5703  0027E8  EFF8  F013         	goto	u3221
  5704  0027EC  EFFA  F013         	goto	u3220
  5705  0027F0                     u3221:
  5706  0027F0  EFFD  F013         	goto	l3934
  5707  0027F4                     u3220:
  5708  0027F4                     
  5709                           ;sdCard.c: 95:         return (status);
  5710  0027F4  0EFF               	movlw	255
  5711  0027F6  EF07  F014         	goto	l458
  5712  0027FA                     l3934:
  5713                           
  5714                           ;sdCard.c: 98: }
  5715  0027FA  0EFF               	movlw	255
  5716  0027FC  EC2B  F015         	call	_SPI2_ExchangeByte
  5717                           
  5718                           ;sdCard.c: 99: 
  5719  002800  0EFF               	movlw	255
  5720  002802  EC2B  F015         	call	_SPI2_ExchangeByte
  5721                           
  5722                           ;sdCard.c: 100: 
  5723  002806  0EFF               	movlw	255
  5724  002808  EC2B  F015         	call	_SPI2_ExchangeByte
  5725  00280C                     
  5726                           ;sdCard.c: 101: 
  5727  00280C  5013               	movf	SDCARD_PollWriteComplete@status^0,w,c
  5728  00280E                     l458:
  5729  00280E  0012               	return		;funcret
  5730  002810                     __end_of_SDCARD_PollWriteComplete:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function _SDCARD_Initialize *****************
  5734 ;; Defined at:
  5735 ;;		line 111 in file "sdCard.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  verbose         1    wreg     unsigned char 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  verbose         1   75[BANK0 ] unsigned char 
  5740 ;;  i               2   73[BANK0 ] int 
  5741 ;;  response        1   76[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;Total ram usage:        4 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:   13
  5758 ;; This function calls:
  5759 ;;		_SPI2_ExchangeByte
  5760 ;;		_printf
  5761 ;; This function is called by:
  5762 ;;		_main
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text21
  5767  001B5E                     __ptext21:
  5768                           	callstack 0
  5769  001B5E                     _SDCARD_Initialize:
  5770                           	callstack 17
  5771                           
  5772                           ;incstack = 0
  5773                           ;SDCARD_Initialize@verbose stored from wreg
  5774  001B5E  0100               	movlb	0	; () banked
  5775  001B60  6FAB               	movwf	SDCARD_Initialize@verbose& (0+255),b
  5776  001B62                     
  5777                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  5778  001B62  0E00               	movlw	0
  5779  001B64  0100               	movlb	0	; () banked
  5780  001B66  6FAA               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  5781  001B68  0E00               	movlw	0
  5782  001B6A  6FA9               	movwf	SDCARD_Initialize@i& (0+255),b
  5783  001B6C                     l4968:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  5787  001B6C  0EFF               	movlw	255
  5788  001B6E  EC2B  F015         	call	_SPI2_ExchangeByte
  5789  001B72                     
  5790                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  5791  001B72  0100               	movlb	0	; () banked
  5792  001B74  4BA9               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  5793  001B76  2BAA               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  5794  001B78                     
  5795                           ; BSR set to: 0
  5796  001B78  BFAA               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  5797  001B7A  EFC8  F00D         	goto	u4661
  5798  001B7E  51AA               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  5799  001B80  E109               	bnz	u4660
  5800  001B82  0E0A               	movlw	10
  5801  001B84  5DA9               	subwf	SDCARD_Initialize@i& (0+255),w,b
  5802  001B86  A0D8               	btfss	status,0,c
  5803  001B88  EFC8  F00D         	goto	u4661
  5804  001B8C  EFCA  F00D         	goto	u4660
  5805  001B90                     u4661:
  5806  001B90  EFB6  F00D         	goto	l4968
  5807  001B94                     u4660:
  5808  001B94                     
  5809                           ; BSR set to: 0
  5810  001B94  988A               	bcf	138,4,c	;volatile
  5811  001B96                     
  5812                           ; BSR set to: 0
  5813                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  5814  001B96  0EFF               	movlw	255
  5815  001B98  EC2B  F015         	call	_SPI2_ExchangeByte
  5816                           
  5817                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  5818  001B9C  0E40               	movlw	64
  5819  001B9E  EC2B  F015         	call	_SPI2_ExchangeByte
  5820                           
  5821                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  5822  001BA2  0E00               	movlw	0
  5823  001BA4  EC2B  F015         	call	_SPI2_ExchangeByte
  5824                           
  5825                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  5826  001BA8  0E00               	movlw	0
  5827  001BAA  EC2B  F015         	call	_SPI2_ExchangeByte
  5828                           
  5829                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  5830  001BAE  0E00               	movlw	0
  5831  001BB0  EC2B  F015         	call	_SPI2_ExchangeByte
  5832                           
  5833                           ;sdCard.c: 130: 
  5834  001BB4  0E00               	movlw	0
  5835  001BB6  EC2B  F015         	call	_SPI2_ExchangeByte
  5836                           
  5837                           ;sdCard.c: 131: 
  5838  001BBA  0E95               	movlw	149
  5839  001BBC  EC2B  F015         	call	_SPI2_ExchangeByte
  5840                           
  5841                           ;sdCard.c: 132: 
  5842  001BC0  0EFF               	movlw	255
  5843  001BC2  EC2B  F015         	call	_SPI2_ExchangeByte
  5844                           
  5845                           ;sdCard.c: 133:     do {
  5846  001BC6  0EFF               	movlw	255
  5847  001BC8  EC2B  F015         	call	_SPI2_ExchangeByte
  5848  001BCC  0100               	movlb	0	; () banked
  5849  001BCE  6FAC               	movwf	SDCARD_Initialize@response& (0+255),b
  5850  001BD0                     
  5851                           ; BSR set to: 0
  5852  001BD0  888A               	bsf	138,4,c	;volatile
  5853  001BD2                     
  5854                           ; BSR set to: 0
  5855                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  5856  001BD2  05AB               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5857  001BD4  A4D8               	btfss	status,2,c
  5858  001BD6  EFEF  F00D         	goto	u4671
  5859  001BDA  EFF1  F00D         	goto	u4670
  5860  001BDE                     u4671:
  5861  001BDE  EFFA  F00D         	goto	l4982
  5862  001BE2                     u4670:
  5863  001BE2                     
  5864                           ; BSR set to: 0
  5865  001BE2  0E7F               	movlw	low STR_56
  5866  001BE4  6F9F               	movwf	printf@fmt& (0+255),b
  5867  001BE6  0EFE               	movlw	high STR_56
  5868  001BE8  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  5869  001BEA  C0AC  F0A1         	movff	SDCARD_Initialize@response,?_printf+2
  5870  001BEE  6BA2               	clrf	(?_printf+3)& (0+255),b
  5871  001BF0  ECC4  F014         	call	_printf	;wreg free
  5872  001BF4                     l4982:
  5873  001BF4  988A               	bcf	138,4,c	;volatile
  5874  001BF6                     
  5875                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  5876  001BF6  0EFF               	movlw	255
  5877  001BF8  EC2B  F015         	call	_SPI2_ExchangeByte
  5878  001BFC                     
  5879                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  5880  001BFC  0E41               	movlw	65
  5881  001BFE  EC2B  F015         	call	_SPI2_ExchangeByte
  5882  001C02                     
  5883                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  5884  001C02  0E00               	movlw	0
  5885  001C04  EC2B  F015         	call	_SPI2_ExchangeByte
  5886  001C08                     
  5887                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  5888  001C08  0E00               	movlw	0
  5889  001C0A  EC2B  F015         	call	_SPI2_ExchangeByte
  5890  001C0E                     
  5891                           ;sdCard.c: 145:     } while (response != 0);
  5892  001C0E  0E00               	movlw	0
  5893  001C10  EC2B  F015         	call	_SPI2_ExchangeByte
  5894  001C14                     
  5895                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  5896  001C14  0E00               	movlw	0
  5897  001C16  EC2B  F015         	call	_SPI2_ExchangeByte
  5898  001C1A                     
  5899                           ;sdCard.c: 147: 
  5900  001C1A  0EFF               	movlw	255
  5901  001C1C  EC2B  F015         	call	_SPI2_ExchangeByte
  5902  001C20                     
  5903                           ;sdCard.c: 148: 
  5904  001C20  0EFF               	movlw	255
  5905  001C22  EC2B  F015         	call	_SPI2_ExchangeByte
  5906  001C26                     
  5907                           ;sdCard.c: 149: 
  5908  001C26  0EFF               	movlw	255
  5909  001C28  EC2B  F015         	call	_SPI2_ExchangeByte
  5910  001C2C  0100               	movlb	0	; () banked
  5911  001C2E  6FAC               	movwf	SDCARD_Initialize@response& (0+255),b
  5912  001C30                     
  5913                           ; BSR set to: 0
  5914  001C30  888A               	bsf	138,4,c	;volatile
  5915  001C32                     
  5916                           ; BSR set to: 0
  5917                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  5918  001C32  51AC               	movf	SDCARD_Initialize@response& (0+255),w,b
  5919  001C34  A4D8               	btfss	status,2,c
  5920  001C36  EF1F  F00E         	goto	u4681
  5921  001C3A  EF21  F00E         	goto	u4680
  5922  001C3E                     u4681:
  5923  001C3E  EFFA  F00D         	goto	l4982
  5924  001C42                     u4680:
  5925  001C42                     
  5926                           ; BSR set to: 0
  5927                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  5928  001C42  05AB               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5929  001C44  A4D8               	btfss	status,2,c
  5930  001C46  EF27  F00E         	goto	u4691
  5931  001C4A  EF29  F00E         	goto	u4690
  5932  001C4E                     u4691:
  5933  001C4E  EF32  F00E         	goto	l5010
  5934  001C52                     u4690:
  5935  001C52                     
  5936                           ; BSR set to: 0
  5937  001C52  0E9A               	movlw	low STR_57
  5938  001C54  6F9F               	movwf	printf@fmt& (0+255),b
  5939  001C56  0EFE               	movlw	high STR_57
  5940  001C58  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  5941  001C5A  C0AC  F0A1         	movff	SDCARD_Initialize@response,?_printf+2
  5942  001C5E  6BA2               	clrf	(?_printf+3)& (0+255),b
  5943  001C60  ECC4  F014         	call	_printf	;wreg free
  5944  001C64                     l5010:
  5945  001C64  988A               	bcf	138,4,c	;volatile
  5946  001C66                     
  5947                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  5948  001C66  0EFF               	movlw	255
  5949  001C68  EC2B  F015         	call	_SPI2_ExchangeByte
  5950  001C6C                     
  5951                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  5952  001C6C  0E50               	movlw	80
  5953  001C6E  EC2B  F015         	call	_SPI2_ExchangeByte
  5954  001C72                     
  5955                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  5956  001C72  0E00               	movlw	0
  5957  001C74  EC2B  F015         	call	_SPI2_ExchangeByte
  5958  001C78                     
  5959                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  5960  001C78  0E00               	movlw	0
  5961  001C7A  EC2B  F015         	call	_SPI2_ExchangeByte
  5962  001C7E                     
  5963                           ;sdCard.c: 162:     } while (response == 0xFF);
  5964  001C7E  0E02               	movlw	2
  5965  001C80  EC2B  F015         	call	_SPI2_ExchangeByte
  5966  001C84                     
  5967                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  5968  001C84  0E00               	movlw	0
  5969  001C86  EC2B  F015         	call	_SPI2_ExchangeByte
  5970  001C8A                     
  5971                           ;sdCard.c: 164: 
  5972  001C8A  0EFF               	movlw	255
  5973  001C8C  EC2B  F015         	call	_SPI2_ExchangeByte
  5974  001C90                     
  5975                           ;sdCard.c: 165: }
  5976  001C90  0EFF               	movlw	255
  5977  001C92  EC2B  F015         	call	_SPI2_ExchangeByte
  5978  001C96                     
  5979                           ;sdCard.c: 166: 
  5980  001C96  0EFF               	movlw	255
  5981  001C98  EC2B  F015         	call	_SPI2_ExchangeByte
  5982  001C9C  0100               	movlb	0	; () banked
  5983  001C9E  6FAC               	movwf	SDCARD_Initialize@response& (0+255),b
  5984  001CA0                     
  5985                           ; BSR set to: 0
  5986  001CA0  888A               	bsf	138,4,c	;volatile
  5987  001CA2                     
  5988                           ; BSR set to: 0
  5989                           ;sdCard.c: 168: 
  5990  001CA2  29AC               	incf	SDCARD_Initialize@response& (0+255),w,b
  5991  001CA4  B4D8               	btfsc	status,2,c
  5992  001CA6  EF57  F00E         	goto	u4701
  5993  001CAA  EF59  F00E         	goto	u4700
  5994  001CAE                     u4701:
  5995  001CAE  EF32  F00E         	goto	l5010
  5996  001CB2                     u4700:
  5997  001CB2                     
  5998                           ; BSR set to: 0
  5999                           ;sdCard.c: 169: 
  6000  001CB2  05AB               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6001  001CB4  A4D8               	btfss	status,2,c
  6002  001CB6  EF5F  F00E         	goto	u4711
  6003  001CBA  EF61  F00E         	goto	u4710
  6004  001CBE                     u4711:
  6005  001CBE  EF6A  F00E         	goto	l483
  6006  001CC2                     u4710:
  6007  001CC2                     
  6008                           ; BSR set to: 0
  6009  001CC2  0E47               	movlw	low STR_58
  6010  001CC4  6F9F               	movwf	printf@fmt& (0+255),b
  6011  001CC6  0EFE               	movlw	high STR_58
  6012  001CC8  6FA0               	movwf	(printf@fmt+1)& (0+255),b
  6013  001CCA  C0AC  F0A1         	movff	SDCARD_Initialize@response,?_printf+2
  6014  001CCE  6BA2               	clrf	(?_printf+3)& (0+255),b
  6015  001CD0  ECC4  F014         	call	_printf	;wreg free
  6016  001CD4                     l483:
  6017  001CD4  0012               	return		;funcret
  6018  001CD6                     __end_of_SDCARD_Initialize:
  6019                           	callstack 0
  6020                           
  6021 ;; *************** function _printf *****************
  6022 ;; Defined at:
  6023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  6026 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  6027 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  6028 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  6029 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(255), 
  6030 ;;		 -> STR_53(5), STR_52(399), STR_51(24), STR_50(18), 
  6031 ;;		 -> STR_49(77), STR_48(29), STR_47(29), STR_46(16), 
  6032 ;;		 -> STR_45(89), STR_44(3), STR_43(5), STR_42(2), 
  6033 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6034 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6035 ;;		 -> STR_33(20), STR_32(28), STR_31(20), STR_30(30), 
  6036 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6037 ;;		 -> STR_25(32), STR_24(44), STR_23(50), STR_22(52), 
  6038 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6039 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6040 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6041 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6042 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  6043 ;;		 -> STR_1(11), 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  ap              2   71[BANK0 ] PTR void [1]
  6046 ;;		 -> ?_printf(2), 
  6047 ;;  ret             2    0        int 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  2   63[BANK0 ] int 
  6050 ;; Registers used:
  6051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;Total ram usage:       10 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:   12
  6064 ;; This function calls:
  6065 ;;		_vfprintf
  6066 ;; This function is called by:
  6067 ;;		_main
  6068 ;;		_SDCARD_Initialize
  6069 ;;		_hexDumpBuffer
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text22
  6074  002988                     __ptext22:
  6075                           	callstack 0
  6076  002988                     _printf:
  6077                           	callstack 18
  6078  002988  0EA1               	movlw	low (?_printf+2)
  6079  00298A  0100               	movlb	0	; () banked
  6080  00298C  6FA7               	movwf	printf@ap& (0+255),b
  6081  00298E  0E00               	movlw	high (?_printf+2)
  6082  002990  6FA8               	movwf	(printf@ap+1)& (0+255),b
  6083  002992                     
  6084                           ; BSR set to: 0
  6085  002992  0E00               	movlw	0
  6086  002994  6F97               	movwf	vfprintf@fp& (0+255),b
  6087  002996  0E00               	movlw	0
  6088  002998  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  6089  00299A  C09F  F099         	movff	printf@fmt,vfprintf@fmt
  6090  00299E  C0A0  F09A         	movff	printf@fmt+1,vfprintf@fmt+1
  6091  0029A2  0EA7               	movlw	low printf@ap
  6092  0029A4  6F9B               	movwf	vfprintf@ap& (0+255),b
  6093  0029A6  0E00               	movlw	high printf@ap
  6094  0029A8  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  6095  0029AA  ECBC  F012         	call	_vfprintf	;wreg free
  6096  0029AE  0012               	return		;funcret
  6097  0029B0                     __end_of_printf:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function _vfprintf *****************
  6101 ;; Defined at:
  6102 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6105 ;;		 -> NULL(0), 
  6106 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  6107 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  6108 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  6109 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  6110 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(255), 
  6111 ;;		 -> STR_53(5), STR_52(399), STR_51(24), STR_50(18), 
  6112 ;;		 -> STR_49(77), STR_48(29), STR_47(29), STR_46(16), 
  6113 ;;		 -> STR_45(89), STR_44(3), STR_43(5), STR_42(2), 
  6114 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6115 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6116 ;;		 -> STR_33(20), STR_32(28), STR_31(20), STR_30(30), 
  6117 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6118 ;;		 -> STR_25(32), STR_24(44), STR_23(50), STR_22(52), 
  6119 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6120 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6121 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6122 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6123 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  6124 ;;		 -> STR_1(11), 
  6125 ;;  ap              2   59[BANK0 ] PTR PTR void 
  6126 ;;		 -> printf@ap(2), 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  cfmt            2   61[BANK0 ] PTR unsigned char 
  6129 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  6130 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  6131 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  6132 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(255), 
  6133 ;;		 -> STR_53(5), STR_52(399), STR_51(24), STR_50(18), 
  6134 ;;		 -> STR_49(77), STR_48(29), STR_47(29), STR_46(16), 
  6135 ;;		 -> STR_45(89), STR_44(3), STR_43(5), STR_42(2), 
  6136 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6137 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6138 ;;		 -> STR_33(20), STR_32(28), STR_31(20), STR_30(30), 
  6139 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6140 ;;		 -> STR_25(32), STR_24(44), STR_23(50), STR_22(52), 
  6141 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6142 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6143 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6144 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6145 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  6146 ;;		 -> STR_1(11), 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  2   55[BANK0 ] int 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6156 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;Total ram usage:        8 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   11
  6163 ;; This function calls:
  6164 ;;		_vfpfcnvrt
  6165 ;; This function is called by:
  6166 ;;		_printf
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text23
  6171  002578                     __ptext23:
  6172                           	callstack 0
  6173  002578                     _vfprintf:
  6174                           	callstack 18
  6175  002578                     
  6176                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6177  002578  C099  F09D         	movff	vfprintf@fmt,vfprintf@cfmt
  6178  00257C  C09A  F09E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6179  002580                     
  6180                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6181  002580  0E00               	movlw	0
  6182  002582  0100               	movlb	0	; () banked
  6183  002584  6FC9               	movwf	(_nout+1)& (0+255),b
  6184  002586  0E00               	movlw	0
  6185  002588  6FC8               	movwf	_nout& (0+255),b
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6188  00258A  EFDA  F012         	goto	l4954
  6189  00258E                     l4952:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6193  00258E  C097  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6194  002592  C098  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6195  002596  0E9D               	movlw	low vfprintf@cfmt
  6196  002598  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  6197  00259A  0E00               	movlw	high vfprintf@cfmt
  6198  00259C  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6199  00259E  C09B  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  6200  0025A2  C09C  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6201  0025A6  EC85  F004         	call	_vfpfcnvrt	;wreg free
  6202  0025AA  0100               	movlb	0	; () banked
  6203  0025AC  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  6204  0025AE  27C8               	addwf	_nout& (0+255),f,b
  6205  0025B0  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6206  0025B2  23C9               	addwfc	(_nout+1)& (0+255),f,b
  6207  0025B4                     l4954:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6211  0025B4  C09D  FFF6         	movff	vfprintf@cfmt,tblptrl
  6212  0025B8  C09E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6213  0025BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6214  0025BC  6AF8               	clrf	tblptru,c
  6215  0025BE                     	endif
  6216  0025BE                     	if	0	;tblptru may be non-zero
  6217  0025BE                     	endif
  6218  0025BE  0008               	tblrd		*
  6219  0025C0  50F5               	movf	tablat,w,c
  6220  0025C2  0900               	iorlw	0
  6221  0025C4  A4D8               	btfss	status,2,c
  6222  0025C6  EFE7  F012         	goto	u4651
  6223  0025CA  EFE9  F012         	goto	u4650
  6224  0025CE                     u4651:
  6225  0025CE  EFC7  F012         	goto	l4952
  6226  0025D2                     u4650:
  6227  0025D2                     
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6230  0025D2  C0C8  F097         	movff	_nout,?_vfprintf
  6231  0025D6  C0C9  F098         	movff	_nout+1,?_vfprintf+1
  6232  0025DA                     
  6233                           ; BSR set to: 0
  6234  0025DA  0012               	return		;funcret
  6235  0025DC                     __end_of_vfprintf:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _vfpfcnvrt *****************
  6239 ;; Defined at:
  6240 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6243 ;;		 -> NULL(0), 
  6244 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  6245 ;;		 -> vfprintf@cfmt(2), 
  6246 ;;  ap              2   32[BANK0 ] PTR PTR void 
  6247 ;;		 -> printf@ap(2), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  llu             8   46[BANK0 ] unsigned long long 
  6250 ;;  ll              8   34[BANK0 ] long long 
  6251 ;;  f               4    0        long long 
  6252 ;;  vp              3    0        PTR void 
  6253 ;;  ct              3    0        unsigned char [3]
  6254 ;;  cp              3    0        PTR unsigned char 
  6255 ;;  done            2   42[BANK0 ] int 
  6256 ;;  i               2    0        int 
  6257 ;;  c               1   54[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2   28[BANK0 ] int 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         4      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:       31 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:   10
  6274 ;; This function calls:
  6275 ;;		_atoi
  6276 ;;		_ctoa
  6277 ;;		_dtoa
  6278 ;;		_fputc
  6279 ;;		_isdigit
  6280 ;;		_utoa
  6281 ;;		_xtoa
  6282 ;; This function is called by:
  6283 ;;		_vfprintf
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text24
  6288  00090A                     __ptext24:
  6289                           	callstack 0
  6290  00090A                     _vfpfcnvrt:
  6291                           	callstack 18
  6292  00090A                     
  6293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6294  00090A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6295  00090E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6296  000912  CFDE FFF6          	movff	postinc2,tblptrl
  6297  000916  CFDD FFF7          	movff	postdec2,tblptrh
  6298  00091A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6299  00091A  6AF8               	clrf	tblptru,c
  6300  00091C                     	endif
  6301  00091C                     	if	0	;tblptru may be non-zero
  6302  00091C                     	endif
  6303  00091C  0008               	tblrd		*
  6304  00091E  50F5               	movf	tablat,w,c
  6305  000920  0A25               	xorlw	37
  6306  000922  A4D8               	btfss	status,2,c
  6307  000924  EF96  F004         	goto	u4501
  6308  000928  EF98  F004         	goto	u4500
  6309  00092C                     u4501:
  6310  00092C  EF2A  F007         	goto	l4930
  6311  000930                     u4500:
  6312  000930                     
  6313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6314  000930  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6315  000934  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6316  000938  2ADE               	incf	postinc2,f,c
  6317  00093A  0E00               	movlw	0
  6318  00093C  22DD               	addwfc	postdec2,f,c
  6319  00093E                     
  6320                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6321  00093E  0E00               	movlw	0
  6322  000940  6E3F               	movwf	(_width+1)^0,c
  6323  000942  0E00               	movlw	0
  6324  000944  6E3E               	movwf	_width^0,c
  6325  000946  C03E  F042         	movff	_width,_flags
  6326  00094A  C03F  F043         	movff	_width+1,_flags+1
  6327  00094E                     
  6328                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6329  00094E  6840               	setf	_prec^0,c
  6330  000950  6841               	setf	(_prec+1)^0,c
  6331  000952                     
  6332                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6333  000952  0E00               	movlw	0
  6334  000954  0100               	movlb	0	; () banked
  6335  000956  6F8B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6336  000958  0E00               	movlw	0
  6337  00095A  6F8A               	movwf	vfpfcnvrt@done& (0+255),b
  6338                           
  6339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6340  00095C  EFF7  F004         	goto	l4852
  6341  000960                     l4826:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6345  000960  8042               	bsf	_flags^0,0,c
  6346  000962                     l4828:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6350  000962  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6351  000966  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6352  00096A  2ADE               	incf	postinc2,f,c
  6353  00096C  0E00               	movlw	0
  6354  00096E  22DD               	addwfc	postdec2,f,c
  6355                           
  6356                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6357  000970  EFF7  F004         	goto	l4852
  6358  000974                     l4830:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6362  000974  8242               	bsf	_flags^0,1,c
  6363  000976  EFB1  F004         	goto	l4828
  6364  00097A                     l4834:
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6368  00097A  8442               	bsf	_flags^0,2,c
  6369  00097C  EFB1  F004         	goto	l4828
  6370  000980                     l4838:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6374  000980  8642               	bsf	_flags^0,3,c
  6375  000982  EFB1  F004         	goto	l4828
  6376  000986                     l4842:
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6380  000986  8842               	bsf	_flags^0,4,c
  6381  000988  EFB1  F004         	goto	l4828
  6382  00098C                     l4846:
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6386  00098C  0E00               	movlw	0
  6387  00098E  6F8B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6388  000990  0E01               	movlw	1
  6389  000992  6F8A               	movwf	vfpfcnvrt@done& (0+255),b
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6392  000994  EFF7  F004         	goto	l4852
  6393  000998                     l4850:
  6394                           
  6395                           ; BSR set to: 0
  6396  000998  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6397  00099C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6398  0009A0  CFDE FFF6          	movff	postinc2,tblptrl
  6399  0009A4  CFDD FFF7          	movff	postdec2,tblptrh
  6400  0009A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6401  0009A8  6AF8               	clrf	tblptru,c
  6402  0009AA                     	endif
  6403  0009AA                     	if	0	;tblptru may be non-zero
  6404  0009AA                     	endif
  6405  0009AA  0008               	tblrd		*
  6406  0009AC  50F5               	movf	tablat,w,c
  6407  0009AE  6E3A               	movwf	??_vfpfcnvrt^0,c
  6408  0009B0  6A3B               	clrf	(??_vfpfcnvrt+1)^0,c
  6409                           
  6410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6411                           ; Switch size 1, requested type "simple"
  6412                           ; Number of cases is 1, Range of values is 0 to 0
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            4     3 (average)
  6416                           ;	Chosen strategy is simple_byte
  6417  0009B2  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6418  0009B4  0A00               	xorlw	0	; case 0
  6419  0009B6  B4D8               	btfsc	status,2,c
  6420  0009B8  EFE0  F004         	goto	l5448
  6421  0009BC  EFC6  F004         	goto	l4846
  6422  0009C0                     l5448:
  6423                           
  6424                           ; BSR set to: 0
  6425                           ; Switch size 1, requested type "simple"
  6426                           ; Number of cases is 5, Range of values is 32 to 48
  6427                           ; switch strategies available:
  6428                           ; Name         Instructions Cycles
  6429                           ; simple_byte           16     9 (average)
  6430                           ;	Chosen strategy is simple_byte
  6431  0009C0  503A               	movf	??_vfpfcnvrt^0,w,c
  6432  0009C2  0A20               	xorlw	32	; case 32
  6433  0009C4  B4D8               	btfsc	status,2,c
  6434  0009C6  EFC0  F004         	goto	l4838
  6435  0009CA  0A03               	xorlw	3	; case 35
  6436  0009CC  B4D8               	btfsc	status,2,c
  6437  0009CE  EFC3  F004         	goto	l4842
  6438  0009D2  0A08               	xorlw	8	; case 43
  6439  0009D4  B4D8               	btfsc	status,2,c
  6440  0009D6  EFBD  F004         	goto	l4834
  6441  0009DA  0A06               	xorlw	6	; case 45
  6442  0009DC  B4D8               	btfsc	status,2,c
  6443  0009DE  EFB0  F004         	goto	l4826
  6444  0009E2  0A1D               	xorlw	29	; case 48
  6445  0009E4  B4D8               	btfsc	status,2,c
  6446  0009E6  EFBA  F004         	goto	l4830
  6447  0009EA  EFC6  F004         	goto	l4846
  6448  0009EE                     l4852:
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6452  0009EE  518A               	movf	vfpfcnvrt@done& (0+255),w,b
  6453  0009F0  118B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6454  0009F2  B4D8               	btfsc	status,2,c
  6455  0009F4  EFFE  F004         	goto	u4511
  6456  0009F8  EF00  F005         	goto	u4510
  6457  0009FC                     u4511:
  6458  0009FC  EFCC  F004         	goto	l4850
  6459  000A00                     u4510:
  6460  000A00                     
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6463  000A00  A042               	btfss	_flags^0,0,c
  6464  000A02  EF05  F005         	goto	u4521
  6465  000A06  EF07  F005         	goto	u4520
  6466  000A0A                     u4521:
  6467  000A0A  EF08  F005         	goto	l4856
  6468  000A0E                     u4520:
  6469  000A0E                     
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6472  000A0E  9242               	bcf	_flags^0,1,c
  6473  000A10                     l4856:
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6477  000A10  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6478  000A14  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6479  000A18  CFDE FFF6          	movff	postinc2,tblptrl
  6480  000A1C  CFDD FFF7          	movff	postdec2,tblptrh
  6481  000A20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6482  000A20  6AF8               	clrf	tblptru,c
  6483  000A22                     	endif
  6484  000A22                     	if	0	;tblptru may be non-zero
  6485  000A22                     	endif
  6486  000A22  0008               	tblrd		*
  6487  000A24  50F5               	movf	tablat,w,c
  6488  000A26  0A2A               	xorlw	42
  6489  000A28  A4D8               	btfss	status,2,c
  6490  000A2A  EF19  F005         	goto	u4531
  6491  000A2E  EF1B  F005         	goto	u4530
  6492  000A32                     u4531:
  6493  000A32  EF44  F005         	goto	l4864
  6494  000A36                     u4530:
  6495  000A36                     
  6496                           ; BSR set to: 0
  6497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6498  000A36  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6499  000A3A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6500  000A3E  2ADE               	incf	postinc2,f,c
  6501  000A40  0E00               	movlw	0
  6502  000A42  22DD               	addwfc	postdec2,f,c
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6505  000A44  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6506  000A48  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6507  000A4C  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  6508  000A50  0E02               	movlw	2
  6509  000A52  26DE               	addwf	postinc2,f,c
  6510  000A54  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  6511  000A58  0E00               	movlw	0
  6512  000A5A  22DD               	addwfc	postdec2,f,c
  6513  000A5C  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6514  000A60  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6515  000A64  CFDE F03E          	movff	postinc2,_width
  6516  000A68  CFDD F03F          	movff	postdec2,_width+1
  6517  000A6C                     
  6518                           ; BSR set to: 0
  6519                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6520  000A6C  BE3F               	btfsc	(_width+1)^0,7,c
  6521  000A6E  EF3D  F005         	goto	u4540
  6522  000A72  EF3B  F005         	goto	u4541
  6523  000A76                     u4541:
  6524  000A76  EF89  F005         	goto	l4874
  6525  000A7A                     u4540:
  6526  000A7A                     
  6527                           ; BSR set to: 0
  6528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6529  000A7A  8042               	bsf	_flags^0,0,c
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6532  000A7C  6C3E               	negf	_width^0,c
  6533  000A7E  1E3F               	comf	(_width+1)^0,f,c
  6534  000A80  B0D8               	btfsc	status,0,c
  6535  000A82  2A3F               	incf	(_width+1)^0,f,c
  6536  000A84  EF89  F005         	goto	l4874
  6537  000A88                     l4864:
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6541  000A88  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6542  000A8C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6543  000A90  CFDE F019          	movff	postinc2,atoi@s
  6544  000A94  CFDD F01A          	movff	postdec2,atoi@s+1
  6545  000A98  EC1E  F00C         	call	_atoi	;wreg free
  6546  000A9C  C019  F03E         	movff	?_atoi,_width
  6547  000AA0  C01A  F03F         	movff	?_atoi+1,_width+1
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6550  000AA4  EF5B  F005         	goto	l4868
  6551  000AA8                     l4866:
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6555  000AA8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6556  000AAC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6557  000AB0  2ADE               	incf	postinc2,f,c
  6558  000AB2  0E00               	movlw	0
  6559  000AB4  22DD               	addwfc	postdec2,f,c
  6560  000AB6                     l4868:
  6561  000AB6  0ED0               	movlw	208
  6562  000AB8  6E3A               	movwf	??_vfpfcnvrt^0,c
  6563  000ABA  0EFF               	movlw	255
  6564  000ABC  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  6565  000ABE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6566  000AC2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6567  000AC6  CFDE FFF6          	movff	postinc2,tblptrl
  6568  000ACA  CFDD FFF7          	movff	postdec2,tblptrh
  6569  000ACE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6570  000ACE  6AF8               	clrf	tblptru,c
  6571  000AD0                     	endif
  6572  000AD0                     	if	0	;tblptru may be non-zero
  6573  000AD0                     	endif
  6574  000AD0  0008               	tblrd		*
  6575  000AD2  50F5               	movf	tablat,w,c
  6576  000AD4  6E3C               	movwf	(??_vfpfcnvrt+2)^0,c
  6577  000AD6  6A3D               	clrf	(??_vfpfcnvrt+3)^0,c
  6578  000AD8  503A               	movf	??_vfpfcnvrt^0,w,c
  6579  000ADA  263C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6580  000ADC  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6581  000ADE  223D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6582  000AE0  503D               	movf	(??_vfpfcnvrt+3)^0,w,c
  6583  000AE2  E10A               	bnz	u4550
  6584  000AE4  0E0A               	movlw	10
  6585  000AE6  5C3C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6586  000AE8  A0D8               	btfss	status,0,c
  6587  000AEA  EF79  F005         	goto	u4551
  6588  000AEE  EF7C  F005         	goto	u4550
  6589  000AF2                     u4551:
  6590  000AF2  0E01               	movlw	1
  6591  000AF4  EF7D  F005         	goto	u4560
  6592  000AF8                     u4550:
  6593  000AF8  0E00               	movlw	0
  6594  000AFA                     u4560:
  6595  000AFA  0100               	movlb	0	; () banked
  6596  000AFC  6F8C               	movwf	_vfpfcnvrt$1845& (0+255),b
  6597  000AFE  6B8D               	clrf	(_vfpfcnvrt$1845+1)& (0+255),b
  6598  000B00                     
  6599                           ; BSR set to: 0
  6600  000B00  518C               	movf	_vfpfcnvrt$1845& (0+255),w,b
  6601  000B02  118D               	iorwf	(_vfpfcnvrt$1845+1)& (0+255),w,b
  6602  000B04  A4D8               	btfss	status,2,c
  6603  000B06  EF87  F005         	goto	u4571
  6604  000B0A  EF89  F005         	goto	u4570
  6605  000B0E                     u4571:
  6606  000B0E  EF54  F005         	goto	l4866
  6607  000B12                     u4570:
  6608  000B12                     l4874:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  6612  000B12  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6613  000B16  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6614  000B1A  CFDE FFF6          	movff	postinc2,tblptrl
  6615  000B1E  CFDD FFF7          	movff	postdec2,tblptrh
  6616  000B22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6617  000B22  6AF8               	clrf	tblptru,c
  6618  000B24                     	endif
  6619  000B24                     	if	0	;tblptru may be non-zero
  6620  000B24                     	endif
  6621  000B24  0008               	tblrd		*
  6622  000B26  50F5               	movf	tablat,w,c
  6623  000B28  0A63               	xorlw	99
  6624  000B2A  A4D8               	btfss	status,2,c
  6625  000B2C  EF9A  F005         	goto	u4581
  6626  000B30  EF9C  F005         	goto	u4580
  6627  000B34                     u4581:
  6628  000B34  EFC3  F005         	goto	l4882
  6629  000B38                     u4580:
  6630  000B38                     
  6631                           ; BSR set to: 0
  6632                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  6633  000B38  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6634  000B3C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6635  000B40  2ADE               	incf	postinc2,f,c
  6636  000B42  0E00               	movlw	0
  6637  000B44  22DD               	addwfc	postdec2,f,c
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6640  000B46  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6641  000B4A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6642  000B4E  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  6643  000B52  0E02               	movlw	2
  6644  000B54  26DE               	addwf	postinc2,f,c
  6645  000B56  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  6646  000B5A  0E00               	movlw	0
  6647  000B5C  22DD               	addwfc	postdec2,f,c
  6648  000B5E  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6649  000B62  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6650  000B66  50DF               	movf	indf2,w,c
  6651  000B68  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  6652  000B6A                     
  6653                           ; BSR set to: 0
  6654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  6655  000B6A  C07C  F01D         	movff	vfpfcnvrt@fp,ctoa@fp
  6656  000B6E  C07D  F01E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6657  000B72  C096  F01F         	movff	vfpfcnvrt@c,ctoa@c
  6658  000B76  EC95  F00F         	call	_ctoa	;wreg free
  6659  000B7A  C01D  F07C         	movff	?_ctoa,?_vfpfcnvrt
  6660  000B7E  C01E  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6661  000B82  EF46  F007         	goto	l1377
  6662  000B86                     l4882:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6666  000B86  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6667  000B8A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6668  000B8E  CFDE FFF6          	movff	postinc2,tblptrl
  6669  000B92  CFDD FFF7          	movff	postdec2,tblptrh
  6670  000B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6671  000B96  6AF8               	clrf	tblptru,c
  6672  000B98                     	endif
  6673  000B98                     	if	0	;tblptru may be non-zero
  6674  000B98                     	endif
  6675  000B98  0008               	tblrd		*
  6676  000B9A  50F5               	movf	tablat,w,c
  6677  000B9C  0A64               	xorlw	100
  6678  000B9E  B4D8               	btfsc	status,2,c
  6679  000BA0  EFD4  F005         	goto	u4591
  6680  000BA4  EFD6  F005         	goto	u4590
  6681  000BA8                     u4591:
  6682  000BA8  EFE9  F005         	goto	l4886
  6683  000BAC                     u4590:
  6684  000BAC                     
  6685                           ; BSR set to: 0
  6686  000BAC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6687  000BB0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6688  000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  6689  000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  6690  000BBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6691  000BBC  6AF8               	clrf	tblptru,c
  6692  000BBE                     	endif
  6693  000BBE                     	if	0	;tblptru may be non-zero
  6694  000BBE                     	endif
  6695  000BBE  0008               	tblrd		*
  6696  000BC0  50F5               	movf	tablat,w,c
  6697  000BC2  0A69               	xorlw	105
  6698  000BC4  A4D8               	btfss	status,2,c
  6699  000BC6  EFE7  F005         	goto	u4601
  6700  000BCA  EFE9  F005         	goto	u4600
  6701  000BCE                     u4601:
  6702  000BCE  EF29  F006         	goto	l4892
  6703  000BD2                     u4600:
  6704  000BD2                     l4886:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6708  000BD2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6709  000BD6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6710  000BDA  2ADE               	incf	postinc2,f,c
  6711  000BDC  0E00               	movlw	0
  6712  000BDE  22DD               	addwfc	postdec2,f,c
  6713                           
  6714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6715  000BE0  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6716  000BE4  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6717  000BE8  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  6718  000BEC  0E02               	movlw	2
  6719  000BEE  26DE               	addwf	postinc2,f,c
  6720  000BF0  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  6721  000BF4  0E00               	movlw	0
  6722  000BF6  22DD               	addwfc	postdec2,f,c
  6723  000BF8  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6724  000BFC  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6725  000C00  CFDE F082          	movff	postinc2,vfpfcnvrt@ll
  6726  000C04  CFDD F083          	movff	postdec2,vfpfcnvrt@ll+1
  6727  000C08  0E00               	movlw	0
  6728  000C0A  BF83               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6729  000C0C  0EFF               	movlw	-1
  6730  000C0E  6F84               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6731  000C10  6F85               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6732  000C12  6F86               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6733  000C14  6F87               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6734  000C16  6F88               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6735  000C18  6F89               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6736  000C1A                     
  6737                           ; BSR set to: 0
  6738                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6739  000C1A  C07C  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  6740  000C1E  C07D  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6741  000C22  C082  F031         	movff	vfpfcnvrt@ll,dtoa@d
  6742  000C26  C083  F032         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6743  000C2A  C084  F033         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6744  000C2E  C085  F034         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6745  000C32  C086  F035         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6746  000C36  C087  F036         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6747  000C3A  C088  F037         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6748  000C3E  C089  F038         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6749  000C42  EC47  F007         	call	_dtoa	;wreg free
  6750  000C46  C02F  F07C         	movff	?_dtoa,?_vfpfcnvrt
  6751  000C4A  C030  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6752  000C4E  EF46  F007         	goto	l1377
  6753  000C52                     l4892:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6757  000C52  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  000C56  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  000C5A  CFDE FFF6          	movff	postinc2,tblptrl
  6760  000C5E  CFDD FFF7          	movff	postdec2,tblptrh
  6761  000C62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6762  000C62  6AF8               	clrf	tblptru,c
  6763  000C64                     	endif
  6764  000C64                     	if	0	;tblptru may be non-zero
  6765  000C64                     	endif
  6766  000C64  0008               	tblrd		*
  6767  000C66  50F5               	movf	tablat,w,c
  6768  000C68  0A75               	xorlw	117
  6769  000C6A  A4D8               	btfss	status,2,c
  6770  000C6C  EF3A  F006         	goto	u4611
  6771  000C70  EF3C  F006         	goto	u4610
  6772  000C74                     u4611:
  6773  000C74  EF7D  F006         	goto	l4900
  6774  000C78                     u4610:
  6775  000C78                     
  6776                           ; BSR set to: 0
  6777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6778  000C78  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6779  000C7C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6780  000C80  2ADE               	incf	postinc2,f,c
  6781  000C82  0E00               	movlw	0
  6782  000C84  22DD               	addwfc	postdec2,f,c
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6785  000C86  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6786  000C8A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6787  000C8E  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  6788  000C92  0E02               	movlw	2
  6789  000C94  26DE               	addwf	postinc2,f,c
  6790  000C96  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  6791  000C9A  0E00               	movlw	0
  6792  000C9C  22DD               	addwfc	postdec2,f,c
  6793  000C9E  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6794  000CA2  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6795  000CA6  CFDE F03C          	movff	postinc2,??_vfpfcnvrt+2
  6796  000CAA  CFDD F03D          	movff	postdec2,??_vfpfcnvrt+3
  6797  000CAE  C03C  F08E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6798  000CB2  C03D  F08F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6799  000CB6  6B90               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6800  000CB8  6B91               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6801  000CBA  6B92               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6802  000CBC  6B93               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6803  000CBE  6B94               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6804  000CC0  6B95               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6805  000CC2                     
  6806                           ; BSR set to: 0
  6807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6808  000CC2  C07C  F02F         	movff	vfpfcnvrt@fp,utoa@fp
  6809  000CC6  C07D  F030         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6810  000CCA  C08E  F031         	movff	vfpfcnvrt@llu,utoa@d
  6811  000CCE  C08F  F032         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6812  000CD2  C090  F033         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6813  000CD6  C091  F034         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6814  000CDA  C092  F035         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6815  000CDE  C093  F036         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6816  000CE2  C094  F037         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6817  000CE6  C095  F038         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6818  000CEA  EC25  F00A         	call	_utoa	;wreg free
  6819  000CEE  C02F  F07C         	movff	?_utoa,?_vfpfcnvrt
  6820  000CF2  C030  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
  6821  000CF6  EF46  F007         	goto	l1377
  6822  000CFA                     l4900:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6826  000CFA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6827  000CFE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6828  000D02  CFDE FFF6          	movff	postinc2,tblptrl
  6829  000D06  CFDD FFF7          	movff	postdec2,tblptrh
  6830  000D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6831  000D0A  6AF8               	clrf	tblptru,c
  6832  000D0C                     	endif
  6833  000D0C                     	if	0	;tblptru may be non-zero
  6834  000D0C                     	endif
  6835  000D0C  0008               	tblrd		*
  6836  000D0E  50F5               	movf	tablat,w,c
  6837  000D10  0A78               	xorlw	120
  6838  000D12  B4D8               	btfsc	status,2,c
  6839  000D14  EF8E  F006         	goto	u4621
  6840  000D18  EF90  F006         	goto	u4620
  6841  000D1C                     u4621:
  6842  000D1C  EFA3  F006         	goto	l4904
  6843  000D20                     u4620:
  6844  000D20                     
  6845                           ; BSR set to: 0
  6846  000D20  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6847  000D24  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6848  000D28  CFDE FFF6          	movff	postinc2,tblptrl
  6849  000D2C  CFDD FFF7          	movff	postdec2,tblptrh
  6850  000D30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6851  000D30  6AF8               	clrf	tblptru,c
  6852  000D32                     	endif
  6853  000D32                     	if	0	;tblptru may be non-zero
  6854  000D32                     	endif
  6855  000D32  0008               	tblrd		*
  6856  000D34  50F5               	movf	tablat,w,c
  6857  000D36  0A58               	xorlw	88
  6858  000D38  A4D8               	btfss	status,2,c
  6859  000D3A  EFA1  F006         	goto	u4631
  6860  000D3E  EFA3  F006         	goto	u4630
  6861  000D42                     u4631:
  6862  000D42  EFF2  F006         	goto	l4914
  6863  000D46                     u4630:
  6864  000D46                     l4904:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  6868  000D46  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6869  000D4A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6870  000D4E  CFDE FFF6          	movff	postinc2,tblptrl
  6871  000D52  CFDD FFF7          	movff	postdec2,tblptrh
  6872  000D56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6873  000D56  6AF8               	clrf	tblptru,c
  6874  000D58                     	endif
  6875  000D58                     	if	0	;tblptru may be non-zero
  6876  000D58                     	endif
  6877  000D58  0008               	tblrd		*
  6878  000D5A  CFF5 F096          	movff	tablat,vfpfcnvrt@c
  6879  000D5E                     
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  6882  000D5E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6883  000D62  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6884  000D66  2ADE               	incf	postinc2,f,c
  6885  000D68  0E00               	movlw	0
  6886  000D6A  22DD               	addwfc	postdec2,f,c
  6887  000D6C                     
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6890  000D6C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6891  000D70  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6892  000D74  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  6893  000D78  0E02               	movlw	2
  6894  000D7A  26DE               	addwf	postinc2,f,c
  6895  000D7C  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  6896  000D80  0E00               	movlw	0
  6897  000D82  22DD               	addwfc	postdec2,f,c
  6898  000D84  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6899  000D88  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6900  000D8C  CFDE F03C          	movff	postinc2,??_vfpfcnvrt+2
  6901  000D90  CFDD F03D          	movff	postdec2,??_vfpfcnvrt+3
  6902  000D94  C03C  F08E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6903  000D98  C03D  F08F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6904  000D9C  6B90               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6905  000D9E  6B91               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6906  000DA0  6B92               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6907  000DA2  6B93               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6908  000DA4  6B94               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6909  000DA6  6B95               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6910  000DA8                     
  6911                           ; BSR set to: 0
  6912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  6913  000DA8  C07C  F02F         	movff	vfpfcnvrt@fp,xtoa@fp
  6914  000DAC  C07D  F030         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6915  000DB0  C08E  F031         	movff	vfpfcnvrt@llu,xtoa@d
  6916  000DB4  C08F  F032         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6917  000DB8  C090  F033         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6918  000DBC  C091  F034         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6919  000DC0  C092  F035         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6920  000DC4  C093  F036         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6921  000DC8  C094  F037         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6922  000DCC  C095  F038         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6923  000DD0  C096  F039         	movff	vfpfcnvrt@c,xtoa@x
  6924  000DD4  ECB8  F008         	call	_xtoa	;wreg free
  6925  000DD8  C02F  F07C         	movff	?_xtoa,?_vfpfcnvrt
  6926  000DDC  C030  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6927  000DE0  EF46  F007         	goto	l1377
  6928  000DE4                     l4914:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6932  000DE4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6933  000DE8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6934  000DEC  CFDE FFF6          	movff	postinc2,tblptrl
  6935  000DF0  CFDD FFF7          	movff	postdec2,tblptrh
  6936  000DF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6937  000DF4  6AF8               	clrf	tblptru,c
  6938  000DF6                     	endif
  6939  000DF6                     	if	0	;tblptru may be non-zero
  6940  000DF6                     	endif
  6941  000DF6  0008               	tblrd		*
  6942  000DF8  50F5               	movf	tablat,w,c
  6943  000DFA  0A25               	xorlw	37
  6944  000DFC  A4D8               	btfss	status,2,c
  6945  000DFE  EF03  F007         	goto	u4641
  6946  000E02  EF05  F007         	goto	u4640
  6947  000E06                     u4641:
  6948  000E06  EF1D  F007         	goto	l4924
  6949  000E0A                     u4640:
  6950  000E0A                     
  6951                           ; BSR set to: 0
  6952                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6953  000E0A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6954  000E0E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6955  000E12  2ADE               	incf	postinc2,f,c
  6956  000E14  0E00               	movlw	0
  6957  000E16  22DD               	addwfc	postdec2,f,c
  6958  000E18                     
  6959                           ; BSR set to: 0
  6960                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6961  000E18  0E00               	movlw	0
  6962  000E1A  6E15               	movwf	(fputc@c+1)^0,c
  6963  000E1C  0E25               	movlw	37
  6964  000E1E  6E14               	movwf	fputc@c^0,c
  6965  000E20  C07C  F016         	movff	vfpfcnvrt@fp,fputc@fp
  6966  000E24  C07D  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6967  000E28  EC2A  F012         	call	_fputc	;wreg free
  6968  000E2C                     l4920:
  6969                           
  6970                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6971  000E2C  0E00               	movlw	0
  6972  000E2E  0100               	movlb	0	; () banked
  6973  000E30  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6974  000E32  0E01               	movlw	1
  6975  000E34  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  6976  000E36  EF46  F007         	goto	l1377
  6977  000E3A                     l4924:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6981  000E3A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6982  000E3E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6983  000E42  2ADE               	incf	postinc2,f,c
  6984  000E44  0E00               	movlw	0
  6985  000E46  22DD               	addwfc	postdec2,f,c
  6986  000E48                     
  6987                           ; BSR set to: 0
  6988                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6989  000E48  0E00               	movlw	0
  6990  000E4A  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6991  000E4C  0E00               	movlw	0
  6992  000E4E  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  6993  000E50  EF46  F007         	goto	l1377
  6994  000E54                     l4930:
  6995                           
  6996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6997  000E54  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6998  000E58  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6999  000E5C  CFDE FFF6          	movff	postinc2,tblptrl
  7000  000E60  CFDD FFF7          	movff	postdec2,tblptrh
  7001  000E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7002  000E64  6AF8               	clrf	tblptru,c
  7003  000E66                     	endif
  7004  000E66                     	if	0	;tblptru may be non-zero
  7005  000E66                     	endif
  7006  000E66  0008               	tblrd		*
  7007  000E68  50F5               	movf	tablat,w,c
  7008  000E6A  6E14               	movwf	fputc@c^0,c
  7009  000E6C  6A15               	clrf	(fputc@c+1)^0,c
  7010  000E6E  C07C  F016         	movff	vfpfcnvrt@fp,fputc@fp
  7011  000E72  C07D  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7012  000E76  EC2A  F012         	call	_fputc	;wreg free
  7013  000E7A                     
  7014                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7015  000E7A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7016  000E7E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7017  000E82  2ADE               	incf	postinc2,f,c
  7018  000E84  0E00               	movlw	0
  7019  000E86  22DD               	addwfc	postdec2,f,c
  7020  000E88  EF16  F007         	goto	l4920
  7021  000E8C                     l1377:
  7022  000E8C  0012               	return		;funcret
  7023  000E8E                     __end_of_vfpfcnvrt:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _xtoa *****************
  7027 ;; Defined at:
  7028 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  7031 ;;		 -> NULL(0), 
  7032 ;;  d               8   48[COMRAM] unsigned long long 
  7033 ;;  x               1   56[COMRAM] unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  n               8   16[BANK0 ] unsigned long long 
  7036 ;;  c               2   26[BANK0 ] int 
  7037 ;;  i               2   24[BANK0 ] int 
  7038 ;;  w               2   14[BANK0 ] int 
  7039 ;;  p               2   12[BANK0 ] int 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  2   46[COMRAM] int 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7049 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;Total ram usage:       39 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    9
  7056 ;; This function calls:
  7057 ;;		_isalpha
  7058 ;;		_isupper
  7059 ;;		_pad
  7060 ;;		_toupper
  7061 ;; This function is called by:
  7062 ;;		_vfpfcnvrt
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text25
  7067  001170                     __ptext25:
  7068                           	callstack 0
  7069  001170                     _xtoa:
  7070                           	callstack 18
  7071  001170                     
  7072                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  7073  001170  BE41               	btfsc	(_prec+1)^0,7,c
  7074  001172  EFBD  F008         	goto	u4261
  7075  001176  EFBF  F008         	goto	u4260
  7076  00117A                     u4261:
  7077  00117A  EFC0  F008         	goto	l4712
  7078  00117E                     u4260:
  7079  00117E                     
  7080                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  7081  00117E  9242               	bcf	_flags^0,1,c
  7082  001180                     l4712:
  7083                           
  7084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  7085  001180  BE41               	btfsc	(_prec+1)^0,7,c
  7086  001182  EFCD  F008         	goto	u4270
  7087  001186  5041               	movf	(_prec+1)^0,w,c
  7088  001188  E106               	bnz	u4271
  7089  00118A  0440               	decf	_prec^0,w,c
  7090  00118C  B0D8               	btfsc	status,0,c
  7091  00118E  EFCB  F008         	goto	u4271
  7092  001192  EFCD  F008         	goto	u4270
  7093  001196                     u4271:
  7094  001196  EFD4  F008         	goto	l1325
  7095  00119A                     u4270:
  7096  00119A  0E00               	movlw	0
  7097  00119C  0100               	movlb	0	; () banked
  7098  00119E  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  7099  0011A0  0E01               	movlw	1
  7100  0011A2  6F6C               	movwf	xtoa@p& (0+255),b
  7101  0011A4  EFD8  F008         	goto	l1327
  7102  0011A8                     l1325:
  7103  0011A8  C040  F06C         	movff	_prec,xtoa@p
  7104  0011AC  C041  F06D         	movff	_prec+1,xtoa@p+1
  7105  0011B0                     l1327:
  7106                           
  7107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  7108  0011B0  C03E  F06E         	movff	_width,xtoa@w
  7109  0011B4  C03F  F06F         	movff	_width+1,xtoa@w+1
  7110                           
  7111                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  7112  0011B8  A842               	btfss	_flags^0,4,c
  7113  0011BA  EFE1  F008         	goto	u4281
  7114  0011BE  EFE3  F008         	goto	u4280
  7115  0011C2                     u4281:
  7116  0011C2  EFE8  F008         	goto	l4718
  7117  0011C6                     u4280:
  7118  0011C6                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  7120  0011C6  0100               	movlb	0	; () banked
  7121  0011C8  0EFE               	movlw	254
  7122  0011CA  276E               	addwf	xtoa@w& (0+255),f,b
  7123  0011CC  0EFF               	movlw	255
  7124  0011CE  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7125  0011D0                     l4718:
  7126                           
  7127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  7128  0011D0  C031  F070         	movff	xtoa@d,xtoa@n
  7129  0011D4  C032  F071         	movff	xtoa@d+1,xtoa@n+1
  7130  0011D8  C033  F072         	movff	xtoa@d+2,xtoa@n+2
  7131  0011DC  C034  F073         	movff	xtoa@d+3,xtoa@n+3
  7132  0011E0  C035  F074         	movff	xtoa@d+4,xtoa@n+4
  7133  0011E4  C036  F075         	movff	xtoa@d+5,xtoa@n+5
  7134  0011E8  C037  F076         	movff	xtoa@d+6,xtoa@n+6
  7135  0011EC  C038  F077         	movff	xtoa@d+7,xtoa@n+7
  7136  0011F0                     
  7137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  7138  0011F0  0E00               	movlw	0
  7139  0011F2  0100               	movlb	0	; () banked
  7140  0011F4  6F79               	movwf	(xtoa@i+1)& (0+255),b
  7141  0011F6  0E1F               	movlw	31
  7142  0011F8  6F78               	movwf	xtoa@i& (0+255),b
  7143  0011FA                     
  7144                           ; BSR set to: 0
  7145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  7146  0011FA  0E00               	movlw	0
  7147  0011FC  6FF2               	movwf	(_dbuf+31)& (0+255),b
  7148                           
  7149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7150  0011FE  EFB5  F009         	goto	l4754
  7151  001202                     l4724:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  7155  001202  0778               	decf	xtoa@i& (0+255),f,b
  7156  001204  A0D8               	btfss	status,0,c
  7157  001206  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7158  001208                     
  7159                           ; BSR set to: 0
  7160                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  7161  001208  0E0F               	movlw	15
  7162  00120A  1570               	andwf	xtoa@n& (0+255),w,b
  7163  00120C  6F7A               	movwf	xtoa@c& (0+255),b
  7164  00120E  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  7165  001210                     
  7166                           ; BSR set to: 0
  7167                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7168  001210  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7169  001212  EF14  F009         	goto	u4291
  7170  001216  517B               	movf	(xtoa@c+1)& (0+255),w,b
  7171  001218  E109               	bnz	u4290
  7172  00121A  0E0A               	movlw	10
  7173  00121C  5D7A               	subwf	xtoa@c& (0+255),w,b
  7174  00121E  A0D8               	btfss	status,0,c
  7175  001220  EF14  F009         	goto	u4291
  7176  001224  EF16  F009         	goto	u4290
  7177  001228                     u4291:
  7178  001228  EF1E  F009         	goto	l4732
  7179  00122C                     u4290:
  7180  00122C                     
  7181                           ; BSR set to: 0
  7182  00122C  0E57               	movlw	87
  7183  00122E  257A               	addwf	xtoa@c& (0+255),w,b
  7184  001230  6F7A               	movwf	xtoa@c& (0+255),b
  7185  001232  0E00               	movlw	0
  7186  001234  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7187  001236  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7188  001238  EF24  F009         	goto	l1334
  7189  00123C                     l4732:
  7190                           
  7191                           ; BSR set to: 0
  7192  00123C  0E30               	movlw	48
  7193  00123E  257A               	addwf	xtoa@c& (0+255),w,b
  7194  001240  6F7A               	movwf	xtoa@c& (0+255),b
  7195  001242  0E00               	movlw	0
  7196  001244  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7197  001246  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7198  001248                     l1334:
  7199                           
  7200                           ; BSR set to: 0
  7201  001248  0EBF               	movlw	191
  7202  00124A  6F60               	movwf	??_xtoa& (0+255),b
  7203  00124C  0EFF               	movlw	255
  7204  00124E  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7205  001250  5039               	movf	xtoa@x^0,w,c
  7206  001252  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7207  001254  6B63               	clrf	(??_xtoa+3)& (0+255),b
  7208  001256  5160               	movf	??_xtoa& (0+255),w,b
  7209  001258  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7210  00125A  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7211  00125C  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7212  00125E  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7213  001260  E10A               	bnz	u4300
  7214  001262  0E1A               	movlw	26
  7215  001264  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7216  001266  A0D8               	btfss	status,0,c
  7217  001268  EF38  F009         	goto	u4301
  7218  00126C  EF3B  F009         	goto	u4300
  7219  001270                     u4301:
  7220  001270  0E01               	movlw	1
  7221  001272  EF3C  F009         	goto	u4310
  7222  001276                     u4300:
  7223  001276  0E00               	movlw	0
  7224  001278                     u4310:
  7225  001278  6F68               	movwf	_xtoa$1830& (0+255),b
  7226  00127A  6B69               	clrf	(_xtoa$1830+1)& (0+255),b
  7227  00127C                     
  7228                           ; BSR set to: 0
  7229  00127C  5168               	movf	_xtoa$1830& (0+255),w,b
  7230  00127E  1169               	iorwf	(_xtoa$1830+1)& (0+255),w,b
  7231  001280  B4D8               	btfsc	status,2,c
  7232  001282  EF45  F009         	goto	u4321
  7233  001286  EF47  F009         	goto	u4320
  7234  00128A                     u4321:
  7235  00128A  EF77  F009         	goto	l4746
  7236  00128E                     u4320:
  7237  00128E                     
  7238                           ; BSR set to: 0
  7239  00128E  0E9F               	movlw	159
  7240  001290  6F60               	movwf	??_xtoa& (0+255),b
  7241  001292  0EFF               	movlw	255
  7242  001294  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7243  001296  0E20               	movlw	32
  7244  001298  117A               	iorwf	xtoa@c& (0+255),w,b
  7245  00129A  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7246  00129C  0E00               	movlw	0
  7247  00129E  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7248  0012A0  6F63               	movwf	(??_xtoa+3)& (0+255),b
  7249  0012A2  5160               	movf	??_xtoa& (0+255),w,b
  7250  0012A4  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7251  0012A6  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7252  0012A8  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7253  0012AA  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7254  0012AC  E10A               	bnz	u4330
  7255  0012AE  0E1A               	movlw	26
  7256  0012B0  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7257  0012B2  A0D8               	btfss	status,0,c
  7258  0012B4  EF5E  F009         	goto	u4331
  7259  0012B8  EF61  F009         	goto	u4330
  7260  0012BC                     u4331:
  7261  0012BC  0E01               	movlw	1
  7262  0012BE  EF62  F009         	goto	u4340
  7263  0012C2                     u4330:
  7264  0012C2  0E00               	movlw	0
  7265  0012C4                     u4340:
  7266  0012C4  6F6A               	movwf	_xtoa$1831& (0+255),b
  7267  0012C6  6B6B               	clrf	(_xtoa$1831+1)& (0+255),b
  7268  0012C8                     
  7269                           ; BSR set to: 0
  7270  0012C8  516A               	movf	_xtoa$1831& (0+255),w,b
  7271  0012CA  116B               	iorwf	(_xtoa$1831+1)& (0+255),w,b
  7272  0012CC  B4D8               	btfsc	status,2,c
  7273  0012CE  EF6B  F009         	goto	u4351
  7274  0012D2  EF6D  F009         	goto	u4350
  7275  0012D6                     u4351:
  7276  0012D6  EF77  F009         	goto	l4746
  7277  0012DA                     u4350:
  7278  0012DA                     
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  7281  0012DA  C07A  F018         	movff	xtoa@c,toupper@c
  7282  0012DE  C07B  F019         	movff	xtoa@c+1,toupper@c+1
  7283  0012E2  ECEE  F012         	call	_toupper	;wreg free
  7284  0012E6  C018  F07A         	movff	?_toupper,xtoa@c
  7285  0012EA  C019  F07B         	movff	?_toupper+1,xtoa@c+1
  7286  0012EE                     l4746:
  7287                           
  7288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  7289  0012EE  0ED3               	movlw	low _dbuf
  7290  0012F0  0100               	movlb	0	; () banked
  7291  0012F2  2578               	addwf	xtoa@i& (0+255),w,b
  7292  0012F4  6ED9               	movwf	fsr2l,c
  7293  0012F6  0E00               	movlw	high _dbuf
  7294  0012F8  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7295  0012FA  6EDA               	movwf	fsr2h,c
  7296  0012FC  C07A  FFDF         	movff	xtoa@c,indf2
  7297  001300                     
  7298                           ; BSR set to: 0
  7299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  7300  001300  076C               	decf	xtoa@p& (0+255),f,b
  7301  001302  A0D8               	btfss	status,0,c
  7302  001304  076D               	decf	(xtoa@p+1)& (0+255),f,b
  7303  001306                     
  7304                           ; BSR set to: 0
  7305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  7306  001306  076E               	decf	xtoa@w& (0+255),f,b
  7307  001308  A0D8               	btfss	status,0,c
  7308  00130A  076F               	decf	(xtoa@w+1)& (0+255),f,b
  7309  00130C                     
  7310                           ; BSR set to: 0
  7311                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  7312  00130C  C070  F060         	movff	xtoa@n,??_xtoa
  7313  001310  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  7314  001314  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  7315  001318  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  7316  00131C  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  7317  001320  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  7318  001324  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  7319  001328  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  7320  00132C  0E05               	movlw	5
  7321  00132E  EFA2  F009         	goto	u4360
  7322  001332                     u4365:
  7323  001332  90D8               	bcf	status,0,c
  7324  001334  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  7325  001336  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  7326  001338  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  7327  00133A  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  7328  00133C  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  7329  00133E  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  7330  001340  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  7331  001342  3360               	rrcf	??_xtoa& (0+255),f,b
  7332  001344                     u4360:
  7333  001344  2EE8               	decfsz	wreg,f,c
  7334  001346  EF99  F009         	goto	u4365
  7335  00134A  C060  F070         	movff	??_xtoa,xtoa@n
  7336  00134E  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  7337  001352  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  7338  001356  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  7339  00135A  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  7340  00135E  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  7341  001362  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  7342  001366  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  7343  00136A                     l4754:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7347  00136A  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  7348  00136C  EFC1  F009         	goto	u4371
  7349  001370  5179               	movf	(xtoa@i+1)& (0+255),w,b
  7350  001372  E109               	bnz	u4370
  7351  001374  0E02               	movlw	2
  7352  001376  5D78               	subwf	xtoa@i& (0+255),w,b
  7353  001378  A0D8               	btfss	status,0,c
  7354  00137A  EFC1  F009         	goto	u4371
  7355  00137E  EFC3  F009         	goto	u4370
  7356  001382                     u4371:
  7357  001382  EFF3  F009         	goto	l1348
  7358  001386                     u4370:
  7359  001386                     
  7360                           ; BSR set to: 0
  7361  001386  5170               	movf	xtoa@n& (0+255),w,b
  7362  001388  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  7363  00138A  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  7364  00138C  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  7365  00138E  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  7366  001390  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  7367  001392  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  7368  001394  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  7369  001396  A4D8               	btfss	status,2,c
  7370  001398  EFD0  F009         	goto	u4381
  7371  00139C  EFD2  F009         	goto	u4380
  7372  0013A0                     u4381:
  7373  0013A0  EF01  F009         	goto	l4724
  7374  0013A4                     u4380:
  7375  0013A4                     
  7376                           ; BSR set to: 0
  7377  0013A4  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7378  0013A6  EFDF  F009         	goto	u4390
  7379  0013AA  516D               	movf	(xtoa@p+1)& (0+255),w,b
  7380  0013AC  E106               	bnz	u4391
  7381  0013AE  056C               	decf	xtoa@p& (0+255),w,b
  7382  0013B0  B0D8               	btfsc	status,0,c
  7383  0013B2  EFDD  F009         	goto	u4391
  7384  0013B6  EFDF  F009         	goto	u4390
  7385  0013BA                     u4391:
  7386  0013BA  EF01  F009         	goto	l4724
  7387  0013BE                     u4390:
  7388  0013BE                     
  7389                           ; BSR set to: 0
  7390  0013BE  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7391  0013C0  EFEA  F009         	goto	u4401
  7392  0013C4  516F               	movf	(xtoa@w+1)& (0+255),w,b
  7393  0013C6  E108               	bnz	u4400
  7394  0013C8  056E               	decf	xtoa@w& (0+255),w,b
  7395  0013CA  A0D8               	btfss	status,0,c
  7396  0013CC  EFEA  F009         	goto	u4401
  7397  0013D0  EFEC  F009         	goto	u4400
  7398  0013D4                     u4401:
  7399  0013D4  EFF3  F009         	goto	l1348
  7400  0013D8                     u4400:
  7401  0013D8                     
  7402                           ; BSR set to: 0
  7403  0013D8  B242               	btfsc	_flags^0,1,c
  7404  0013DA  EFF1  F009         	goto	u4411
  7405  0013DE  EFF3  F009         	goto	u4410
  7406  0013E2                     u4411:
  7407  0013E2  EF01  F009         	goto	l4724
  7408  0013E6                     u4410:
  7409  0013E6                     l1348:
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  7413  0013E6  A842               	btfss	_flags^0,4,c
  7414  0013E8  EFF8  F009         	goto	u4421
  7415  0013EC  EFFA  F009         	goto	u4420
  7416  0013F0                     u4421:
  7417  0013F0  EF10  F00A         	goto	l4770
  7418  0013F4                     u4420:
  7419  0013F4                     
  7420                           ; BSR set to: 0
  7421                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  7422  0013F4  0778               	decf	xtoa@i& (0+255),f,b
  7423  0013F6  A0D8               	btfss	status,0,c
  7424  0013F8  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7425  0013FA                     
  7426                           ; BSR set to: 0
  7427                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  7428  0013FA  0ED3               	movlw	low _dbuf
  7429  0013FC  2578               	addwf	xtoa@i& (0+255),w,b
  7430  0013FE  6ED9               	movwf	fsr2l,c
  7431  001400  0E00               	movlw	high _dbuf
  7432  001402  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7433  001404  6EDA               	movwf	fsr2h,c
  7434  001406  C039  FFDF         	movff	xtoa@x,indf2
  7435  00140A                     
  7436                           ; BSR set to: 0
  7437                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  7438  00140A  0778               	decf	xtoa@i& (0+255),f,b
  7439  00140C  A0D8               	btfss	status,0,c
  7440  00140E  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  7443  001410  0ED3               	movlw	low _dbuf
  7444  001412  2578               	addwf	xtoa@i& (0+255),w,b
  7445  001414  6ED9               	movwf	fsr2l,c
  7446  001416  0E00               	movlw	high _dbuf
  7447  001418  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7448  00141A  6EDA               	movwf	fsr2h,c
  7449  00141C  0E30               	movlw	48
  7450  00141E  6EDF               	movwf	indf2,c
  7451  001420                     l4770:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  7455  001420  C02F  F024         	movff	xtoa@fp,pad@fp
  7456  001424  C030  F025         	movff	xtoa@fp+1,pad@fp+1
  7457  001428  0ED3               	movlw	low _dbuf
  7458  00142A  2578               	addwf	xtoa@i& (0+255),w,b
  7459  00142C  6E26               	movwf	pad@buf^0,c
  7460  00142E  0E00               	movlw	high _dbuf
  7461  001430  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7462  001432  6E27               	movwf	(pad@buf+1)^0,c
  7463  001434  C06E  F028         	movff	xtoa@w,pad@p
  7464  001438  C06F  F029         	movff	xtoa@w+1,pad@p+1
  7465  00143C  ECCE  F010         	call	_pad	;wreg free
  7466  001440  C024  F02F         	movff	?_pad,?_xtoa
  7467  001444  C025  F030         	movff	?_pad+1,?_xtoa+1
  7468  001448  0012               	return		;funcret
  7469  00144A                     __end_of_xtoa:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _toupper *****************
  7473 ;; Defined at:
  7474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  c               2   23[COMRAM] int 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  2   23[COMRAM] int 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;Total ram usage:        8 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    5
  7495 ;; This function calls:
  7496 ;;		_islower
  7497 ;; This function is called by:
  7498 ;;		_xtoa
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text26
  7503  0025DC                     __ptext26:
  7504                           	callstack 0
  7505  0025DC                     _toupper:
  7506                           	callstack 21
  7507  0025DC  0E9F               	movlw	159
  7508  0025DE  6E1A               	movwf	??_toupper^0,c
  7509  0025E0  0EFF               	movlw	255
  7510  0025E2  6E1B               	movwf	(??_toupper+1)^0,c
  7511  0025E4  C018  F01C         	movff	toupper@c,??_toupper+2
  7512  0025E8  C019  F01D         	movff	toupper@c+1,??_toupper+3
  7513  0025EC  501A               	movf	??_toupper^0,w,c
  7514  0025EE  261C               	addwf	(??_toupper+2)^0,f,c
  7515  0025F0  501B               	movf	(??_toupper+1)^0,w,c
  7516  0025F2  221D               	addwfc	(??_toupper+3)^0,f,c
  7517  0025F4  501D               	movf	(??_toupper+3)^0,w,c
  7518  0025F6  E10A               	bnz	u3920
  7519  0025F8  0E1A               	movlw	26
  7520  0025FA  5C1C               	subwf	(??_toupper+2)^0,w,c
  7521  0025FC  A0D8               	btfss	status,0,c
  7522  0025FE  EF03  F013         	goto	u3921
  7523  002602  EF06  F013         	goto	u3920
  7524  002606                     u3921:
  7525  002606  0E01               	movlw	1
  7526  002608  EF07  F013         	goto	u3930
  7527  00260C                     u3920:
  7528  00260C  0E00               	movlw	0
  7529  00260E                     u3930:
  7530  00260E  6E1E               	movwf	_toupper$1944^0,c
  7531  002610  6A1F               	clrf	(_toupper$1944+1)^0,c
  7532  002612  501E               	movf	_toupper$1944^0,w,c
  7533  002614  101F               	iorwf	(_toupper$1944+1)^0,w,c
  7534  002616  B4D8               	btfsc	status,2,c
  7535  002618  EF10  F013         	goto	u3941
  7536  00261C  EF12  F013         	goto	u3940
  7537  002620                     u3941:
  7538  002620  EF18  F013         	goto	l1486
  7539  002624                     u3940:
  7540  002624  0E5F               	movlw	95
  7541  002626  1418               	andwf	toupper@c^0,w,c
  7542  002628  6E18               	movwf	?_toupper^0,c
  7543  00262A  6A19               	clrf	(?_toupper+1)^0,c
  7544  00262C  EF1C  F013         	goto	l1491
  7545  002630                     l1486:
  7546  002630  C018  F018         	movff	toupper@c,?_toupper
  7547  002634  C019  F019         	movff	toupper@c+1,?_toupper+1
  7548  002638                     l1491:
  7549  002638  0012               	return		;funcret
  7550  00263A                     __end_of_toupper:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _islower *****************
  7554 ;; Defined at:
  7555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  c               2   17[COMRAM] int 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  2   17[COMRAM] int 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;Total ram usage:        6 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    4
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_toupper
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text27
  7584  002810                     __ptext27:
  7585                           	callstack 0
  7586  002810                     _islower:
  7587                           	callstack 21
  7588  002810  0E9F               	movlw	159
  7589  002812  6E14               	movwf	??_islower^0,c
  7590  002814  0EFF               	movlw	255
  7591  002816  6E15               	movwf	(??_islower+1)^0,c
  7592  002818  C012  F016         	movff	islower@c,??_islower+2
  7593  00281C  C013  F017         	movff	islower@c+1,??_islower+3
  7594  002820  5014               	movf	??_islower^0,w,c
  7595  002822  2616               	addwf	(??_islower+2)^0,f,c
  7596  002824  5015               	movf	(??_islower+1)^0,w,c
  7597  002826  2217               	addwfc	(??_islower+3)^0,f,c
  7598  002828  5017               	movf	(??_islower+3)^0,w,c
  7599  00282A  E10A               	bnz	u3610
  7600  00282C  0E1A               	movlw	26
  7601  00282E  5C16               	subwf	(??_islower+2)^0,w,c
  7602  002830  A0D8               	btfss	status,0,c
  7603  002832  EF1D  F014         	goto	u3611
  7604  002836  EF20  F014         	goto	u3610
  7605  00283A                     u3611:
  7606  00283A  0E01               	movlw	1
  7607  00283C  EF21  F014         	goto	u3620
  7608  002840                     u3610:
  7609  002840  0E00               	movlw	0
  7610  002842                     u3620:
  7611  002842  6E12               	movwf	?_islower^0,c
  7612  002844  6A13               	clrf	(?_islower+1)^0,c
  7613  002846  0012               	return		;funcret
  7614  002848                     __end_of_islower:
  7615                           	callstack 0
  7616                           
  7617 ;; *************** function _isupper *****************
  7618 ;; Defined at:
  7619 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  c               2   17[COMRAM] int 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;		None
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  2   17[COMRAM] int 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;Total ram usage:        6 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    4
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_xtoa
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text28
  7648  002848                     __ptext28:
  7649                           	callstack 0
  7650  002848                     _isupper:
  7651                           	callstack 22
  7652  002848  0EBF               	movlw	191
  7653  00284A  6E14               	movwf	??_isupper^0,c
  7654  00284C  0EFF               	movlw	255
  7655  00284E  6E15               	movwf	(??_isupper+1)^0,c
  7656  002850  C012  F016         	movff	isupper@c,??_isupper+2
  7657  002854  C013  F017         	movff	isupper@c+1,??_isupper+3
  7658  002858  5014               	movf	??_isupper^0,w,c
  7659  00285A  2616               	addwf	(??_isupper+2)^0,f,c
  7660  00285C  5015               	movf	(??_isupper+1)^0,w,c
  7661  00285E  2217               	addwfc	(??_isupper+3)^0,f,c
  7662  002860  5017               	movf	(??_isupper+3)^0,w,c
  7663  002862  E10A               	bnz	u3880
  7664  002864  0E1A               	movlw	26
  7665  002866  5C16               	subwf	(??_isupper+2)^0,w,c
  7666  002868  A0D8               	btfss	status,0,c
  7667  00286A  EF39  F014         	goto	u3881
  7668  00286E  EF3C  F014         	goto	u3880
  7669  002872                     u3881:
  7670  002872  0E01               	movlw	1
  7671  002874  EF3D  F014         	goto	u3890
  7672  002878                     u3880:
  7673  002878  0E00               	movlw	0
  7674  00287A                     u3890:
  7675  00287A  6E12               	movwf	?_isupper^0,c
  7676  00287C  6A13               	clrf	(?_isupper+1)^0,c
  7677  00287E  0012               	return		;funcret
  7678  002880                     __end_of_isupper:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _isalpha *****************
  7682 ;; Defined at:
  7683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  c               2   17[COMRAM] int 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  2   17[COMRAM] int 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;Total ram usage:        6 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    4
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_xtoa
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text29
  7712  00279C                     __ptext29:
  7713                           	callstack 0
  7714  00279C                     _isalpha:
  7715                           	callstack 22
  7716  00279C  0E9F               	movlw	159
  7717  00279E  6E14               	movwf	??_isalpha^0,c
  7718  0027A0  0EFF               	movlw	255
  7719  0027A2  6E15               	movwf	(??_isalpha+1)^0,c
  7720  0027A4  0E20               	movlw	32
  7721  0027A6  1012               	iorwf	isalpha@c^0,w,c
  7722  0027A8  6E16               	movwf	(??_isalpha+2)^0,c
  7723  0027AA  0E00               	movlw	0
  7724  0027AC  1013               	iorwf	(isalpha@c+1)^0,w,c
  7725  0027AE  6E17               	movwf	(??_isalpha+3)^0,c
  7726  0027B0  5014               	movf	??_isalpha^0,w,c
  7727  0027B2  2616               	addwf	(??_isalpha+2)^0,f,c
  7728  0027B4  5015               	movf	(??_isalpha+1)^0,w,c
  7729  0027B6  2217               	addwfc	(??_isalpha+3)^0,f,c
  7730  0027B8  5017               	movf	(??_isalpha+3)^0,w,c
  7731  0027BA  E10A               	bnz	u3900
  7732  0027BC  0E1A               	movlw	26
  7733  0027BE  5C16               	subwf	(??_isalpha+2)^0,w,c
  7734  0027C0  A0D8               	btfss	status,0,c
  7735  0027C2  EFE5  F013         	goto	u3901
  7736  0027C6  EFE8  F013         	goto	u3900
  7737  0027CA                     u3901:
  7738  0027CA  0E01               	movlw	1
  7739  0027CC  EFE9  F013         	goto	u3910
  7740  0027D0                     u3900:
  7741  0027D0  0E00               	movlw	0
  7742  0027D2                     u3910:
  7743  0027D2  6E12               	movwf	?_isalpha^0,c
  7744  0027D4  6A13               	clrf	(?_isalpha+1)^0,c
  7745  0027D6  0012               	return		;funcret
  7746  0027D8                     __end_of_isalpha:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function _utoa *****************
  7750 ;; Defined at:
  7751 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  7754 ;;		 -> NULL(0), 
  7755 ;;  d               8   48[COMRAM] unsigned long long 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  n               8   12[BANK0 ] unsigned long long 
  7758 ;;  i               2   20[BANK0 ] int 
  7759 ;;  w               2   10[BANK0 ] int 
  7760 ;;  p               2    8[BANK0 ] int 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  2   46[COMRAM] int 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7770 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7772 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;Total ram usage:       32 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    9
  7777 ;; This function calls:
  7778 ;;		___lodiv
  7779 ;;		___lomod
  7780 ;;		_pad
  7781 ;; This function is called by:
  7782 ;;		_vfpfcnvrt
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text30
  7787  00144A                     __ptext30:
  7788                           	callstack 0
  7789  00144A                     _utoa:
  7790                           	callstack 18
  7791  00144A                     
  7792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  7793  00144A  BE41               	btfsc	(_prec+1)^0,7,c
  7794  00144C  EF2A  F00A         	goto	u4191
  7795  001450  EF2C  F00A         	goto	u4190
  7796  001454                     u4191:
  7797  001454  EF2D  F00A         	goto	l4676
  7798  001458                     u4190:
  7799  001458                     
  7800                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  7801  001458  9242               	bcf	_flags^0,1,c
  7802  00145A                     l4676:
  7803                           
  7804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  7805  00145A  BE41               	btfsc	(_prec+1)^0,7,c
  7806  00145C  EF3A  F00A         	goto	u4200
  7807  001460  5041               	movf	(_prec+1)^0,w,c
  7808  001462  E106               	bnz	u4201
  7809  001464  0440               	decf	_prec^0,w,c
  7810  001466  B0D8               	btfsc	status,0,c
  7811  001468  EF38  F00A         	goto	u4201
  7812  00146C  EF3A  F00A         	goto	u4200
  7813  001470                     u4201:
  7814  001470  EF41  F00A         	goto	l1310
  7815  001474                     u4200:
  7816  001474  0E00               	movlw	0
  7817  001476  0100               	movlb	0	; () banked
  7818  001478  6F69               	movwf	(utoa@p+1)& (0+255),b
  7819  00147A  0E01               	movlw	1
  7820  00147C  6F68               	movwf	utoa@p& (0+255),b
  7821  00147E  EF45  F00A         	goto	l1312
  7822  001482                     l1310:
  7823  001482  C040  F068         	movff	_prec,utoa@p
  7824  001486  C041  F069         	movff	_prec+1,utoa@p+1
  7825  00148A                     l1312:
  7826                           
  7827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  7828  00148A  C03E  F06A         	movff	_width,utoa@w
  7829  00148E  C03F  F06B         	movff	_width+1,utoa@w+1
  7830                           
  7831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 628:     n = d;
  7832  001492  C031  F06C         	movff	utoa@d,utoa@n
  7833  001496  C032  F06D         	movff	utoa@d+1,utoa@n+1
  7834  00149A  C033  F06E         	movff	utoa@d+2,utoa@n+2
  7835  00149E  C034  F06F         	movff	utoa@d+3,utoa@n+3
  7836  0014A2  C035  F070         	movff	utoa@d+4,utoa@n+4
  7837  0014A6  C036  F071         	movff	utoa@d+5,utoa@n+5
  7838  0014AA  C037  F072         	movff	utoa@d+6,utoa@n+6
  7839  0014AE  C038  F073         	movff	utoa@d+7,utoa@n+7
  7840  0014B2                     
  7841                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  7842  0014B2  0E00               	movlw	0
  7843  0014B4  0100               	movlb	0	; () banked
  7844  0014B6  6F75               	movwf	(utoa@i+1)& (0+255),b
  7845  0014B8  0E1F               	movlw	31
  7846  0014BA  6F74               	movwf	utoa@i& (0+255),b
  7847  0014BC                     
  7848                           ; BSR set to: 0
  7849                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  7850  0014BC  0E00               	movlw	0
  7851  0014BE  6FF2               	movwf	(_dbuf+31)& (0+255),b
  7852                           
  7853                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7854  0014C0  EFD9  F00A         	goto	l4694
  7855  0014C4                     l4684:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 632:         --i;
  7859  0014C4  0774               	decf	utoa@i& (0+255),f,b
  7860  0014C6  A0D8               	btfss	status,0,c
  7861  0014C8  0775               	decf	(utoa@i+1)& (0+255),f,b
  7862  0014CA                     
  7863                           ; BSR set to: 0
  7864                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  7865  0014CA  0ED3               	movlw	low _dbuf
  7866  0014CC  2574               	addwf	utoa@i& (0+255),w,b
  7867  0014CE  6ED9               	movwf	fsr2l,c
  7868  0014D0  0E00               	movlw	high _dbuf
  7869  0014D2  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  7870  0014D4  6EDA               	movwf	fsr2h,c
  7871  0014D6  C06C  F012         	movff	utoa@n,___lomod@dividend
  7872  0014DA  C06D  F013         	movff	utoa@n+1,___lomod@dividend+1
  7873  0014DE  C06E  F014         	movff	utoa@n+2,___lomod@dividend+2
  7874  0014E2  C06F  F015         	movff	utoa@n+3,___lomod@dividend+3
  7875  0014E6  C070  F016         	movff	utoa@n+4,___lomod@dividend+4
  7876  0014EA  C071  F017         	movff	utoa@n+5,___lomod@dividend+5
  7877  0014EE  C072  F018         	movff	utoa@n+6,___lomod@dividend+6
  7878  0014F2  C073  F019         	movff	utoa@n+7,___lomod@dividend+7
  7879  0014F6  0E0A               	movlw	10
  7880  0014F8  6E1A               	movwf	___lomod@divisor^0,c
  7881  0014FA  0E00               	movlw	0
  7882  0014FC  6E1B               	movwf	(___lomod@divisor+1)^0,c
  7883  0014FE  0E00               	movlw	0
  7884  001500  6E1C               	movwf	(___lomod@divisor+2)^0,c
  7885  001502  0E00               	movlw	0
  7886  001504  6E1D               	movwf	(___lomod@divisor+3)^0,c
  7887  001506  0E00               	movlw	0
  7888  001508  6E1E               	movwf	(___lomod@divisor+4)^0,c
  7889  00150A  0E00               	movlw	0
  7890  00150C  6E1F               	movwf	(___lomod@divisor+5)^0,c
  7891  00150E  0E00               	movlw	0
  7892  001510  6E20               	movwf	(___lomod@divisor+6)^0,c
  7893  001512  0E00               	movlw	0
  7894  001514  6E21               	movwf	(___lomod@divisor+7)^0,c
  7895  001516  ECFF  F00F         	call	___lomod	;wreg free
  7896  00151A  C012  F060         	movff	?___lomod,??_utoa
  7897  00151E  C013  F061         	movff	?___lomod+1,??_utoa+1
  7898  001522  C014  F062         	movff	?___lomod+2,??_utoa+2
  7899  001526  C015  F063         	movff	?___lomod+3,??_utoa+3
  7900  00152A  C016  F064         	movff	?___lomod+4,??_utoa+4
  7901  00152E  C017  F065         	movff	?___lomod+5,??_utoa+5
  7902  001532  C018  F066         	movff	?___lomod+6,??_utoa+6
  7903  001536  C019  F067         	movff	?___lomod+7,??_utoa+7
  7904  00153A  0100               	movlb	0	; () banked
  7905  00153C  5160               	movf	??_utoa& (0+255),w,b
  7906  00153E  0F30               	addlw	48
  7907  001540  6EDF               	movwf	indf2,c
  7908  001542                     
  7909                           ; BSR set to: 0
  7910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 634:         --p;
  7911  001542  0768               	decf	utoa@p& (0+255),f,b
  7912  001544  A0D8               	btfss	status,0,c
  7913  001546  0769               	decf	(utoa@p+1)& (0+255),f,b
  7914  001548                     
  7915                           ; BSR set to: 0
  7916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 635:         --w;
  7917  001548  076A               	decf	utoa@w& (0+255),f,b
  7918  00154A  A0D8               	btfss	status,0,c
  7919  00154C  076B               	decf	(utoa@w+1)& (0+255),f,b
  7920  00154E                     
  7921                           ; BSR set to: 0
  7922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  7923  00154E  C06C  F012         	movff	utoa@n,___lodiv@dividend
  7924  001552  C06D  F013         	movff	utoa@n+1,___lodiv@dividend+1
  7925  001556  C06E  F014         	movff	utoa@n+2,___lodiv@dividend+2
  7926  00155A  C06F  F015         	movff	utoa@n+3,___lodiv@dividend+3
  7927  00155E  C070  F016         	movff	utoa@n+4,___lodiv@dividend+4
  7928  001562  C071  F017         	movff	utoa@n+5,___lodiv@dividend+5
  7929  001566  C072  F018         	movff	utoa@n+6,___lodiv@dividend+6
  7930  00156A  C073  F019         	movff	utoa@n+7,___lodiv@dividend+7
  7931  00156E  0E0A               	movlw	10
  7932  001570  6E1A               	movwf	___lodiv@divisor^0,c
  7933  001572  0E00               	movlw	0
  7934  001574  6E1B               	movwf	(___lodiv@divisor+1)^0,c
  7935  001576  0E00               	movlw	0
  7936  001578  6E1C               	movwf	(___lodiv@divisor+2)^0,c
  7937  00157A  0E00               	movlw	0
  7938  00157C  6E1D               	movwf	(___lodiv@divisor+3)^0,c
  7939  00157E  0E00               	movlw	0
  7940  001580  6E1E               	movwf	(___lodiv@divisor+4)^0,c
  7941  001582  0E00               	movlw	0
  7942  001584  6E1F               	movwf	(___lodiv@divisor+5)^0,c
  7943  001586  0E00               	movlw	0
  7944  001588  6E20               	movwf	(___lodiv@divisor+6)^0,c
  7945  00158A  0E00               	movlw	0
  7946  00158C  6E21               	movwf	(___lodiv@divisor+7)^0,c
  7947  00158E  EC1D  F00F         	call	___lodiv	;wreg free
  7948  001592  C012  F06C         	movff	?___lodiv,utoa@n
  7949  001596  C013  F06D         	movff	?___lodiv+1,utoa@n+1
  7950  00159A  C014  F06E         	movff	?___lodiv+2,utoa@n+2
  7951  00159E  C015  F06F         	movff	?___lodiv+3,utoa@n+3
  7952  0015A2  C016  F070         	movff	?___lodiv+4,utoa@n+4
  7953  0015A6  C017  F071         	movff	?___lodiv+5,utoa@n+5
  7954  0015AA  C018  F072         	movff	?___lodiv+6,utoa@n+6
  7955  0015AE  C019  F073         	movff	?___lodiv+7,utoa@n+7
  7956  0015B2                     l4694:
  7957                           
  7958                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7959  0015B2  0100               	movlb	0	; () banked
  7960  0015B4  5174               	movf	utoa@i& (0+255),w,b
  7961  0015B6  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  7962  0015B8  B4D8               	btfsc	status,2,c
  7963  0015BA  EFE1  F00A         	goto	u4211
  7964  0015BE  EFE3  F00A         	goto	u4210
  7965  0015C2                     u4211:
  7966  0015C2  EF13  F00B         	goto	l4704
  7967  0015C6                     u4210:
  7968  0015C6                     
  7969                           ; BSR set to: 0
  7970  0015C6  516C               	movf	utoa@n& (0+255),w,b
  7971  0015C8  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  7972  0015CA  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  7973  0015CC  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  7974  0015CE  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  7975  0015D0  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  7976  0015D2  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  7977  0015D4  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  7978  0015D6  A4D8               	btfss	status,2,c
  7979  0015D8  EFF0  F00A         	goto	u4221
  7980  0015DC  EFF2  F00A         	goto	u4220
  7981  0015E0                     u4221:
  7982  0015E0  EF62  F00A         	goto	l4684
  7983  0015E4                     u4220:
  7984  0015E4                     
  7985                           ; BSR set to: 0
  7986  0015E4  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
  7987  0015E6  EFFF  F00A         	goto	u4230
  7988  0015EA  5169               	movf	(utoa@p+1)& (0+255),w,b
  7989  0015EC  E106               	bnz	u4231
  7990  0015EE  0568               	decf	utoa@p& (0+255),w,b
  7991  0015F0  B0D8               	btfsc	status,0,c
  7992  0015F2  EFFD  F00A         	goto	u4231
  7993  0015F6  EFFF  F00A         	goto	u4230
  7994  0015FA                     u4231:
  7995  0015FA  EF62  F00A         	goto	l4684
  7996  0015FE                     u4230:
  7997  0015FE                     
  7998                           ; BSR set to: 0
  7999  0015FE  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
  8000  001600  EF0A  F00B         	goto	u4241
  8001  001604  516B               	movf	(utoa@w+1)& (0+255),w,b
  8002  001606  E108               	bnz	u4240
  8003  001608  056A               	decf	utoa@w& (0+255),w,b
  8004  00160A  A0D8               	btfss	status,0,c
  8005  00160C  EF0A  F00B         	goto	u4241
  8006  001610  EF0C  F00B         	goto	u4240
  8007  001614                     u4241:
  8008  001614  EF13  F00B         	goto	l4704
  8009  001618                     u4240:
  8010  001618                     
  8011                           ; BSR set to: 0
  8012  001618  B242               	btfsc	_flags^0,1,c
  8013  00161A  EF11  F00B         	goto	u4251
  8014  00161E  EF13  F00B         	goto	u4250
  8015  001622                     u4251:
  8016  001622  EF62  F00A         	goto	l4684
  8017  001626                     u4250:
  8018  001626                     l4704:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  8022  001626  C02F  F024         	movff	utoa@fp,pad@fp
  8023  00162A  C030  F025         	movff	utoa@fp+1,pad@fp+1
  8024  00162E  0ED3               	movlw	low _dbuf
  8025  001630  2574               	addwf	utoa@i& (0+255),w,b
  8026  001632  6E26               	movwf	pad@buf^0,c
  8027  001634  0E00               	movlw	high _dbuf
  8028  001636  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  8029  001638  6E27               	movwf	(pad@buf+1)^0,c
  8030  00163A  C06A  F028         	movff	utoa@w,pad@p
  8031  00163E  C06B  F029         	movff	utoa@w+1,pad@p+1
  8032  001642  ECCE  F010         	call	_pad	;wreg free
  8033  001646  C024  F02F         	movff	?_pad,?_utoa
  8034  00164A  C025  F030         	movff	?_pad+1,?_utoa+1
  8035  00164E  0012               	return		;funcret
  8036  001650                     __end_of_utoa:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function ___lomod *****************
  8040 ;; Defined at:
  8041 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lomod.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  dividend        8   17[COMRAM] unsigned long long 
  8044 ;;  divisor         8   25[COMRAM] unsigned long long 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  counter         1   33[COMRAM] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  8   17[COMRAM] unsigned long long 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8056 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8059 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;Total ram usage:       17 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    4
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_utoa
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text31
  8071  001FFE                     __ptext31:
  8072                           	callstack 0
  8073  001FFE                     ___lomod:
  8074                           	callstack 22
  8075  001FFE  501A               	movf	___lomod@divisor^0,w,c
  8076  002000  101B               	iorwf	(___lomod@divisor+1)^0,w,c
  8077  002002  101C               	iorwf	(___lomod@divisor+2)^0,w,c
  8078  002004  101D               	iorwf	(___lomod@divisor+3)^0,w,c
  8079  002006  101E               	iorwf	(___lomod@divisor+4)^0,w,c
  8080  002008  101F               	iorwf	(___lomod@divisor+5)^0,w,c
  8081  00200A  1020               	iorwf	(___lomod@divisor+6)^0,w,c
  8082  00200C  1021               	iorwf	(___lomod@divisor+7)^0,w,c
  8083  00200E  B4D8               	btfsc	status,2,c
  8084  002010  EF0C  F010         	goto	u3801
  8085  002014  EF0E  F010         	goto	u3800
  8086  002018                     u3801:
  8087  002018  EF56  F010         	goto	l991
  8088  00201C                     u3800:
  8089  00201C  0E01               	movlw	1
  8090  00201E  6E22               	movwf	___lomod@counter^0,c
  8091  002020  EF1C  F010         	goto	l4512
  8092  002024                     l4510:
  8093  002024  90D8               	bcf	status,0,c
  8094  002026  361A               	rlcf	___lomod@divisor^0,f,c
  8095  002028  361B               	rlcf	(___lomod@divisor+1)^0,f,c
  8096  00202A  361C               	rlcf	(___lomod@divisor+2)^0,f,c
  8097  00202C  361D               	rlcf	(___lomod@divisor+3)^0,f,c
  8098  00202E  361E               	rlcf	(___lomod@divisor+4)^0,f,c
  8099  002030  361F               	rlcf	(___lomod@divisor+5)^0,f,c
  8100  002032  3620               	rlcf	(___lomod@divisor+6)^0,f,c
  8101  002034  3621               	rlcf	(___lomod@divisor+7)^0,f,c
  8102  002036  2A22               	incf	___lomod@counter^0,f,c
  8103  002038                     l4512:
  8104  002038  AE21               	btfss	(___lomod@divisor+7)^0,7,c
  8105  00203A  EF21  F010         	goto	u3811
  8106  00203E  EF23  F010         	goto	u3810
  8107  002042                     u3811:
  8108  002042  EF12  F010         	goto	l4510
  8109  002046                     u3810:
  8110  002046                     l4514:
  8111  002046  501A               	movf	___lomod@divisor^0,w,c
  8112  002048  5C12               	subwf	___lomod@dividend^0,w,c
  8113  00204A  501B               	movf	(___lomod@divisor+1)^0,w,c
  8114  00204C  5813               	subwfb	(___lomod@dividend+1)^0,w,c
  8115  00204E  501C               	movf	(___lomod@divisor+2)^0,w,c
  8116  002050  5814               	subwfb	(___lomod@dividend+2)^0,w,c
  8117  002052  501D               	movf	(___lomod@divisor+3)^0,w,c
  8118  002054  5815               	subwfb	(___lomod@dividend+3)^0,w,c
  8119  002056  501E               	movf	(___lomod@divisor+4)^0,w,c
  8120  002058  5816               	subwfb	(___lomod@dividend+4)^0,w,c
  8121  00205A  501F               	movf	(___lomod@divisor+5)^0,w,c
  8122  00205C  5817               	subwfb	(___lomod@dividend+5)^0,w,c
  8123  00205E  5020               	movf	(___lomod@divisor+6)^0,w,c
  8124  002060  5818               	subwfb	(___lomod@dividend+6)^0,w,c
  8125  002062  5021               	movf	(___lomod@divisor+7)^0,w,c
  8126  002064  5819               	subwfb	(___lomod@dividend+7)^0,w,c
  8127  002066  A0D8               	btfss	status,0,c
  8128  002068  EF38  F010         	goto	u3821
  8129  00206C  EF3A  F010         	goto	u3820
  8130  002070                     u3821:
  8131  002070  EF4A  F010         	goto	l4518
  8132  002074                     u3820:
  8133  002074  501A               	movf	___lomod@divisor^0,w,c
  8134  002076  5E12               	subwf	___lomod@dividend^0,f,c
  8135  002078  501B               	movf	(___lomod@divisor+1)^0,w,c
  8136  00207A  5A13               	subwfb	(___lomod@dividend+1)^0,f,c
  8137  00207C  501C               	movf	(___lomod@divisor+2)^0,w,c
  8138  00207E  5A14               	subwfb	(___lomod@dividend+2)^0,f,c
  8139  002080  501D               	movf	(___lomod@divisor+3)^0,w,c
  8140  002082  5A15               	subwfb	(___lomod@dividend+3)^0,f,c
  8141  002084  501E               	movf	(___lomod@divisor+4)^0,w,c
  8142  002086  5A16               	subwfb	(___lomod@dividend+4)^0,f,c
  8143  002088  501F               	movf	(___lomod@divisor+5)^0,w,c
  8144  00208A  5A17               	subwfb	(___lomod@dividend+5)^0,f,c
  8145  00208C  5020               	movf	(___lomod@divisor+6)^0,w,c
  8146  00208E  5A18               	subwfb	(___lomod@dividend+6)^0,f,c
  8147  002090  5021               	movf	(___lomod@divisor+7)^0,w,c
  8148  002092  5A19               	subwfb	(___lomod@dividend+7)^0,f,c
  8149  002094                     l4518:
  8150  002094  90D8               	bcf	status,0,c
  8151  002096  3221               	rrcf	(___lomod@divisor+7)^0,f,c
  8152  002098  3220               	rrcf	(___lomod@divisor+6)^0,f,c
  8153  00209A  321F               	rrcf	(___lomod@divisor+5)^0,f,c
  8154  00209C  321E               	rrcf	(___lomod@divisor+4)^0,f,c
  8155  00209E  321D               	rrcf	(___lomod@divisor+3)^0,f,c
  8156  0020A0  321C               	rrcf	(___lomod@divisor+2)^0,f,c
  8157  0020A2  321B               	rrcf	(___lomod@divisor+1)^0,f,c
  8158  0020A4  321A               	rrcf	___lomod@divisor^0,f,c
  8159  0020A6  2E22               	decfsz	___lomod@counter^0,f,c
  8160  0020A8  EF23  F010         	goto	l4514
  8161  0020AC                     l991:
  8162  0020AC  C012  F012         	movff	___lomod@dividend,?___lomod
  8163  0020B0  C013  F013         	movff	___lomod@dividend+1,?___lomod+1
  8164  0020B4  C014  F014         	movff	___lomod@dividend+2,?___lomod+2
  8165  0020B8  C015  F015         	movff	___lomod@dividend+3,?___lomod+3
  8166  0020BC  C016  F016         	movff	___lomod@dividend+4,?___lomod+4
  8167  0020C0  C017  F017         	movff	___lomod@dividend+5,?___lomod+5
  8168  0020C4  C018  F018         	movff	___lomod@dividend+6,?___lomod+6
  8169  0020C8  C019  F019         	movff	___lomod@dividend+7,?___lomod+7
  8170  0020CC  0012               	return		;funcret
  8171  0020CE                     __end_of___lomod:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function ___lodiv *****************
  8175 ;; Defined at:
  8176 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lodiv.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  dividend        8   17[COMRAM] unsigned long long 
  8179 ;;  divisor         8   25[COMRAM] unsigned long long 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  quotient        8   33[COMRAM] unsigned long long 
  8182 ;;  counter         1   41[COMRAM] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  8   17[COMRAM] unsigned long long 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8192 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;Total ram usage:       25 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    4
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_utoa
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text32
  8207  001E3A                     __ptext32:
  8208                           	callstack 0
  8209  001E3A                     ___lodiv:
  8210                           	callstack 22
  8211  001E3A  EE20  F022         	lfsr	2,___lodiv@quotient
  8212  001E3E  0E07               	movlw	7
  8213  001E40                     u3761:
  8214  001E40  6ADE               	clrf	postinc2,c
  8215  001E42  06E8               	decf	wreg,f,c
  8216  001E44  E2FD               	bc	u3761
  8217  001E46  501A               	movf	___lodiv@divisor^0,w,c
  8218  001E48  101B               	iorwf	(___lodiv@divisor+1)^0,w,c
  8219  001E4A  101C               	iorwf	(___lodiv@divisor+2)^0,w,c
  8220  001E4C  101D               	iorwf	(___lodiv@divisor+3)^0,w,c
  8221  001E4E  101E               	iorwf	(___lodiv@divisor+4)^0,w,c
  8222  001E50  101F               	iorwf	(___lodiv@divisor+5)^0,w,c
  8223  001E52  1020               	iorwf	(___lodiv@divisor+6)^0,w,c
  8224  001E54  1021               	iorwf	(___lodiv@divisor+7)^0,w,c
  8225  001E56  B4D8               	btfsc	status,2,c
  8226  001E58  EF30  F00F         	goto	u3771
  8227  001E5C  EF32  F00F         	goto	u3770
  8228  001E60                     u3771:
  8229  001E60  EF84  F00F         	goto	l981
  8230  001E64                     u3770:
  8231  001E64  0E01               	movlw	1
  8232  001E66  6E2A               	movwf	___lodiv@counter^0,c
  8233  001E68  EF40  F00F         	goto	l4492
  8234  001E6C                     l4490:
  8235  001E6C  90D8               	bcf	status,0,c
  8236  001E6E  361A               	rlcf	___lodiv@divisor^0,f,c
  8237  001E70  361B               	rlcf	(___lodiv@divisor+1)^0,f,c
  8238  001E72  361C               	rlcf	(___lodiv@divisor+2)^0,f,c
  8239  001E74  361D               	rlcf	(___lodiv@divisor+3)^0,f,c
  8240  001E76  361E               	rlcf	(___lodiv@divisor+4)^0,f,c
  8241  001E78  361F               	rlcf	(___lodiv@divisor+5)^0,f,c
  8242  001E7A  3620               	rlcf	(___lodiv@divisor+6)^0,f,c
  8243  001E7C  3621               	rlcf	(___lodiv@divisor+7)^0,f,c
  8244  001E7E  2A2A               	incf	___lodiv@counter^0,f,c
  8245  001E80                     l4492:
  8246  001E80  AE21               	btfss	(___lodiv@divisor+7)^0,7,c
  8247  001E82  EF45  F00F         	goto	u3781
  8248  001E86  EF47  F00F         	goto	u3780
  8249  001E8A                     u3781:
  8250  001E8A  EF36  F00F         	goto	l4490
  8251  001E8E                     u3780:
  8252  001E8E                     l4494:
  8253  001E8E  90D8               	bcf	status,0,c
  8254  001E90  3622               	rlcf	___lodiv@quotient^0,f,c
  8255  001E92  3623               	rlcf	(___lodiv@quotient+1)^0,f,c
  8256  001E94  3624               	rlcf	(___lodiv@quotient+2)^0,f,c
  8257  001E96  3625               	rlcf	(___lodiv@quotient+3)^0,f,c
  8258  001E98  3626               	rlcf	(___lodiv@quotient+4)^0,f,c
  8259  001E9A  3627               	rlcf	(___lodiv@quotient+5)^0,f,c
  8260  001E9C  3628               	rlcf	(___lodiv@quotient+6)^0,f,c
  8261  001E9E  3629               	rlcf	(___lodiv@quotient+7)^0,f,c
  8262  001EA0  501A               	movf	___lodiv@divisor^0,w,c
  8263  001EA2  5C12               	subwf	___lodiv@dividend^0,w,c
  8264  001EA4  501B               	movf	(___lodiv@divisor+1)^0,w,c
  8265  001EA6  5813               	subwfb	(___lodiv@dividend+1)^0,w,c
  8266  001EA8  501C               	movf	(___lodiv@divisor+2)^0,w,c
  8267  001EAA  5814               	subwfb	(___lodiv@dividend+2)^0,w,c
  8268  001EAC  501D               	movf	(___lodiv@divisor+3)^0,w,c
  8269  001EAE  5815               	subwfb	(___lodiv@dividend+3)^0,w,c
  8270  001EB0  501E               	movf	(___lodiv@divisor+4)^0,w,c
  8271  001EB2  5816               	subwfb	(___lodiv@dividend+4)^0,w,c
  8272  001EB4  501F               	movf	(___lodiv@divisor+5)^0,w,c
  8273  001EB6  5817               	subwfb	(___lodiv@dividend+5)^0,w,c
  8274  001EB8  5020               	movf	(___lodiv@divisor+6)^0,w,c
  8275  001EBA  5818               	subwfb	(___lodiv@dividend+6)^0,w,c
  8276  001EBC  5021               	movf	(___lodiv@divisor+7)^0,w,c
  8277  001EBE  5819               	subwfb	(___lodiv@dividend+7)^0,w,c
  8278  001EC0  A0D8               	btfss	status,0,c
  8279  001EC2  EF65  F00F         	goto	u3791
  8280  001EC6  EF67  F00F         	goto	u3790
  8281  001ECA                     u3791:
  8282  001ECA  EF78  F00F         	goto	l4502
  8283  001ECE                     u3790:
  8284  001ECE  501A               	movf	___lodiv@divisor^0,w,c
  8285  001ED0  5E12               	subwf	___lodiv@dividend^0,f,c
  8286  001ED2  501B               	movf	(___lodiv@divisor+1)^0,w,c
  8287  001ED4  5A13               	subwfb	(___lodiv@dividend+1)^0,f,c
  8288  001ED6  501C               	movf	(___lodiv@divisor+2)^0,w,c
  8289  001ED8  5A14               	subwfb	(___lodiv@dividend+2)^0,f,c
  8290  001EDA  501D               	movf	(___lodiv@divisor+3)^0,w,c
  8291  001EDC  5A15               	subwfb	(___lodiv@dividend+3)^0,f,c
  8292  001EDE  501E               	movf	(___lodiv@divisor+4)^0,w,c
  8293  001EE0  5A16               	subwfb	(___lodiv@dividend+4)^0,f,c
  8294  001EE2  501F               	movf	(___lodiv@divisor+5)^0,w,c
  8295  001EE4  5A17               	subwfb	(___lodiv@dividend+5)^0,f,c
  8296  001EE6  5020               	movf	(___lodiv@divisor+6)^0,w,c
  8297  001EE8  5A18               	subwfb	(___lodiv@dividend+6)^0,f,c
  8298  001EEA  5021               	movf	(___lodiv@divisor+7)^0,w,c
  8299  001EEC  5A19               	subwfb	(___lodiv@dividend+7)^0,f,c
  8300  001EEE  8022               	bsf	___lodiv@quotient^0,0,c
  8301  001EF0                     l4502:
  8302  001EF0  90D8               	bcf	status,0,c
  8303  001EF2  3221               	rrcf	(___lodiv@divisor+7)^0,f,c
  8304  001EF4  3220               	rrcf	(___lodiv@divisor+6)^0,f,c
  8305  001EF6  321F               	rrcf	(___lodiv@divisor+5)^0,f,c
  8306  001EF8  321E               	rrcf	(___lodiv@divisor+4)^0,f,c
  8307  001EFA  321D               	rrcf	(___lodiv@divisor+3)^0,f,c
  8308  001EFC  321C               	rrcf	(___lodiv@divisor+2)^0,f,c
  8309  001EFE  321B               	rrcf	(___lodiv@divisor+1)^0,f,c
  8310  001F00  321A               	rrcf	___lodiv@divisor^0,f,c
  8311  001F02  2E2A               	decfsz	___lodiv@counter^0,f,c
  8312  001F04  EF47  F00F         	goto	l4494
  8313  001F08                     l981:
  8314  001F08  C022  F012         	movff	___lodiv@quotient,?___lodiv
  8315  001F0C  C023  F013         	movff	___lodiv@quotient+1,?___lodiv+1
  8316  001F10  C024  F014         	movff	___lodiv@quotient+2,?___lodiv+2
  8317  001F14  C025  F015         	movff	___lodiv@quotient+3,?___lodiv+3
  8318  001F18  C026  F016         	movff	___lodiv@quotient+4,?___lodiv+4
  8319  001F1C  C027  F017         	movff	___lodiv@quotient+5,?___lodiv+5
  8320  001F20  C028  F018         	movff	___lodiv@quotient+6,?___lodiv+6
  8321  001F24  C029  F019         	movff	___lodiv@quotient+7,?___lodiv+7
  8322  001F28  0012               	return		;funcret
  8323  001F2A                     __end_of___lodiv:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _dtoa *****************
  8327 ;; Defined at:
  8328 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  8331 ;;		 -> NULL(0), 
  8332 ;;  d               8   48[COMRAM] long long 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  n               8   16[BANK0 ] long long 
  8335 ;;  i               2   24[BANK0 ] int 
  8336 ;;  s               2   14[BANK0 ] int 
  8337 ;;  w               2   12[BANK0 ] int 
  8338 ;;  p               2   10[BANK0 ] int 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2   46[COMRAM] int 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8348 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;Total ram usage:       36 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    9
  8355 ;; This function calls:
  8356 ;;		___aodiv
  8357 ;;		___aomod
  8358 ;;		_abs
  8359 ;;		_pad
  8360 ;; This function is called by:
  8361 ;;		_vfpfcnvrt
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text33
  8366  000E8E                     __ptext33:
  8367                           	callstack 0
  8368  000E8E                     _dtoa:
  8369                           	callstack 18
  8370  000E8E                     
  8371                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8372  000E8E  C031  F070         	movff	dtoa@d,dtoa@n
  8373  000E92  C032  F071         	movff	dtoa@d+1,dtoa@n+1
  8374  000E96  C033  F072         	movff	dtoa@d+2,dtoa@n+2
  8375  000E9A  C034  F073         	movff	dtoa@d+3,dtoa@n+3
  8376  000E9E  C035  F074         	movff	dtoa@d+4,dtoa@n+4
  8377  000EA2  C036  F075         	movff	dtoa@d+5,dtoa@n+5
  8378  000EA6  C037  F076         	movff	dtoa@d+6,dtoa@n+6
  8379  000EAA  C038  F077         	movff	dtoa@d+7,dtoa@n+7
  8380  000EAE                     
  8381                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8382  000EAE  0100               	movlb	0	; () banked
  8383  000EB0  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  8384  000EB2  EF5D  F007         	goto	u4041
  8385  000EB6  EF60  F007         	goto	u4040
  8386  000EBA                     u4041:
  8387  000EBA  0E01               	movlw	1
  8388  000EBC  EF61  F007         	goto	u4050
  8389  000EC0                     u4040:
  8390  000EC0  0E00               	movlw	0
  8391  000EC2                     u4050:
  8392  000EC2  6F6E               	movwf	dtoa@s& (0+255),b
  8393  000EC4  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  8394                           
  8395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8396  000EC6  516E               	movf	dtoa@s& (0+255),w,b
  8397  000EC8  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8398  000ECA  B4D8               	btfsc	status,2,c
  8399  000ECC  EF6A  F007         	goto	u4061
  8400  000ED0  EF6C  F007         	goto	u4060
  8401  000ED4                     u4061:
  8402  000ED4  EF7C  F007         	goto	l4616
  8403  000ED8                     u4060:
  8404  000ED8                     
  8405                           ; BSR set to: 0
  8406                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8407  000ED8  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  8408  000EDA  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  8409  000EDC  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  8410  000EDE  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  8411  000EE0  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  8412  000EE2  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  8413  000EE4  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  8414  000EE6  6D70               	negf	dtoa@n& (0+255),b
  8415  000EE8  0E00               	movlw	0
  8416  000EEA  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  8417  000EEC  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  8418  000EEE  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  8419  000EF0  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  8420  000EF2  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  8421  000EF4  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  8422  000EF6  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  8423  000EF8                     l4616:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8427  000EF8  BE41               	btfsc	(_prec+1)^0,7,c
  8428  000EFA  EF81  F007         	goto	u4071
  8429  000EFE  EF83  F007         	goto	u4070
  8430  000F02                     u4071:
  8431  000F02  EF84  F007         	goto	l4620
  8432  000F06                     u4070:
  8433  000F06                     
  8434                           ; BSR set to: 0
  8435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8436  000F06  9242               	bcf	_flags^0,1,c
  8437  000F08                     l4620:
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8441  000F08  BE41               	btfsc	(_prec+1)^0,7,c
  8442  000F0A  EF91  F007         	goto	u4080
  8443  000F0E  5041               	movf	(_prec+1)^0,w,c
  8444  000F10  E106               	bnz	u4081
  8445  000F12  0440               	decf	_prec^0,w,c
  8446  000F14  B0D8               	btfsc	status,0,c
  8447  000F16  EF8F  F007         	goto	u4081
  8448  000F1A  EF91  F007         	goto	u4080
  8449  000F1E                     u4081:
  8450  000F1E  EF97  F007         	goto	l1285
  8451  000F22                     u4080:
  8452  000F22                     
  8453                           ; BSR set to: 0
  8454  000F22  0E00               	movlw	0
  8455  000F24  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  8456  000F26  0E01               	movlw	1
  8457  000F28  6F6A               	movwf	dtoa@p& (0+255),b
  8458  000F2A  EF9B  F007         	goto	l1287
  8459  000F2E                     l1285:
  8460                           
  8461                           ; BSR set to: 0
  8462  000F2E  C040  F06A         	movff	_prec,dtoa@p
  8463  000F32  C041  F06B         	movff	_prec+1,dtoa@p+1
  8464  000F36                     l1287:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8468  000F36  C03E  F06C         	movff	_width,dtoa@w
  8469  000F3A  C03F  F06D         	movff	_width+1,dtoa@w+1
  8470  000F3E                     
  8471                           ; BSR set to: 0
  8472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8473  000F3E  516E               	movf	dtoa@s& (0+255),w,b
  8474  000F40  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8475  000F42  A4D8               	btfss	status,2,c
  8476  000F44  EFA6  F007         	goto	u4091
  8477  000F48  EFA8  F007         	goto	u4090
  8478  000F4C                     u4091:
  8479  000F4C  EFAF  F007         	goto	l4628
  8480  000F50                     u4090:
  8481  000F50                     
  8482                           ; BSR set to: 0
  8483  000F50  A442               	btfss	_flags^0,2,c
  8484  000F52  EFAD  F007         	goto	u4101
  8485  000F56  EFAF  F007         	goto	u4100
  8486  000F5A                     u4101:
  8487  000F5A  EFB2  F007         	goto	l4630
  8488  000F5E                     u4100:
  8489  000F5E                     l4628:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  8493  000F5E  076C               	decf	dtoa@w& (0+255),f,b
  8494  000F60  A0D8               	btfss	status,0,c
  8495  000F62  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8496  000F64                     l4630:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8500  000F64  0E00               	movlw	0
  8501  000F66  6F79               	movwf	(dtoa@i+1)& (0+255),b
  8502  000F68  0E1F               	movlw	31
  8503  000F6A  6F78               	movwf	dtoa@i& (0+255),b
  8504  000F6C                     
  8505                           ; BSR set to: 0
  8506                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8507  000F6C  0E00               	movlw	0
  8508  000F6E  6FF2               	movwf	(_dbuf+31)& (0+255),b
  8509                           
  8510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8511  000F70  EF37  F008         	goto	l4644
  8512  000F74                     l4634:
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  8516  000F74  0778               	decf	dtoa@i& (0+255),f,b
  8517  000F76  A0D8               	btfss	status,0,c
  8518  000F78  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8519  000F7A                     
  8520                           ; BSR set to: 0
  8521                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8522  000F7A  0ED3               	movlw	low _dbuf
  8523  000F7C  2578               	addwf	dtoa@i& (0+255),w,b
  8524  000F7E  6ED9               	movwf	fsr2l,c
  8525  000F80  0E00               	movlw	high _dbuf
  8526  000F82  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8527  000F84  6EDA               	movwf	fsr2h,c
  8528  000F86  C070  F012         	movff	dtoa@n,___aomod@dividend
  8529  000F8A  C071  F013         	movff	dtoa@n+1,___aomod@dividend+1
  8530  000F8E  C072  F014         	movff	dtoa@n+2,___aomod@dividend+2
  8531  000F92  C073  F015         	movff	dtoa@n+3,___aomod@dividend+3
  8532  000F96  C074  F016         	movff	dtoa@n+4,___aomod@dividend+4
  8533  000F9A  C075  F017         	movff	dtoa@n+5,___aomod@dividend+5
  8534  000F9E  C076  F018         	movff	dtoa@n+6,___aomod@dividend+6
  8535  000FA2  C077  F019         	movff	dtoa@n+7,___aomod@dividend+7
  8536  000FA6  0E0A               	movlw	10
  8537  000FA8  6E1A               	movwf	___aomod@divisor^0,c
  8538  000FAA  0E00               	movlw	0
  8539  000FAC  6E1B               	movwf	(___aomod@divisor+1)^0,c
  8540  000FAE  0E00               	movlw	0
  8541  000FB0  6E1C               	movwf	(___aomod@divisor+2)^0,c
  8542  000FB2  0E00               	movlw	0
  8543  000FB4  6E1D               	movwf	(___aomod@divisor+3)^0,c
  8544  000FB6  0E00               	movlw	0
  8545  000FB8  6E1E               	movwf	(___aomod@divisor+4)^0,c
  8546  000FBA  0E00               	movlw	0
  8547  000FBC  6E1F               	movwf	(___aomod@divisor+5)^0,c
  8548  000FBE  0E00               	movlw	0
  8549  000FC0  6E20               	movwf	(___aomod@divisor+6)^0,c
  8550  000FC2  0E00               	movlw	0
  8551  000FC4  6E21               	movwf	(___aomod@divisor+7)^0,c
  8552  000FC6  EC6B  F00E         	call	___aomod	;wreg free
  8553  000FCA  C012  F060         	movff	?___aomod,??_dtoa
  8554  000FCE  C013  F061         	movff	?___aomod+1,??_dtoa+1
  8555  000FD2  C014  F062         	movff	?___aomod+2,??_dtoa+2
  8556  000FD6  C015  F063         	movff	?___aomod+3,??_dtoa+3
  8557  000FDA  C016  F064         	movff	?___aomod+4,??_dtoa+4
  8558  000FDE  C017  F065         	movff	?___aomod+5,??_dtoa+5
  8559  000FE2  C018  F066         	movff	?___aomod+6,??_dtoa+6
  8560  000FE6  C019  F067         	movff	?___aomod+7,??_dtoa+7
  8561  000FEA  C060  F024         	movff	??_dtoa,abs@a
  8562  000FEE  C062  F025         	movff	??_dtoa+2,abs@a+1
  8563  000FF2  EC8F  F013         	call	_abs	;wreg free
  8564  000FF6  5024               	movf	?_abs^0,w,c
  8565  000FF8  0F30               	addlw	48
  8566  000FFA  6EDF               	movwf	indf2,c
  8567  000FFC                     
  8568                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  8569  000FFC  0100               	movlb	0	; () banked
  8570  000FFE  076A               	decf	dtoa@p& (0+255),f,b
  8571  001000  A0D8               	btfss	status,0,c
  8572  001002  076B               	decf	(dtoa@p+1)& (0+255),f,b
  8573  001004                     
  8574                           ; BSR set to: 0
  8575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  8576  001004  076C               	decf	dtoa@w& (0+255),f,b
  8577  001006  A0D8               	btfss	status,0,c
  8578  001008  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8579  00100A                     
  8580                           ; BSR set to: 0
  8581                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8582  00100A  C070  F012         	movff	dtoa@n,___aodiv@dividend
  8583  00100E  C071  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  8584  001012  C072  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  8585  001016  C073  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  8586  00101A  C074  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  8587  00101E  C075  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  8588  001022  C076  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  8589  001026  C077  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  8590  00102A  0E0A               	movlw	10
  8591  00102C  6E1A               	movwf	___aodiv@divisor^0,c
  8592  00102E  0E00               	movlw	0
  8593  001030  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  8594  001032  0E00               	movlw	0
  8595  001034  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  8596  001036  0E00               	movlw	0
  8597  001038  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  8598  00103A  0E00               	movlw	0
  8599  00103C  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  8600  00103E  0E00               	movlw	0
  8601  001040  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  8602  001042  0E00               	movlw	0
  8603  001044  6E20               	movwf	(___aodiv@divisor+6)^0,c
  8604  001046  0E00               	movlw	0
  8605  001048  6E21               	movwf	(___aodiv@divisor+7)^0,c
  8606  00104A  ECEB  F00C         	call	___aodiv	;wreg free
  8607  00104E  C012  F070         	movff	?___aodiv,dtoa@n
  8608  001052  C013  F071         	movff	?___aodiv+1,dtoa@n+1
  8609  001056  C014  F072         	movff	?___aodiv+2,dtoa@n+2
  8610  00105A  C015  F073         	movff	?___aodiv+3,dtoa@n+3
  8611  00105E  C016  F074         	movff	?___aodiv+4,dtoa@n+4
  8612  001062  C017  F075         	movff	?___aodiv+5,dtoa@n+5
  8613  001066  C018  F076         	movff	?___aodiv+6,dtoa@n+6
  8614  00106A  C019  F077         	movff	?___aodiv+7,dtoa@n+7
  8615  00106E                     l4644:
  8616                           
  8617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8618  00106E  0100               	movlb	0	; () banked
  8619  001070  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  8620  001072  EF43  F008         	goto	u4111
  8621  001076  5179               	movf	(dtoa@i+1)& (0+255),w,b
  8622  001078  E108               	bnz	u4110
  8623  00107A  0578               	decf	dtoa@i& (0+255),w,b
  8624  00107C  A0D8               	btfss	status,0,c
  8625  00107E  EF43  F008         	goto	u4111
  8626  001082  EF45  F008         	goto	u4110
  8627  001086                     u4111:
  8628  001086  EF75  F008         	goto	l4654
  8629  00108A                     u4110:
  8630  00108A                     
  8631                           ; BSR set to: 0
  8632  00108A  5170               	movf	dtoa@n& (0+255),w,b
  8633  00108C  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  8634  00108E  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  8635  001090  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  8636  001092  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  8637  001094  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  8638  001096  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  8639  001098  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  8640  00109A  A4D8               	btfss	status,2,c
  8641  00109C  EF52  F008         	goto	u4121
  8642  0010A0  EF54  F008         	goto	u4120
  8643  0010A4                     u4121:
  8644  0010A4  EFBA  F007         	goto	l4634
  8645  0010A8                     u4120:
  8646  0010A8                     
  8647                           ; BSR set to: 0
  8648  0010A8  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  8649  0010AA  EF61  F008         	goto	u4130
  8650  0010AE  516B               	movf	(dtoa@p+1)& (0+255),w,b
  8651  0010B0  E106               	bnz	u4131
  8652  0010B2  056A               	decf	dtoa@p& (0+255),w,b
  8653  0010B4  B0D8               	btfsc	status,0,c
  8654  0010B6  EF5F  F008         	goto	u4131
  8655  0010BA  EF61  F008         	goto	u4130
  8656  0010BE                     u4131:
  8657  0010BE  EFBA  F007         	goto	l4634
  8658  0010C2                     u4130:
  8659  0010C2                     
  8660                           ; BSR set to: 0
  8661  0010C2  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  8662  0010C4  EF6C  F008         	goto	u4141
  8663  0010C8  516D               	movf	(dtoa@w+1)& (0+255),w,b
  8664  0010CA  E108               	bnz	u4140
  8665  0010CC  056C               	decf	dtoa@w& (0+255),w,b
  8666  0010CE  A0D8               	btfss	status,0,c
  8667  0010D0  EF6C  F008         	goto	u4141
  8668  0010D4  EF6E  F008         	goto	u4140
  8669  0010D8                     u4141:
  8670  0010D8  EF75  F008         	goto	l4654
  8671  0010DC                     u4140:
  8672  0010DC                     
  8673                           ; BSR set to: 0
  8674  0010DC  B242               	btfsc	_flags^0,1,c
  8675  0010DE  EF73  F008         	goto	u4151
  8676  0010E2  EF75  F008         	goto	u4150
  8677  0010E6                     u4151:
  8678  0010E6  EFBA  F007         	goto	l4634
  8679  0010EA                     u4150:
  8680  0010EA                     l4654:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8684  0010EA  516E               	movf	dtoa@s& (0+255),w,b
  8685  0010EC  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8686  0010EE  A4D8               	btfss	status,2,c
  8687  0010F0  EF7C  F008         	goto	u4161
  8688  0010F4  EF7E  F008         	goto	u4160
  8689  0010F8                     u4161:
  8690  0010F8  EF85  F008         	goto	l4658
  8691  0010FC                     u4160:
  8692  0010FC                     
  8693                           ; BSR set to: 0
  8694  0010FC  A442               	btfss	_flags^0,2,c
  8695  0010FE  EF83  F008         	goto	u4171
  8696  001102  EF85  F008         	goto	u4170
  8697  001106                     u4171:
  8698  001106  EFA3  F008         	goto	l4668
  8699  00110A                     u4170:
  8700  00110A                     l4658:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  8704  00110A  0778               	decf	dtoa@i& (0+255),f,b
  8705  00110C  A0D8               	btfss	status,0,c
  8706  00110E  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8707  001110                     
  8708                           ; BSR set to: 0
  8709                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8710  001110  516E               	movf	dtoa@s& (0+255),w,b
  8711  001112  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8712  001114  A4D8               	btfss	status,2,c
  8713  001116  EF8F  F008         	goto	u4181
  8714  00111A  EF91  F008         	goto	u4180
  8715  00111E                     u4181:
  8716  00111E  EF97  F008         	goto	l4664
  8717  001122                     u4180:
  8718  001122                     
  8719                           ; BSR set to: 0
  8720  001122  0E00               	movlw	0
  8721  001124  6F69               	movwf	(_dtoa$1812+1)& (0+255),b
  8722  001126  0E2B               	movlw	43
  8723  001128  6F68               	movwf	_dtoa$1812& (0+255),b
  8724  00112A  EF9B  F008         	goto	l4666
  8725  00112E                     l4664:
  8726                           
  8727                           ; BSR set to: 0
  8728  00112E  0E00               	movlw	0
  8729  001130  6F69               	movwf	(_dtoa$1812+1)& (0+255),b
  8730  001132  0E2D               	movlw	45
  8731  001134  6F68               	movwf	_dtoa$1812& (0+255),b
  8732  001136                     l4666:
  8733                           
  8734                           ; BSR set to: 0
  8735  001136  0ED3               	movlw	low _dbuf
  8736  001138  2578               	addwf	dtoa@i& (0+255),w,b
  8737  00113A  6ED9               	movwf	fsr2l,c
  8738  00113C  0E00               	movlw	high _dbuf
  8739  00113E  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8740  001140  6EDA               	movwf	fsr2h,c
  8741  001142  C068  FFDF         	movff	_dtoa$1812,indf2
  8742  001146                     l4668:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8746  001146  C02F  F024         	movff	dtoa@fp,pad@fp
  8747  00114A  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  8748  00114E  0ED3               	movlw	low _dbuf
  8749  001150  2578               	addwf	dtoa@i& (0+255),w,b
  8750  001152  6E26               	movwf	pad@buf^0,c
  8751  001154  0E00               	movlw	high _dbuf
  8752  001156  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8753  001158  6E27               	movwf	(pad@buf+1)^0,c
  8754  00115A  C06C  F028         	movff	dtoa@w,pad@p
  8755  00115E  C06D  F029         	movff	dtoa@w+1,pad@p+1
  8756  001162  ECCE  F010         	call	_pad	;wreg free
  8757  001166  C024  F02F         	movff	?_pad,?_dtoa
  8758  00116A  C025  F030         	movff	?_pad+1,?_dtoa+1
  8759  00116E  0012               	return		;funcret
  8760  001170                     __end_of_dtoa:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _pad *****************
  8764 ;; Defined at:
  8765 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  8768 ;;		 -> NULL(0), 
  8769 ;;  buf             2   37[COMRAM] PTR unsigned char 
  8770 ;;		 -> dbuf(32), 
  8771 ;;  p               2   39[COMRAM] int 
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  w               2   44[COMRAM] int 
  8774 ;;  i               2   42[COMRAM] int 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   35[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8784 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;Total ram usage:       11 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    8
  8791 ;; This function calls:
  8792 ;;		_fputc
  8793 ;;		_fputs
  8794 ;;		_strlen
  8795 ;; This function is called by:
  8796 ;;		_dtoa
  8797 ;;		_utoa
  8798 ;;		_xtoa
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text34
  8803  00219C                     __ptext34:
  8804                           	callstack 0
  8805  00219C                     _pad:
  8806                           	callstack 18
  8807  00219C                     
  8808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8809  00219C  A042               	btfss	_flags^0,0,c
  8810  00219E  EFD3  F010         	goto	u3831
  8811  0021A2  EFD5  F010         	goto	u3830
  8812  0021A6                     u3831:
  8813  0021A6  EFDF  F010         	goto	l4526
  8814  0021AA                     u3830:
  8815  0021AA                     
  8816                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8817  0021AA  C026  F01D         	movff	pad@buf,fputs@s
  8818  0021AE  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8819  0021B2  C024  F01F         	movff	pad@fp,fputs@fp
  8820  0021B6  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8821  0021BA  EC6D  F013         	call	_fputs	;wreg free
  8822  0021BE                     l4526:
  8823                           
  8824                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8825  0021BE  BE29               	btfsc	(pad@p+1)^0,7,c
  8826  0021C0  EFE4  F010         	goto	u3841
  8827  0021C4  EFE6  F010         	goto	u3840
  8828  0021C8                     u3841:
  8829  0021C8  EFEC  F010         	goto	l4530
  8830  0021CC                     u3840:
  8831  0021CC  C028  F02D         	movff	pad@p,pad@w
  8832  0021D0  C029  F02E         	movff	pad@p+1,pad@w+1
  8833  0021D4  EFF0  F010         	goto	l1258
  8834  0021D8                     l4530:
  8835  0021D8  0E00               	movlw	0
  8836  0021DA  6E2E               	movwf	(pad@w+1)^0,c
  8837  0021DC  0E00               	movlw	0
  8838  0021DE  6E2D               	movwf	pad@w^0,c
  8839  0021E0                     l1258:
  8840                           
  8841                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8842  0021E0  0E00               	movlw	0
  8843  0021E2  6E2C               	movwf	(pad@i+1)^0,c
  8844  0021E4  0E00               	movlw	0
  8845  0021E6  6E2B               	movwf	pad@i^0,c
  8846                           
  8847                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8848  0021E8  EF02  F011         	goto	l4536
  8849  0021EC                     l4532:
  8850                           
  8851                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8852  0021EC  0E00               	movlw	0
  8853  0021EE  6E15               	movwf	(fputc@c+1)^0,c
  8854  0021F0  0E20               	movlw	32
  8855  0021F2  6E14               	movwf	fputc@c^0,c
  8856  0021F4  C024  F016         	movff	pad@fp,fputc@fp
  8857  0021F8  C025  F017         	movff	pad@fp+1,fputc@fp+1
  8858  0021FC  EC2A  F012         	call	_fputc	;wreg free
  8859  002200                     
  8860                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8861  002200  4A2B               	infsnz	pad@i^0,f,c
  8862  002202  2A2C               	incf	(pad@i+1)^0,f,c
  8863  002204                     l4536:
  8864                           
  8865                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8866  002204  502D               	movf	pad@w^0,w,c
  8867  002206  5C2B               	subwf	pad@i^0,w,c
  8868  002208  502C               	movf	(pad@i+1)^0,w,c
  8869  00220A  0A80               	xorlw	128
  8870  00220C  6E2A               	movwf	??_pad^0,c
  8871  00220E  502E               	movf	(pad@w+1)^0,w,c
  8872  002210  0A80               	xorlw	128
  8873  002212  582A               	subwfb	??_pad^0,w,c
  8874  002214  A0D8               	btfss	status,0,c
  8875  002216  EF0F  F011         	goto	u3851
  8876  00221A  EF11  F011         	goto	u3850
  8877  00221E                     u3851:
  8878  00221E  EFF6  F010         	goto	l4532
  8879  002222                     u3850:
  8880  002222                     
  8881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8882  002222  B042               	btfsc	_flags^0,0,c
  8883  002224  EF16  F011         	goto	u3861
  8884  002228  EF18  F011         	goto	u3860
  8885  00222C                     u3861:
  8886  00222C  EF22  F011         	goto	l4540
  8887  002230                     u3860:
  8888  002230                     
  8889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8890  002230  C026  F01D         	movff	pad@buf,fputs@s
  8891  002234  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8892  002238  C024  F01F         	movff	pad@fp,fputs@fp
  8893  00223C  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8894  002240  EC6D  F013         	call	_fputs	;wreg free
  8895  002244                     l4540:
  8896                           
  8897                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8898  002244  C026  F012         	movff	pad@buf,strlen@s
  8899  002248  C027  F013         	movff	pad@buf+1,strlen@s+1
  8900  00224C  EC77  F014         	call	_strlen	;wreg free
  8901  002250  502D               	movf	pad@w^0,w,c
  8902  002252  2412               	addwf	?_strlen^0,w,c
  8903  002254  6E24               	movwf	?_pad^0,c
  8904  002256  502E               	movf	(pad@w+1)^0,w,c
  8905  002258  2013               	addwfc	(?_strlen+1)^0,w,c
  8906  00225A  6E25               	movwf	(?_pad+1)^0,c
  8907  00225C  0012               	return		;funcret
  8908  00225E                     __end_of_pad:
  8909                           	callstack 0
  8910                           
  8911 ;; *************** function _strlen *****************
  8912 ;; Defined at:
  8913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  s               2   17[COMRAM] PTR const unsigned char 
  8916 ;;		 -> dbuf(32), 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  a               2   19[COMRAM] PTR const unsigned char 
  8919 ;;		 -> dbuf(32), 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2   17[COMRAM] unsigned int 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        4 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    4
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_pad
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text35
  8944  0028EE                     __ptext35:
  8945                           	callstack 0
  8946  0028EE                     _strlen:
  8947                           	callstack 21
  8948  0028EE  C012  F014         	movff	strlen@s,strlen@a
  8949  0028F2  C013  F015         	movff	strlen@s+1,strlen@a+1
  8950  0028F6  EF7F  F014         	goto	l4388
  8951  0028FA                     l4386:
  8952  0028FA  4A12               	infsnz	strlen@s^0,f,c
  8953  0028FC  2A13               	incf	(strlen@s+1)^0,f,c
  8954  0028FE                     l4388:
  8955  0028FE  C012  FFD9         	movff	strlen@s,fsr2l
  8956  002902  C013  FFDA         	movff	strlen@s+1,fsr2h
  8957  002906  50DF               	movf	indf2,w,c
  8958  002908  A4D8               	btfss	status,2,c
  8959  00290A  EF89  F014         	goto	u3601
  8960  00290E  EF8B  F014         	goto	u3600
  8961  002912                     u3601:
  8962  002912  EF7D  F014         	goto	l4386
  8963  002916                     u3600:
  8964  002916  5014               	movf	strlen@a^0,w,c
  8965  002918  5C12               	subwf	strlen@s^0,w,c
  8966  00291A  6E12               	movwf	?_strlen^0,c
  8967  00291C  5015               	movf	(strlen@a+1)^0,w,c
  8968  00291E  5813               	subwfb	(strlen@s+1)^0,w,c
  8969  002920  6E13               	movwf	(?_strlen+1)^0,c
  8970  002922  0012               	return		;funcret
  8971  002924                     __end_of_strlen:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function _fputs *****************
  8975 ;; Defined at:
  8976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  s               2   28[COMRAM] PTR const unsigned char 
  8979 ;;		 -> dbuf(32), 
  8980 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8981 ;;		 -> NULL(0), 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  i               2   33[COMRAM] int 
  8984 ;;  c               1   32[COMRAM] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  2   28[COMRAM] int 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;Total ram usage:        7 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    7
  9001 ;; This function calls:
  9002 ;;		_fputc
  9003 ;; This function is called by:
  9004 ;;		_pad
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text36
  9009  0026DA                     __ptext36:
  9010                           	callstack 0
  9011  0026DA                     _fputs:
  9012                           	callstack 18
  9013  0026DA  0E00               	movlw	0
  9014  0026DC  6E23               	movwf	(fputs@i+1)^0,c
  9015  0026DE  0E00               	movlw	0
  9016  0026E0  6E22               	movwf	fputs@i^0,c
  9017  0026E2  EF7E  F013         	goto	l4382
  9018  0026E6                     l4378:
  9019  0026E6  C021  F014         	movff	fputs@c,fputc@c
  9020  0026EA  6A15               	clrf	(fputc@c+1)^0,c
  9021  0026EC  C01F  F016         	movff	fputs@fp,fputc@fp
  9022  0026F0  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  9023  0026F4  EC2A  F012         	call	_fputc	;wreg free
  9024  0026F8  4A22               	infsnz	fputs@i^0,f,c
  9025  0026FA  2A23               	incf	(fputs@i+1)^0,f,c
  9026  0026FC                     l4382:
  9027  0026FC  5022               	movf	fputs@i^0,w,c
  9028  0026FE  241D               	addwf	fputs@s^0,w,c
  9029  002700  6ED9               	movwf	fsr2l,c
  9030  002702  5023               	movf	(fputs@i+1)^0,w,c
  9031  002704  201E               	addwfc	(fputs@s+1)^0,w,c
  9032  002706  6EDA               	movwf	fsr2h,c
  9033  002708  50DF               	movf	indf2,w,c
  9034  00270A  6E21               	movwf	fputs@c^0,c
  9035  00270C  5021               	movf	fputs@c^0,w,c
  9036  00270E  A4D8               	btfss	status,2,c
  9037  002710  EF8C  F013         	goto	u3591
  9038  002714  EF8E  F013         	goto	u3590
  9039  002718                     u3591:
  9040  002718  EF73  F013         	goto	l4378
  9041  00271C                     u3590:
  9042  00271C  0012               	return		;funcret
  9043  00271E                     __end_of_fputs:
  9044                           	callstack 0
  9045                           
  9046 ;; *************** function _abs *****************
  9047 ;; Defined at:
  9048 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  a               2   35[COMRAM] int 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  2   35[COMRAM] int 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;Total ram usage:        4 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    4
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_dtoa
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text37
  9077  00271E                     __ptext37:
  9078                           	callstack 0
  9079  00271E                     _abs:
  9080                           	callstack 22
  9081  00271E  BE25               	btfsc	(abs@a+1)^0,7,c
  9082  002720  EF9C  F013         	goto	u3870
  9083  002724  5025               	movf	(abs@a+1)^0,w,c
  9084  002726  E106               	bnz	u3871
  9085  002728  0424               	decf	abs@a^0,w,c
  9086  00272A  B0D8               	btfsc	status,0,c
  9087  00272C  EF9A  F013         	goto	u3871
  9088  002730  EF9C  F013         	goto	u3870
  9089  002734                     u3871:
  9090  002734  EFAA  F013         	goto	l1395
  9091  002738                     u3870:
  9092  002738  C024  F026         	movff	abs@a,??_abs
  9093  00273C  C025  F027         	movff	abs@a+1,??_abs+1
  9094  002740  1E26               	comf	??_abs^0,f,c
  9095  002742  1E27               	comf	(??_abs+1)^0,f,c
  9096  002744  4A26               	infsnz	??_abs^0,f,c
  9097  002746  2A27               	incf	(??_abs+1)^0,f,c
  9098  002748  C026  F024         	movff	??_abs,?_abs
  9099  00274C  C027  F025         	movff	??_abs+1,?_abs+1
  9100  002750  EFAE  F013         	goto	l1398
  9101  002754                     l1395:
  9102  002754  C024  F024         	movff	abs@a,?_abs
  9103  002758  C025  F025         	movff	abs@a+1,?_abs+1
  9104  00275C                     l1398:
  9105  00275C  0012               	return		;funcret
  9106  00275E                     __end_of_abs:
  9107                           	callstack 0
  9108                           
  9109 ;; *************** function ___aomod *****************
  9110 ;; Defined at:
  9111 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  dividend        8   17[COMRAM] long long 
  9114 ;;  divisor         8   25[COMRAM] long long 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  sign            1   34[COMRAM] unsigned char 
  9117 ;;  counter         1   33[COMRAM] unsigned char 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  8   17[COMRAM] long long 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9127 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;Total ram usage:       18 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    4
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_dtoa
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text38
  9142  001CD6                     __ptext38:
  9143                           	callstack 0
  9144  001CD6                     ___aomod:
  9145                           	callstack 22
  9146  001CD6  0E00               	movlw	0
  9147  001CD8  6E23               	movwf	___aomod@sign^0,c
  9148  001CDA  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
  9149  001CDC  EF74  F00E         	goto	u3700
  9150  001CE0  EF72  F00E         	goto	u3701
  9151  001CE4                     u3701:
  9152  001CE4  EF86  F00E         	goto	l4456
  9153  001CE8                     u3700:
  9154  001CE8  1E19               	comf	(___aomod@dividend+7)^0,f,c
  9155  001CEA  1E18               	comf	(___aomod@dividend+6)^0,f,c
  9156  001CEC  1E17               	comf	(___aomod@dividend+5)^0,f,c
  9157  001CEE  1E16               	comf	(___aomod@dividend+4)^0,f,c
  9158  001CF0  1E15               	comf	(___aomod@dividend+3)^0,f,c
  9159  001CF2  1E14               	comf	(___aomod@dividend+2)^0,f,c
  9160  001CF4  1E13               	comf	(___aomod@dividend+1)^0,f,c
  9161  001CF6  6C12               	negf	___aomod@dividend^0,c
  9162  001CF8  0E00               	movlw	0
  9163  001CFA  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  9164  001CFC  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  9165  001CFE  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  9166  001D00  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  9167  001D02  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  9168  001D04  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  9169  001D06  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  9170  001D08  0E01               	movlw	1
  9171  001D0A  6E23               	movwf	___aomod@sign^0,c
  9172  001D0C                     l4456:
  9173  001D0C  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
  9174  001D0E  EF8D  F00E         	goto	u3710
  9175  001D12  EF8B  F00E         	goto	u3711
  9176  001D16                     u3711:
  9177  001D16  EF9D  F00E         	goto	l4460
  9178  001D1A                     u3710:
  9179  001D1A  1E21               	comf	(___aomod@divisor+7)^0,f,c
  9180  001D1C  1E20               	comf	(___aomod@divisor+6)^0,f,c
  9181  001D1E  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  9182  001D20  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  9183  001D22  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  9184  001D24  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  9185  001D26  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  9186  001D28  6C1A               	negf	___aomod@divisor^0,c
  9187  001D2A  0E00               	movlw	0
  9188  001D2C  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  9189  001D2E  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  9190  001D30  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  9191  001D32  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  9192  001D34  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  9193  001D36  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  9194  001D38  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  9195  001D3A                     l4460:
  9196  001D3A  501A               	movf	___aomod@divisor^0,w,c
  9197  001D3C  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  9198  001D3E  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  9199  001D40  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  9200  001D42  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  9201  001D44  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  9202  001D46  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  9203  001D48  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  9204  001D4A  B4D8               	btfsc	status,2,c
  9205  001D4C  EFAA  F00E         	goto	u3721
  9206  001D50  EFAC  F00E         	goto	u3720
  9207  001D54                     u3721:
  9208  001D54  EFF4  F00E         	goto	l4476
  9209  001D58                     u3720:
  9210  001D58  0E01               	movlw	1
  9211  001D5A  6E22               	movwf	___aomod@counter^0,c
  9212  001D5C  EFBA  F00E         	goto	l4466
  9213  001D60                     l4464:
  9214  001D60  90D8               	bcf	status,0,c
  9215  001D62  361A               	rlcf	___aomod@divisor^0,f,c
  9216  001D64  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  9217  001D66  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  9218  001D68  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  9219  001D6A  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  9220  001D6C  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  9221  001D6E  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  9222  001D70  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  9223  001D72  2A22               	incf	___aomod@counter^0,f,c
  9224  001D74                     l4466:
  9225  001D74  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  9226  001D76  EFBF  F00E         	goto	u3731
  9227  001D7A  EFC1  F00E         	goto	u3730
  9228  001D7E                     u3731:
  9229  001D7E  EFB0  F00E         	goto	l4464
  9230  001D82                     u3730:
  9231  001D82                     l4468:
  9232  001D82  501A               	movf	___aomod@divisor^0,w,c
  9233  001D84  5C12               	subwf	___aomod@dividend^0,w,c
  9234  001D86  501B               	movf	(___aomod@divisor+1)^0,w,c
  9235  001D88  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  9236  001D8A  501C               	movf	(___aomod@divisor+2)^0,w,c
  9237  001D8C  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  9238  001D8E  501D               	movf	(___aomod@divisor+3)^0,w,c
  9239  001D90  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  9240  001D92  501E               	movf	(___aomod@divisor+4)^0,w,c
  9241  001D94  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  9242  001D96  501F               	movf	(___aomod@divisor+5)^0,w,c
  9243  001D98  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  9244  001D9A  5020               	movf	(___aomod@divisor+6)^0,w,c
  9245  001D9C  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  9246  001D9E  5021               	movf	(___aomod@divisor+7)^0,w,c
  9247  001DA0  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  9248  001DA2  A0D8               	btfss	status,0,c
  9249  001DA4  EFD6  F00E         	goto	u3741
  9250  001DA8  EFD8  F00E         	goto	u3740
  9251  001DAC                     u3741:
  9252  001DAC  EFE8  F00E         	goto	l4472
  9253  001DB0                     u3740:
  9254  001DB0  501A               	movf	___aomod@divisor^0,w,c
  9255  001DB2  5E12               	subwf	___aomod@dividend^0,f,c
  9256  001DB4  501B               	movf	(___aomod@divisor+1)^0,w,c
  9257  001DB6  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  9258  001DB8  501C               	movf	(___aomod@divisor+2)^0,w,c
  9259  001DBA  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  9260  001DBC  501D               	movf	(___aomod@divisor+3)^0,w,c
  9261  001DBE  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  9262  001DC0  501E               	movf	(___aomod@divisor+4)^0,w,c
  9263  001DC2  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  9264  001DC4  501F               	movf	(___aomod@divisor+5)^0,w,c
  9265  001DC6  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  9266  001DC8  5020               	movf	(___aomod@divisor+6)^0,w,c
  9267  001DCA  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  9268  001DCC  5021               	movf	(___aomod@divisor+7)^0,w,c
  9269  001DCE  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  9270  001DD0                     l4472:
  9271  001DD0  90D8               	bcf	status,0,c
  9272  001DD2  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  9273  001DD4  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  9274  001DD6  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  9275  001DD8  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  9276  001DDA  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  9277  001DDC  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  9278  001DDE  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  9279  001DE0  321A               	rrcf	___aomod@divisor^0,f,c
  9280  001DE2  2E22               	decfsz	___aomod@counter^0,f,c
  9281  001DE4  EFC1  F00E         	goto	l4468
  9282  001DE8                     l4476:
  9283  001DE8  5023               	movf	___aomod@sign^0,w,c
  9284  001DEA  B4D8               	btfsc	status,2,c
  9285  001DEC  EFFA  F00E         	goto	u3751
  9286  001DF0  EFFC  F00E         	goto	u3750
  9287  001DF4                     u3751:
  9288  001DF4  EF0C  F00F         	goto	l4480
  9289  001DF8                     u3750:
  9290  001DF8  1E19               	comf	(___aomod@dividend+7)^0,f,c
  9291  001DFA  1E18               	comf	(___aomod@dividend+6)^0,f,c
  9292  001DFC  1E17               	comf	(___aomod@dividend+5)^0,f,c
  9293  001DFE  1E16               	comf	(___aomod@dividend+4)^0,f,c
  9294  001E00  1E15               	comf	(___aomod@dividend+3)^0,f,c
  9295  001E02  1E14               	comf	(___aomod@dividend+2)^0,f,c
  9296  001E04  1E13               	comf	(___aomod@dividend+1)^0,f,c
  9297  001E06  6C12               	negf	___aomod@dividend^0,c
  9298  001E08  0E00               	movlw	0
  9299  001E0A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  9300  001E0C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  9301  001E0E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  9302  001E10  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  9303  001E12  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  9304  001E14  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  9305  001E16  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  9306  001E18                     l4480:
  9307  001E18  C012  F012         	movff	___aomod@dividend,?___aomod
  9308  001E1C  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  9309  001E20  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  9310  001E24  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  9311  001E28  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  9312  001E2C  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  9313  001E30  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  9314  001E34  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  9315  001E38  0012               	return		;funcret
  9316  001E3A                     __end_of___aomod:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function ___aodiv *****************
  9320 ;; Defined at:
  9321 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  dividend        8   17[COMRAM] long long 
  9324 ;;  divisor         8   25[COMRAM] long long 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  quotient        8   35[COMRAM] long long 
  9327 ;;  sign            1   34[COMRAM] unsigned char 
  9328 ;;  counter         1   33[COMRAM] unsigned char 
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  8   17[COMRAM] long long 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9338 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;Total ram usage:       26 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    4
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_dtoa
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text39
  9353  0019D6                     __ptext39:
  9354                           	callstack 0
  9355  0019D6                     ___aodiv:
  9356                           	callstack 22
  9357  0019D6  0E00               	movlw	0
  9358  0019D8  6E23               	movwf	___aodiv@sign^0,c
  9359  0019DA  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
  9360  0019DC  EFF4  F00C         	goto	u3630
  9361  0019E0  EFF2  F00C         	goto	u3631
  9362  0019E4                     u3631:
  9363  0019E4  EF06  F00D         	goto	l4412
  9364  0019E8                     u3630:
  9365  0019E8  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  9366  0019EA  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  9367  0019EC  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  9368  0019EE  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  9369  0019F0  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  9370  0019F2  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  9371  0019F4  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  9372  0019F6  6C1A               	negf	___aodiv@divisor^0,c
  9373  0019F8  0E00               	movlw	0
  9374  0019FA  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  9375  0019FC  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  9376  0019FE  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  9377  001A00  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  9378  001A02  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  9379  001A04  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  9380  001A06  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  9381  001A08  0E01               	movlw	1
  9382  001A0A  6E23               	movwf	___aodiv@sign^0,c
  9383  001A0C                     l4412:
  9384  001A0C  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
  9385  001A0E  EF0D  F00D         	goto	u3640
  9386  001A12  EF0B  F00D         	goto	u3641
  9387  001A16                     u3641:
  9388  001A16  EF1F  F00D         	goto	l4418
  9389  001A1A                     u3640:
  9390  001A1A  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  9391  001A1C  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  9392  001A1E  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  9393  001A20  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  9394  001A22  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  9395  001A24  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  9396  001A26  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  9397  001A28  6C12               	negf	___aodiv@dividend^0,c
  9398  001A2A  0E00               	movlw	0
  9399  001A2C  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  9400  001A2E  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  9401  001A30  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  9402  001A32  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  9403  001A34  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  9404  001A36  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  9405  001A38  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  9406  001A3A  0E01               	movlw	1
  9407  001A3C  1A23               	xorwf	___aodiv@sign^0,f,c
  9408  001A3E                     l4418:
  9409  001A3E  EE20  F024         	lfsr	2,___aodiv@quotient
  9410  001A42  0E07               	movlw	7
  9411  001A44                     u3651:
  9412  001A44  6ADE               	clrf	postinc2,c
  9413  001A46  06E8               	decf	wreg,f,c
  9414  001A48  E2FD               	bc	u3651
  9415  001A4A  501A               	movf	___aodiv@divisor^0,w,c
  9416  001A4C  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  9417  001A4E  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  9418  001A50  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  9419  001A52  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  9420  001A54  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  9421  001A56  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  9422  001A58  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  9423  001A5A  B4D8               	btfsc	status,2,c
  9424  001A5C  EF32  F00D         	goto	u3661
  9425  001A60  EF34  F00D         	goto	u3660
  9426  001A64                     u3661:
  9427  001A64  EF86  F00D         	goto	l4440
  9428  001A68                     u3660:
  9429  001A68  0E01               	movlw	1
  9430  001A6A  6E22               	movwf	___aodiv@counter^0,c
  9431  001A6C  EF42  F00D         	goto	l4426
  9432  001A70                     l4424:
  9433  001A70  90D8               	bcf	status,0,c
  9434  001A72  361A               	rlcf	___aodiv@divisor^0,f,c
  9435  001A74  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  9436  001A76  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  9437  001A78  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  9438  001A7A  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  9439  001A7C  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  9440  001A7E  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  9441  001A80  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  9442  001A82  2A22               	incf	___aodiv@counter^0,f,c
  9443  001A84                     l4426:
  9444  001A84  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  9445  001A86  EF47  F00D         	goto	u3671
  9446  001A8A  EF49  F00D         	goto	u3670
  9447  001A8E                     u3671:
  9448  001A8E  EF38  F00D         	goto	l4424
  9449  001A92                     u3670:
  9450  001A92                     l4428:
  9451  001A92  90D8               	bcf	status,0,c
  9452  001A94  3624               	rlcf	___aodiv@quotient^0,f,c
  9453  001A96  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  9454  001A98  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  9455  001A9A  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  9456  001A9C  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  9457  001A9E  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  9458  001AA0  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  9459  001AA2  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  9460  001AA4  501A               	movf	___aodiv@divisor^0,w,c
  9461  001AA6  5C12               	subwf	___aodiv@dividend^0,w,c
  9462  001AA8  501B               	movf	(___aodiv@divisor+1)^0,w,c
  9463  001AAA  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  9464  001AAC  501C               	movf	(___aodiv@divisor+2)^0,w,c
  9465  001AAE  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  9466  001AB0  501D               	movf	(___aodiv@divisor+3)^0,w,c
  9467  001AB2  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  9468  001AB4  501E               	movf	(___aodiv@divisor+4)^0,w,c
  9469  001AB6  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  9470  001AB8  501F               	movf	(___aodiv@divisor+5)^0,w,c
  9471  001ABA  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  9472  001ABC  5020               	movf	(___aodiv@divisor+6)^0,w,c
  9473  001ABE  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  9474  001AC0  5021               	movf	(___aodiv@divisor+7)^0,w,c
  9475  001AC2  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  9476  001AC4  A0D8               	btfss	status,0,c
  9477  001AC6  EF67  F00D         	goto	u3681
  9478  001ACA  EF69  F00D         	goto	u3680
  9479  001ACE                     u3681:
  9480  001ACE  EF7A  F00D         	goto	l4436
  9481  001AD2                     u3680:
  9482  001AD2  501A               	movf	___aodiv@divisor^0,w,c
  9483  001AD4  5E12               	subwf	___aodiv@dividend^0,f,c
  9484  001AD6  501B               	movf	(___aodiv@divisor+1)^0,w,c
  9485  001AD8  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  9486  001ADA  501C               	movf	(___aodiv@divisor+2)^0,w,c
  9487  001ADC  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  9488  001ADE  501D               	movf	(___aodiv@divisor+3)^0,w,c
  9489  001AE0  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  9490  001AE2  501E               	movf	(___aodiv@divisor+4)^0,w,c
  9491  001AE4  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  9492  001AE6  501F               	movf	(___aodiv@divisor+5)^0,w,c
  9493  001AE8  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  9494  001AEA  5020               	movf	(___aodiv@divisor+6)^0,w,c
  9495  001AEC  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  9496  001AEE  5021               	movf	(___aodiv@divisor+7)^0,w,c
  9497  001AF0  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  9498  001AF2  8024               	bsf	___aodiv@quotient^0,0,c
  9499  001AF4                     l4436:
  9500  001AF4  90D8               	bcf	status,0,c
  9501  001AF6  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  9502  001AF8  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  9503  001AFA  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  9504  001AFC  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  9505  001AFE  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  9506  001B00  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  9507  001B02  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  9508  001B04  321A               	rrcf	___aodiv@divisor^0,f,c
  9509  001B06  2E22               	decfsz	___aodiv@counter^0,f,c
  9510  001B08  EF49  F00D         	goto	l4428
  9511  001B0C                     l4440:
  9512  001B0C  5023               	movf	___aodiv@sign^0,w,c
  9513  001B0E  B4D8               	btfsc	status,2,c
  9514  001B10  EF8C  F00D         	goto	u3691
  9515  001B14  EF8E  F00D         	goto	u3690
  9516  001B18                     u3691:
  9517  001B18  EF9E  F00D         	goto	l4444
  9518  001B1C                     u3690:
  9519  001B1C  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  9520  001B1E  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  9521  001B20  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  9522  001B22  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  9523  001B24  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  9524  001B26  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  9525  001B28  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  9526  001B2A  6C24               	negf	___aodiv@quotient^0,c
  9527  001B2C  0E00               	movlw	0
  9528  001B2E  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  9529  001B30  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  9530  001B32  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  9531  001B34  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  9532  001B36  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  9533  001B38  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  9534  001B3A  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  9535  001B3C                     l4444:
  9536  001B3C  C024  F012         	movff	___aodiv@quotient,?___aodiv
  9537  001B40  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  9538  001B44  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  9539  001B48  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  9540  001B4C  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  9541  001B50  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  9542  001B54  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  9543  001B58  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  9544  001B5C  0012               	return		;funcret
  9545  001B5E                     __end_of___aodiv:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _ctoa *****************
  9549 ;; Defined at:
  9550 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  9553 ;;		 -> NULL(0), 
  9554 ;;  c               1   30[COMRAM] unsigned char 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  w               2   34[COMRAM] int 
  9557 ;;  l               2   32[COMRAM] int 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  2   28[COMRAM] int 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9567 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;Total ram usage:        8 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    7
  9574 ;; This function calls:
  9575 ;;		_fputc
  9576 ;; This function is called by:
  9577 ;;		_vfpfcnvrt
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text40
  9582  001F2A                     __ptext40:
  9583                           	callstack 0
  9584  001F2A                     _ctoa:
  9585                           	callstack 20
  9586  001F2A                     
  9587                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9588  001F2A  503E               	movf	_width^0,w,c
  9589  001F2C  103F               	iorwf	(_width+1)^0,w,c
  9590  001F2E  A4D8               	btfss	status,2,c
  9591  001F30  EF9C  F00F         	goto	u3991
  9592  001F34  EF9E  F00F         	goto	u3990
  9593  001F38                     u3991:
  9594  001F38  EFA4  F00F         	goto	l4586
  9595  001F3C                     u3990:
  9596  001F3C  C03E  F023         	movff	_width,ctoa@w
  9597  001F40  C03F  F024         	movff	_width+1,ctoa@w+1
  9598  001F44  EFAA  F00F         	goto	l4588
  9599  001F48                     l4586:
  9600  001F48  0EFF               	movlw	255
  9601  001F4A  243E               	addwf	_width^0,w,c
  9602  001F4C  6E23               	movwf	ctoa@w^0,c
  9603  001F4E  0EFF               	movlw	255
  9604  001F50  203F               	addwfc	(_width+1)^0,w,c
  9605  001F52  6E24               	movwf	(ctoa@w+1)^0,c
  9606  001F54                     l4588:
  9607                           
  9608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9609  001F54  A042               	btfss	_flags^0,0,c
  9610  001F56  EFAF  F00F         	goto	u4001
  9611  001F5A  EFB1  F00F         	goto	u4000
  9612  001F5E                     u4001:
  9613  001F5E  EFBA  F00F         	goto	l4592
  9614  001F62                     u4000:
  9615  001F62                     
  9616                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9617  001F62  C01F  F014         	movff	ctoa@c,fputc@c
  9618  001F66  6A15               	clrf	(fputc@c+1)^0,c
  9619  001F68  C01D  F016         	movff	ctoa@fp,fputc@fp
  9620  001F6C  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9621  001F70  EC2A  F012         	call	_fputc	;wreg free
  9622  001F74                     l4592:
  9623                           
  9624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9625  001F74  BE24               	btfsc	(ctoa@w+1)^0,7,c
  9626  001F76  EFBF  F00F         	goto	u4011
  9627  001F7A  EFC1  F00F         	goto	u4010
  9628  001F7E                     u4011:
  9629  001F7E  EFC3  F00F         	goto	l4596
  9630  001F82                     u4010:
  9631  001F82  EFC7  F00F         	goto	l1274
  9632  001F86                     l4596:
  9633  001F86  0E00               	movlw	0
  9634  001F88  6E24               	movwf	(ctoa@w+1)^0,c
  9635  001F8A  0E00               	movlw	0
  9636  001F8C  6E23               	movwf	ctoa@w^0,c
  9637  001F8E                     l1274:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9640  001F8E  0E00               	movlw	0
  9641  001F90  6E22               	movwf	(ctoa@l+1)^0,c
  9642  001F92  0E00               	movlw	0
  9643  001F94  6E21               	movwf	ctoa@l^0,c
  9644                           
  9645                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9646  001F96  EFD9  F00F         	goto	l4602
  9647  001F9A                     l4598:
  9648                           
  9649                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9650  001F9A  0E00               	movlw	0
  9651  001F9C  6E15               	movwf	(fputc@c+1)^0,c
  9652  001F9E  0E20               	movlw	32
  9653  001FA0  6E14               	movwf	fputc@c^0,c
  9654  001FA2  C01D  F016         	movff	ctoa@fp,fputc@fp
  9655  001FA6  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9656  001FAA  EC2A  F012         	call	_fputc	;wreg free
  9657  001FAE                     
  9658                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9659  001FAE  4A21               	infsnz	ctoa@l^0,f,c
  9660  001FB0  2A22               	incf	(ctoa@l+1)^0,f,c
  9661  001FB2                     l4602:
  9662                           
  9663                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9664  001FB2  5023               	movf	ctoa@w^0,w,c
  9665  001FB4  5C21               	subwf	ctoa@l^0,w,c
  9666  001FB6  5022               	movf	(ctoa@l+1)^0,w,c
  9667  001FB8  0A80               	xorlw	128
  9668  001FBA  6E20               	movwf	??_ctoa^0,c
  9669  001FBC  5024               	movf	(ctoa@w+1)^0,w,c
  9670  001FBE  0A80               	xorlw	128
  9671  001FC0  5820               	subwfb	??_ctoa^0,w,c
  9672  001FC2  A0D8               	btfss	status,0,c
  9673  001FC4  EFE6  F00F         	goto	u4021
  9674  001FC8  EFE8  F00F         	goto	u4020
  9675  001FCC                     u4021:
  9676  001FCC  EFCD  F00F         	goto	l4598
  9677  001FD0                     u4020:
  9678  001FD0                     
  9679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9680  001FD0  B042               	btfsc	_flags^0,0,c
  9681  001FD2  EFED  F00F         	goto	u4031
  9682  001FD6  EFEF  F00F         	goto	u4030
  9683  001FDA                     u4031:
  9684  001FDA  EFF8  F00F         	goto	l4606
  9685  001FDE                     u4030:
  9686  001FDE                     
  9687                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9688  001FDE  C01F  F014         	movff	ctoa@c,fputc@c
  9689  001FE2  6A15               	clrf	(fputc@c+1)^0,c
  9690  001FE4  C01D  F016         	movff	ctoa@fp,fputc@fp
  9691  001FE8  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9692  001FEC  EC2A  F012         	call	_fputc	;wreg free
  9693  001FF0                     l4606:
  9694                           
  9695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9696  001FF0  0E01               	movlw	1
  9697  001FF2  2421               	addwf	ctoa@l^0,w,c
  9698  001FF4  6E1D               	movwf	?_ctoa^0,c
  9699  001FF6  0E00               	movlw	0
  9700  001FF8  2022               	addwfc	(ctoa@l+1)^0,w,c
  9701  001FFA  6E1E               	movwf	(?_ctoa+1)^0,c
  9702  001FFC  0012               	return		;funcret
  9703  001FFE                     __end_of_ctoa:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _fputc *****************
  9707 ;; Defined at:
  9708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  c               2   19[COMRAM] int 
  9711 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  9712 ;;		 -> NULL(0), 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  2   19[COMRAM] int 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;Total ram usage:        9 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    6
  9731 ;; This function calls:
  9732 ;;		_putch
  9733 ;; This function is called by:
  9734 ;;		_pad
  9735 ;;		_ctoa
  9736 ;;		_vfpfcnvrt
  9737 ;;		_fputs
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text41
  9742  002454                     __ptext41:
  9743                           	callstack 0
  9744  002454                     _fputc:
  9745                           	callstack 18
  9746  002454  5016               	movf	fputc@fp^0,w,c
  9747  002456  1017               	iorwf	(fputc@fp+1)^0,w,c
  9748  002458  B4D8               	btfsc	status,2,c
  9749  00245A  EF31  F012         	goto	u3551
  9750  00245E  EF33  F012         	goto	u3550
  9751  002462                     u3551:
  9752  002462  EF3C  F012         	goto	l4366
  9753  002466                     u3550:
  9754  002466  5016               	movf	fputc@fp^0,w,c
  9755  002468  1017               	iorwf	(fputc@fp+1)^0,w,c
  9756  00246A  A4D8               	btfss	status,2,c
  9757  00246C  EF3A  F012         	goto	u3561
  9758  002470  EF3C  F012         	goto	u3560
  9759  002474                     u3561:
  9760  002474  EF41  F012         	goto	l4368
  9761  002478                     u3560:
  9762  002478                     l4366:
  9763  002478  5014               	movf	fputc@c^0,w,c
  9764  00247A  EC7A  F015         	call	_putch
  9765  00247E  EF74  F012         	goto	l1467
  9766  002482                     l4368:
  9767  002482  EE20 F004          	lfsr	2,4
  9768  002486  5016               	movf	fputc@fp^0,w,c
  9769  002488  26D9               	addwf	fsr2l,f,c
  9770  00248A  5017               	movf	(fputc@fp+1)^0,w,c
  9771  00248C  22DA               	addwfc	fsr2h,f,c
  9772  00248E  50DE               	movf	postinc2,w,c
  9773  002490  10DE               	iorwf	postinc2,w,c
  9774  002492  B4D8               	btfsc	status,2,c
  9775  002494  EF4E  F012         	goto	u3571
  9776  002498  EF50  F012         	goto	u3570
  9777  00249C                     u3571:
  9778  00249C  EF6B  F012         	goto	l4372
  9779  0024A0                     u3570:
  9780  0024A0  EE20 F004          	lfsr	2,4
  9781  0024A4  5016               	movf	fputc@fp^0,w,c
  9782  0024A6  26D9               	addwf	fsr2l,f,c
  9783  0024A8  5017               	movf	(fputc@fp+1)^0,w,c
  9784  0024AA  22DA               	addwfc	fsr2h,f,c
  9785  0024AC  EE10 F002          	lfsr	1,2
  9786  0024B0  5016               	movf	fputc@fp^0,w,c
  9787  0024B2  26E1               	addwf	fsr1l,f,c
  9788  0024B4  5017               	movf	(fputc@fp+1)^0,w,c
  9789  0024B6  22E2               	addwfc	fsr1h,f,c
  9790  0024B8  50DE               	movf	postinc2,w,c
  9791  0024BA  5CE6               	subwf	postinc1,w,c
  9792  0024BC  50E6               	movf	postinc1,w,c
  9793  0024BE  0A80               	xorlw	128
  9794  0024C0  6E1C               	movwf	(??_fputc+4)^0,c
  9795  0024C2  50DE               	movf	postinc2,w,c
  9796  0024C4  0A80               	xorlw	128
  9797  0024C6  581C               	subwfb	(??_fputc+4)^0,w,c
  9798  0024C8  B0D8               	btfsc	status,0,c
  9799  0024CA  EF69  F012         	goto	u3581
  9800  0024CE  EF6B  F012         	goto	u3580
  9801  0024D2                     u3581:
  9802  0024D2  EF74  F012         	goto	l1467
  9803  0024D6                     u3580:
  9804  0024D6                     l4372:
  9805  0024D6  EE20 F002          	lfsr	2,2
  9806  0024DA  5016               	movf	fputc@fp^0,w,c
  9807  0024DC  26D9               	addwf	fsr2l,f,c
  9808  0024DE  5017               	movf	(fputc@fp+1)^0,w,c
  9809  0024E0  22DA               	addwfc	fsr2h,f,c
  9810  0024E2  2ADE               	incf	postinc2,f,c
  9811  0024E4  0E00               	movlw	0
  9812  0024E6  22DD               	addwfc	postdec2,f,c
  9813  0024E8                     l1467:
  9814  0024E8  0012               	return		;funcret
  9815  0024EA                     __end_of_fputc:
  9816                           	callstack 0
  9817                           
  9818 ;; *************** function _putch *****************
  9819 ;; Defined at:
  9820 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  txData          1    wreg     unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  txData          1   18[COMRAM] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;Total ram usage:        1 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    5
  9841 ;; This function calls:
  9842 ;;		_EUSART1_Write
  9843 ;; This function is called by:
  9844 ;;		_fputc
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text42
  9849  002AF4                     __ptext42:
  9850                           	callstack 0
  9851  002AF4                     _putch:
  9852                           	callstack 18
  9853                           
  9854                           ;incstack = 0
  9855                           ;putch@txData stored from wreg
  9856  002AF4  6E13               	movwf	putch@txData^0,c
  9857  002AF6                     
  9858                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  9859  002AF6  5013               	movf	putch@txData^0,w,c
  9860  002AF8  EC43  F015         	call	_EUSART1_Write
  9861  002AFC  0012               	return		;funcret
  9862  002AFE                     __end_of_putch:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _EUSART1_Write *****************
  9866 ;; Defined at:
  9867 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  txData          1    wreg     unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  txData          1   17[COMRAM] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    4
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_putch
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text43
  9896  002A86                     __ptext43:
  9897                           	callstack 0
  9898  002A86                     _EUSART1_Write:
  9899                           	callstack 18
  9900                           
  9901                           ;incstack = 0
  9902                           ;EUSART1_Write@txData stored from wreg
  9903  002A86  6E12               	movwf	EUSART1_Write@txData^0,c
  9904  002A88                     l204:
  9905                           
  9906                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9907  002A88  A89E               	btfss	158,4,c	;volatile
  9908  002A8A  EF49  F015         	goto	u3541
  9909  002A8E  EF4B  F015         	goto	u3540
  9910  002A92                     u3541:
  9911  002A92  EF44  F015         	goto	l204
  9912  002A96                     u3540:
  9913  002A96                     
  9914                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9915  002A96  C012  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9916  002A9A  0012               	return		;funcret
  9917  002A9C                     __end_of_EUSART1_Write:
  9918                           	callstack 0
  9919                           
  9920 ;; *************** function _atoi *****************
  9921 ;; Defined at:
  9922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  s               2   24[COMRAM] PTR const unsigned char 
  9925 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  9926 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  9927 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  9928 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(255), 
  9929 ;;		 -> STR_53(5), STR_52(399), STR_51(24), STR_50(18), 
  9930 ;;		 -> STR_49(77), STR_48(29), STR_47(29), STR_46(16), 
  9931 ;;		 -> STR_45(89), STR_44(3), STR_43(5), STR_42(2), 
  9932 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  9933 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  9934 ;;		 -> STR_33(20), STR_32(28), STR_31(20), STR_30(30), 
  9935 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  9936 ;;		 -> STR_25(32), STR_24(44), STR_23(50), STR_22(52), 
  9937 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  9938 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  9939 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  9940 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  9941 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  9942 ;;		 -> STR_1(11), 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  n               2   37[COMRAM] int 
  9945 ;;  neg             2   30[COMRAM] int 
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  2   24[COMRAM] int 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;Total ram usage:       15 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    5
  9962 ;; This function calls:
  9963 ;;		___wmul
  9964 ;;		_isdigit
  9965 ;;		_isspace
  9966 ;; This function is called by:
  9967 ;;		_vfpfcnvrt
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text44
  9972  00183C                     __ptext44:
  9973                           	callstack 0
  9974  00183C                     _atoi:
  9975                           	callstack 22
  9976  00183C  0E00               	movlw	0
  9977  00183E  6E27               	movwf	(atoi@n+1)^0,c
  9978  001840  0E00               	movlw	0
  9979  001842  6E26               	movwf	atoi@n^0,c
  9980  001844  0E00               	movlw	0
  9981  001846  6E20               	movwf	(atoi@neg+1)^0,c
  9982  001848  0E00               	movlw	0
  9983  00184A  6E1F               	movwf	atoi@neg^0,c
  9984  00184C  EF2A  F00C         	goto	l4778
  9985  001850                     l4776:
  9986  001850  4A19               	infsnz	atoi@s^0,f,c
  9987  001852  2A1A               	incf	(atoi@s+1)^0,f,c
  9988  001854                     l4778:
  9989  001854  0E01               	movlw	1
  9990  001856  6E25               	movwf	_atoi$1869^0,c
  9991  001858  C019  FFF6         	movff	atoi@s,tblptrl
  9992  00185C  C01A  FFF7         	movff	atoi@s+1,tblptrh
  9993  001860                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9994  001860  6AF8               	clrf	tblptru,c
  9995  001862                     	endif
  9996  001862                     	if	0	;tblptru may be non-zero
  9997  001862                     	endif
  9998  001862  0008               	tblrd		*
  9999  001864  50F5               	movf	tablat,w,c
 10000  001866  0A20               	xorlw	32
 10001  001868  B4D8               	btfsc	status,2,c
 10002  00186A  EF39  F00C         	goto	u4431
 10003  00186E  EF3B  F00C         	goto	u4430
 10004  001872                     u4431:
 10005  001872  EF59  F00C         	goto	l4786
 10006  001876                     u4430:
 10007  001876  0EF7               	movlw	247
 10008  001878  6E1B               	movwf	??_atoi^0,c
 10009  00187A  0EFF               	movlw	255
 10010  00187C  6E1C               	movwf	(??_atoi+1)^0,c
 10011  00187E  C019  FFF6         	movff	atoi@s,tblptrl
 10012  001882  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10013  001886                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10014  001886  6AF8               	clrf	tblptru,c
 10015  001888                     	endif
 10016  001888                     	if	0	;tblptru may be non-zero
 10017  001888                     	endif
 10018  001888  0008               	tblrd		*
 10019  00188A  50F5               	movf	tablat,w,c
 10020  00188C  6E1D               	movwf	(??_atoi+2)^0,c
 10021  00188E  6A1E               	clrf	(??_atoi+3)^0,c
 10022  001890  501B               	movf	??_atoi^0,w,c
 10023  001892  261D               	addwf	(??_atoi+2)^0,f,c
 10024  001894  501C               	movf	(??_atoi+1)^0,w,c
 10025  001896  221E               	addwfc	(??_atoi+3)^0,f,c
 10026  001898  501E               	movf	(??_atoi+3)^0,w,c
 10027  00189A  E109               	bnz	u4440
 10028  00189C  0E05               	movlw	5
 10029  00189E  5C1D               	subwf	(??_atoi+2)^0,w,c
 10030  0018A0  A0D8               	btfss	status,0,c
 10031  0018A2  EF55  F00C         	goto	u4441
 10032  0018A6  EF57  F00C         	goto	u4440
 10033  0018AA                     u4441:
 10034  0018AA  EF59  F00C         	goto	l4786
 10035  0018AE                     u4440:
 10036  0018AE  0E00               	movlw	0
 10037  0018B0  6E25               	movwf	_atoi$1869^0,c
 10038  0018B2                     l4786:
 10039  0018B2  C025  F021         	movff	_atoi$1869,_atoi$1868
 10040  0018B6  6A22               	clrf	(_atoi$1868+1)^0,c
 10041  0018B8  5021               	movf	_atoi$1868^0,w,c
 10042  0018BA  1022               	iorwf	(_atoi$1868+1)^0,w,c
 10043  0018BC  A4D8               	btfss	status,2,c
 10044  0018BE  EF63  F00C         	goto	u4451
 10045  0018C2  EF65  F00C         	goto	u4450
 10046  0018C6                     u4451:
 10047  0018C6  EF28  F00C         	goto	l4776
 10048  0018CA                     u4450:
 10049  0018CA  EF6F  F00C         	goto	l4796
 10050  0018CE                     l4792:
 10051  0018CE  0E00               	movlw	0
 10052  0018D0  6E20               	movwf	(atoi@neg+1)^0,c
 10053  0018D2  0E01               	movlw	1
 10054  0018D4  6E1F               	movwf	atoi@neg^0,c
 10055  0018D6                     l4794:
 10056  0018D6  4A19               	infsnz	atoi@s^0,f,c
 10057  0018D8  2A1A               	incf	(atoi@s+1)^0,f,c
 10058  0018DA  EFA6  F00C         	goto	l4802
 10059  0018DE                     l4796:
 10060  0018DE  C019  FFF6         	movff	atoi@s,tblptrl
 10061  0018E2  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10062  0018E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10063  0018E6  6AF8               	clrf	tblptru,c
 10064  0018E8                     	endif
 10065  0018E8                     	if	0	;tblptru may be non-zero
 10066  0018E8                     	endif
 10067  0018E8  0008               	tblrd		*
 10068  0018EA  50F5               	movf	tablat,w,c
 10069  0018EC  6E1B               	movwf	??_atoi^0,c
 10070  0018EE  6A1C               	clrf	(??_atoi+1)^0,c
 10071                           
 10072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10073                           ; Switch size 1, requested type "simple"
 10074                           ; Number of cases is 1, Range of values is 0 to 0
 10075                           ; switch strategies available:
 10076                           ; Name         Instructions Cycles
 10077                           ; simple_byte            4     3 (average)
 10078                           ;	Chosen strategy is simple_byte
 10079  0018F0  501C               	movf	(??_atoi+1)^0,w,c
 10080  0018F2  0A00               	xorlw	0	; case 0
 10081  0018F4  B4D8               	btfsc	status,2,c
 10082  0018F6  EF7F  F00C         	goto	l5450
 10083  0018FA  EFA6  F00C         	goto	l4802
 10084  0018FE                     l5450:
 10085                           
 10086                           ; Switch size 1, requested type "simple"
 10087                           ; Number of cases is 2, Range of values is 43 to 45
 10088                           ; switch strategies available:
 10089                           ; Name         Instructions Cycles
 10090                           ; simple_byte            7     4 (average)
 10091                           ;	Chosen strategy is simple_byte
 10092  0018FE  501B               	movf	??_atoi^0,w,c
 10093  001900  0A2B               	xorlw	43	; case 43
 10094  001902  B4D8               	btfsc	status,2,c
 10095  001904  EF6B  F00C         	goto	l4794
 10096  001908  0A06               	xorlw	6	; case 45
 10097  00190A  B4D8               	btfsc	status,2,c
 10098  00190C  EF67  F00C         	goto	l4792
 10099  001910  EFA6  F00C         	goto	l4802
 10100  001914                     l4798:
 10101  001914  C026  F012         	movff	atoi@n,___wmul@multiplier
 10102  001918  C027  F013         	movff	atoi@n+1,___wmul@multiplier+1
 10103  00191C  0E00               	movlw	0
 10104  00191E  6E15               	movwf	(___wmul@multiplicand+1)^0,c
 10105  001920  0E0A               	movlw	10
 10106  001922  6E14               	movwf	___wmul@multiplicand^0,c
 10107  001924  ECEC  F014         	call	___wmul	;wreg free
 10108  001928  C019  FFF6         	movff	atoi@s,tblptrl
 10109  00192C  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10110  001930                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10111  001930  6AF8               	clrf	tblptru,c
 10112  001932                     	endif
 10113  001932                     	if	0	;tblptru may be non-zero
 10114  001932                     	endif
 10115  001932  0008               	tblrd		*
 10116  001934  50F5               	movf	tablat,w,c
 10117  001936  5E12               	subwf	?___wmul^0,f,c
 10118  001938  0E00               	movlw	0
 10119  00193A  5A13               	subwfb	(?___wmul+1)^0,f,c
 10120  00193C  0E30               	movlw	48
 10121  00193E  2412               	addwf	?___wmul^0,w,c
 10122  001940  6E26               	movwf	atoi@n^0,c
 10123  001942  0E00               	movlw	0
 10124  001944  2013               	addwfc	(?___wmul+1)^0,w,c
 10125  001946  6E27               	movwf	(atoi@n+1)^0,c
 10126  001948  EF6B  F00C         	goto	l4794
 10127  00194C                     l4802:
 10128  00194C  0ED0               	movlw	208
 10129  00194E  6E1B               	movwf	??_atoi^0,c
 10130  001950  0EFF               	movlw	255
 10131  001952  6E1C               	movwf	(??_atoi+1)^0,c
 10132  001954  C019  FFF6         	movff	atoi@s,tblptrl
 10133  001958  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10134  00195C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10135  00195C  6AF8               	clrf	tblptru,c
 10136  00195E                     	endif
 10137  00195E                     	if	0	;tblptru may be non-zero
 10138  00195E                     	endif
 10139  00195E  0008               	tblrd		*
 10140  001960  50F5               	movf	tablat,w,c
 10141  001962  6E1D               	movwf	(??_atoi+2)^0,c
 10142  001964  6A1E               	clrf	(??_atoi+3)^0,c
 10143  001966  501B               	movf	??_atoi^0,w,c
 10144  001968  261D               	addwf	(??_atoi+2)^0,f,c
 10145  00196A  501C               	movf	(??_atoi+1)^0,w,c
 10146  00196C  221E               	addwfc	(??_atoi+3)^0,f,c
 10147  00196E  501E               	movf	(??_atoi+3)^0,w,c
 10148  001970  E10A               	bnz	u4460
 10149  001972  0E0A               	movlw	10
 10150  001974  5C1D               	subwf	(??_atoi+2)^0,w,c
 10151  001976  A0D8               	btfss	status,0,c
 10152  001978  EFC0  F00C         	goto	u4461
 10153  00197C  EFC3  F00C         	goto	u4460
 10154  001980                     u4461:
 10155  001980  0E01               	movlw	1
 10156  001982  EFC4  F00C         	goto	u4470
 10157  001986                     u4460:
 10158  001986  0E00               	movlw	0
 10159  001988                     u4470:
 10160  001988  6E23               	movwf	_atoi$1870^0,c
 10161  00198A  6A24               	clrf	(_atoi$1870+1)^0,c
 10162  00198C  5023               	movf	_atoi$1870^0,w,c
 10163  00198E  1024               	iorwf	(_atoi$1870+1)^0,w,c
 10164  001990  A4D8               	btfss	status,2,c
 10165  001992  EFCD  F00C         	goto	u4481
 10166  001996  EFCF  F00C         	goto	u4480
 10167  00199A                     u4481:
 10168  00199A  EF8A  F00C         	goto	l4798
 10169  00199E                     u4480:
 10170  00199E  501F               	movf	atoi@neg^0,w,c
 10171  0019A0  1020               	iorwf	(atoi@neg+1)^0,w,c
 10172  0019A2  A4D8               	btfss	status,2,c
 10173  0019A4  EFD6  F00C         	goto	u4491
 10174  0019A8  EFD8  F00C         	goto	u4490
 10175  0019AC                     u4491:
 10176  0019AC  EFE6  F00C         	goto	l1426
 10177  0019B0                     u4490:
 10178  0019B0  C026  F01B         	movff	atoi@n,??_atoi
 10179  0019B4  C027  F01C         	movff	atoi@n+1,??_atoi+1
 10180  0019B8  1E1B               	comf	??_atoi^0,f,c
 10181  0019BA  1E1C               	comf	(??_atoi+1)^0,f,c
 10182  0019BC  4A1B               	infsnz	??_atoi^0,f,c
 10183  0019BE  2A1C               	incf	(??_atoi+1)^0,f,c
 10184  0019C0  C01B  F019         	movff	??_atoi,?_atoi
 10185  0019C4  C01C  F01A         	movff	??_atoi+1,?_atoi+1
 10186  0019C8  EFEA  F00C         	goto	l1429
 10187  0019CC                     l1426:
 10188  0019CC  C026  F019         	movff	atoi@n,?_atoi
 10189  0019D0  C027  F01A         	movff	atoi@n+1,?_atoi+1
 10190  0019D4                     l1429:
 10191  0019D4  0012               	return		;funcret
 10192  0019D6                     __end_of_atoi:
 10193                           	callstack 0
 10194                           
 10195 ;; *************** function _isspace *****************
 10196 ;; Defined at:
 10197 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  c               2   17[COMRAM] int 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;		None
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2   17[COMRAM] int 
 10204 ;; Registers used:
 10205 ;;		wreg, status,2, status,0
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;Total ram usage:        7 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    4
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_atoi
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text45
 10226  00263A                     __ptext45:
 10227                           	callstack 0
 10228  00263A                     _isspace:
 10229                           	callstack 22
 10230  00263A  0E01               	movlw	1
 10231  00263C  6E18               	movwf	_isspace$1895^0,c
 10232  00263E  0E20               	movlw	32
 10233  002640  1812               	xorwf	isspace@c^0,w,c
 10234  002642  1013               	iorwf	(isspace@c+1)^0,w,c
 10235  002644  B4D8               	btfsc	status,2,c
 10236  002646  EF27  F013         	goto	u3971
 10237  00264A  EF29  F013         	goto	u3970
 10238  00264E                     u3971:
 10239  00264E  EF42  F013         	goto	l4578
 10240  002652                     u3970:
 10241  002652  0EF7               	movlw	247
 10242  002654  6E14               	movwf	??_isspace^0,c
 10243  002656  0EFF               	movlw	255
 10244  002658  6E15               	movwf	(??_isspace+1)^0,c
 10245  00265A  C012  F016         	movff	isspace@c,??_isspace+2
 10246  00265E  C013  F017         	movff	isspace@c+1,??_isspace+3
 10247  002662  5014               	movf	??_isspace^0,w,c
 10248  002664  2616               	addwf	(??_isspace+2)^0,f,c
 10249  002666  5015               	movf	(??_isspace+1)^0,w,c
 10250  002668  2217               	addwfc	(??_isspace+3)^0,f,c
 10251  00266A  5017               	movf	(??_isspace+3)^0,w,c
 10252  00266C  E109               	bnz	u3980
 10253  00266E  0E05               	movlw	5
 10254  002670  5C16               	subwf	(??_isspace+2)^0,w,c
 10255  002672  A0D8               	btfss	status,0,c
 10256  002674  EF3E  F013         	goto	u3981
 10257  002678  EF40  F013         	goto	u3980
 10258  00267C                     u3981:
 10259  00267C  EF42  F013         	goto	l4578
 10260  002680                     u3980:
 10261  002680  0E00               	movlw	0
 10262  002682  6E18               	movwf	_isspace$1895^0,c
 10263  002684                     l4578:
 10264  002684  C018  F012         	movff	_isspace$1895,?_isspace
 10265  002688  6A13               	clrf	(?_isspace+1)^0,c
 10266  00268A  0012               	return		;funcret
 10267  00268C                     __end_of_isspace:
 10268                           	callstack 0
 10269                           
 10270 ;; *************** function _isdigit *****************
 10271 ;; Defined at:
 10272 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  c               2   17[COMRAM] int 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  2   17[COMRAM] int 
 10279 ;; Registers used:
 10280 ;;		wreg, status,2, status,0
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;Total ram usage:        6 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    4
 10293 ;; This function calls:
 10294 ;;		Nothing
 10295 ;; This function is called by:
 10296 ;;		_vfpfcnvrt
 10297 ;;		_atoi
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           	psect	text46
 10302  002880                     __ptext46:
 10303                           	callstack 0
 10304  002880                     _isdigit:
 10305                           	callstack 23
 10306  002880  0ED0               	movlw	208
 10307  002882  6E14               	movwf	??_isdigit^0,c
 10308  002884  0EFF               	movlw	255
 10309  002886  6E15               	movwf	(??_isdigit+1)^0,c
 10310  002888  C012  F016         	movff	isdigit@c,??_isdigit+2
 10311  00288C  C013  F017         	movff	isdigit@c+1,??_isdigit+3
 10312  002890  5014               	movf	??_isdigit^0,w,c
 10313  002892  2616               	addwf	(??_isdigit+2)^0,f,c
 10314  002894  5015               	movf	(??_isdigit+1)^0,w,c
 10315  002896  2217               	addwfc	(??_isdigit+3)^0,f,c
 10316  002898  5017               	movf	(??_isdigit+3)^0,w,c
 10317  00289A  E10A               	bnz	u3950
 10318  00289C  0E0A               	movlw	10
 10319  00289E  5C16               	subwf	(??_isdigit+2)^0,w,c
 10320  0028A0  A0D8               	btfss	status,0,c
 10321  0028A2  EF55  F014         	goto	u3951
 10322  0028A6  EF58  F014         	goto	u3950
 10323  0028AA                     u3951:
 10324  0028AA  0E01               	movlw	1
 10325  0028AC  EF59  F014         	goto	u3960
 10326  0028B0                     u3950:
 10327  0028B0  0E00               	movlw	0
 10328  0028B2                     u3960:
 10329  0028B2  6E12               	movwf	?_isdigit^0,c
 10330  0028B4  6A13               	clrf	(?_isdigit+1)^0,c
 10331  0028B6  0012               	return		;funcret
 10332  0028B8                     __end_of_isdigit:
 10333                           	callstack 0
 10334                           
 10335 ;; *************** function ___wmul *****************
 10336 ;; Defined at:
 10337 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  multiplier      2   17[COMRAM] unsigned int 
 10340 ;;  multiplicand    2   19[COMRAM] unsigned int 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  product         2   21[COMRAM] unsigned int 
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  2   17[COMRAM] unsigned int 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2, status,0, prodl, prodh
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;Total ram usage:        6 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; Hardware stack levels required when called:    4
 10359 ;; This function calls:
 10360 ;;		Nothing
 10361 ;; This function is called by:
 10362 ;;		_atoi
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           	psect	text47
 10367  0029D8                     __ptext47:
 10368                           	callstack 0
 10369  0029D8                     ___wmul:
 10370                           	callstack 22
 10371  0029D8  5012               	movf	___wmul@multiplier^0,w,c
 10372  0029DA  0214               	mulwf	___wmul@multiplicand^0,c
 10373  0029DC  CFF3 F016          	movff	prodl,___wmul@product
 10374  0029E0  CFF4 F017          	movff	prodh,___wmul@product+1
 10375  0029E4  5012               	movf	___wmul@multiplier^0,w,c
 10376  0029E6  0215               	mulwf	(___wmul@multiplicand+1)^0,c
 10377  0029E8  50F3               	movf	243,w,c
 10378  0029EA  2617               	addwf	(___wmul@product+1)^0,f,c
 10379  0029EC  5013               	movf	(___wmul@multiplier+1)^0,w,c
 10380  0029EE  0214               	mulwf	___wmul@multiplicand^0,c
 10381  0029F0  50F3               	movf	243,w,c
 10382  0029F2  2617               	addwf	(___wmul@product+1)^0,f,c
 10383  0029F4  C016  F012         	movff	___wmul@product,?___wmul
 10384  0029F8  C017  F013         	movff	___wmul@product+1,?___wmul+1
 10385  0029FC  0012               	return		;funcret
 10386  0029FE                     __end_of___wmul:
 10387                           	callstack 0
 10388                           
 10389 ;; *************** function _SPI2_ExchangeByte *****************
 10390 ;; Defined at:
 10391 ;;		line 92 in file "mcc_generated_files/spi2.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  data            1    wreg     unsigned char 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  data            1   17[COMRAM] unsigned char 
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      unsigned char 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;Total ram usage:        1 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    4
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_SDCARD_ReadBlock
 10416 ;;		_SDCARD_WriteBlock
 10417 ;;		_SDCARD_PollWriteComplete
 10418 ;;		_SDCARD_Initialize
 10419 ;;		_SPI2_WriteBlock
 10420 ;;		_SPI2_ReadBlock
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text48
 10425  002A56                     __ptext48:
 10426                           	callstack 0
 10427  002A56                     _SPI2_ExchangeByte:
 10428                           	callstack 25
 10429                           
 10430                           ;incstack = 0
 10431                           ;SPI2_ExchangeByte@data stored from wreg
 10432  002A56  6E12               	movwf	SPI2_ExchangeByte@data^0,c
 10433  002A58                     
 10434                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 10435  002A58  C012  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 10436  002A5C                     l31:
 10437  002A5C  AEA4               	btfss	164,7,c	;volatile
 10438  002A5E  EF33  F015         	goto	u2921
 10439  002A62  EF35  F015         	goto	u2920
 10440  002A66                     u2921:
 10441  002A66  EF2E  F015         	goto	l31
 10442  002A6A                     u2920:
 10443  002A6A                     
 10444                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 10445  002A6A  9EA4               	bcf	164,7,c	;volatile
 10446                           
 10447                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 10448  002A6C  506F               	movf	111,w,c	;volatile
 10449  002A6E  0012               	return		;funcret
 10450  002A70                     __end_of_SPI2_ExchangeByte:
 10451                           	callstack 0
 10452                           
 10453 ;; *************** function _EUSART1_is_rx_ready *****************
 10454 ;; Defined at:
 10455 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;		None
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      _Bool 
 10462 ;; Registers used:
 10463 ;;		wreg
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;Total ram usage:        0 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:    4
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_main
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text49
 10484  002A9C                     __ptext49:
 10485                           	callstack 0
 10486  002A9C                     _EUSART1_is_rx_ready:
 10487                           	callstack 26
 10488  002A9C                     
 10489                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 10490  002A9C  BA9E               	btfsc	158,5,c	;volatile
 10491  002A9E  EF53  F015         	goto	u2991
 10492  002AA2  EF56  F015         	goto	u2990
 10493  002AA6                     u2991:
 10494  002AA6  0E01               	movlw	1
 10495  002AA8  EF57  F015         	goto	u2996
 10496  002AAC                     u2990:
 10497  002AAC  0E00               	movlw	0
 10498  002AAE                     u2996:
 10499  002AAE  0012               	return		;funcret
 10500  002AB0                     __end_of_EUSART1_is_rx_ready:
 10501                           	callstack 0
 10502                           
 10503 ;; *************** function _EUSART1_Read *****************
 10504 ;; Defined at:
 10505 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;		None
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      unsigned char 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;Total ram usage:        0 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    4
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_main
 10530 ;;		_getch
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text50
 10535  0029B0                     __ptext50:
 10536                           	callstack 0
 10537  0029B0                     _EUSART1_Read:
 10538                           	callstack 26
 10539  0029B0                     l197:
 10540                           
 10541                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 10542  0029B0  AA9E               	btfss	158,5,c	;volatile
 10543  0029B2  EFDD  F014         	goto	u3001
 10544  0029B6  EFDF  F014         	goto	u3000
 10545  0029BA                     u3001:
 10546  0029BA  EFD8  F014         	goto	l197
 10547  0029BE                     u3000:
 10548  0029BE                     
 10549                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10550  0029BE  0E00               	movlw	0
 10551  0029C0  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
 10552  0029C2                     
 10553                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 10554  0029C2  A2AB               	btfss	171,1,c	;volatile
 10555  0029C4  EFE6  F014         	goto	u3011
 10556  0029C8  EFE8  F014         	goto	u3010
 10557  0029CC                     u3011:
 10558  0029CC  EFEA  F014         	goto	l3702
 10559  0029D0                     u3010:
 10560  0029D0                     
 10561                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 10562  0029D0  98AB               	bcf	171,4,c	;volatile
 10563                           
 10564                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 10565  0029D2  88AB               	bsf	171,4,c	;volatile
 10566  0029D4                     l3702:
 10567                           
 10568                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 10569  0029D4  50AE               	movf	174,w,c	;volatile
 10570  0029D6  0012               	return		;funcret
 10571  0029D8                     __end_of_EUSART1_Read:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function _INTERRUPT_InterruptManager *****************
 10575 ;; Defined at:
 10576 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;Total ram usage:        4 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    3
 10597 ;; This function calls:
 10598 ;;		_TMR0_ISR
 10599 ;; This function is called by:
 10600 ;;		Interrupt level 2
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	intcode
 10605  000008                     __pintcode:
 10606                           	callstack 0
 10607  000008                     _INTERRUPT_InterruptManager:
 10608                           	callstack 17
 10609                           
 10610                           ;incstack = 0
 10611  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10612  00000A  CFFA F00E          	movff	pclath,??_INTERRUPT_InterruptManager
 10613  00000E  CFFB F00F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10614  000012  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10615  000016  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10616  00001A                     
 10617                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10618  00001A  AAF2               	btfss	242,5,c	;volatile
 10619  00001C  EF12  F000         	goto	i2u331_41
 10620  000020  EF14  F000         	goto	i2u331_40
 10621  000024                     i2u331_41:
 10622  000024  EF1D  F000         	goto	i2l278
 10623  000028                     i2u331_40:
 10624  000028  A4F2               	btfss	242,2,c	;volatile
 10625  00002A  EF19  F000         	goto	i2u332_41
 10626  00002E  EF1B  F000         	goto	i2u332_40
 10627  000032                     i2u332_41:
 10628  000032  EF1D  F000         	goto	i2l278
 10629  000036                     i2u332_40:
 10630  000036                     
 10631                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 10632  000036  EC92  F014         	call	_TMR0_ISR	;wreg free
 10633  00003A                     i2l278:
 10634  00003A  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10635  00003E  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10636  000042  C00F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10637  000046  C00E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10638  00004A  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10639  00004C  0011               	retfie		f
 10640  00004E                     __end_of_INTERRUPT_InterruptManager:
 10641                           	callstack 0
 10642                           
 10643 ;; *************** function _TMR0_ISR *****************
 10644 ;; Defined at:
 10645 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10663 ;;Total ram usage:        0 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    2
 10666 ;; This function calls:
 10667 ;;		Absolute function
 10668 ;;		_TMR0_DefaultInterruptHandler
 10669 ;;		_myTMR0ISR
 10670 ;; This function is called by:
 10671 ;;		_INTERRUPT_InterruptManager
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text52
 10676  002924                     __ptext52:
 10677                           	callstack 0
 10678  002924                     _TMR0_ISR:
 10679                           	callstack 17
 10680  002924                     
 10681                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 10682  002924  94F2               	bcf	242,2,c	;volatile
 10683  002926                     
 10684                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 10685  002926  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 10686  002928  6ED7               	movwf	215,c	;volatile
 10687  00292A                     
 10688                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 10689  00292A  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10690  00292E                     
 10691                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 10692  00292E  504A               	movf	_TMR0_InterruptHandler^0,w,c
 10693  002930  104B               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 10694  002932  B4D8               	btfsc	status,2,c
 10695  002934  EF9E  F014         	goto	i2u297_41
 10696  002938  EFA0  F014         	goto	i2u297_40
 10697  00293C                     i2u297_41:
 10698  00293C  EFAC  F014         	goto	i2l131
 10699  002940                     i2u297_40:
 10700  002940                     
 10701                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 10702  002940  D802               	call	i2u298_48
 10703  002942  EFAC  F014         	goto	i2u298_49
 10704  002946                     i2u298_48:
 10705  002946  0005               	push	
 10706  002948  6EFA               	movwf	pclath,c
 10707  00294A  504A               	movf	_TMR0_InterruptHandler^0,w,c
 10708  00294C  6EFD               	movwf	tosl,c
 10709  00294E  504B               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 10710  002950  6EFE               	movwf	tosh,c
 10711  002952  6AFF               	clrf	tosu,c
 10712  002954  50FA               	movf	pclath,w,c
 10713  002956  0012               	return		;indir
 10714  002958                     i2u298_49:
 10715  002958                     i2l131:
 10716  002958  0012               	return		;funcret
 10717  00295A                     __end_of_TMR0_ISR:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10721 ;; Defined at:
 10722 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		None
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;Total ram usage:        0 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; This function calls:
 10743 ;;		Nothing
 10744 ;; This function is called by:
 10745 ;;		_TMR0_Initialize
 10746 ;;		_TMR0_ISR
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text53
 10751  002B12                     __ptext53:
 10752                           	callstack 0
 10753  002B12                     _TMR0_DefaultInterruptHandler:
 10754                           	callstack 18
 10755  002B12  0012               	return		;funcret
 10756  002B14                     __end_of_TMR0_DefaultInterruptHandler:
 10757                           	callstack 0
 10758                           
 10759 ;; *************** function _myTMR0ISR *****************
 10760 ;; Defined at:
 10761 ;;		line 354 in file "main.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;		None
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  micReading      1   12[COMRAM] unsigned char 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;Total ram usage:        3 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    1
 10782 ;; This function calls:
 10783 ;;		_TMR0_ReadTimer
 10784 ;;		i2_TMR0_WriteTimer
 10785 ;; This function is called by:
 10786 ;;		_main
 10787 ;;		_TMR0_ISR
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text54
 10792  0020CE                     __ptext54:
 10793                           	callstack 0
 10794  0020CE                     _myTMR0ISR:
 10795                           	callstack 17
 10796  0020CE                     
 10797                           ;main.c: 357:     uint8_t micReading = ADRESH;
 10798  0020CE  CFC4 F00D          	movff	4036,myTMR0ISR@micReading	;volatile
 10799                           
 10800                           ;main.c: 362:     ADCON0bits.GO_NOT_DONE = 1;
 10801  0020D2  82C2               	bsf	194,1,c	;volatile
 10802                           
 10803                           ;main.c: 366:     switch(timerState){
 10804  0020D4  EFA8  F010         	goto	i2l3650
 10805  0020D8                     i2l3632:
 10806                           
 10807                           ;main.c: 380:             blueBuffer[bufferIdx] = micReading;
 10808  0020D8  0EF5               	movlw	low _blueBuffer
 10809  0020DA  2444               	addwf	_bufferIdx^0,w,c
 10810  0020DC  6ED9               	movwf	fsr2l,c
 10811  0020DE  0E02               	movlw	high _blueBuffer
 10812  0020E0  2045               	addwfc	(_bufferIdx+1)^0,w,c
 10813  0020E2  6EDA               	movwf	fsr2h,c
 10814  0020E4  C00D  FFDF         	movff	myTMR0ISR@micReading,indf2
 10815  0020E8                     
 10816                           ;main.c: 381:             bufferIdx += 1;
 10817  0020E8  4A44               	infsnz	_bufferIdx^0,f,c
 10818  0020EA  2A45               	incf	(_bufferIdx+1)^0,f,c
 10819  0020EC                     
 10820                           ;main.c: 383:             if(bufferIdx >= 512){
 10821  0020EC  0E02               	movlw	2
 10822  0020EE  5C45               	subwf	(_bufferIdx+1)^0,w,c
 10823  0020F0  A0D8               	btfss	status,0,c
 10824  0020F2  EF7D  F010         	goto	i2u294_41
 10825  0020F6  EF7F  F010         	goto	i2u294_40
 10826  0020FA                     i2u294_41:
 10827  0020FA  EFC1  F010         	goto	i2l3652
 10828  0020FE                     i2u294_40:
 10829  0020FE                     
 10830                           ;main.c: 384:                 blueFull = 1;
 10831  0020FE  0E01               	movlw	1
 10832  002100  0100               	movlb	0	; () banked
 10833  002102  6FD1               	movwf	_blueFull& (0+255),b
 10834                           
 10835                           ;main.c: 385:                 bufferIdx = 0;
 10836  002104  0E00               	movlw	0
 10837  002106  6E45               	movwf	(_bufferIdx+1)^0,c
 10838  002108  0E00               	movlw	0
 10839  00210A  6E44               	movwf	_bufferIdx^0,c
 10840                           
 10841                           ;main.c: 386:                 timerState = MIC_IDLE;
 10842  00210C  0E00               	movlw	0
 10843  00210E  6E4C               	movwf	_timerState^0,c
 10844  002110  EFC1  F010         	goto	i2l3652
 10845  002114                     i2l3640:
 10846                           
 10847                           ;main.c: 393:                 redBuffer[bufferIdx] = micReading;
 10848  002114  0EF5               	movlw	low _redBuffer
 10849  002116  2444               	addwf	_bufferIdx^0,w,c
 10850  002118  6ED9               	movwf	fsr2l,c
 10851  00211A  0E00               	movlw	high _redBuffer
 10852  00211C  2045               	addwfc	(_bufferIdx+1)^0,w,c
 10853  00211E  6EDA               	movwf	fsr2h,c
 10854  002120  C00D  FFDF         	movff	myTMR0ISR@micReading,indf2
 10855  002124                     
 10856                           ;main.c: 394:             bufferIdx += 1;
 10857  002124  4A44               	infsnz	_bufferIdx^0,f,c
 10858  002126  2A45               	incf	(_bufferIdx+1)^0,f,c
 10859  002128                     
 10860                           ;main.c: 396:             if(bufferIdx >= 512){
 10861  002128  0E02               	movlw	2
 10862  00212A  5C45               	subwf	(_bufferIdx+1)^0,w,c
 10863  00212C  A0D8               	btfss	status,0,c
 10864  00212E  EF9B  F010         	goto	i2u295_41
 10865  002132  EF9D  F010         	goto	i2u295_40
 10866  002136                     i2u295_41:
 10867  002136  EFC1  F010         	goto	i2l3652
 10868  00213A                     i2u295_40:
 10869  00213A                     
 10870                           ;main.c: 397:                 redFull = 1;
 10871  00213A  0E01               	movlw	1
 10872  00213C  0100               	movlb	0	; () banked
 10873  00213E  6FD0               	movwf	_redFull& (0+255),b
 10874                           
 10875                           ;main.c: 398:                 bufferIdx = 0;
 10876  002140  0E00               	movlw	0
 10877  002142  6E45               	movwf	(_bufferIdx+1)^0,c
 10878  002144  0E00               	movlw	0
 10879  002146  6E44               	movwf	_bufferIdx^0,c
 10880                           
 10881                           ;main.c: 399:                 timerState = MIC_IDLE;
 10882  002148  0E00               	movlw	0
 10883  00214A  6E4C               	movwf	_timerState^0,c
 10884  00214C  EFC1  F010         	goto	i2l3652
 10885  002150                     i2l3650:
 10886  002150  504C               	movf	_timerState^0,w,c
 10887  002152  6E0B               	movwf	??_myTMR0ISR^0,c
 10888  002154  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 10889                           
 10890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10891                           ; Switch size 1, requested type "simple"
 10892                           ; Number of cases is 1, Range of values is 0 to 0
 10893                           ; switch strategies available:
 10894                           ; Name         Instructions Cycles
 10895                           ; simple_byte            4     3 (average)
 10896                           ;	Chosen strategy is simple_byte
 10897  002156  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 10898  002158  0A00               	xorlw	0	; case 0
 10899  00215A  B4D8               	btfsc	status,2,c
 10900  00215C  EFB2  F010         	goto	i2l5452
 10901  002160  EFC1  F010         	goto	i2l3652
 10902  002164                     i2l5452:
 10903                           
 10904                           ; Switch size 1, requested type "simple"
 10905                           ; Number of cases is 3, Range of values is 0 to 2
 10906                           ; switch strategies available:
 10907                           ; Name         Instructions Cycles
 10908                           ; simple_byte           10     6 (average)
 10909                           ;	Chosen strategy is simple_byte
 10910  002164  500B               	movf	??_myTMR0ISR^0,w,c
 10911  002166  0A00               	xorlw	0	; case 0
 10912  002168  B4D8               	btfsc	status,2,c
 10913  00216A  EFC1  F010         	goto	i2l3652
 10914  00216E  0A01               	xorlw	1	; case 1
 10915  002170  B4D8               	btfsc	status,2,c
 10916  002172  EF6C  F010         	goto	i2l3632
 10917  002176  0A03               	xorlw	3	; case 2
 10918  002178  B4D8               	btfsc	status,2,c
 10919  00217A  EF8A  F010         	goto	i2l3640
 10920  00217E  EFC1  F010         	goto	i2l3652
 10921  002182                     i2l3652:
 10922                           
 10923                           ;main.c: 408:         TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 10924  002182  EC0E  F015         	call	_TMR0_ReadTimer	;wreg free
 10925  002186  0100               	movlb	0	; () banked
 10926  002188  51F3               	movf	_sampleRate& (0+255),w,b
 10927  00218A  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 10928  00218C  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 10929  00218E  51F4               	movf	(_sampleRate+1)& (0+255),w,b
 10930  002190  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 10931  002192  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 10932  002194  EC7F  F015         	call	i2_TMR0_WriteTimer	;wreg free
 10933  002198                     
 10934                           ;main.c: 409:         INTCONbits.TMR0IF = 0;
 10935  002198  94F2               	bcf	242,2,c	;volatile
 10936  00219A  0012               	return		;funcret
 10937  00219C                     __end_of_myTMR0ISR:
 10938                           	callstack 0
 10939                           
 10940 ;; *************** function i2_TMR0_WriteTimer *****************
 10941 ;; Defined at:
 10942 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  timerVal        2    8[COMRAM] unsigned short 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  1    wreg      void 
 10949 ;; Registers used:
 10950 ;;		wreg, status,2
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;Total ram usage:        2 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; This function calls:
 10963 ;;		Nothing
 10964 ;; This function is called by:
 10965 ;;		_myTMR0ISR
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text55
 10970  002AFE                     __ptext55:
 10971                           	callstack 0
 10972  002AFE                     i2_TMR0_WriteTimer:
 10973                           	callstack 17
 10974  002AFE                     
 10975                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 10976  002AFE  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 10977  002B00  6ED7               	movwf	215,c	;volatile
 10978  002B02                     
 10979                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 10980  002B02  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 10981  002B06  0012               	return		;funcret
 10982  002B08                     __end_ofi2_TMR0_WriteTimer:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _TMR0_ReadTimer *****************
 10986 ;; Defined at:
 10987 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  readVal         2    4[COMRAM] unsigned short 
 10992 ;;  readValHigh     1    7[COMRAM] unsigned char 
 10993 ;;  readValLow      1    6[COMRAM] unsigned char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  2    0[COMRAM] unsigned short 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;Total ram usage:        8 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_myTMR0ISR
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text56
 11017  002A1C                     __ptext56:
 11018                           	callstack 0
 11019  002A1C                     _TMR0_ReadTimer:
 11020                           	callstack 17
 11021  002A1C                     
 11022                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 11023  002A1C  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 11024                           
 11025                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 11026  002A20  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 11027  002A24                     
 11028                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 11029  002A24  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 11030  002A26  6E03               	movwf	??_TMR0_ReadTimer^0,c
 11031  002A28  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 11032  002A2A  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 11033  002A2C  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 11034  002A30                     
 11035                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 11036  002A30  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 11037  002A34  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 11038  002A38  0012               	return		;funcret
 11039  002A3A                     __end_of_TMR0_ReadTimer:
 11040                           	callstack 0
 11041                           
 11042                           	psect	text57
 11043  000000                     __ptext57:
 11044                           	callstack 0
 11045  000000                     
 11046                           	psect	rparam
 11047  0000                     
 11048                           	psect	temp
 11049  00004E                     btemp:
 11050                           	callstack 0
 11051  00004E                     	ds	1
 11052  0000                     int$flags	set	btemp
 11053  0000                     wtemp8	set	btemp+1
 11054  0000                     ttemp5	set	btemp+1
 11055  0000                     ttemp6	set	btemp+4
 11056  0000                     ttemp7	set	btemp+8
 11057                           
 11058                           	psect	idloc
 11059                           
 11060                           ;Config register IDLOC0 @ 0x200000
 11061                           ;	unspecified, using default values
 11062  200000                     	org	2097152
 11063  200000  FF                 	db	255
 11064                           
 11065                           ;Config register IDLOC1 @ 0x200001
 11066                           ;	unspecified, using default values
 11067  200001                     	org	2097153
 11068  200001  FF                 	db	255
 11069                           
 11070                           ;Config register IDLOC2 @ 0x200002
 11071                           ;	unspecified, using default values
 11072  200002                     	org	2097154
 11073  200002  FF                 	db	255
 11074                           
 11075                           ;Config register IDLOC3 @ 0x200003
 11076                           ;	unspecified, using default values
 11077  200003                     	org	2097155
 11078  200003  FF                 	db	255
 11079                           
 11080                           ;Config register IDLOC4 @ 0x200004
 11081                           ;	unspecified, using default values
 11082  200004                     	org	2097156
 11083  200004  FF                 	db	255
 11084                           
 11085                           ;Config register IDLOC5 @ 0x200005
 11086                           ;	unspecified, using default values
 11087  200005                     	org	2097157
 11088  200005  FF                 	db	255
 11089                           
 11090                           ;Config register IDLOC6 @ 0x200006
 11091                           ;	unspecified, using default values
 11092  200006                     	org	2097158
 11093  200006  FF                 	db	255
 11094                           
 11095                           ;Config register IDLOC7 @ 0x200007
 11096                           ;	unspecified, using default values
 11097  200007                     	org	2097159
 11098  200007  FF                 	db	255
 11099                           
 11100                           	psect	config
 11101                           
 11102                           ; Padding undefined space
 11103  300000                     	org	3145728
 11104  300000  FF                 	db	255
 11105                           
 11106                           ;Config register CONFIG1H @ 0x300001
 11107                           ;	Oscillator Selection bits
 11108                           ;	FOSC = INTIO67, Internal oscillator block
 11109                           ;	4X PLL Enable
 11110                           ;	PLLCFG = OFF, Oscillator used directly
 11111                           ;	Primary clock enable bit
 11112                           ;	PRICLKEN = ON, Primary clock enabled
 11113                           ;	Fail-Safe Clock Monitor Enable bit
 11114                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11115                           ;	Internal/External Oscillator Switchover bit
 11116                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11117  300001                     	org	3145729
 11118  300001  28                 	db	40
 11119                           
 11120                           ;Config register CONFIG2L @ 0x300002
 11121                           ;	Power-up Timer Enable bit
 11122                           ;	PWRTEN = OFF, Power up timer disabled
 11123                           ;	Brown-out Reset Enable bits
 11124                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11125                           ;	Brown Out Reset Voltage bits
 11126                           ;	BORV = 190, VBOR set to 1.90 V nominal
 11127  300002                     	org	3145730
 11128  300002  1F                 	db	31
 11129                           
 11130                           ;Config register CONFIG2H @ 0x300003
 11131                           ;	Watchdog Timer Enable bits
 11132                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11133                           ;	Watchdog Timer Postscale Select bits
 11134                           ;	WDTPS = 32768, 1:32768
 11135  300003                     	org	3145731
 11136  300003  3C                 	db	60
 11137                           
 11138                           ; Padding undefined space
 11139  300004                     	org	3145732
 11140  300004  FF                 	db	255
 11141                           
 11142                           ;Config register CONFIG3H @ 0x300005
 11143                           ;	CCP2 MUX bit
 11144                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11145                           ;	PORTB A/D Enable bit
 11146                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 11147                           ;	P3A/CCP3 Mux bit
 11148                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11149                           ;	HFINTOSC Fast Start-up
 11150                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11151                           ;	Timer3 Clock input mux bit
 11152                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11153                           ;	ECCP2 B output mux bit
 11154                           ;	P2BMX = PORTB5, P2B is on RB5
 11155                           ;	MCLR Pin Enable bit
 11156                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11157  300005                     	org	3145733
 11158  300005  BF                 	db	191
 11159                           
 11160                           ;Config register CONFIG4L @ 0x300006
 11161                           ;	Stack Full/Underflow Reset Enable bit
 11162                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11163                           ;	Single-Supply ICSP Enable bit
 11164                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 11165                           ;	Extended Instruction Set Enable bit
 11166                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11167                           ;	Background Debug
 11168                           ;	DEBUG = OFF, Disabled
 11169  300006                     	org	3145734
 11170  300006  85                 	db	133
 11171                           
 11172                           ; Padding undefined space
 11173  300007                     	org	3145735
 11174  300007  FF                 	db	255
 11175                           
 11176                           ;Config register CONFIG5L @ 0x300008
 11177                           ;	Code Protection Block 0
 11178                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11179                           ;	Code Protection Block 1
 11180                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11181                           ;	Code Protection Block 2
 11182                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11183                           ;	Code Protection Block 3
 11184                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11185  300008                     	org	3145736
 11186  300008  0F                 	db	15
 11187                           
 11188                           ;Config register CONFIG5H @ 0x300009
 11189                           ;	Boot Block Code Protection bit
 11190                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11191                           ;	Data EEPROM Code Protection bit
 11192                           ;	CPD = OFF, Data EEPROM not code-protected
 11193  300009                     	org	3145737
 11194  300009  C0                 	db	192
 11195                           
 11196                           ;Config register CONFIG6L @ 0x30000A
 11197                           ;	Write Protection Block 0
 11198                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11199                           ;	Write Protection Block 1
 11200                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11201                           ;	Write Protection Block 2
 11202                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11203                           ;	Write Protection Block 3
 11204                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11205  30000A                     	org	3145738
 11206  30000A  0F                 	db	15
 11207                           
 11208                           ;Config register CONFIG6H @ 0x30000B
 11209                           ;	Configuration Register Write Protection bit
 11210                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11211                           ;	Boot Block Write Protection bit
 11212                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11213                           ;	Data EEPROM Write Protection bit
 11214                           ;	WRTD = OFF, Data EEPROM not write-protected
 11215  30000B                     	org	3145739
 11216  30000B  E0                 	db	224
 11217                           
 11218                           ;Config register CONFIG7L @ 0x30000C
 11219                           ;	Table Read Protection Block 0
 11220                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11221                           ;	Table Read Protection Block 1
 11222                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11223                           ;	Table Read Protection Block 2
 11224                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11225                           ;	Table Read Protection Block 3
 11226                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11227  30000C                     	org	3145740
 11228  30000C  0F                 	db	15
 11229                           
 11230                           ;Config register CONFIG7H @ 0x30000D
 11231                           ;	Boot Block Table Read Protection bit
 11232                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11233  30000D                     	org	3145741
 11234  30000D  40                 	db	64
 11235                           tosu	equ	0xFFF
 11236                           tosh	equ	0xFFE
 11237                           tosl	equ	0xFFD
 11238                           stkptr	equ	0xFFC
 11239                           pclatu	equ	0xFFB
 11240                           pclath	equ	0xFFA
 11241                           pcl	equ	0xFF9
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           indf0	equ	0xFEF
 11249                           postinc0	equ	0xFEE
 11250                           postdec0	equ	0xFED
 11251                           preinc0	equ	0xFEC
 11252                           plusw0	equ	0xFEB
 11253                           fsr0h	equ	0xFEA
 11254                           fsr0l	equ	0xFE9
 11255                           wreg	equ	0xFE8
 11256                           indf1	equ	0xFE7
 11257                           postinc1	equ	0xFE6
 11258                           postdec1	equ	0xFE5
 11259                           preinc1	equ	0xFE4
 11260                           plusw1	equ	0xFE3
 11261                           fsr1h	equ	0xFE2
 11262                           fsr1l	equ	0xFE1
 11263                           bsr	equ	0xFE0
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           postdec2	equ	0xFDD
 11267                           preinc2	equ	0xFDC
 11268                           plusw2	equ	0xFDB
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8

Data Sizes:
    Strings     1675
    Constant    30
    Data        2
    BSS         1083
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160    104     149
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1718_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[255]), 
		 -> STR_53(CODE[5]), STR_52(CODE[399]), STR_51(CODE[24]), STR_50(CODE[18]), 
		 -> STR_49(CODE[77]), STR_48(CODE[29]), STR_47(CODE[29]), STR_46(CODE[16]), 
		 -> STR_45(CODE[89]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), STR_30(CODE[30]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[255]), 
		 -> STR_53(CODE[5]), STR_52(CODE[399]), STR_51(CODE[24]), STR_50(CODE[18]), 
		 -> STR_49(CODE[77]), STR_48(CODE[29]), STR_47(CODE[29]), STR_46(CODE[16]), 
		 -> STR_45(CODE[89]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), STR_30(CODE[30]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 399
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[255]), 
		 -> STR_53(CODE[5]), STR_52(CODE[399]), STR_51(CODE[24]), STR_50(CODE[18]), 
		 -> STR_49(CODE[77]), STR_48(CODE[29]), STR_47(CODE[29]), STR_46(CODE[16]), 
		 -> STR_45(CODE[89]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), STR_30(CODE[30]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[255]), 
		 -> STR_53(CODE[5]), STR_52(CODE[399]), STR_51(CODE[24]), STR_50(CODE[18]), 
		 -> STR_49(CODE[77]), STR_48(CODE[29]), STR_47(CODE[29]), STR_46(CODE[16]), 
		 -> STR_45(CODE[89]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), STR_30(CODE[30]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> redBuffer(BIGRAM[512]), blueBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0  109630
                                             83 BANK0     21    21      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___awmod
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   35748
                                             73 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             19 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     657
                                             18 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     505
                                             18 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             18 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   35305
                                             73 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   34958
                                             63 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28643
                                             55 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   28080
                                             57 COMRAM     4     4      0
                                             28 BANK0     27    21      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7005
                                             46 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             23 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6387
                                             46 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             17 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             17 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7241
                                             46 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4975
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             28 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             18 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             24 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             17 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     184
                                             13 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     184
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           3     3      0     184
                                             10 COMRAM     3     3      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___awmod
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     400      37       26.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      95       5       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2      12        0.0%
DATA                 0      0     4E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 27 16:03:00 2020

                                            l21 2AC0                                              l31 2A5C  
                                            l33 2A6A                                              l25 23B8  
                                            l34 2A6E                                              l28 2B0E  
                                            l88 2986                            SDCARD_ReadBlock@addr 0013  
                           ___wmul@multiplicand 0014                                 _timer0ReloadVal 0048  
                                hexDumpBuffer@i 00B1                                  hexDumpBuffer@j 00AD  
                           myTMR0ISR@micReading 000D                                             l112 28EC  
                                           l201 29D6                                             l204 2A88  
                                           l124 2ACA                                             l213 2AFC  
                                           l134 2AD4                                             l207 2A9A  
                                           l231 2AF2                                             l225 2AE8  
                                           l228 2ADE                                             l180 279A  
                                           l500 183A                                             l262 2A54  
                                           l271 2B0A                                             l256 2A1A  
                                           l345 0080                                             l450 2576  
                                           l259 2A46                                             l188 2AAE  
                                           l348 00E2                                             l197 29B0  
                                           l453 27D8                                             l373 0444  
                                           l438 2452                                             l543 29FC  
                                           l519 2A84                                             l359 02D2  
                                           l464 1B94                                             l448 2574  
                                           l384 05A8                                             l369 03D6  
                                           l458 280E                                             l483 1CD4  
                                           l670 1E38                                             l657 1B5C  
                                           l489 176A                                             l787 230C  
                                           l981 1F08                                             l991 20AC  
                                           l988 1F28                                             l998 20CC  
                                           _abs 271E                                             _pad 219C  
                                           _sin F955                                    ___awmod@sign 0017  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            ?_abs 0024  
                                          l1221 29AE                                            l1310 1482  
                                          l1320 164E                                            l1312 148A  
                                          l1305 116E                                            l1261 2222  
                                          l1325 11A8                                            l1350 1448  
                                          l1334 1248                                            l1263 225C  
                                          l1327 11B0                                            l1432 27D6  
                                          l1426 19CC                                            l1274 1F8E  
                                          l1258 21E0                                            l1452 287E  
                                          l1348 13E6                                            l1364 0A00  
                                          l1429 19D4                                            l1277 1FD0  
                                          l1285 0F2E                                            l1438 28B6  
                                          l1446 268A                                            l1390 25D2  
                                          l1279 1FFC                                            l1287 0F36  
                                          l1391 25DA                                            l5000 1C26  
                                          l1481 2922                                            l1377 0E8C  
                                          l5010 1C64                                            l5002 1C30  
                                          l1467 24E8                                            l1395 2754  
                                          l1475 271C                                            l1491 2638  
                                          l5020 1C7E                                            l5012 1C66  
                                          l5004 1C32                                            l5100 007E  
                                          l1398 275C                                            l1486 2630  
                                          l5030 1CA0                                            l5022 1C84  
                                          l5014 1C6C                                            l5006 1C42  
                                          l5110 00AC                                            l5102 008E  
                                          l4400 29F4                                            l5032 1CA2  
                                          l5024 1C8A                                            l5016 1C72  
                                          l5008 1C52                                            l3600 28D8  
                                          l5040 165E                                            l5200 0502  
                                          l5120 00E0                                            l5112 00BA  
                                          l5104 009A                                            l1497 2846  
                                          l4410 1A08                                            l5034 1CB2  
                                          l5026 1C90                                            l5018 1C78  
                                          l3610 2772                                            l3602 28DA  
                                          l5050 1698                                            l5210 0540  
                                          l5202 0512                                            l5130 02A2  
                                          l5122 00F0                                            l5114 00C8  
                                          l5106 009C                                            l3700 29D0  
                                          l4420 1A4A                                            l4412 1A0C  
                                          l4404 19D6                                            l4500 1EEE  
                                          l5036 1CC2                                            l5028 1C96  
                                          l3612 277E                                            l3620 2A3A  
                                          l3604 28DC                                            l5060 16F4  
                                          l5052 16A4                                            l5220 05AA  
                                          l5212 055E                                            l5140 02BC  
                                          l5124 0104                                            l5116 00D6  
                                          l5108 009E                                            l3702 29D4  
                                          l4430 1AA4                                            l4422 1A68  
                                          l4414 1A1A                                            l4406 19DA  
                                          l4502 1EF0                                            l4510 2024  
                                          l3622 2A70                                            l3614 278A  
                                          l3606 28E8                                            l3710 2A06  
                                          l5070 175E                                            l5062 1710  
                                          l5054 16B8                                            l5046 1668  
                                          l5038 1650                                            l5310 0858  
                                          l5302 0828                                            l5230 05EE  
                                          l5214 0562                                            l5222 05BC  
                                          l5150 02EC                                            l5142 02D8  
                                          l5126 0110                                            l5118 00DA  
                                          l4360 2AF6                                            l4600 1FAE  
                                          l4432 1AD2                                            l4424 1A70  
                                          l4440 1B0C                                            l4416 1A3A  
                                          l4408 19E8                                            l4504 1F02  
                                          l4520 20A6                                            l4512 2038  
                                          l3800 23BC                                            l3616 2796  
                                          l3608 275E                                            l3712 2A0A  
                                          l5080 17C4                                            l5072 178E  
                                          l5064 1720                                            l5056 16D6  
                                          l5048 167A                                            l5312 085C  
                                          l5240 0680                                            l5232 061E  
                                          l5224 05D0                                            l5216 0574  
                                          l5208 051C                                            l5160 0320  
                                          l5152 02F2                                            l5136 02AA  
                                          l5128 0292                                            l4370 24A0  
                                          l4362 2454                                            l4602 1FB2  
                                          l4442 1B1C                                            l4434 1AF2  
                                          l4426 1A84                                            l4418 1A3E  
                                          l4450 1CDA                                            l4530 21D8  
                                          l4522 219C                                            l4610 0E8E  
                                          l4514 2046                                            l4506 1FFE  
                                          l3810 23DA                                            l3802 23C2  
                                          l3618 2B08                                            l3554 2ACC  
                                          l3714 2A0E                                            l3706 29FE  
                                          l5090 182E                                            l5082 17E0  
                                          l5074 1794                                            l5066 1742  
                                          l5058 16E2                                            l5314 086E  
                                          l5306 0832                                            l5250 06BE  
                                          l5242 0690                                            l5234 063C  
                                          l5226 05D4                                            l5218 0590  
                                          l5162 0332                                            l5170 0386  
                                          l5154 030C                                            l5138 02B6  
                                          l4356 2A88                                            l4372 24D6  
                                          l4364 2466                                            l4604 1FDE  
                                          l4444 1B3C                                            l4436 1AF4  
                                          l4428 1A92                                            l4460 1D3A  
                                          l4452 1CE8                                            l4380 26F8  
                                          l4540 2244                                            l4532 21EC  
                                          l4524 21AA                                            l4620 0F08  
                                          l4612 0EAE                                            l4516 2074  
                                          l4508 201C                                            l4700 15FE  
                                          l3812 23E0                                            l3804 23C8  
                                          l3900 2504                                            l3660 2310  
                                          l3564 2AE0                                            l3716 2A12  
                                          l3708 2A02                                            l5084 17F0  
                                          l5076 17A6                                            l5068 1748  
                                          l5308 0844                                            l5260 070C  
                                          l5252 06C4                                            l5244 0698  
                                          l5236 0644                                            l5228 05E6  
                                          l5180 0462                                            l5172 03A8  
                                          l5164 0354                                            l5156 0310  
                                          l5148 02E0                                            l5092 0052  
                                          l4358 2A96                                            l4366 2478  
                                          l4606 1FF0                                            l4438 1B06  
                                          l4470 1DB0                                            l4462 1D58  
                                          l4454 1D08                                            l4382 26FC  
                                          l4390 2916                                            l4534 2200  
                                          l4526 21BE                                            l4630 0F64  
                                          l4622 0F22                                            l4614 0ED8  
                                          l4518 2094                                            l4702 1618  
                                          l4710 117E                                            l3830 2444  
                                          l3814 23E6                                            l3806 23CE  
                                          l3910 2544                                            l3902 250A  
                                          l3670 23B6                                            l3662 231E  
                                          l3566 2AD6                                            l3590 295A  
                                          l3582 2AB0                                            l3718 2A16  
                                          l5086 1812                                            l5078 17B2  
                                          l5270 0752                                            l5262 0710  
                                          l5254 06CC                                            l5246 06AC  
                                          l5238 0674                                            l5190 04A8  
                                          l5182 0464                                            l5174 03B4  
                                          l5166 0360                                            l5158 0316  
                                          l5318 0884                                            l5094 006C  
                                          ?_pad 0024                                            l4368 2482  
                                          l4480 1E18                                            l4472 1DD0  
                                          l4464 1D60                                            l4456 1D0C  
                                          l4448 1CD6                                            l4544 271E  
                                          l4376 26DA                                            l4384 28EE  
                                          l4536 2204                                            l4528 21CC  
                                          l4640 1004                                            l4632 0F6C  
                                          l4624 0F3E                                            l4616 0EF8  
                                          l4704 1626                                            l4552 279C  
                                          l4560 2612                                            l4720 11F0  
                                          l4712 1180                                            l3832 2450  
                                          l3824 241A                                            l3816 23FC  
                                          l3808 23D4                                            l3920 2562  
                                          l3904 2510                                            l3664 235E  
                                          l3568 2AEA                                            l3592 2984  
                                          l3584 2ABC                                            l5088 1818  
                                          l5280 0778                                            l5256 06DE  
                                          l5264 0714                                            l5248 06BA  
                                          l5192 04CE                                            l5184 0472  
                                          l5176 03CA                                            l5168 0376  
                                          l5096 0070                                            l3690 2A9C  
                                          l4570 263A                                            l4810 19B0  
                                          l5450 18FE                                            l4802 194C  
                                          l4474 1DE2                                            l4466 1D74  
                                          l4458 1D1A                                            l4546 2738  
                                          l4378 26E6                                            l4386 28FA  
                                          l4538 2230                                            l4650 10C2  
                                          l4642 100A                                            l4634 0F74  
                                          l4626 0F50                                            l4618 0F06  
                                          l4490 1E6C                                            l4394 2810  
                                          l4562 2624                                            l4730 122C  
                                          l4722 11FA                                            l4714 119A  
                                          l3922 27DA                                            l3826 242E  
                                          l3818 2412                                            l3906 2516  
                                          l3674 2B0C                                            l3666 2362  
                                          l3586 2ABE                                            l3594 28B8  
                                          l5290 07C8                                            l5282 077C  
                                          l5266 0724                                            l5258 06FA  
                                          l5274 075A                                            l5194 04DC  
                                          l5186 0480                                            l5178 0446  
                                          l5098 0072                                            l3588 2A58  
                                          l4572 263E                                            l4468 1D82  
                                          l4476 1DE8                                            l4388 28FE  
                                          l4660 1110                                            l4652 10DC  
                                          l4636 0F7A                                            l4644 106E  
                                          l4628 0F5E                                            l4492 1E80  
                                          l4484 1E3A                                            l4548 2848  
                                          l4556 25DC                                            l4732 123C  
                                          l4724 1202                                            l4716 11C6  
                                          l4708 1170                                            l4900 0CFA  
                                          l4820 093E                                            l3924 27E2  
                                          l3828 2432                                            l3916 254C  
                                          l3908 252C                                            l3668 2386  
                                          l3596 28BA                                            l3676 2AC2  
                                          l3940 225E                                            l5292 07D2  
                                          l5284 078C                                            l5276 076E  
                                          l5268 0740                                            l5196 04EE  
                                          l5188 049A                                            l3694 29B0  
                                          l4398 29D8                                            l4566 2880  
                                          l4574 2652                                            l4806 198C  
                                          l4590 1F62                                            l4582 1F2A  
                                          l4478 1DF8                                            l4662 1122  
                                          l4646 108A                                            l4654 10EA  
                                          l4638 0FFC                                            l4494 1E8E  
                                          l4486 1E46                                            l4750 1306  
                                          l4742 12C8                                            l4726 1208  
                                          l4718 11D0                                            l4910 0DA8  
                                          l4902 0D20                                            l4830 0974  
                                          l4822 094E                                            l3934 27FA  
                                          l3926 27E4                                            l3918 255E  
                                          l3598 28C2                                            l3678 2AC6  
                                          l3950 228A                                            l3942 2262  
                                          l5446 0898                                            l5286 0798  
                                          l5278 0772                                            l5198 04F2  
                                          l3696 29BE                                            l4576 2680  
                                          l4808 199E                                            l4592 1F74  
                                          l4584 1F3C                                            l4664 112E  
                                          l4656 10FC                                            l4648 10A8  
                                          l4496 1EA0                                            l4488 1E64  
                                          l4680 14B2                                            l4672 144A  
                                          l4760 13BE                                            l4752 130C  
                                          l4744 12DA                                            l4736 127C  
                                          l4728 1210                                            l4920 0E2C  
                                          l4904 0D46                                            l5448 09C0  
                                          l4824 0952                                            l4816 090A  
                                          l3936 280C                                            l3928 27F4  
                                          l3960 22C2                                            l3952 2292  
                                          l3944 2270                                            l5296 07EE  
                                          l5288 07AC                                            l3698 29C2  
                                          l4578 2684                                            l4586 1F48  
                                          l4666 1136                                            l4658 110A  
                                          l4498 1ECE                                            l4690 1548  
                                          l4682 14BC                                            l4674 1458  
                                          l4770 1420                                            l4762 13D8  
                                          l4738 128E                                            l4746 12EE  
                                          l4754 136A                                            l4906 0D5E  
                                          l4914 0DE4                                            l4850 0998  
                                          l4842 0986                                            l4834 097A  
                                          l4826 0960                                            l4818 0930  
                                          l4930 0E54                                            l3890 24EA  
                                          l3970 22FC                                            l3962 22D8  
                                          l3954 22A4                                            l3946 2278  
                                          l5298 0810                                            l4780 1858  
                                          l4596 1F86                                            l4588 1F54  
                                          l4668 1146                                            l4692 154E  
                                          l4684 14C4                                            l4676 145A  
                                          l4764 13F4                                            l4756 1386  
                                          l4748 1300                                            l4932 0E7A  
                                          l4916 0E0A                                            l4924 0E3A  
                                          l4908 0D6C                                            l4860 0A6C  
                                          l4828 0962                                            l4852 09EE  
                                          l3796 23BA                                            l3892 24EC  
                                          l3972 2304                                            l3964 22E0  
                                          l3956 22AC                                            l3948 227C  
                                          l4790 18B8                                            l4782 1876  
                                          l4774 183C                                            l4598 1F9A  
                                          l4686 14CA                                            l4694 15B2  
                                          l4678 1474                                            l4766 13FA  
                                          l4758 13A4                                            l4926 0E48  
                                          l4918 0E18                                            l4862 0A7A  
                                          l4854 0A0E                                            l4846 098C  
                                          l4838 0980                                            l4950 2580  
                                          l3798 23BA                                            l3894 24F2  
                                          l3966 22E6                                            l3958 22B4  
                                          l4792 18CE                                            l4784 18AE  
                                          l4776 1850                                            l4696 15C6  
                                          l4688 1542                                            l4768 140A  
                                          l4872 0B00                                            l4864 0A88  
                                          l4856 0A10                                            l4952 258E  
                                          l3896 24F8                                            l3888 24EA  
                                          l3968 22EC                                            l4794 18D6  
                                          l4786 18B2                                            l4778 1854  
                                          l4698 15E4                                            l4882 0B86  
                                          l4866 0AA8                                            l4874 0B12  
                                          l4858 0A36                                            l4954 25B4  
                                          l4970 1B72                                            l4962 1B62  
                                          l3898 24FE                                            l4796 18DE  
                                          l4892 0C52                                            l4884 0BAC  
                                          l4876 0B38                                            l4868 0AB6  
                                          l4948 2578                                            l4956 2988  
                                          l4980 1BE2                                            l4972 1B78  
                                          l4798 1914                                            l4894 0C78  
                                          l4886 0BD2                                            l4878 0B6A  
                                          l4958 2992                                            l4990 1C08  
                                          l4982 1BF4                                            l4974 1B96  
                                          l4896 0CC2                                            l4888 0C1A  
                                          l4992 1C0E                                            l4984 1BF6  
                                          l4976 1BD0                                            l4968 1B6C  
                                          l4994 1C14                                            l4986 1BFC  
                                          l4978 1BD2                                            l4996 1C1A  
                                          l4988 1C02                                            l4998 1C20  
                                          STR_1 FFC0                                            STR_2 FF4C  
                                          STR_3 FFCB                                            STR_4 FD9D  
                                          STR_5 FCDE                                            STR_6 FF39  
                                          STR_7 FFEE                                            STR_8 FFFC  
                                          STR_9 FFEE                                            u3000 29BE  
                                          u3001 29BA                                            u3010 29D0  
                                          u3011 29CC                                            u3100 2444  
                                          u3101 2440                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u4000 1F62                                            u3200 252C  
                                          u4001 1F5E                                            u3201 2528  
                                          u4010 1F82                                            u3210 2574  
                                          u4011 1F7E                                            u3211 2570  
                                          u4020 1FD0                                            u4100 0F5E  
                                          u3220 27F4                                            u4021 1FCC  
                                          u4101 0F5A                                            u3221 27F0  
                                          u4030 1FDE                                            u4110 108A  
                                          u3230 2270                                            u4031 1FDA  
                                          u4111 1086                                            u3231 226C  
                                          u4120 10A8                                            u4040 0EC0  
                                          u4200 1474                                            u3080 23FC  
                                          u3240 228A                                            u5000 0824  
                                          u4121 10A4                                            u4041 0EBA  
                                          u4201 1470                                            u3081 23F8  
                                          u3241 2286                                            u5001 0820  
                                          u4130 10C2                                            u4050 0EC2  
                                          u4210 15C6                                            u3090 2412  
                                          u3250 22A4                                            u5010 0858  
                                          u4131 10BE                                            u4211 15C2  
                                          u3091 240E                                            u3251 22A0  
                                          u5011 0854                                            u4140 10DC  
                                          u4060 0ED8                                            u4220 15E4  
                                          u4300 1276                                            u3260 22C2  
                                          u4141 10D8                                            u4061 0ED4  
                                          u4221 15E0                                            u4301 1270  
                                          u3261 22BE                                            u4150 10EA  
                                          u4070 0F06                                            u4230 15FE  
                                          u4310 1278                                            u3270 22D8  
                                          u4151 10E6                                            u4071 0F02  
                                          u4231 15FA                                            u3271 22D4  
                                          u3600 2916                                            u4160 10FC  
                                          u4080 0F22                                            u4240 1618  
                                          u4400 13D8                                            u4320 128E  
                                          u3280 22FC                                            u3601 2912  
                                          u4161 10F8                                            u4081 0F1E  
                                          u4241 1614                                            u4401 13D4  
                                          u4321 128A                                            u3281 22F8  
                                          u4170 110A                                            u4090 0F50  
                                          u4250 1626                                            u3610 2840  
                                          u4410 13E6                                            u4330 12C2  
                                          u4171 1106                                            u4091 0F4C  
                                          u4251 1622                                            u3611 283A  
                                          u4411 13E2                                            u4331 12BC  
                                          u3540 2A96                                            u3700 1CE8  
                                          u4180 1122                                            u3620 2842  
                                          u4420 13F4                                            u4340 12C4  
                                          u4260 117E                                            u4500 0930  
                                          u3541 2A92                                            u3701 1CE4  
                                          u4181 111E                                            u4421 13F0  
                                          u4261 117A                                            u4501 092C  
                                          u4430 1876                                            u3550 2466  
                                          u3630 19E8                                            u3710 1D1A  
                                          u4190 1458                                            u4350 12DA  
                                          u4270 119A                                            u4510 0A00  
                                          u4431 1872                                            u3551 2462  
                                          u3631 19E4                                            u3711 1D16  
                                          u4191 1454                                            u4351 12D6  
                                          u4271 1196                                            u4511 09FC  
                                          u2920 2A6A                                            u4440 18AE  
                                          u3560 2478                                            u3640 1A1A  
                                          u3720 1D58                                            u3800 201C  
                                          u4360 1344                                            u4280 11C6  
                                          u4600 0BD2                                            u4520 0A0E  
                                          u2921 2A66                                            u4441 18AA  
                                          u3561 2474                                            u3641 1A16  
                                          u3721 1D54                                            u3801 2018  
                                          u4281 11C2                                            u4601 0BCE  
                                          u4521 0A0A                                            u4450 18CA  
                                          u3570 24A0                                            u3730 1D82  
                                          u3810 2046                                            u4370 1386  
                                          u4290 122C                                            u4610 0C78  
                                          u4530 0A36                                            u2930 2A54  
                                          u4451 18C6                                            u3571 249C  
                                          u3651 1A44                                            u3731 1D7E  
                                          u3811 2042                                            u4371 1382  
                                          u4291 1228                                            u4611 0C74  
                                          u4531 0A32                                            u2931 2A50  
                                          u4460 1986                                            u3580 24D6  
                                          u3660 1A68                                            u3740 1DB0  
                                          u3820 2074                                            u3900 27D0  
                                          u4380 13A4                                            u4620 0D20  
                                          u4540 0A7A                                            u4700 1CB2  
                                          u4461 1980                                            u3581 24D2  
                                          u3661 1A64                                            u3741 1DAC  
                                          u3821 2070                                            u3901 27CA  
                                          u4381 13A0                                            u4365 1332  
                                          u4621 0D1C                                            u4541 0A76  
                                          u4701 1CAE                                            u4470 1988  
                                          u3670 1A92                                            u3750 1DF8  
                                          u3590 271C                                            u3830 21AA  
                                          u3910 27D2                                            u4390 13BE  
                                          u4630 0D46                                            u4550 0AF8  
                                          u4710 1CC2                                            u3671 1A8E  
                                          u3751 1DF4                                            u3591 2718  
                                          u3831 21A6                                            u4391 13BA  
                                          u4631 0D42                                            u4551 0AF2  
                                          u4711 1CBE                                            u4480 199E  
                                          u3680 1AD2                                            u3840 21CC  
                                          u3920 260C                                            u4640 0E0A  
                                          u4560 0AFA                                            u2960 231E  
                                          u4800 182E                                            u4720 167A  
                                          u4481 199A                                            u3681 1ACE  
                                          u3841 21C8                                            u3761 1E40  
                                          u3921 2606                                            u4641 0E06  
                                          u2961 231A                                            u4801 182A  
                                          u4721 1676                                            u4490 19B0  
                                          u3690 1B1C                                            u3850 2222  
                                          u3770 1E64                                            u3930 260E  
                                          u4570 0B12                                            u4650 25D2  
                                          u4730 1698                                            u4810 008E  
                                          u4491 19AC                                            u3691 1B18  
                                          u3851 221E                                            u3771 1E60  
                                          u4571 0B0E                                            u4651 25CE  
                                          u4731 1694                                            u4811 008A  
                                          u3860 2230                                            u3780 1E8E  
                                          u3940 2624                                            u4580 0B38  
                                          u4660 1B94                                            u4740 16B8  
                                          u4900 05A8                                            u4820 00F0  
                                          u3861 222C                                            u3781 1E8A  
                                          u3941 2620                                            u4581 0B34  
                                          u4661 1B90                                            u4741 16B4  
                                          u4901 05A4                                            u4821 00EC  
                                          u2990 2AAC                                            u3950 28B0  
                                          u3870 2738                                            u3790 1ECE  
                                          u4590 0BAC                                            u4670 1BE2  
                                          u4750 16D6                                            u4910 05D0  
                                          u4830 0104                                            u2991 2AA6  
                                          u3951 28AA                                            u3871 2734  
                                          u3791 1ECA                                            u4591 0BA8  
                                          u4671 1BDE                                            u4751 16D2  
                                          u4911 05CC                                            u4831 0100  
                                          u3960 28B2                                            u3880 2878  
                                          u4680 1C42                                            u4760 1710  
                                          u4840 02D2                                            u3881 2872  
                                          u4681 1C3E                                            u4761 170C  
                                          u4841 02CE                                            u3970 2652  
                                          u3890 287A                                            u4690 1C52  
                                          u4770 175E                                            u4930 063C  
                                          u4850 0308                                            u3971 264E  
                                          u4691 1C4E                                            u4771 175A  
                                          u4931 0638                                            u4851 0304  
                                          u2996 2AAE                                            u3980 2680  
                                          u4780 17A6                                            u4860 0332  
                                          u3981 267C                                            u4781 17A2  
                                          u4925 0602                                            u4861 032E  
                                          u3990 1F3C                                            u4790 17E0  
                                          u4950 06AC                                            u4870 0354  
                                          u3991 1F38                                            u4791 17DC  
                                          u4951 06A8                                            u4871 0350  
                                          u4960 06DE                                            u4880 03A8  
                                          u4961 06DA                                            u4945 0658  
                                          u4881 03A4                                            u4970 0724  
                                          u4890 0574                                            u4971 0720  
                                          u4891 0570                                            u4980 076E  
                                          u4981 076A                                            u4990 07EA  
                                          u4991 07E6                                            _WPUB 000F61  
                                 _EUSART1_Write 2A86                                            abs@a 0024  
                                          _dbuf 00D3                                            _atoi 183C  
                                          _ctoa 1F2A                                            _main 0052  
                                          _dtoa 0E8E                                   ?_EUSART1_Read 0001  
                                          _prec 0040                                            _nout 00C8  
                                          pad@i 002B                                            pad@p 0028  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002D                                            fsr2l 000FD9  
                                          btemp 004E                                            _utoa 144A  
                                   main@waveIdx 00B8                                            _xtoa 1170  
                                          prodh 000FF4                                            prodl 000FF3  
                               ??_hexDumpBuffer 00AB                                            start 004E  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0026                                           ??_pad 002A  
                       __end_of_TMR0_Initialize 28EE                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 2A56  
                               __end_of___aodiv 1B5E                                           ?_atoi 0019  
                                   ?_SPI2_Close 0001                                           ?_ctoa 001D  
                                         ?_main 0001                                           ?_dtoa 002F  
                               __end_of___aomod 1E3A                                           STR_10 FFAE  
                                         STR_11 FCE0                                           STR_12 FFB1  
                                         STR_20 FD72                                           STR_13 FFDC  
                                         STR_21 FCA7                                           STR_22 FCE0  
                                         STR_14 FEFC                                           STR_30 FE0C  
                                         STR_31 FF11                                           STR_15 FEE4  
                                         STR_23 FD14                                           STR_16 FCE0  
                                         STR_40 FF81                                           STR_32 FE63  
                                         STR_24 FD46                                           STR_41 FFEE  
                                         STR_33 FF25                                           STR_17 FEB4  
                                         STR_25 FDEC                                           STR_26 FCE0  
                                         STR_18 FCE0                                           STR_34 FF39  
                                         STR_42 FFFC                                           STR_50 FF5E  
                                         STR_43 FFEE                                           STR_35 FFEE  
                                         STR_27 FFD4                                           STR_51 FECC  
                                         STR_19 FDC7                                           STR_28 FFF5  
                                         STR_44 FFAE                                           STR_60 FF90  
                                         STR_36 FFFC                                           STR_52 F973  
                               __end_of___awmod 230E                                           STR_29 FFF5  
                                         STR_61 FF8F                                           STR_37 FFEE  
                                         STR_53 FFE9                                           STR_45 FC01  
                                         STR_38 FFAE                                           STR_62 FFFA  
                                         STR_46 FF92                                           STR_54 FB02  
                                         STR_63 FFF7                                           STR_39 FFA2  
                                         STR_55 FF70                                           STR_47 FE2A  
                                         STR_64 FFAE                                           STR_48 FE2A  
                                         STR_56 FE7F                                           STR_65 FFE3  
                                         STR_57 FE9A                                           STR_49 FC5A  
                                         STR_66 FF8E                                           STR_58 FE47  
                                         STR_67 FFFA                                           STR_59 FFF3  
                                         STR_68 FFF7                                           STR_69 FFAE  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 002F  
                                         _T0CON 000FD5                                 __end_of___lodiv 1F2A  
                                         ?_xtoa 002F                                 __end_of___lomod 20CE  
                                         i2l121 2A38                                           i2l131 2958  
                                         i2l124 2B06                                           i2l137 2B12  
                               _TMR0_WriteTimer 2AC2                                           i2l417 219A  
                                         i2l278 003A                                    vfpfcnvrt@fmt 007E  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 008E  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0012                                __end_of_TMR0_ISR 295A  
                                         _flags 0042                                           _fputc 2454  
                               __end_of_isalpha 27D8                                           _fputs 26DA  
                               __end_of_isdigit 28B8                                           atoi@n 0026  
                                         pad@fp 0024                                           atoi@s 0019  
                                         _width 003E                                           ctoa@c 001F  
                                         _putch 2AF4                                           ctoa@l 0021  
                                         ctoa@w 0023                                           main@i 00BE  
                                         dtoa@d 0031                                           dtoa@i 0078  
                                         dtoa@n 0070                                           dtoa@p 006A  
                                         dtoa@s 006E                                           dtoa@w 006C  
                               __end_of_islower 2848                                 __end_of_isspace 268C  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 2880  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0012                                           ttemp5 004F  
                                         ttemp6 0052                                           ttemp7 0056  
                                         utoa@d 0031                                           utoa@i 0074  
                                         utoa@n 006C                                           utoa@p 0068  
                                         utoa@w 006A                                           status 000FD8  
                                         wtemp8 004F                                           xtoa@c 007A  
                                         xtoa@d 0031                                           xtoa@i 0078  
                                         xtoa@n 0070                                           xtoa@p 006C  
                                         xtoa@w 006E                                           xtoa@x 0039  
                               __end_of_toupper 263A                                ___lodiv@dividend 0012  
            _EUSART1_DefaultFramingErrorHandler 000000                                    _toupper$1944 001E  
                               __initialization 268C                    SDCARD_ReadBlock@sdCardBuffer 0017  
                                  __end_of_atoi 19D6                                    __end_of_ctoa 1FFE  
                    __end_of_EUSART1_Initialize 279C                                    __end_of_main 090A  
                                  __end_of_dtoa 1170                                    __end_of_utoa 1650  
                             _SPI2_ExchangeByte 2A56                                    __end_of_xtoa 144A  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 001B                                          ??_ctoa 0020  
                                        ??_main 00B3                                          ??_dtoa 0060  
                                        ??_utoa 0060                                          ??_xtoa 0060  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                              ___lodiv@quotient 0022                             ??_SPI2_ExchangeByte 0012  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0014  
                                        ?_fputs 001D                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4000 0036                                          i2l3630 20CE  
                                        i2l3560 2A30                                          i2l3640 2114  
                                        i2l3632 20D8                                          i2l3642 2124  
                                        i2l3634 20E8                                          i2l3650 2150  
                                        i2l3556 2A1C                                          i2l3580 2B02  
                                        i2l3644 2128                                          i2l3652 2182  
                                        i2l3636 20EC                                          i2l3558 2A24  
                                        i2l3654 2198                                          i2l3646 213A  
                                        i2l3638 20FE                                          i2l3680 2924  
                                        i2l3578 2AFE                                          i2l3682 2926  
                                        i2l5452 2164                                          i2l3684 292A  
                                        i2l3686 292E                                          i2l3688 2940  
                                        i2l3996 001A                                          i2l3998 0028  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 008A                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                               __end_of_SPI2_Open 23BA  
                     __end_of_SPI2_ExchangeByte 2A70                                    vfprintf@cfmt 009D  
                                     ??___aodiv 0022                                       ??___aomod 0022  
                                        ___wmul 29D8                                       ??___awmod 0016  
                       __end_of_TMR0_WriteTimer 2ACC                                       ??___lodiv 0022  
                                     ??___lomod 0022                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0012                                ?_TMR0_Initialize 0001  
                                        clear_0 26AC                                          clear_1 26BE  
                                        clear_2 26CA                                 ___awmod@divisor 0014  
                               ___awmod@counter 0016                                          _printf 2988  
                                        pad@buf 0026                ??_EUSART1_SetOverrunErrorHandler 0014  
               ?_EUSART1_SetOverrunErrorHandler 0012                                          ctoa@fp 001D  
                                        dtoa@fp 002F                                          _strlen 28EE  
                                        fputc@c 0014                                          fputs@c 0021  
                                        fputs@i 0022                                          fputs@s 001D  
                                     ??_isalpha 0014                                       ??_isdigit 0014  
                                     ??_islower 0014                                    __mediumconst F954  
                                     ??_isspace 0014                                          tblptrh 000FF7  
                                     ??_isupper 0014                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 25DC  
                               ??_EUSART1_Write 0012                                          utoa@fp 002F  
      TMR0_SetInterruptHandler@InterruptHandler 0012                                          xtoa@fp 002F  
                                     ??_toupper 001A                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 29FE                                      __accesstop 0060  
                       __end_of__initialization 26D0                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 23BA  
                    __end_of_spi2_configuration F973                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2B10                             ??_SYSTEM_Initialize 0016  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 24EA  
                                 __end_of_fputs 271E                                   __end_of_putch 2AFE  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read 29D8  
                                       ??_fputc 0018                       __end_of_SYSTEM_Initialize 2A1C  
                                       ??_fputs 0021                              __size_of_myTMR0ISR 00CE  
                                       ??_putch 0013                              SDCARD_WriteBlock@i 0019  
                             ??_SPI2_Initialize 0012                                      __pbssBANK0 00C8  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 2AF4  
              __end_of_TMR0_SetInterruptHandler 2AD6                                         ?___wmul 0012  
                                    ??_TMR0_ISR 000E                                      _blueBuffer 02F5  
                              ?_TMR0_WriteTimer 0012                                         ?_printf 009F  
                                  ??_SPI2_Close 0012                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0012          __end_of_EUSART1_SetFramingErrorHandler 2AEA  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2AE0  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0584  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                              ___lomod@dividend 0012                               SDCARD_ReadBlock@i 0019  
              __end_of_SDCARD_PollWriteComplete 2810                              __end_of_SPI2_Close 2B10  
                          _ADC_InterruptHandler 00CA                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 183C  
                     SDCARD_Initialize@response 00AC                                         ___aodiv 19D6  
                                       ___aomod 1CD6                                         ___awmod 225E  
                               __size_of___wmul 0026                                         ___lodiv 1E3A  
                                       ___lomod 1FFE                               __end_of_myTMR0ISR 219C  
                                     ?_vfprintf 0097                                   _beginSampling 00D2  
                           _EUSART1_is_rx_ready 2A9C                                         __pcinit 268C  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 1650                                         __ptext2 225E  
                                       __ptext3 2AC2                                         __ptext4 29FE  
                                       __ptext5 28B8                                         __ptext6 2ACC  
                                       __ptext7 2AB0                                         __ptext8 295A  
                                       __ptext9 2A3A                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                                       _redFull 00D0                           _OSCILLATOR_Initialize 2A3A  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 279C                                         _isdigit 2880  
                              ___awmod@dividend 0012                              _EUSART1_Initialize 275E  
                                       _islower 2810                        ??_PIN_MANAGER_Initialize 0012  
                                       _isspace 263A                                         _isupper 2848  
                                       atoi@neg 001F                                         main@cmd 00B9  
                    __size_of_SYSTEM_Initialize 001E                                         _toupper 25DC  
                          end_of_initialization 26D0                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00F3  
                                       fputc@fp 0016                     _EUSART1_OverrunErrorHandler 00CE  
                                       fputs@fp 001F                   SDCARD_WriteBlock@sdCardBuffer 0017  
                             __end_of_vfpfcnvrt 0E8E                           TMR0_ReadTimer@readVal 0005  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 003E                                       _SPI2_Open 230E  
                                _TMR0_ReadTimer 2A1C                            ??_EUSART1_Initialize 0014  
                         SDCARD_WriteBlock@addr 0013                                         strlen@a 0014  
                                       strlen@s 0012                                      _timerState 004C  
                      _TMR0_SetInterruptHandler 2ACC                                main@localAddress 00C0  
                      __end_of_SDCARD_ReadBlock 2454                                       _TRISBbits 000F93  
                                    main@i_1142 00BA                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0013                             EUSART1_Write@txData 0012  
                         ??_EUSART1_is_rx_ready 0012                                      main@bufIdx 00BC  
                                  _EUSART1_Read 29B0                                      main@letter 00B7  
                                    main@status 00B6                        _SDCARD_PollWriteComplete 27D8  
                        __end_of_TMR0_ReadTimer 2A3A                    __end_of_INTERRUPT_Initialize 2B0C  
                             _SDCARD_Initialize 1B5E                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0080                                     vfpfcnvrt@fp 007C  
                                   vfpfcnvrt@ll 0082                                  __end_of___wmul 29FE  
                             __size_of_TMR0_ISR 0036                              ?_SDCARD_Initialize 0001  
                                _ADC_Initialize 2A70                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 2AB0                                  __end_of_printf 29B0  
                                __end_of_strlen 2924                              _spi2_configuration F96F  
                           start_initialization 268C                                 ___lodiv@divisor 001A  
                               ___lodiv@counter 002A                             ??_SDCARD_Initialize 003E  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_abs 275E                                     __end_of_pad 225E  
                                   __end_of_sin F96F                                     putch@txData 0013  
                         __end_of_EUSART1_Write 2A9C                               main@sdCardAddress 00C4  
                     __end_of_SDCARD_Initialize 1CD6                                     vfprintf@fmt 0099  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0016  
                        __end_of_ADC_Initialize 2A86                                     __pdataBANK0 00F3  
                                      ??_printf 003E                           SPI2_ExchangeByte@data 0012  
                                      ??_strlen 0014                                     __pbssBIGRAM 00F5  
                                   __pbssCOMRAM 003E                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1202 00AF                                ___aodiv@dividend 0012  
              ??_EUSART1_SetFramingErrorHandler 0014                 ?_EUSART1_SetFramingErrorHandler 0012  
                                     _atoi$1870 0023                                       _atoi$1868 0021  
                                     _atoi$1869 0025                           _TMR0_InterruptHandler 004A  
                        _PIN_MANAGER_Initialize 295A                                       _dtoa$1812 0068  
                             _SDCARD_WriteBlock 24EA                                       __pintcode 0008  
                                 __pmediumconst F954                         __end_of_SPI2_Initialize 2AC2  
                                      ?___aodiv 0012                                        ?___aomod 0012  
                              ___aodiv@quotient 0024                                        ?___awmod 0012  
                            ?_SDCARD_WriteBlock 0013                                        ?___lodiv 0012  
                                      ?___lomod 0012                                 ?_ADC_Initialize 0001  
                                   ??_SPI2_Open 0012                SPI2_Open@spi2UniqueConfiguration 0013  
                                     _bufferIdx 0044                    ??_INTERRUPT_InterruptManager 000E  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 20CE  
                               ___lomod@divisor 001A                             ??_SDCARD_WriteBlock 0019  
                               ___lomod@counter 0022                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0012  
                                      ?_isdigit 0012                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00CC                                        ?_islower 0012  
                                      ?_isspace 0012                                       _redBuffer 00F5  
                                      ?_isupper 0012                         _EUSART1_SetErrorHandler 2AEA  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 0018                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2B08                               ??_TMR0_Initialize 0014  
                                ___wmul@product 0016         EUSART1_SetErrorHandler@interruptHandler 0012  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                     __end_of_SDCARD_WriteBlock 2578             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u331_40 0028                                        i2u331_41 0024  
                                      i2u332_40 0036                                        i2u332_41 0032  
                    ??_TMR0_SetInterruptHandler 0014                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                        i2u294_40 20FE  
                                      i2u294_41 20FA                                        i2u295_40 213A  
                                      i2u295_41 2136                                        i2u297_40 2940  
                                      i2u297_41 293C                                        i2u298_48 2946  
                                      i2u298_49 2958                      __size_of_SDCARD_Initialize 0178  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 2924  
                                      _SSP2STAT 000F6D                                       _vfpfcnvrt 090A  
                      TMR0_ReadTimer@readValLow 0007                                       _xtoa$1830 0068  
                                     _xtoa$1831 006A                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0012                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 2AFE                               ?_SDCARD_ReadBlock 0013  
                                  _isspace$1895 0018                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 0096                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 0019                      ??_SDCARD_PollWriteComplete 0013  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 009B                                        __Lrparam 0000  
                                    vfprintf@fp 0097                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0012                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00A9                                __size_of___aomod 0164  
                              __size_of___awmod 00B0                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 007C                                 ___aodiv@divisor 001A  
                               ___aodiv@counter 0022                       __end_ofi2_TMR0_WriteTimer 2B08  
                     ??_EUSART1_SetErrorHandler 0014                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2AB0                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        _blueFull 00D1  
                                      __ptext10 2B08                                        __ptext11 275E  
                                      __ptext20 27D8                                        __ptext12 2AD6  
                                      __ptext21 1B5E                                        __ptext13 2AE0  
                                      __ptext30 144A                                        __ptext22 2988  
                                      __ptext14 2AEA                                        __ptext31 1FFE  
                                      __ptext23 2578                                        __ptext15 2A70  
                                      __ptext40 1F2A                                        __ptext32 1E3A  
                                      __ptext24 090A                                        __ptext16 230E  
                                      __ptext41 2454                                        __ptext33 0E8E  
                                      __ptext25 1170                                        __ptext17 2B0C  
                                      __ptext50 29B0                                        __ptext42 2AF4  
                                      __ptext34 219C                                        __ptext26 25DC  
                                      __ptext18 24EA                                        __ptext43 2A86  
                                      __ptext35 28EE                                        __ptext27 2810  
                                      __ptext19 23BA                                        __ptext52 2924  
                                      __ptext44 183C                                        __ptext36 26DA  
                                      __ptext28 2848                                        __ptext53 2B12  
                                      __ptext45 263A                                        __ptext37 271E  
                                      __ptext29 279C                                        __ptext54 20CE  
                                      __ptext46 2880                                        __ptext38 1CD6  
                                      __ptext55 2AFE                                        __ptext47 29D8  
                                      __ptext39 19D6                                        __ptext56 2A1C  
                                      __ptext48 2A56                                        __ptext57 0000  
                                      __ptext49 2A9C                                __size_of_isupper 0038  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0012  
                             ??_TMR0_WriteTimer 0014                                __size_of_toupper 005E  
                                 __size_of_atoi 019A                                   __size_of_ctoa 00D4  
                                 __size_of_main 08B8                                   __size_of_dtoa 02E2  
                                 __size_of_utoa 0206                                ??_TMR0_ReadTimer 0003  
                                 __size_of_xtoa 02DA                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 2B14           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 2B12  EUSART1_SetOverrunErrorHandler@interruptHandler 0012  
                                 _hexDumpBuffer 1650                                        int$flags 004E  
                                      _vfprintf 2578              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 009F  
                   _EUSART1_FramingErrorHandler 0046                                ___aomod@dividend 0012  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$1845 008C  
                                    _INTCONbits 000FF2                                        isalpha@c 0012  
                                      isdigit@c 0012                          ??_INTERRUPT_Initialize 0012  
                      SDCARD_Initialize@verbose 00AB                                        intlevel2 0000  
                                      islower@c 0012                                        isspace@c 0012  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 2AE0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2AD6  
                                    _RCSTA1bits 000FAB                                        isupper@c 0012  
                              ??_ADC_Initialize 0012                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 00A9  
                                      printf@ap 00A7  EUSART1_SetFramingErrorHandler@interruptHandler 0012  
                               ___aomod@divisor 001A                                     ??_vfpfcnvrt 003A  
                               ___aomod@counter 0022                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 004D                                      _SPI2_Close 2B0C  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 28B8  
                                      toupper@c 0018                                    ___aodiv@sign 0023  
                __end_of_PIN_MANAGER_Initialize 2988                       hexDumpBuffer@sdCardBuffer 00A9  
                                  ___aomod@sign 0023                                    fp__myTMR0ISR 0000  
