

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 26 14:28:49 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 05/05/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F26K22 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   107  0000                     
   108 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   109  0000                     
   110 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   111  0000                     
   112                           	psect	mediumconst
   113  00F996                     __pmediumconst:
   114                           	callstack 0
   115  00F996  00                 	db	0
   116  00F997                     _sin:
   117                           	callstack 0
   118  00F997  80                 	db	128
   119  00F998  9F                 	db	159
   120  00F999  BB                 	db	187
   121  00F99A  D5                 	db	213
   122  00F99B  E9                 	db	233
   123  00F99C  F8                 	db	248
   124  00F99D  FF                 	db	255
   125  00F99E  FF                 	db	255
   126  00F99F  F8                 	db	248
   127  00F9A0  E9                 	db	233
   128  00F9A1  D5                 	db	213
   129  00F9A2  BB                 	db	187
   130  00F9A3  9F                 	db	159
   131  00F9A4  80                 	db	128
   132  00F9A5  61                 	db	97
   133  00F9A6  45                 	db	69
   134  00F9A7  2B                 	db	43
   135  00F9A8  17                 	db	23
   136  00F9A9  08                 	db	8
   137  00F9AA  01                 	db	1
   138  00F9AB  01                 	db	1
   139  00F9AC  08                 	db	8
   140  00F9AD  17                 	db	23
   141  00F9AE  2B                 	db	43
   142  00F9AF  45                 	db	69
   143  00F9B0  61                 	db	97
   144  00F9B1                     __end_of_sin:
   145                           	callstack 0
   146  00F9B1                     _spi2_configuration:
   147                           	callstack 0
   148  00F9B1  01                 	db	1
   149  00F9B2  40                 	db	64
   150  00F9B3  01                 	db	1
   151  00F9B4  00                 	db	0
   152  00F9B5                     __end_of_spi2_configuration:
   153                           	callstack 0
   154  0000                     _ANSELA	set	3896
   155  0000                     _ANSELB	set	3897
   156  0000                     _ANSELC	set	3898
   157  0000                     _RCONbits	set	4048
   158  0000                     _OSCTUNE	set	3995
   159  0000                     _OSCCON2	set	4050
   160  0000                     _OSCCON	set	4051
   161  0000                     _TXREG1	set	4013
   162  0000                     _RCREG1	set	4014
   163  0000                     _RCSTA1bits	set	4011
   164  0000                     _TXSTA1bits	set	4012
   165  0000                     _PIR1bits	set	3998
   166  0000                     _SPBRGH1	set	4016
   167  0000                     _SPBRG1	set	4015
   168  0000                     _TXSTA1	set	4012
   169  0000                     _RCSTA1	set	4011
   170  0000                     _BAUDCON1	set	4024
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATCbits	set	3979
   173  0000                     _LATBbits	set	3978
   174  0000                     _T0CON	set	4053
   175  0000                     _TMR0L	set	4054
   176  0000                     _TMR0H	set	4055
   177  0000                     _T0CONbits	set	4053
   178  0000                     _INTCONbits	set	4082
   179  0000                     _INTCON2bits	set	4081
   180  0000                     _WPUB	set	3937
   181  0000                     _TRISC	set	3988
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISA	set	3986
   184  0000                     _LATC	set	3979
   185  0000                     _LATB	set	3978
   186  0000                     _LATA	set	3977
   187  0000                     _PIR3bits	set	4004
   188  0000                     _SSP2BUF	set	3951
   189  0000                     _SSP2CON2	set	3947
   190  0000                     _SSP2CON1bits	set	3948
   191  0000                     _TRISBbits	set	3987
   192  0000                     _SSP2ADD	set	3950
   193  0000                     _SSP2CON1	set	3948
   194  0000                     _SSP2STAT	set	3949
   195  0000                     _PLLRDY	set	32407
   196  00F9B5                     STR_50:
   197  00F9B5  0D                 	db	13
   198  00F9B6  0A                 	db	10
   199  00F9B7  59                 	db	89	;'Y'
   200  00F9B8  6F                 	db	111	;'o'
   201  00F9B9  75                 	db	117	;'u'
   202  00F9BA  20                 	db	32
   203  00F9BB  6D                 	db	109	;'m'
   204  00F9BC  61                 	db	97	;'a'
   205  00F9BD  79                 	db	121	;'y'
   206  00F9BE  20                 	db	32
   207  00F9BF  74                 	db	116	;'t'
   208  00F9C0  65                 	db	101	;'e'
   209  00F9C1  72                 	db	114	;'r'
   210  00F9C2  6D                 	db	109	;'m'
   211  00F9C3  69                 	db	105	;'i'
   212  00F9C4  6E                 	db	110	;'n'
   213  00F9C5  61                 	db	97	;'a'
   214  00F9C6  74                 	db	116	;'t'
   215  00F9C7  65                 	db	101	;'e'
   216  00F9C8  20                 	db	32
   217  00F9C9  73                 	db	115	;'s'
   218  00F9CA  70                 	db	112	;'p'
   219  00F9CB  6F                 	db	111	;'o'
   220  00F9CC  6F                 	db	111	;'o'
   221  00F9CD  6C                 	db	108	;'l'
   222  00F9CE  69                 	db	105	;'i'
   223  00F9CF  6E                 	db	110	;'n'
   224  00F9D0  67                 	db	103	;'g'
   225  00F9D1  20                 	db	32
   226  00F9D2  61                 	db	97	;'a'
   227  00F9D3  74                 	db	116	;'t'
   228  00F9D4  20                 	db	32
   229  00F9D5  61                 	db	97	;'a'
   230  00F9D6  6E                 	db	110	;'n'
   231  00F9D7  79                 	db	121	;'y'
   232  00F9D8  74                 	db	116	;'t'
   233  00F9D9  69                 	db	105	;'i'
   234  00F9DA  6D                 	db	109	;'m'
   235  00F9DB  65                 	db	101	;'e'
   236  00F9DC  20                 	db	32
   237  00F9DD  77                 	db	119	;'w'
   238  00F9DE  69                 	db	105	;'i'
   239  00F9DF  74                 	db	116	;'t'
   240  00F9E0  68                 	db	104	;'h'
   241  00F9E1  20                 	db	32
   242  00F9E2  61                 	db	97	;'a'
   243  00F9E3  20                 	db	32
   244  00F9E4  6B                 	db	107	;'k'
   245  00F9E5  65                 	db	101	;'e'
   246  00F9E6  79                 	db	121	;'y'
   247  00F9E7  70                 	db	112	;'p'
   248  00F9E8  72                 	db	114	;'r'
   249  00F9E9  65                 	db	101	;'e'
   250  00F9EA  73                 	db	115	;'s'
   251  00F9EB  73                 	db	115	;'s'
   252  00F9EC  2E                 	db	46
   253  00F9ED  0D                 	db	13
   254  00F9EE  0A                 	db	10
   255  00F9EF  54                 	db	84	;'T'
   256  00F9F0  6F                 	db	111	;'o'
   257  00F9F1  20                 	db	32
   258  00F9F2  73                 	db	115	;'s'
   259  00F9F3  70                 	db	112	;'p'
   260  00F9F4  6F                 	db	111	;'o'
   261  00F9F5  6F                 	db	111	;'o'
   262  00F9F6  6C                 	db	108	;'l'
   263  00F9F7  20                 	db	32
   264  00F9F8  74                 	db	116	;'t'
   265  00F9F9  65                 	db	101	;'e'
   266  00F9FA  72                 	db	114	;'r'
   267  00F9FB  6D                 	db	109	;'m'
   268  00F9FC  69                 	db	105	;'i'
   269  00F9FD  6E                 	db	110	;'n'
   270  00F9FE  61                 	db	97	;'a'
   271  00F9FF  6C                 	db	108	;'l'
   272  00FA00  20                 	db	32
   273  00FA01  63                 	db	99	;'c'
   274  00FA02  6F                 	db	111	;'o'
   275  00FA03  6E                 	db	110	;'n'
   276  00FA04  74                 	db	116	;'t'
   277  00FA05  65                 	db	101	;'e'
   278  00FA06  6E                 	db	110	;'n'
   279  00FA07  74                 	db	116	;'t'
   280  00FA08  73                 	db	115	;'s'
   281  00FA09  20                 	db	32
   282  00FA0A  69                 	db	105	;'i'
   283  00FA0B  6E                 	db	110	;'n'
   284  00FA0C  74                 	db	116	;'t'
   285  00FA0D  6F                 	db	111	;'o'
   286  00FA0E  20                 	db	32
   287  00FA0F  61                 	db	97	;'a'
   288  00FA10  20                 	db	32
   289  00FA11  66                 	db	102	;'f'
   290  00FA12  69                 	db	105	;'i'
   291  00FA13  6C                 	db	108	;'l'
   292  00FA14  65                 	db	101	;'e'
   293  00FA15  20                 	db	32
   294  00FA16  66                 	db	102	;'f'
   295  00FA17  6F                 	db	111	;'o'
   296  00FA18  6C                 	db	108	;'l'
   297  00FA19  6C                 	db	108	;'l'
   298  00FA1A  6F                 	db	111	;'o'
   299  00FA1B  77                 	db	119	;'w'
   300  00FA1C  20                 	db	32
   301  00FA1D  74                 	db	116	;'t'
   302  00FA1E  68                 	db	104	;'h'
   303  00FA1F  65                 	db	101	;'e'
   304  00FA20  73                 	db	115	;'s'
   305  00FA21  65                 	db	101	;'e'
   306  00FA22  20                 	db	32
   307  00FA23  69                 	db	105	;'i'
   308  00FA24  6E                 	db	110	;'n'
   309  00FA25  73                 	db	115	;'s'
   310  00FA26  74                 	db	116	;'t'
   311  00FA27  72                 	db	114	;'r'
   312  00FA28  75                 	db	117	;'u'
   313  00FA29  63                 	db	99	;'c'
   314  00FA2A  74                 	db	116	;'t'
   315  00FA2B  69                 	db	105	;'i'
   316  00FA2C  6F                 	db	111	;'o'
   317  00FA2D  6E                 	db	110	;'n'
   318  00FA2E  73                 	db	115	;'s'
   319  00FA2F  3A                 	db	58	;':'
   320  00FA30  0D                 	db	13
   321  00FA31  0A                 	db	10
   322  00FA32  0D                 	db	13
   323  00FA33  0A                 	db	10
   324  00FA34  52                 	db	82	;'R'
   325  00FA35  69                 	db	105	;'i'
   326  00FA36  67                 	db	103	;'g'
   327  00FA37  68                 	db	104	;'h'
   328  00FA38  74                 	db	116	;'t'
   329  00FA39  20                 	db	32
   330  00FA3A  6D                 	db	109	;'m'
   331  00FA3B  6F                 	db	111	;'o'
   332  00FA3C  75                 	db	117	;'u'
   333  00FA3D  73                 	db	115	;'s'
   334  00FA3E  65                 	db	101	;'e'
   335  00FA3F  20                 	db	32
   336  00FA40  63                 	db	99	;'c'
   337  00FA41  6C                 	db	108	;'l'
   338  00FA42  69                 	db	105	;'i'
   339  00FA43  63                 	db	99	;'c'
   340  00FA44  6B                 	db	107	;'k'
   341  00FA45  20                 	db	32
   342  00FA46  6F                 	db	111	;'o'
   343  00FA47  6E                 	db	110	;'n'
   344  00FA48  20                 	db	32
   345  00FA49  74                 	db	116	;'t'
   346  00FA4A  68                 	db	104	;'h'
   347  00FA4B  65                 	db	101	;'e'
   348  00FA4C  20                 	db	32
   349  00FA4D  75                 	db	117	;'u'
   350  00FA4E  70                 	db	112	;'p'
   351  00FA4F  70                 	db	112	;'p'
   352  00FA50  65                 	db	101	;'e'
   353  00FA51  72                 	db	114	;'r'
   354  00FA52  20                 	db	32
   355  00FA53  6C                 	db	108	;'l'
   356  00FA54  65                 	db	101	;'e'
   357  00FA55  66                 	db	102	;'f'
   358  00FA56  74                 	db	116	;'t'
   359  00FA57  20                 	db	32
   360  00FA58  6F                 	db	111	;'o'
   361  00FA59  66                 	db	102	;'f'
   362  00FA5A  20                 	db	32
   363  00FA5B  74                 	db	116	;'t'
   364  00FA5C  68                 	db	104	;'h'
   365  00FA5D  65                 	db	101	;'e'
   366  00FA5E  20                 	db	32
   367  00FA5F  50                 	db	80	;'P'
   368  00FA60  75                 	db	117	;'u'
   369  00FA61  54                 	db	84	;'T'
   370  00FA62  54                 	db	84	;'T'
   371  00FA63  59                 	db	89	;'Y'
   372  00FA64  20                 	db	32
   373  00FA65  77                 	db	119	;'w'
   374  00FA66  69                 	db	105	;'i'
   375  00FA67  6E                 	db	110	;'n'
   376  00FA68  64                 	db	100	;'d'
   377  00FA69  6F                 	db	111	;'o'
   378  00FA6A  77                 	db	119	;'w'
   379  00FA6B  0D                 	db	13
   380  00FA6C  0A                 	db	10
   381  00FA6D  53                 	db	83	;'S'
   382  00FA6E  65                 	db	101	;'e'
   383  00FA6F  6C                 	db	108	;'l'
   384  00FA70  65                 	db	101	;'e'
   385  00FA71  63                 	db	99	;'c'
   386  00FA72  74                 	db	116	;'t'
   387  00FA73  3A                 	db	58	;':'
   388  00FA74  20                 	db	32
   389  00FA75  20                 	db	32
   390  00FA76  20                 	db	32
   391  00FA77  20                 	db	32
   392  00FA78  20                 	db	32
   393  00FA79  43                 	db	67	;'C'
   394  00FA7A  68                 	db	104	;'h'
   395  00FA7B  61                 	db	97	;'a'
   396  00FA7C  6E                 	db	110	;'n'
   397  00FA7D  67                 	db	103	;'g'
   398  00FA7E  65                 	db	101	;'e'
   399  00FA7F  20                 	db	32
   400  00FA80  73                 	db	115	;'s'
   401  00FA81  65                 	db	101	;'e'
   402  00FA82  74                 	db	116	;'t'
   403  00FA83  74                 	db	116	;'t'
   404  00FA84  69                 	db	105	;'i'
   405  00FA85  6E                 	db	110	;'n'
   406  00FA86  67                 	db	103	;'g'
   407  00FA87  73                 	db	115	;'s'
   408  00FA88  2E                 	db	46
   409  00FA89  2E                 	db	46
   410  00FA8A  2E                 	db	46
   411  00FA8B  0D                 	db	13
   412  00FA8C  0A                 	db	10
   413  00FA8D  53                 	db	83	;'S'
   414  00FA8E  65                 	db	101	;'e'
   415  00FA8F  6C                 	db	108	;'l'
   416  00FA90  65                 	db	101	;'e'
   417  00FA91  63                 	db	99	;'c'
   418  00FA92  74                 	db	116	;'t'
   419  00FA93  3A                 	db	58	;':'
   420  00FA94  20                 	db	32
   421  00FA95  20                 	db	32
   422  00FA96  20                 	db	32
   423  00FA97  20                 	db	32
   424  00FA98  20                 	db	32
   425  00FA99  4C                 	db	76	;'L'
   426  00FA9A  6F                 	db	111	;'o'
   427  00FA9B  67                 	db	103	;'g'
   428  00FA9C  67                 	db	103	;'g'
   429  00FA9D  69                 	db	105	;'i'
   430  00FA9E  6E                 	db	110	;'n'
   431  00FA9F  67                 	db	103	;'g'
   432  00FAA0  0D                 	db	13
   433  00FAA1  0A                 	db	10
   434  00FAA2  53                 	db	83	;'S'
   435  00FAA3  65                 	db	101	;'e'
   436  00FAA4  6C                 	db	108	;'l'
   437  00FAA5  65                 	db	101	;'e'
   438  00FAA6  63                 	db	99	;'c'
   439  00FAA7  74                 	db	116	;'t'
   440  00FAA8  3A                 	db	58	;':'
   441  00FAA9  20                 	db	32
   442  00FAAA  20                 	db	32
   443  00FAAB  20                 	db	32
   444  00FAAC  20                 	db	32
   445  00FAAD  20                 	db	32
   446  00FAAE  53                 	db	83	;'S'
   447  00FAAF  65                 	db	101	;'e'
   448  00FAB0  73                 	db	115	;'s'
   449  00FAB1  73                 	db	115	;'s'
   450  00FAB2  69                 	db	105	;'i'
   451  00FAB3  6F                 	db	111	;'o'
   452  00FAB4  6E                 	db	110	;'n'
   453  00FAB5  20                 	db	32
   454  00FAB6  6C                 	db	108	;'l'
   455  00FAB7  6F                 	db	111	;'o'
   456  00FAB8  67                 	db	103	;'g'
   457  00FAB9  67                 	db	103	;'g'
   458  00FABA  69                 	db	105	;'i'
   459  00FABB  6E                 	db	110	;'n'
   460  00FABC  67                 	db	103	;'g'
   461  00FABD  3A                 	db	58	;':'
   462  00FABE  20                 	db	32
   463  00FABF  41                 	db	65	;'A'
   464  00FAC0  6C                 	db	108	;'l'
   465  00FAC1  6C                 	db	108	;'l'
   466  00FAC2  20                 	db	32
   467  00FAC3  73                 	db	115	;'s'
   468  00FAC4  65                 	db	101	;'e'
   469  00FAC5  73                 	db	115	;'s'
   470  00FAC6  73                 	db	115	;'s'
   471  00FAC7  69                 	db	105	;'i'
   472  00FAC8  6F                 	db	111	;'o'
   473  00FAC9  6E                 	db	110	;'n'
   474  00FACA  20                 	db	32
   475  00FACB  6F                 	db	111	;'o'
   476  00FACC  75                 	db	117	;'u'
   477  00FACD  74                 	db	116	;'t'
   478  00FACE  70                 	db	112	;'p'
   479  00FACF  75                 	db	117	;'u'
   480  00FAD0  74                 	db	116	;'t'
   481  00FAD1  0D                 	db	13
   482  00FAD2  0A                 	db	10
   483  00FAD3  4C                 	db	76	;'L'
   484  00FAD4  6F                 	db	111	;'o'
   485  00FAD5  67                 	db	103	;'g'
   486  00FAD6  20                 	db	32
   487  00FAD7  66                 	db	102	;'f'
   488  00FAD8  69                 	db	105	;'i'
   489  00FAD9  6C                 	db	108	;'l'
   490  00FADA  65                 	db	101	;'e'
   491  00FADB  20                 	db	32
   492  00FADC  6E                 	db	110	;'n'
   493  00FADD  61                 	db	97	;'a'
   494  00FADE  6D                 	db	109	;'m'
   495  00FADF  65                 	db	101	;'e'
   496  00FAE0  3A                 	db	58	;':'
   497  00FAE1  20                 	db	32
   498  00FAE2  20                 	db	32
   499  00FAE3  42                 	db	66	;'B'
   500  00FAE4  72                 	db	114	;'r'
   501  00FAE5  6F                 	db	111	;'o'
   502  00FAE6  77                 	db	119	;'w'
   503  00FAE7  73                 	db	115	;'s'
   504  00FAE8  65                 	db	101	;'e'
   505  00FAE9  20                 	db	32
   506  00FAEA  61                 	db	97	;'a'
   507  00FAEB  6E                 	db	110	;'n'
   508  00FAEC  64                 	db	100	;'d'
   509  00FAED  20                 	db	32
   510  00FAEE  70                 	db	112	;'p'
   511  00FAEF  72                 	db	114	;'r'
   512  00FAF0  6F                 	db	111	;'o'
   513  00FAF1  76                 	db	118	;'v'
   514  00FAF2  69                 	db	105	;'i'
   515  00FAF3  64                 	db	100	;'d'
   516  00FAF4  65                 	db	101	;'e'
   517  00FAF5  20                 	db	32
   518  00FAF6  61                 	db	97	;'a'
   519  00FAF7  20                 	db	32
   520  00FAF8  2E                 	db	46
   521  00FAF9  63                 	db	99	;'c'
   522  00FAFA  73                 	db	115	;'s'
   523  00FAFB  76                 	db	118	;'v'
   524  00FAFC  20                 	db	32
   525  00FAFD  65                 	db	101	;'e'
   526  00FAFE  78                 	db	120	;'x'
   527  00FAFF  74                 	db	116	;'t'
   528  00FB00  65                 	db	101	;'e'
   529  00FB01  6E                 	db	110	;'n'
   530  00FB02  73                 	db	115	;'s'
   531  00FB03  69                 	db	105	;'i'
   532  00FB04  6F                 	db	111	;'o'
   533  00FB05  6E                 	db	110	;'n'
   534  00FB06  20                 	db	32
   535  00FB07  74                 	db	116	;'t'
   536  00FB08  6F                 	db	111	;'o'
   537  00FB09  20                 	db	32
   538  00FB0A  79                 	db	121	;'y'
   539  00FB0B  6F                 	db	111	;'o'
   540  00FB0C  75                 	db	117	;'u'
   541  00FB0D  72                 	db	114	;'r'
   542  00FB0E  20                 	db	32
   543  00FB0F  66                 	db	102	;'f'
   544  00FB10  69                 	db	105	;'i'
   545  00FB11  6C                 	db	108	;'l'
   546  00FB12  65                 	db	101	;'e'
   547  00FB13  20                 	db	32
   548  00FB14  6E                 	db	110	;'n'
   549  00FB15  61                 	db	97	;'a'
   550  00FB16  6D                 	db	109	;'m'
   551  00FB17  65                 	db	101	;'e'
   552  00FB18  0D                 	db	13
   553  00FB19  0A                 	db	10
   554  00FB1A  53                 	db	83	;'S'
   555  00FB1B  65                 	db	101	;'e'
   556  00FB1C  6C                 	db	108	;'l'
   557  00FB1D  65                 	db	101	;'e'
   558  00FB1E  63                 	db	99	;'c'
   559  00FB1F  74                 	db	116	;'t'
   560  00FB20  3A                 	db	58	;':'
   561  00FB21  20                 	db	32
   562  00FB22  20                 	db	32
   563  00FB23  20                 	db	32
   564  00FB24  20                 	db	32
   565  00FB25  20                 	db	32
   566  00FB26  41                 	db	65	;'A'
   567  00FB27  70                 	db	112	;'p'
   568  00FB28  70                 	db	112	;'p'
   569  00FB29  6C                 	db	108	;'l'
   570  00FB2A  79                 	db	121	;'y'
   571  00FB2B  0D                 	db	13
   572  00FB2C  0A                 	db	10
   573  00FB2D  50                 	db	80	;'P'
   574  00FB2E  72                 	db	114	;'r'
   575  00FB2F  65                 	db	101	;'e'
   576  00FB30  73                 	db	115	;'s'
   577  00FB31  73                 	db	115	;'s'
   578  00FB32  20                 	db	32
   579  00FB33  61                 	db	97	;'a'
   580  00FB34  6E                 	db	110	;'n'
   581  00FB35  79                 	db	121	;'y'
   582  00FB36  20                 	db	32
   583  00FB37  6B                 	db	107	;'k'
   584  00FB38  65                 	db	101	;'e'
   585  00FB39  79                 	db	121	;'y'
   586  00FB3A  20                 	db	32
   587  00FB3B  74                 	db	116	;'t'
   588  00FB3C  6F                 	db	111	;'o'
   589  00FB3D  20                 	db	32
   590  00FB3E  73                 	db	115	;'s'
   591  00FB3F  74                 	db	116	;'t'
   592  00FB40  61                 	db	97	;'a'
   593  00FB41  72                 	db	114	;'r'
   594  00FB42  74                 	db	116	;'t'
   595  00FB43  00                 	db	0
   596  00FB44                     STR_52:
   597  00FB44  53                 	db	83	;'S'
   598  00FB45  70                 	db	112	;'p'
   599  00FB46  6F                 	db	111	;'o'
   600  00FB47  6F                 	db	111	;'o'
   601  00FB48  6C                 	db	108	;'l'
   602  00FB49  65                 	db	101	;'e'
   603  00FB4A  64                 	db	100	;'d'
   604  00FB4B  20                 	db	32
   605  00FB4C  35                 	db	53	;'5'
   606  00FB4D  31                 	db	49	;'1'
   607  00FB4E  32                 	db	50	;'2'
   608  00FB4F  20                 	db	32
   609  00FB50  6F                 	db	111	;'o'
   610  00FB51  75                 	db	117	;'u'
   611  00FB52  74                 	db	116	;'t'
   612  00FB53  20                 	db	32
   613  00FB54  6F                 	db	111	;'o'
   614  00FB55  66                 	db	102	;'f'
   615  00FB56  20                 	db	32
   616  00FB57  74                 	db	116	;'t'
   617  00FB58  68                 	db	104	;'h'
   618  00FB59  65                 	db	101	;'e'
   619  00FB5A  20                 	db	32
   620  00FB5B  35                 	db	53	;'5'
   621  00FB5C  31                 	db	49	;'1'
   622  00FB5D  32                 	db	50	;'2'
   623  00FB5E  20                 	db	32
   624  00FB5F  62                 	db	98	;'b'
   625  00FB60  6C                 	db	108	;'l'
   626  00FB61  6F                 	db	111	;'o'
   627  00FB62  63                 	db	99	;'c'
   628  00FB63  6B                 	db	107	;'k'
   629  00FB64  73                 	db	115	;'s'
   630  00FB65  2E                 	db	46
   631  00FB66  20                 	db	32
   632  00FB67  0D                 	db	13
   633  00FB68  0A                 	db	10
   634  00FB69  54                 	db	84	;'T'
   635  00FB6A  6F                 	db	111	;'o'
   636  00FB6B  20                 	db	32
   637  00FB6C  63                 	db	99	;'c'
   638  00FB6D  6C                 	db	108	;'l'
   639  00FB6E  6F                 	db	111	;'o'
   640  00FB6F  73                 	db	115	;'s'
   641  00FB70  65                 	db	101	;'e'
   642  00FB71  20                 	db	32
   643  00FB72  74                 	db	116	;'t'
   644  00FB73  68                 	db	104	;'h'
   645  00FB74  65                 	db	101	;'e'
   646  00FB75  20                 	db	32
   647  00FB76  66                 	db	102	;'f'
   648  00FB77  69                 	db	105	;'i'
   649  00FB78  6C                 	db	108	;'l'
   650  00FB79  65                 	db	101	;'e'
   651  00FB7A  20                 	db	32
   652  00FB7B  66                 	db	102	;'f'
   653  00FB7C  6F                 	db	111	;'o'
   654  00FB7D  6C                 	db	108	;'l'
   655  00FB7E  6C                 	db	108	;'l'
   656  00FB7F  6F                 	db	111	;'o'
   657  00FB80  77                 	db	119	;'w'
   658  00FB81  20                 	db	32
   659  00FB82  74                 	db	116	;'t'
   660  00FB83  68                 	db	104	;'h'
   661  00FB84  65                 	db	101	;'e'
   662  00FB85  73                 	db	115	;'s'
   663  00FB86  65                 	db	101	;'e'
   664  00FB87  20                 	db	32
   665  00FB88  69                 	db	105	;'i'
   666  00FB89  6E                 	db	110	;'n'
   667  00FB8A  73                 	db	115	;'s'
   668  00FB8B  74                 	db	116	;'t'
   669  00FB8C  72                 	db	114	;'r'
   670  00FB8D  75                 	db	117	;'u'
   671  00FB8E  63                 	db	99	;'c'
   672  00FB8F  74                 	db	116	;'t'
   673  00FB90  69                 	db	105	;'i'
   674  00FB91  6F                 	db	111	;'o'
   675  00FB92  6E                 	db	110	;'n'
   676  00FB93  73                 	db	115	;'s'
   677  00FB94  3A                 	db	58	;':'
   678  00FB95  20                 	db	32
   679  00FB96  0D                 	db	13
   680  00FB97  0A                 	db	10
   681  00FB98  20                 	db	32
   682  00FB99  0D                 	db	13
   683  00FB9A  0A                 	db	10
   684  00FB9B  52                 	db	82	;'R'
   685  00FB9C  69                 	db	105	;'i'
   686  00FB9D  67                 	db	103	;'g'
   687  00FB9E  68                 	db	104	;'h'
   688  00FB9F  74                 	db	116	;'t'
   689  00FBA0  20                 	db	32
   690  00FBA1  6D                 	db	109	;'m'
   691  00FBA2  6F                 	db	111	;'o'
   692  00FBA3  75                 	db	117	;'u'
   693  00FBA4  73                 	db	115	;'s'
   694  00FBA5  65                 	db	101	;'e'
   695  00FBA6  20                 	db	32
   696  00FBA7  63                 	db	99	;'c'
   697  00FBA8  6C                 	db	108	;'l'
   698  00FBA9  69                 	db	105	;'i'
   699  00FBAA  63                 	db	99	;'c'
   700  00FBAB  6B                 	db	107	;'k'
   701  00FBAC  20                 	db	32
   702  00FBAD  6F                 	db	111	;'o'
   703  00FBAE  6E                 	db	110	;'n'
   704  00FBAF  20                 	db	32
   705  00FBB0  74                 	db	116	;'t'
   706  00FBB1  68                 	db	104	;'h'
   707  00FBB2  65                 	db	101	;'e'
   708  00FBB3  20                 	db	32
   709  00FBB4  75                 	db	117	;'u'
   710  00FBB5  70                 	db	112	;'p'
   711  00FBB6  70                 	db	112	;'p'
   712  00FBB7  65                 	db	101	;'e'
   713  00FBB8  72                 	db	114	;'r'
   714  00FBB9  20                 	db	32
   715  00FBBA  6C                 	db	108	;'l'
   716  00FBBB  65                 	db	101	;'e'
   717  00FBBC  66                 	db	102	;'f'
   718  00FBBD  74                 	db	116	;'t'
   719  00FBBE  20                 	db	32
   720  00FBBF  6F                 	db	111	;'o'
   721  00FBC0  66                 	db	102	;'f'
   722  00FBC1  20                 	db	32
   723  00FBC2  74                 	db	116	;'t'
   724  00FBC3  68                 	db	104	;'h'
   725  00FBC4  65                 	db	101	;'e'
   726  00FBC5  20                 	db	32
   727  00FBC6  50                 	db	80	;'P'
   728  00FBC7  75                 	db	117	;'u'
   729  00FBC8  54                 	db	84	;'T'
   730  00FBC9  54                 	db	84	;'T'
   731  00FBCA  59                 	db	89	;'Y'
   732  00FBCB  20                 	db	32
   733  00FBCC  77                 	db	119	;'w'
   734  00FBCD  69                 	db	105	;'i'
   735  00FBCE  6E                 	db	110	;'n'
   736  00FBCF  64                 	db	100	;'d'
   737  00FBD0  6F                 	db	111	;'o'
   738  00FBD1  77                 	db	119	;'w'
   739  00FBD2  20                 	db	32
   740  00FBD3  0D                 	db	13
   741  00FBD4  0A                 	db	10
   742  00FBD5  53                 	db	83	;'S'
   743  00FBD6  65                 	db	101	;'e'
   744  00FBD7  6C                 	db	108	;'l'
   745  00FBD8  65                 	db	101	;'e'
   746  00FBD9  63                 	db	99	;'c'
   747  00FBDA  74                 	db	116	;'t'
   748  00FBDB  3A                 	db	58	;':'
   749  00FBDC  20                 	db	32
   750  00FBDD  20                 	db	32
   751  00FBDE  20                 	db	32
   752  00FBDF  20                 	db	32
   753  00FBE0  20                 	db	32
   754  00FBE1  43                 	db	67	;'C'
   755  00FBE2  68                 	db	104	;'h'
   756  00FBE3  61                 	db	97	;'a'
   757  00FBE4  6E                 	db	110	;'n'
   758  00FBE5  67                 	db	103	;'g'
   759  00FBE6  65                 	db	101	;'e'
   760  00FBE7  20                 	db	32
   761  00FBE8  73                 	db	115	;'s'
   762  00FBE9  65                 	db	101	;'e'
   763  00FBEA  74                 	db	116	;'t'
   764  00FBEB  74                 	db	116	;'t'
   765  00FBEC  69                 	db	105	;'i'
   766  00FBED  6E                 	db	110	;'n'
   767  00FBEE  67                 	db	103	;'g'
   768  00FBEF  73                 	db	115	;'s'
   769  00FBF0  2E                 	db	46
   770  00FBF1  2E                 	db	46
   771  00FBF2  2E                 	db	46
   772  00FBF3  20                 	db	32
   773  00FBF4  0D                 	db	13
   774  00FBF5  0A                 	db	10
   775  00FBF6  53                 	db	83	;'S'
   776  00FBF7  65                 	db	101	;'e'
   777  00FBF8  6C                 	db	108	;'l'
   778  00FBF9  65                 	db	101	;'e'
   779  00FBFA  63                 	db	99	;'c'
   780  00FBFB  74                 	db	116	;'t'
   781  00FBFC  3A                 	db	58	;':'
   782  00FBFD  20                 	db	32
   783  00FBFE  20                 	db	32
   784  00FBFF  20                 	db	32
   785  00FC00  20                 	db	32
   786  00FC01  20                 	db	32
   787  00FC02  4C                 	db	76	;'L'
   788  00FC03  6F                 	db	111	;'o'
   789  00FC04  67                 	db	103	;'g'
   790  00FC05  67                 	db	103	;'g'
   791  00FC06  69                 	db	105	;'i'
   792  00FC07  6E                 	db	110	;'n'
   793  00FC08  67                 	db	103	;'g'
   794  00FC09  20                 	db	32
   795  00FC0A  0D                 	db	13
   796  00FC0B  0A                 	db	10
   797  00FC0C  53                 	db	83	;'S'
   798  00FC0D  65                 	db	101	;'e'
   799  00FC0E  6C                 	db	108	;'l'
   800  00FC0F  65                 	db	101	;'e'
   801  00FC10  63                 	db	99	;'c'
   802  00FC11  74                 	db	116	;'t'
   803  00FC12  3A                 	db	58	;':'
   804  00FC13  20                 	db	32
   805  00FC14  20                 	db	32
   806  00FC15  20                 	db	32
   807  00FC16  20                 	db	32
   808  00FC17  20                 	db	32
   809  00FC18  53                 	db	83	;'S'
   810  00FC19  65                 	db	101	;'e'
   811  00FC1A  73                 	db	115	;'s'
   812  00FC1B  73                 	db	115	;'s'
   813  00FC1C  69                 	db	105	;'i'
   814  00FC1D  6F                 	db	111	;'o'
   815  00FC1E  6E                 	db	110	;'n'
   816  00FC1F  20                 	db	32
   817  00FC20  20                 	db	32
   818  00FC21  6C                 	db	108	;'l'
   819  00FC22  6F                 	db	111	;'o'
   820  00FC23  67                 	db	103	;'g'
   821  00FC24  67                 	db	103	;'g'
   822  00FC25  69                 	db	105	;'i'
   823  00FC26  6E                 	db	110	;'n'
   824  00FC27  67                 	db	103	;'g'
   825  00FC28  3A                 	db	58	;':'
   826  00FC29  20                 	db	32
   827  00FC2A  4E                 	db	78	;'N'
   828  00FC2B  6F                 	db	111	;'o'
   829  00FC2C  6E                 	db	110	;'n'
   830  00FC2D  65                 	db	101	;'e'
   831  00FC2E  20                 	db	32
   832  00FC2F  0D                 	db	13
   833  00FC30  0A                 	db	10
   834  00FC31  53                 	db	83	;'S'
   835  00FC32  65                 	db	101	;'e'
   836  00FC33  6C                 	db	108	;'l'
   837  00FC34  65                 	db	101	;'e'
   838  00FC35  63                 	db	99	;'c'
   839  00FC36  74                 	db	116	;'t'
   840  00FC37  3A                 	db	58	;':'
   841  00FC38  20                 	db	32
   842  00FC39  20                 	db	32
   843  00FC3A  20                 	db	32
   844  00FC3B  20                 	db	32
   845  00FC3C  20                 	db	32
   846  00FC3D  41                 	db	65	;'A'
   847  00FC3E  70                 	db	112	;'p'
   848  00FC3F  70                 	db	112	;'p'
   849  00FC40  6C                 	db	108	;'l'
   850  00FC41  79                 	db	121	;'y'
   851  00FC42  00                 	db	0
   852  00FC43                     STR_45:
   853  00FC43  57                 	db	87	;'W'
   854  00FC44  72                 	db	114	;'r'
   855  00FC45  69                 	db	105	;'i'
   856  00FC46  74                 	db	116	;'t'
   857  00FC47  69                 	db	105	;'i'
   858  00FC48  6E                 	db	110	;'n'
   859  00FC49  67                 	db	103	;'g'
   860  00FC4A  20                 	db	32
   861  00FC4B  73                 	db	115	;'s'
   862  00FC4C  69                 	db	105	;'i'
   863  00FC4D  6E                 	db	110	;'n'
   864  00FC4E  65                 	db	101	;'e'
   865  00FC4F  20                 	db	32
   866  00FC50  77                 	db	119	;'w'
   867  00FC51  61                 	db	97	;'a'
   868  00FC52  76                 	db	118	;'v'
   869  00FC53  65                 	db	101	;'e'
   870  00FC54  20                 	db	32
   871  00FC55  74                 	db	116	;'t'
   872  00FC56  6F                 	db	111	;'o'
   873  00FC57  20                 	db	32
   874  00FC58  6D                 	db	109	;'m'
   875  00FC59  65                 	db	101	;'e'
   876  00FC5A  6D                 	db	109	;'m'
   877  00FC5B  6F                 	db	111	;'o'
   878  00FC5C  72                 	db	114	;'r'
   879  00FC5D  79                 	db	121	;'y'
   880  00FC5E  2C                 	db	44
   881  00FC5F  20                 	db	32
   882  00FC60  73                 	db	115	;'s'
   883  00FC61  74                 	db	116	;'t'
   884  00FC62  61                 	db	97	;'a'
   885  00FC63  72                 	db	114	;'r'
   886  00FC64  74                 	db	116	;'t'
   887  00FC65  69                 	db	105	;'i'
   888  00FC66  6E                 	db	110	;'n'
   889  00FC67  67                 	db	103	;'g'
   890  00FC68  20                 	db	32
   891  00FC69  77                 	db	119	;'w'
   892  00FC6A  69                 	db	105	;'i'
   893  00FC6B  74                 	db	116	;'t'
   894  00FC6C  68                 	db	104	;'h'
   895  00FC6D  20                 	db	32
   896  00FC6E  74                 	db	116	;'t'
   897  00FC6F  68                 	db	104	;'h'
   898  00FC70  65                 	db	101	;'e'
   899  00FC71  20                 	db	32
   900  00FC72  63                 	db	99	;'c'
   901  00FC73  75                 	db	117	;'u'
   902  00FC74  72                 	db	114	;'r'
   903  00FC75  72                 	db	114	;'r'
   904  00FC76  65                 	db	101	;'e'
   905  00FC77  6E                 	db	110	;'n'
   906  00FC78  74                 	db	116	;'t'
   907  00FC79  20                 	db	32
   908  00FC7A  61                 	db	97	;'a'
   909  00FC7B  64                 	db	100	;'d'
   910  00FC7C  64                 	db	100	;'d'
   911  00FC7D  72                 	db	114	;'r'
   912  00FC7E  65                 	db	101	;'e'
   913  00FC7F  73                 	db	115	;'s'
   914  00FC80  73                 	db	115	;'s'
   915  00FC81  2E                 	db	46
   916  00FC82  20                 	db	32
   917  00FC83  50                 	db	80	;'P'
   918  00FC84  72                 	db	114	;'r'
   919  00FC85  65                 	db	101	;'e'
   920  00FC86  73                 	db	115	;'s'
   921  00FC87  73                 	db	115	;'s'
   922  00FC88  20                 	db	32
   923  00FC89  61                 	db	97	;'a'
   924  00FC8A  6E                 	db	110	;'n'
   925  00FC8B  79                 	db	121	;'y'
   926  00FC8C  20                 	db	32
   927  00FC8D  6B                 	db	107	;'k'
   928  00FC8E  65                 	db	101	;'e'
   929  00FC8F  79                 	db	121	;'y'
   930  00FC90  20                 	db	32
   931  00FC91  74                 	db	116	;'t'
   932  00FC92  6F                 	db	111	;'o'
   933  00FC93  20                 	db	32
   934  00FC94  73                 	db	115	;'s'
   935  00FC95  74                 	db	116	;'t'
   936  00FC96  6F                 	db	111	;'o'
   937  00FC97  70                 	db	112	;'p'
   938  00FC98  2E                 	db	46
   939  00FC99  0D                 	db	13
   940  00FC9A  0A                 	db	10
   941  00FC9B  00                 	db	0
   942  00FC9C                     STR_21:
   943  00FC9C  31                 	db	49	;'1'
   944  00FC9D  3A                 	db	58	;':'
   945  00FC9E  20                 	db	32
   946  00FC9F  77                 	db	119	;'w'
   947  00FCA0  72                 	db	114	;'r'
   948  00FCA1  69                 	db	105	;'i'
   949  00FCA2  74                 	db	116	;'t'
   950  00FCA3  65                 	db	101	;'e'
   951  00FCA4  20                 	db	32
   952  00FCA5  61                 	db	97	;'a'
   953  00FCA6  20                 	db	32
   954  00FCA7  70                 	db	112	;'p'
   955  00FCA8  65                 	db	101	;'e'
   956  00FCA9  72                 	db	114	;'r'
   957  00FCAA  66                 	db	102	;'f'
   958  00FCAB  65                 	db	101	;'e'
   959  00FCAC  63                 	db	99	;'c'
   960  00FCAD  74                 	db	116	;'t'
   961  00FCAE  20                 	db	32
   962  00FCAF  32                 	db	50	;'2'
   963  00FCB0  36                 	db	54	;'6'
   964  00FCB1  20                 	db	32
   965  00FCB2  76                 	db	118	;'v'
   966  00FCB3  61                 	db	97	;'a'
   967  00FCB4  6C                 	db	108	;'l'
   968  00FCB5  75                 	db	117	;'u'
   969  00FCB6  65                 	db	101	;'e'
   970  00FCB7  20                 	db	32
   971  00FCB8  73                 	db	115	;'s'
   972  00FCB9  69                 	db	105	;'i'
   973  00FCBA  6E                 	db	110	;'n'
   974  00FCBB  65                 	db	101	;'e'
   975  00FCBC  20                 	db	32
   976  00FCBD  77                 	db	119	;'w'
   977  00FCBE  61                 	db	97	;'a'
   978  00FCBF  76                 	db	118	;'v'
   979  00FCC0  65                 	db	101	;'e'
   980  00FCC1  20                 	db	32
   981  00FCC2  74                 	db	116	;'t'
   982  00FCC3  6F                 	db	111	;'o'
   983  00FCC4  20                 	db	32
   984  00FCC5  74                 	db	116	;'t'
   985  00FCC6  68                 	db	104	;'h'
   986  00FCC7  65                 	db	101	;'e'
   987  00FCC8  20                 	db	32
   988  00FCC9  53                 	db	83	;'S'
   989  00FCCA  44                 	db	68	;'D'
   990  00FCCB  20                 	db	32
   991  00FCCC  63                 	db	99	;'c'
   992  00FCCD  61                 	db	97	;'a'
   993  00FCCE  72                 	db	114	;'r'
   994  00FCCF  64                 	db	100	;'d'
   995  00FCD0  0D                 	db	13
   996  00FCD1  0A                 	db	10
   997  00FCD2  00                 	db	0
   998  00FCD3                     STR_5:
   999  00FCD3  0D                 	db	13
  1000  00FCD4  0A                 	db	10
  1001  00FCD5  2D                 	db	45
  1002  00FCD6  2D                 	db	45
  1003  00FCD7  2D                 	db	45
  1004  00FCD8  2D                 	db	45
  1005  00FCD9  2D                 	db	45
  1006  00FCDA  2D                 	db	45
  1007  00FCDB  2D                 	db	45
  1008  00FCDC  2D                 	db	45
  1009  00FCDD  2D                 	db	45
  1010  00FCDE  2D                 	db	45
  1011  00FCDF  2D                 	db	45
  1012  00FCE0  2D                 	db	45
  1013  00FCE1  2D                 	db	45
  1014  00FCE2  2D                 	db	45
  1015  00FCE3  2D                 	db	45
  1016  00FCE4  2D                 	db	45
  1017  00FCE5  2D                 	db	45
  1018  00FCE6  2D                 	db	45
  1019  00FCE7  2D                 	db	45
  1020  00FCE8  2D                 	db	45
  1021  00FCE9  2D                 	db	45
  1022  00FCEA  2D                 	db	45
  1023  00FCEB  2D                 	db	45
  1024  00FCEC  2D                 	db	45
  1025  00FCED  2D                 	db	45
  1026  00FCEE  2D                 	db	45
  1027  00FCEF  2D                 	db	45
  1028  00FCF0  2D                 	db	45
  1029  00FCF1  2D                 	db	45
  1030  00FCF2  2D                 	db	45
  1031  00FCF3  2D                 	db	45
  1032  00FCF4  2D                 	db	45
  1033  00FCF5  2D                 	db	45
  1034  00FCF6  2D                 	db	45
  1035  00FCF7  2D                 	db	45
  1036  00FCF8  2D                 	db	45
  1037  00FCF9  2D                 	db	45
  1038  00FCFA  2D                 	db	45
  1039  00FCFB  2D                 	db	45
  1040  00FCFC  2D                 	db	45
  1041  00FCFD  2D                 	db	45
  1042  00FCFE  2D                 	db	45
  1043  00FCFF  2D                 	db	45
  1044  00FD00  2D                 	db	45
  1045  00FD01  2D                 	db	45
  1046  00FD02  2D                 	db	45
  1047  00FD03  2D                 	db	45
  1048  00FD04  2D                 	db	45
  1049  00FD05  2D                 	db	45
  1050  00FD06  0D                 	db	13
  1051  00FD07  0A                 	db	10
  1052  00FD08  00                 	db	0
  1053  00FD09                     STR_23:
  1054  00FD09  2B                 	db	43
  1055  00FD0A  2F                 	db	47
  1056  00FD0B  2D                 	db	45
  1057  00FD0C  3A                 	db	58	;':'
  1058  00FD0D  20                 	db	32
  1059  00FD0E  49                 	db	73	;'I'
  1060  00FD0F  6E                 	db	110	;'n'
  1061  00FD10  63                 	db	99	;'c'
  1062  00FD11  72                 	db	114	;'r'
  1063  00FD12  65                 	db	101	;'e'
  1064  00FD13  61                 	db	97	;'a'
  1065  00FD14  73                 	db	115	;'s'
  1066  00FD15  65                 	db	101	;'e'
  1067  00FD16  2F                 	db	47
  1068  00FD17  44                 	db	68	;'D'
  1069  00FD18  65                 	db	101	;'e'
  1070  00FD19  63                 	db	99	;'c'
  1071  00FD1A  72                 	db	114	;'r'
  1072  00FD1B  65                 	db	101	;'e'
  1073  00FD1C  61                 	db	97	;'a'
  1074  00FD1D  73                 	db	115	;'s'
  1075  00FD1E  65                 	db	101	;'e'
  1076  00FD1F  20                 	db	32
  1077  00FD20  74                 	db	116	;'t'
  1078  00FD21  68                 	db	104	;'h'
  1079  00FD22  65                 	db	101	;'e'
  1080  00FD23  20                 	db	32
  1081  00FD24  73                 	db	115	;'s'
  1082  00FD25  61                 	db	97	;'a'
  1083  00FD26  6D                 	db	109	;'m'
  1084  00FD27  70                 	db	112	;'p'
  1085  00FD28  6C                 	db	108	;'l'
  1086  00FD29  65                 	db	101	;'e'
  1087  00FD2A  20                 	db	32
  1088  00FD2B  72                 	db	114	;'r'
  1089  00FD2C  61                 	db	97	;'a'
  1090  00FD2D  74                 	db	116	;'t'
  1091  00FD2E  65                 	db	101	;'e'
  1092  00FD2F  20                 	db	32
  1093  00FD30  62                 	db	98	;'b'
  1094  00FD31  79                 	db	121	;'y'
  1095  00FD32  20                 	db	32
  1096  00FD33  31                 	db	49	;'1'
  1097  00FD34  30                 	db	48	;'0'
  1098  00FD35  20                 	db	32
  1099  00FD36  75                 	db	117	;'u'
  1100  00FD37  73                 	db	115	;'s'
  1101  00FD38  0D                 	db	13
  1102  00FD39  0A                 	db	10
  1103  00FD3A  00                 	db	0
  1104  00FD3B                     STR_24:
  1105  00FD3B  57                 	db	87	;'W'
  1106  00FD3C  3A                 	db	58	;':'
  1107  00FD3D  20                 	db	32
  1108  00FD3E  57                 	db	87	;'W'
  1109  00FD3F  72                 	db	114	;'r'
  1110  00FD40  69                 	db	105	;'i'
  1111  00FD41  74                 	db	116	;'t'
  1112  00FD42  65                 	db	101	;'e'
  1113  00FD43  20                 	db	32
  1114  00FD44  6D                 	db	109	;'m'
  1115  00FD45  69                 	db	105	;'i'
  1116  00FD46  63                 	db	99	;'c'
  1117  00FD47  72                 	db	114	;'r'
  1118  00FD48  6F                 	db	111	;'o'
  1119  00FD49  70                 	db	112	;'p'
  1120  00FD4A  68                 	db	104	;'h'
  1121  00FD4B  6F                 	db	111	;'o'
  1122  00FD4C  6E                 	db	110	;'n'
  1123  00FD4D  65                 	db	101	;'e'
  1124  00FD4E  20                 	db	32
  1125  00FD4F  3D                 	db	61	;'='
  1126  00FD50  3E                 	db	62	;'>'
  1127  00FD51  20                 	db	32
  1128  00FD52  53                 	db	83	;'S'
  1129  00FD53  44                 	db	68	;'D'
  1130  00FD54  20                 	db	32
  1131  00FD55  63                 	db	99	;'c'
  1132  00FD56  61                 	db	97	;'a'
  1133  00FD57  72                 	db	114	;'r'
  1134  00FD58  64                 	db	100	;'d'
  1135  00FD59  20                 	db	32
  1136  00FD5A  61                 	db	97	;'a'
  1137  00FD5B  74                 	db	116	;'t'
  1138  00FD5C  20                 	db	32
  1139  00FD5D  31                 	db	49	;'1'
  1140  00FD5E  36                 	db	54	;'6'
  1141  00FD5F  30                 	db	48	;'0'
  1142  00FD60  30                 	db	48	;'0'
  1143  00FD61  20                 	db	32
  1144  00FD62  75                 	db	117	;'u'
  1145  00FD63  73                 	db	115	;'s'
  1146  00FD64  0D                 	db	13
  1147  00FD65  0A                 	db	10
  1148  00FD66  00                 	db	0
  1149  00FD67                     STR_20:
  1150  00FD67  72                 	db	114	;'r'
  1151  00FD68  3A                 	db	58	;':'
  1152  00FD69  20                 	db	32
  1153  00FD6A  72                 	db	114	;'r'
  1154  00FD6B  65                 	db	101	;'e'
  1155  00FD6C  61                 	db	97	;'a'
  1156  00FD6D  64                 	db	100	;'d'
  1157  00FD6E  20                 	db	32
  1158  00FD6F  61                 	db	97	;'a'
  1159  00FD70  20                 	db	32
  1160  00FD71  62                 	db	98	;'b'
  1161  00FD72  6C                 	db	108	;'l'
  1162  00FD73  6F                 	db	111	;'o'
  1163  00FD74  63                 	db	99	;'c'
  1164  00FD75  6B                 	db	107	;'k'
  1165  00FD76  20                 	db	32
  1166  00FD77  6F                 	db	111	;'o'
  1167  00FD78  66                 	db	102	;'f'
  1168  00FD79  20                 	db	32
  1169  00FD7A  25                 	db	37
  1170  00FD7B  64                 	db	100	;'d'
  1171  00FD7C  20                 	db	32
  1172  00FD7D  62                 	db	98	;'b'
  1173  00FD7E  79                 	db	121	;'y'
  1174  00FD7F  74                 	db	116	;'t'
  1175  00FD80  65                 	db	101	;'e'
  1176  00FD81  73                 	db	115	;'s'
  1177  00FD82  20                 	db	32
  1178  00FD83  66                 	db	102	;'f'
  1179  00FD84  72                 	db	114	;'r'
  1180  00FD85  6F                 	db	111	;'o'
  1181  00FD86  6D                 	db	109	;'m'
  1182  00FD87  20                 	db	32
  1183  00FD88  53                 	db	83	;'S'
  1184  00FD89  44                 	db	68	;'D'
  1185  00FD8A  20                 	db	32
  1186  00FD8B  63                 	db	99	;'c'
  1187  00FD8C  61                 	db	97	;'a'
  1188  00FD8D  72                 	db	114	;'r'
  1189  00FD8E  64                 	db	100	;'d'
  1190  00FD8F  0D                 	db	13
  1191  00FD90  0A                 	db	10
  1192  00FD91  00                 	db	0
  1193  00FD92                     STR_4:
  1194  00FD92  4E                 	db	78	;'N'
  1195  00FD93  6F                 	db	111	;'o'
  1196  00FD94  20                 	db	32
  1197  00FD95  63                 	db	99	;'c'
  1198  00FD96  6F                 	db	111	;'o'
  1199  00FD97  6E                 	db	110	;'n'
  1200  00FD98  66                 	db	102	;'f'
  1201  00FD99  69                 	db	105	;'i'
  1202  00FD9A  67                 	db	103	;'g'
  1203  00FD9B  75                 	db	117	;'u'
  1204  00FD9C  72                 	db	114	;'r'
  1205  00FD9D  61                 	db	97	;'a'
  1206  00FD9E  74                 	db	116	;'t'
  1207  00FD9F  69                 	db	105	;'i'
  1208  00FDA0  6F                 	db	111	;'o'
  1209  00FDA1  6E                 	db	110	;'n'
  1210  00FDA2  20                 	db	32
  1211  00FDA3  6F                 	db	111	;'o'
  1212  00FDA4  66                 	db	102	;'f'
  1213  00FDA5  20                 	db	32
  1214  00FDA6  64                 	db	100	;'d'
  1215  00FDA7  65                 	db	101	;'e'
  1216  00FDA8  76                 	db	118	;'v'
  1217  00FDA9  65                 	db	101	;'e'
  1218  00FDAA  6C                 	db	108	;'l'
  1219  00FDAB  6F                 	db	111	;'o'
  1220  00FDAC  70                 	db	112	;'p'
  1221  00FDAD  6D                 	db	109	;'m'
  1222  00FDAE  65                 	db	101	;'e'
  1223  00FDAF  6E                 	db	110	;'n'
  1224  00FDB0  74                 	db	116	;'t'
  1225  00FDB1  20                 	db	32
  1226  00FDB2  62                 	db	98	;'b'
  1227  00FDB3  6F                 	db	111	;'o'
  1228  00FDB4  61                 	db	97	;'a'
  1229  00FDB5  72                 	db	114	;'r'
  1230  00FDB6  64                 	db	100	;'d'
  1231  00FDB7  0D                 	db	13
  1232  00FDB8  0A                 	db	10
  1233  00FDB9  3E                 	db	62	;'>'
  1234  00FDBA  20                 	db	32
  1235  00FDBB  00                 	db	0
  1236  00FDBC                     STR_48:
  1237  00FDBC  2B                 	db	43
  1238  00FDBD  2F                 	db	47
  1239  00FDBE  2D                 	db	45
  1240  00FDBF  3A                 	db	58	;':'
  1241  00FDC0  20                 	db	32
  1242  00FDC1  44                 	db	68	;'D'
  1243  00FDC2  65                 	db	101	;'e'
  1244  00FDC3  63                 	db	99	;'c'
  1245  00FDC4  72                 	db	114	;'r'
  1246  00FDC5  65                 	db	101	;'e'
  1247  00FDC6  61                 	db	97	;'a'
  1248  00FDC7  73                 	db	115	;'s'
  1249  00FDC8  65                 	db	101	;'e'
  1250  00FDC9  20                 	db	32
  1251  00FDCA  74                 	db	116	;'t'
  1252  00FDCB  68                 	db	104	;'h'
  1253  00FDCC  65                 	db	101	;'e'
  1254  00FDCD  20                 	db	32
  1255  00FDCE  73                 	db	115	;'s'
  1256  00FDCF  61                 	db	97	;'a'
  1257  00FDD0  6D                 	db	109	;'m'
  1258  00FDD1  70                 	db	112	;'p'
  1259  00FDD2  6C                 	db	108	;'l'
  1260  00FDD3  65                 	db	101	;'e'
  1261  00FDD4  20                 	db	32
  1262  00FDD5  72                 	db	114	;'r'
  1263  00FDD6  61                 	db	97	;'a'
  1264  00FDD7  74                 	db	116	;'t'
  1265  00FDD8  65                 	db	101	;'e'
  1266  00FDD9  20                 	db	32
  1267  00FDDA  62                 	db	98	;'b'
  1268  00FDDB  79                 	db	121	;'y'
  1269  00FDDC  20                 	db	32
  1270  00FDDD  31                 	db	49	;'1'
  1271  00FDDE  30                 	db	48	;'0'
  1272  00FDDF  20                 	db	32
  1273  00FDE0  75                 	db	117	;'u'
  1274  00FDE1  73                 	db	115	;'s'
  1275  00FDE2  0D                 	db	13
  1276  00FDE3  0A                 	db	10
  1277  00FDE4  00                 	db	0
  1278  00FDE5                     STR_47:
  1279  00FDE5  2B                 	db	43
  1280  00FDE6  2F                 	db	47
  1281  00FDE7  2D                 	db	45
  1282  00FDE8  3A                 	db	58	;':'
  1283  00FDE9  20                 	db	32
  1284  00FDEA  49                 	db	73	;'I'
  1285  00FDEB  6E                 	db	110	;'n'
  1286  00FDEC  63                 	db	99	;'c'
  1287  00FDED  72                 	db	114	;'r'
  1288  00FDEE  65                 	db	101	;'e'
  1289  00FDEF  61                 	db	97	;'a'
  1290  00FDF0  73                 	db	115	;'s'
  1291  00FDF1  65                 	db	101	;'e'
  1292  00FDF2  20                 	db	32
  1293  00FDF3  74                 	db	116	;'t'
  1294  00FDF4  68                 	db	104	;'h'
  1295  00FDF5  65                 	db	101	;'e'
  1296  00FDF6  20                 	db	32
  1297  00FDF7  73                 	db	115	;'s'
  1298  00FDF8  61                 	db	97	;'a'
  1299  00FDF9  6D                 	db	109	;'m'
  1300  00FDFA  70                 	db	112	;'p'
  1301  00FDFB  6C                 	db	108	;'l'
  1302  00FDFC  65                 	db	101	;'e'
  1303  00FDFD  20                 	db	32
  1304  00FDFE  72                 	db	114	;'r'
  1305  00FDFF  61                 	db	97	;'a'
  1306  00FE00  74                 	db	116	;'t'
  1307  00FE01  65                 	db	101	;'e'
  1308  00FE02  20                 	db	32
  1309  00FE03  62                 	db	98	;'b'
  1310  00FE04  79                 	db	121	;'y'
  1311  00FE05  20                 	db	32
  1312  00FE06  31                 	db	49	;'1'
  1313  00FE07  30                 	db	48	;'0'
  1314  00FE08  20                 	db	32
  1315  00FE09  75                 	db	117	;'u'
  1316  00FE0A  73                 	db	115	;'s'
  1317  00FE0B  0D                 	db	13
  1318  00FE0C  0A                 	db	10
  1319  00FE0D  00                 	db	0
  1320  00FE0E                     STR_19:
  1321  00FE0E  61                 	db	97	;'a'
  1322  00FE0F  2F                 	db	47
  1323  00FE10  41                 	db	65	;'A'
  1324  00FE11  20                 	db	32
  1325  00FE12  64                 	db	100	;'d'
  1326  00FE13  65                 	db	101	;'e'
  1327  00FE14  63                 	db	99	;'c'
  1328  00FE15  72                 	db	114	;'r'
  1329  00FE16  65                 	db	101	;'e'
  1330  00FE17  61                 	db	97	;'a'
  1331  00FE18  73                 	db	115	;'s'
  1332  00FE19  65                 	db	101	;'e'
  1333  00FE1A  2F                 	db	47
  1334  00FE1B  69                 	db	105	;'i'
  1335  00FE1C  6E                 	db	110	;'n'
  1336  00FE1D  63                 	db	99	;'c'
  1337  00FE1E  72                 	db	114	;'r'
  1338  00FE1F  65                 	db	101	;'e'
  1339  00FE20  61                 	db	97	;'a'
  1340  00FE21  73                 	db	115	;'s'
  1341  00FE22  65                 	db	101	;'e'
  1342  00FE23  20                 	db	32
  1343  00FE24  72                 	db	114	;'r'
  1344  00FE25  65                 	db	101	;'e'
  1345  00FE26  61                 	db	97	;'a'
  1346  00FE27  64                 	db	100	;'d'
  1347  00FE28  20                 	db	32
  1348  00FE29  61                 	db	97	;'a'
  1349  00FE2A  64                 	db	100	;'d'
  1350  00FE2B  64                 	db	100	;'d'
  1351  00FE2C  72                 	db	114	;'r'
  1352  00FE2D  65                 	db	101	;'e'
  1353  00FE2E  73                 	db	115	;'s'
  1354  00FE2F  73                 	db	115	;'s'
  1355  00FE30  0D                 	db	13
  1356  00FE31  0A                 	db	10
  1357  00FE32  00                 	db	0
  1358  00FE33                     STR_25:
  1359  00FE33  73                 	db	115	;'s'
  1360  00FE34  3A                 	db	58	;':'
  1361  00FE35  20                 	db	32
  1362  00FE36  73                 	db	115	;'s'
  1363  00FE37  70                 	db	112	;'p'
  1364  00FE38  6F                 	db	111	;'o'
  1365  00FE39  6F                 	db	111	;'o'
  1366  00FE3A  6C                 	db	108	;'l'
  1367  00FE3B  20                 	db	32
  1368  00FE3C  6D                 	db	109	;'m'
  1369  00FE3D  65                 	db	101	;'e'
  1370  00FE3E  6D                 	db	109	;'m'
  1371  00FE3F  6F                 	db	111	;'o'
  1372  00FE40  72                 	db	114	;'r'
  1373  00FE41  79                 	db	121	;'y'
  1374  00FE42  20                 	db	32
  1375  00FE43  74                 	db	116	;'t'
  1376  00FE44  6F                 	db	111	;'o'
  1377  00FE45  20                 	db	32
  1378  00FE46  61                 	db	97	;'a'
  1379  00FE47  20                 	db	32
  1380  00FE48  63                 	db	99	;'c'
  1381  00FE49  73                 	db	115	;'s'
  1382  00FE4A  76                 	db	118	;'v'
  1383  00FE4B  20                 	db	32
  1384  00FE4C  66                 	db	102	;'f'
  1385  00FE4D  69                 	db	105	;'i'
  1386  00FE4E  6C                 	db	108	;'l'
  1387  00FE4F  65                 	db	101	;'e'
  1388  00FE50  0D                 	db	13
  1389  00FE51  0A                 	db	10
  1390  00FE52  00                 	db	0
  1391  00FE53                     STR_30:
  1392  00FE53  55                 	db	85	;'U'
  1393  00FE54  6E                 	db	110	;'n'
  1394  00FE55  64                 	db	100	;'d'
  1395  00FE56  65                 	db	101	;'e'
  1396  00FE57  72                 	db	114	;'r'
  1397  00FE58  66                 	db	102	;'f'
  1398  00FE59  6C                 	db	108	;'l'
  1399  00FE5A  6F                 	db	111	;'o'
  1400  00FE5B  77                 	db	119	;'w'
  1401  00FE5C  65                 	db	101	;'e'
  1402  00FE5D  64                 	db	100	;'d'
  1403  00FE5E  20                 	db	32
  1404  00FE5F  74                 	db	116	;'t'
  1405  00FE60  6F                 	db	111	;'o'
  1406  00FE61  20                 	db	32
  1407  00FE62  68                 	db	104	;'h'
  1408  00FE63  69                 	db	105	;'i'
  1409  00FE64  67                 	db	103	;'g'
  1410  00FE65  68                 	db	104	;'h'
  1411  00FE66  20                 	db	32
  1412  00FE67  61                 	db	97	;'a'
  1413  00FE68  64                 	db	100	;'d'
  1414  00FE69  64                 	db	100	;'d'
  1415  00FE6A  72                 	db	114	;'r'
  1416  00FE6B  65                 	db	101	;'e'
  1417  00FE6C  73                 	db	115	;'s'
  1418  00FE6D  73                 	db	115	;'s'
  1419  00FE6E  0D                 	db	13
  1420  00FE6F  0A                 	db	10
  1421  00FE70  00                 	db	0
  1422  00FE71                     STR_56:
  1423  00FE71  42                 	db	66	;'B'
  1424  00FE72  6C                 	db	108	;'l'
  1425  00FE73  6F                 	db	111	;'o'
  1426  00FE74  63                 	db	99	;'c'
  1427  00FE75  6B                 	db	107	;'k'
  1428  00FE76  20                 	db	32
  1429  00FE77  4C                 	db	76	;'L'
  1430  00FE78  65                 	db	101	;'e'
  1431  00FE79  6E                 	db	110	;'n'
  1432  00FE7A  67                 	db	103	;'g'
  1433  00FE7B  74                 	db	116	;'t'
  1434  00FE7C  68                 	db	104	;'h'
  1435  00FE7D  20                 	db	32
  1436  00FE7E  52                 	db	82	;'R'
  1437  00FE7F  65                 	db	101	;'e'
  1438  00FE80  73                 	db	115	;'s'
  1439  00FE81  70                 	db	112	;'p'
  1440  00FE82  6F                 	db	111	;'o'
  1441  00FE83  6E                 	db	110	;'n'
  1442  00FE84  73                 	db	115	;'s'
  1443  00FE85  65                 	db	101	;'e'
  1444  00FE86  3A                 	db	58	;':'
  1445  00FE87  20                 	db	32
  1446  00FE88  25                 	db	37
  1447  00FE89  78                 	db	120	;'x'
  1448  00FE8A  0D                 	db	13
  1449  00FE8B  0A                 	db	10
  1450  00FE8C  00                 	db	0
  1451  00FE8D                     STR_32:
  1452  00FE8D  4F                 	db	79	;'O'
  1453  00FE8E  76                 	db	118	;'v'
  1454  00FE8F  65                 	db	101	;'e'
  1455  00FE90  72                 	db	114	;'r'
  1456  00FE91  66                 	db	102	;'f'
  1457  00FE92  6C                 	db	108	;'l'
  1458  00FE93  6F                 	db	111	;'o'
  1459  00FE94  77                 	db	119	;'w'
  1460  00FE95  65                 	db	101	;'e'
  1461  00FE96  64                 	db	100	;'d'
  1462  00FE97  20                 	db	32
  1463  00FE98  74                 	db	116	;'t'
  1464  00FE99  6F                 	db	111	;'o'
  1465  00FE9A  20                 	db	32
  1466  00FE9B  6C                 	db	108	;'l'
  1467  00FE9C  6F                 	db	111	;'o'
  1468  00FE9D  77                 	db	119	;'w'
  1469  00FE9E  20                 	db	32
  1470  00FE9F  61                 	db	97	;'a'
  1471  00FEA0  64                 	db	100	;'d'
  1472  00FEA1  64                 	db	100	;'d'
  1473  00FEA2  72                 	db	114	;'r'
  1474  00FEA3  65                 	db	101	;'e'
  1475  00FEA4  73                 	db	115	;'s'
  1476  00FEA5  73                 	db	115	;'s'
  1477  00FEA6  0D                 	db	13
  1478  00FEA7  0A                 	db	10
  1479  00FEA8  00                 	db	0
  1480  00FEA9                     STR_54:
  1481  00FEA9  43                 	db	67	;'C'
  1482  00FEAA  4D                 	db	77	;'M'
  1483  00FEAB  44                 	db	68	;'D'
  1484  00FEAC  30                 	db	48	;'0'
  1485  00FEAD  2C                 	db	44
  1486  00FEAE  20                 	db	32
  1487  00FEAF  52                 	db	82	;'R'
  1488  00FEB0  65                 	db	101	;'e'
  1489  00FEB1  73                 	db	115	;'s'
  1490  00FEB2  65                 	db	101	;'e'
  1491  00FEB3  74                 	db	116	;'t'
  1492  00FEB4  20                 	db	32
  1493  00FEB5  52                 	db	82	;'R'
  1494  00FEB6  65                 	db	101	;'e'
  1495  00FEB7  73                 	db	115	;'s'
  1496  00FEB8  70                 	db	112	;'p'
  1497  00FEB9  6F                 	db	111	;'o'
  1498  00FEBA  6E                 	db	110	;'n'
  1499  00FEBB  73                 	db	115	;'s'
  1500  00FEBC  65                 	db	101	;'e'
  1501  00FEBD  3A                 	db	58	;':'
  1502  00FEBE  20                 	db	32
  1503  00FEBF  25                 	db	37
  1504  00FEC0  78                 	db	120	;'x'
  1505  00FEC1  0D                 	db	13
  1506  00FEC2  0A                 	db	10
  1507  00FEC3  00                 	db	0
  1508  00FEC4                     STR_55:
  1509  00FEC4  43                 	db	67	;'C'
  1510  00FEC5  4D                 	db	77	;'M'
  1511  00FEC6  44                 	db	68	;'D'
  1512  00FEC7  31                 	db	49	;'1'
  1513  00FEC8  2C                 	db	44
  1514  00FEC9  20                 	db	32
  1515  00FECA  49                 	db	73	;'I'
  1516  00FECB  6E                 	db	110	;'n'
  1517  00FECC  69                 	db	105	;'i'
  1518  00FECD  74                 	db	116	;'t'
  1519  00FECE  20                 	db	32
  1520  00FECF  52                 	db	82	;'R'
  1521  00FED0  65                 	db	101	;'e'
  1522  00FED1  73                 	db	115	;'s'
  1523  00FED2  70                 	db	112	;'p'
  1524  00FED3  6F                 	db	111	;'o'
  1525  00FED4  6E                 	db	110	;'n'
  1526  00FED5  73                 	db	115	;'s'
  1527  00FED6  65                 	db	101	;'e'
  1528  00FED7  3A                 	db	58	;':'
  1529  00FED8  20                 	db	32
  1530  00FED9  25                 	db	37
  1531  00FEDA  78                 	db	120	;'x'
  1532  00FEDB  0D                 	db	13
  1533  00FEDC  0A                 	db	10
  1534  00FEDD  00                 	db	0
  1535  00FEDE                     STR_17:
  1536  00FEDE  69                 	db	105	;'i'
  1537  00FEDF  3A                 	db	58	;':'
  1538  00FEE0  20                 	db	32
  1539  00FEE1  49                 	db	73	;'I'
  1540  00FEE2  6E                 	db	110	;'n'
  1541  00FEE3  69                 	db	105	;'i'
  1542  00FEE4  74                 	db	116	;'t'
  1543  00FEE5  69                 	db	105	;'i'
  1544  00FEE6  61                 	db	97	;'a'
  1545  00FEE7  6C                 	db	108	;'l'
  1546  00FEE8  69                 	db	105	;'i'
  1547  00FEE9  7A                 	db	122	;'z'
  1548  00FEEA  65                 	db	101	;'e'
  1549  00FEEB  20                 	db	32
  1550  00FEEC  53                 	db	83	;'S'
  1551  00FEED  44                 	db	68	;'D'
  1552  00FEEE  20                 	db	32
  1553  00FEEF  63                 	db	99	;'c'
  1554  00FEF0  61                 	db	97	;'a'
  1555  00FEF1  72                 	db	114	;'r'
  1556  00FEF2  64                 	db	100	;'d'
  1557  00FEF3  0D                 	db	13
  1558  00FEF4  0A                 	db	10
  1559  00FEF5  00                 	db	0
  1560  00FEF6                     STR_15:
  1561  00FEF6  7A                 	db	122	;'z'
  1562  00FEF7  3A                 	db	58	;':'
  1563  00FEF8  20                 	db	32
  1564  00FEF9  43                 	db	67	;'C'
  1565  00FEFA  6C                 	db	108	;'l'
  1566  00FEFB  65                 	db	101	;'e'
  1567  00FEFC  61                 	db	97	;'a'
  1568  00FEFD  72                 	db	114	;'r'
  1569  00FEFE  20                 	db	32
  1570  00FEFF  74                 	db	116	;'t'
  1571  00FF00  68                 	db	104	;'h'
  1572  00FF01  65                 	db	101	;'e'
  1573  00FF02  20                 	db	32
  1574  00FF03  74                 	db	116	;'t'
  1575  00FF04  65                 	db	101	;'e'
  1576  00FF05  72                 	db	114	;'r'
  1577  00FF06  6D                 	db	109	;'m'
  1578  00FF07  69                 	db	105	;'i'
  1579  00FF08  6E                 	db	110	;'n'
  1580  00FF09  61                 	db	97	;'a'
  1581  00FF0A  6C                 	db	108	;'l'
  1582  00FF0B  0D                 	db	13
  1583  00FF0C  0A                 	db	10
  1584  00FF0D  00                 	db	0
  1585  00FF0E                     STR_14:
  1586  00FF0E  5A                 	db	90	;'Z'
  1587  00FF0F  3A                 	db	58	;':'
  1588  00FF10  20                 	db	32
  1589  00FF11  52                 	db	82	;'R'
  1590  00FF12  65                 	db	101	;'e'
  1591  00FF13  73                 	db	115	;'s'
  1592  00FF14  65                 	db	101	;'e'
  1593  00FF15  74                 	db	116	;'t'
  1594  00FF16  20                 	db	32
  1595  00FF17  70                 	db	112	;'p'
  1596  00FF18  72                 	db	114	;'r'
  1597  00FF19  6F                 	db	111	;'o'
  1598  00FF1A  63                 	db	99	;'c'
  1599  00FF1B  65                 	db	101	;'e'
  1600  00FF1C  73                 	db	115	;'s'
  1601  00FF1D  73                 	db	115	;'s'
  1602  00FF1E  6F                 	db	111	;'o'
  1603  00FF1F  72                 	db	114	;'r'
  1604  00FF20  0D                 	db	13
  1605  00FF21  0A                 	db	10
  1606  00FF22  00                 	db	0
  1607  00FF23                     STR_31:
  1608  00FF23  44                 	db	68	;'D'
  1609  00FF24  65                 	db	101	;'e'
  1610  00FF25  63                 	db	99	;'c'
  1611  00FF26  72                 	db	114	;'r'
  1612  00FF27  65                 	db	101	;'e'
  1613  00FF28  61                 	db	97	;'a'
  1614  00FF29  73                 	db	115	;'s'
  1615  00FF2A  65                 	db	101	;'e'
  1616  00FF2B  64                 	db	100	;'d'
  1617  00FF2C  20                 	db	32
  1618  00FF2D  61                 	db	97	;'a'
  1619  00FF2E  64                 	db	100	;'d'
  1620  00FF2F  64                 	db	100	;'d'
  1621  00FF30  72                 	db	114	;'r'
  1622  00FF31  65                 	db	101	;'e'
  1623  00FF32  73                 	db	115	;'s'
  1624  00FF33  73                 	db	115	;'s'
  1625  00FF34  0D                 	db	13
  1626  00FF35  0A                 	db	10
  1627  00FF36  00                 	db	0
  1628  00FF37                     STR_33:
  1629  00FF37  49                 	db	73	;'I'
  1630  00FF38  6E                 	db	110	;'n'
  1631  00FF39  63                 	db	99	;'c'
  1632  00FF3A  72                 	db	114	;'r'
  1633  00FF3B  65                 	db	101	;'e'
  1634  00FF3C  61                 	db	97	;'a'
  1635  00FF3D  73                 	db	115	;'s'
  1636  00FF3E  65                 	db	101	;'e'
  1637  00FF3F  64                 	db	100	;'d'
  1638  00FF40  20                 	db	32
  1639  00FF41  61                 	db	97	;'a'
  1640  00FF42  64                 	db	100	;'d'
  1641  00FF43  64                 	db	100	;'d'
  1642  00FF44  72                 	db	114	;'r'
  1643  00FF45  65                 	db	101	;'e'
  1644  00FF46  73                 	db	115	;'s'
  1645  00FF47  73                 	db	115	;'s'
  1646  00FF48  0D                 	db	13
  1647  00FF49  0A                 	db	10
  1648  00FF4A  00                 	db	0
  1649  00FF4B                     STR_6:
  1650  00FF4B  53                 	db	83	;'S'
  1651  00FF4C  44                 	db	68	;'D'
  1652  00FF4D  20                 	db	32
  1653  00FF4E  63                 	db	99	;'c'
  1654  00FF4F  61                 	db	97	;'a'
  1655  00FF50  72                 	db	114	;'r'
  1656  00FF51  64                 	db	100	;'d'
  1657  00FF52  20                 	db	32
  1658  00FF53  61                 	db	97	;'a'
  1659  00FF54  64                 	db	100	;'d'
  1660  00FF55  64                 	db	100	;'d'
  1661  00FF56  72                 	db	114	;'r'
  1662  00FF57  65                 	db	101	;'e'
  1663  00FF58  73                 	db	115	;'s'
  1664  00FF59  73                 	db	115	;'s'
  1665  00FF5A  3A                 	db	58	;':'
  1666  00FF5B  20                 	db	32
  1667  00FF5C  20                 	db	32
  1668  00FF5D  00                 	db	0
  1669  00FF5E                     STR_2:
  1670  00FF5E  53                 	db	83	;'S'
  1671  00FF5F  44                 	db	68	;'D'
  1672  00FF60  20                 	db	32
  1673  00FF61  63                 	db	99	;'c'
  1674  00FF62  61                 	db	97	;'a'
  1675  00FF63  72                 	db	114	;'r'
  1676  00FF64  64                 	db	100	;'d'
  1677  00FF65  20                 	db	32
  1678  00FF66  74                 	db	116	;'t'
  1679  00FF67  65                 	db	101	;'e'
  1680  00FF68  73                 	db	115	;'s'
  1681  00FF69  74                 	db	116	;'t'
  1682  00FF6A  69                 	db	105	;'i'
  1683  00FF6B  6E                 	db	110	;'n'
  1684  00FF6C  67                 	db	103	;'g'
  1685  00FF6D  0D                 	db	13
  1686  00FF6E  0A                 	db	10
  1687  00FF6F  00                 	db	0
  1688  00FF70                     STR_53:
  1689  00FF70  55                 	db	85	;'U'
  1690  00FF71  6E                 	db	110	;'n'
  1691  00FF72  6B                 	db	107	;'k'
  1692  00FF73  6E                 	db	110	;'n'
  1693  00FF74  6F                 	db	111	;'o'
  1694  00FF75  77                 	db	119	;'w'
  1695  00FF76  6E                 	db	110	;'n'
  1696  00FF77  20                 	db	32
  1697  00FF78  6B                 	db	107	;'k'
  1698  00FF79  65                 	db	101	;'e'
  1699  00FF7A  79                 	db	121	;'y'
  1700  00FF7B  20                 	db	32
  1701  00FF7C  25                 	db	37
  1702  00FF7D  63                 	db	99	;'c'
  1703  00FF7E  0D                 	db	13
  1704  00FF7F  0A                 	db	10
  1705  00FF80  00                 	db	0
  1706  00FF81                     STR_40:
  1707  00FF81  20                 	db	32
  1708  00FF82  20                 	db	32
  1709  00FF83  20                 	db	32
  1710  00FF84  20                 	db	32
  1711  00FF85  41                 	db	65	;'A'
  1712  00FF86  64                 	db	100	;'d'
  1713  00FF87  64                 	db	100	;'d'
  1714  00FF88  72                 	db	114	;'r'
  1715  00FF89  65                 	db	101	;'e'
  1716  00FF8A  73                 	db	115	;'s'
  1717  00FF8B  73                 	db	115	;'s'
  1718  00FF8C  3A                 	db	58	;':'
  1719  00FF8D  20                 	db	32
  1720  00FF8E  20                 	db	32
  1721  00FF8F  20                 	db	32
  1722  00FF90  20                 	db	32
  1723  00FF91  00                 	db	0
  1724  00FF92                     STR_46:
  1725  00FF92  57                 	db	87	;'W'
  1726  00FF93  72                 	db	114	;'r'
  1727  00FF94  69                 	db	105	;'i'
  1728  00FF95  74                 	db	116	;'t'
  1729  00FF96  65                 	db	101	;'e'
  1730  00FF97  20                 	db	32
  1731  00FF98  73                 	db	115	;'s'
  1732  00FF99  74                 	db	116	;'t'
  1733  00FF9A  6F                 	db	111	;'o'
  1734  00FF9B  70                 	db	112	;'p'
  1735  00FF9C  70                 	db	112	;'p'
  1736  00FF9D  65                 	db	101	;'e'
  1737  00FF9E  64                 	db	100	;'d'
  1738  00FF9F  0D                 	db	13
  1739  00FFA0  0A                 	db	10
  1740  00FFA1  00                 	db	0
  1741  00FFA2                     STR_39:
  1742  00FFA2  52                 	db	82	;'R'
  1743  00FFA3  65                 	db	101	;'e'
  1744  00FFA4  61                 	db	97	;'a'
  1745  00FFA5  64                 	db	100	;'d'
  1746  00FFA6  20                 	db	32
  1747  00FFA7  62                 	db	98	;'b'
  1748  00FFA8  6C                 	db	108	;'l'
  1749  00FFA9  6F                 	db	111	;'o'
  1750  00FFAA  63                 	db	99	;'c'
  1751  00FFAB  6B                 	db	107	;'k'
  1752  00FFAC  3A                 	db	58	;':'
  1753  00FFAD  20                 	db	32
  1754  00FFAE  0D                 	db	13
  1755  00FFAF  0A                 	db	10
  1756  00FFB0  00                 	db	0
  1757  00FFB1                     STR_12:
  1758  00FFB1  3F                 	db	63	;'?'
  1759  00FFB2  3A                 	db	58	;':'
  1760  00FFB3  20                 	db	32
  1761  00FFB4  68                 	db	104	;'h'
  1762  00FFB5  65                 	db	101	;'e'
  1763  00FFB6  6C                 	db	108	;'l'
  1764  00FFB7  70                 	db	112	;'p'
  1765  00FFB8  20                 	db	32
  1766  00FFB9  6D                 	db	109	;'m'
  1767  00FFBA  65                 	db	101	;'e'
  1768  00FFBB  6E                 	db	110	;'n'
  1769  00FFBC  75                 	db	117	;'u'
  1770  00FFBD  0D                 	db	13
  1771  00FFBE  0A                 	db	10
  1772  00FFBF  00                 	db	0
  1773  00FFC0                     STR_1:
  1774  00FFC0  69                 	db	105	;'i'
  1775  00FFC1  6E                 	db	110	;'n'
  1776  00FFC2  4C                 	db	76	;'L'
  1777  00FFC3  61                 	db	97	;'a'
  1778  00FFC4  62                 	db	98	;'b'
  1779  00FFC5  20                 	db	32
  1780  00FFC6  30                 	db	48	;'0'
  1781  00FFC7  39                 	db	57	;'9'
  1782  00FFC8  0D                 	db	13
  1783  00FFC9  0A                 	db	10
  1784  00FFCA  00                 	db	0
  1785  00FFCB                     STR_3:
  1786  00FFCB  44                 	db	68	;'D'
  1787  00FFCC  65                 	db	101	;'e'
  1788  00FFCD  76                 	db	118	;'v'
  1789  00FFCE  27                 	db	39
  1790  00FFCF  32                 	db	50	;'2'
  1791  00FFD0  31                 	db	49	;'1'
  1792  00FFD1  0D                 	db	13
  1793  00FFD2  0A                 	db	10
  1794  00FFD3  00                 	db	0
  1795  00FFD4                     STR_27:
  1796  00FFD4  6F                 	db	111	;'o'
  1797  00FFD5  3A                 	db	58	;':'
  1798  00FFD6  09                 	db	9
  1799  00FFD7  6F                 	db	111	;'o'
  1800  00FFD8  6B                 	db	107	;'k'
  1801  00FFD9  0D                 	db	13
  1802  00FFDA  0A                 	db	10
  1803  00FFDB  00                 	db	0
  1804  00FFDC                     STR_13:
  1805  00FFDC  6F                 	db	111	;'o'
  1806  00FFDD  3A                 	db	58	;':'
  1807  00FFDE  20                 	db	32
  1808  00FFDF  6B                 	db	107	;'k'
  1809  00FFE0  0D                 	db	13
  1810  00FFE1  0A                 	db	10
  1811  00FFE2  00                 	db	0
  1812  00FFE3                     STR_63:
  1813  00FFE3  25                 	db	37
  1814  00FFE4  30                 	db	48	;'0'
  1815  00FFE5  32                 	db	50	;'2'
  1816  00FFE6  78                 	db	120	;'x'
  1817  00FFE7  20                 	db	32
  1818  00FFE8  00                 	db	0
  1819  00FFE9                     STR_51:
  1820  00FFE9  25                 	db	37
  1821  00FFEA  64                 	db	100	;'d'
  1822  00FFEB  0D                 	db	13
  1823  00FFEC  0A                 	db	10
  1824  00FFED  00                 	db	0
  1825  00FFEE                     STR_7:
  1826  00FFEE  25                 	db	37
  1827  00FFEF  30                 	db	48	;'0'
  1828  00FFF0  34                 	db	52	;'4'
  1829  00FFF1  78                 	db	120	;'x'
  1830  00FFF2  00                 	db	0
  1831  00FFF3                     STR_57:
  1832  00FFF3  0D                 	db	13
  1833  00FFF4  0A                 	db	10
  1834  00FFF5  0A                 	db	10
  1835  00FFF6  00                 	db	0
  1836  00FFF7                     STR_61:
  1837  00FFF7  25                 	db	37
  1838  00FFF8  63                 	db	99	;'c'
  1839  00FFF9  00                 	db	0
  1840  00FFFA                     STR_60:
  1841  00FFFA  2E                 	db	46
  1842  00FFFB  00                 	db	0
  1843  00FFFC                     STR_8:
  1844  00FFFC  3A                 	db	58	;':'
  1845  00FFFD  00                 	db	0
  1846  00FFFE  00                 	db	0	; dummy byte at the end
  1847  0000                     
  1848                           ; #config settings
  1849                           
  1850                           	psect	cinit
  1851  0021D2                     __pcinit:
  1852                           	callstack 0
  1853  0021D2                     start_initialization:
  1854                           	callstack 0
  1855  0021D2                     __initialization:
  1856                           	callstack 0
  1857                           
  1858                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1859  0021D2  EE00  F0D5         	lfsr	0,__pbssBIGRAM
  1860  0021D6  EE14 F000          	lfsr	1,1024
  1861  0021DA                     clear_0:
  1862  0021DA  6AEE               	clrf	postinc0,c
  1863  0021DC  50E5               	movf	postdec1,w,c
  1864  0021DE  50E1               	movf	fsr1l,w,c
  1865  0021E0  E1FC               	bnz	clear_0
  1866  0021E2  50E2               	movf	fsr1h,w,c
  1867  0021E4  E1FA               	bnz	clear_0
  1868                           
  1869                           ; Clear objects allocated to BANK0 (46 bytes)
  1870  0021E6  EE00  F0A7         	lfsr	0,__pbssBANK0
  1871  0021EA  0E2E               	movlw	46
  1872  0021EC                     clear_1:
  1873  0021EC  6AEE               	clrf	postinc0,c
  1874  0021EE  06E8               	decf	wreg,f,c
  1875  0021F0  E1FD               	bnz	clear_1
  1876                           
  1877                           ; Clear objects allocated to COMRAM (6 bytes)
  1878  0021F2  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1879  0021F4  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1880  0021F6  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1881  0021F8  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1882  0021FA  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1883  0021FC  6A53               	clrf	__pbssCOMRAM& (0+255),c
  1884  0021FE                     end_of_initialization:
  1885                           	callstack 0
  1886  0021FE                     __end_of__initialization:
  1887                           	callstack 0
  1888  0021FE  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1889  002200  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1890  002202  0100               	movlb	0
  1891  002204  EF21  F000         	goto	_main	;jump to C main() function
  1892                           
  1893                           	psect	bssCOMRAM
  1894  000053                     __pbssCOMRAM:
  1895                           	callstack 0
  1896  000053                     _width:
  1897                           	callstack 0
  1898  000053                     	ds	2
  1899  000055                     _flags:
  1900                           	callstack 0
  1901  000055                     	ds	2
  1902  000057                     _timer0ReloadVal:
  1903                           	callstack 0
  1904  000057                     	ds	2
  1905                           
  1906                           	psect	bssBANK0
  1907  0000A7                     __pbssBANK0:
  1908                           	callstack 0
  1909  0000A7                     _nout:
  1910                           	callstack 0
  1911  0000A7                     	ds	2
  1912  0000A9                     _prec:
  1913                           	callstack 0
  1914  0000A9                     	ds	2
  1915  0000AB                     _EUSART1_ErrorHandler:
  1916                           	callstack 0
  1917  0000AB                     	ds	2
  1918  0000AD                     _EUSART1_OverrunErrorHandler:
  1919                           	callstack 0
  1920  0000AD                     	ds	2
  1921  0000AF                     _EUSART1_FramingErrorHandler:
  1922                           	callstack 0
  1923  0000AF                     	ds	2
  1924  0000B1                     _TMR0_InterruptHandler:
  1925                           	callstack 0
  1926  0000B1                     	ds	2
  1927  0000B3                     _eusart1RxLastError:
  1928                           	callstack 0
  1929  0000B3                     	ds	1
  1930  0000B4                     _bufState:
  1931                           	callstack 0
  1932  0000B4                     	ds	1
  1933  0000B5                     _dbuf:
  1934                           	callstack 0
  1935  0000B5                     	ds	32
  1936                           
  1937                           	psect	bssBIGRAM
  1938  0000D5                     __pbssBIGRAM:
  1939                           	callstack 0
  1940  0000D5                     _secondBuffer:
  1941                           	callstack 0
  1942  0000D5                     	ds	512
  1943  0002D5                     _firstBuffer:
  1944                           	callstack 0
  1945  0002D5                     	ds	512
  1946                           
  1947                           	psect	cstackBANK0
  1948  000060                     __pcstackBANK0:
  1949                           	callstack 0
  1950  000060                     ??_vfpfcnvrt:
  1951                           
  1952                           ; 1 bytes @ 0x0
  1953  000060                     	ds	4
  1954  000064                     vfpfcnvrt@ll:
  1955                           	callstack 0
  1956                           
  1957                           ; 8 bytes @ 0x4
  1958  000064                     	ds	8
  1959  00006C                     vfpfcnvrt@llu:
  1960                           	callstack 0
  1961                           
  1962                           ; 8 bytes @ 0xC
  1963  00006C                     	ds	8
  1964  000074                     vfpfcnvrt@done:
  1965                           	callstack 0
  1966                           
  1967                           ; 2 bytes @ 0x14
  1968  000074                     	ds	2
  1969  000076                     _vfpfcnvrt$1730:
  1970                           	callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x16
  1973  000076                     	ds	2
  1974  000078                     vfpfcnvrt@c:
  1975                           	callstack 0
  1976                           
  1977                           ; 1 bytes @ 0x18
  1978  000078                     	ds	1
  1979  000079                     ?_vfprintf:
  1980                           	callstack 0
  1981  000079                     vfprintf@fp:
  1982                           	callstack 0
  1983                           
  1984                           ; 2 bytes @ 0x19
  1985  000079                     	ds	2
  1986  00007B                     vfprintf@fmt:
  1987                           	callstack 0
  1988                           
  1989                           ; 2 bytes @ 0x1B
  1990  00007B                     	ds	2
  1991  00007D                     vfprintf@ap:
  1992                           	callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x1D
  1995  00007D                     	ds	2
  1996  00007F                     ?_printf:
  1997                           	callstack 0
  1998  00007F                     printf@fmt:
  1999                           	callstack 0
  2000                           
  2001                           ; 2 bytes @ 0x1F
  2002  00007F                     	ds	8
  2003  000087                     printf@ap:
  2004                           	callstack 0
  2005                           
  2006                           ; 2 bytes @ 0x27
  2007  000087                     	ds	2
  2008  000089                     SDCARD_Initialize@i:
  2009                           	callstack 0
  2010  000089                     hexDumpBuffer@sdCardBuffer:
  2011                           	callstack 0
  2012                           
  2013                           ; 2 bytes @ 0x29
  2014  000089                     	ds	2
  2015  00008B                     ??_hexDumpBuffer:
  2016  00008B                     SDCARD_Initialize@verbose:
  2017                           	callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x2B
  2020  00008B                     	ds	1
  2021  00008C                     SDCARD_Initialize@response:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x2C
  2025  00008C                     	ds	1
  2026  00008D                     hexDumpBuffer@j:
  2027                           	callstack 0
  2028                           
  2029                           ; 2 bytes @ 0x2D
  2030  00008D                     	ds	2
  2031  00008F                     hexDumpBuffer@j_1165:
  2032                           	callstack 0
  2033                           
  2034                           ; 2 bytes @ 0x2F
  2035  00008F                     	ds	2
  2036  000091                     hexDumpBuffer@i:
  2037                           	callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x31
  2040  000091                     	ds	2
  2041  000093                     ??_main:
  2042                           
  2043                           ; 1 bytes @ 0x33
  2044  000093                     	ds	2
  2045  000095                     main@status:
  2046                           	callstack 0
  2047                           
  2048                           ; 1 bytes @ 0x35
  2049  000095                     	ds	1
  2050  000096                     main@letter:
  2051                           	callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x36
  2054  000096                     	ds	1
  2055  000097                     main@localAddress:
  2056                           	callstack 0
  2057                           
  2058                           ; 4 bytes @ 0x37
  2059  000097                     	ds	4
  2060  00009B                     main@waveIdx:
  2061                           	callstack 0
  2062                           
  2063                           ; 1 bytes @ 0x3B
  2064  00009B                     	ds	1
  2065  00009C                     main@cmd:
  2066                           	callstack 0
  2067                           
  2068                           ; 1 bytes @ 0x3C
  2069  00009C                     	ds	1
  2070  00009D                     main@i_708:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x3D
  2074  00009D                     	ds	2
  2075  00009F                     main@bufIdx:
  2076                           	callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x3F
  2079  00009F                     	ds	2
  2080  0000A1                     main@i:
  2081                           	callstack 0
  2082                           
  2083                           ; 2 bytes @ 0x41
  2084  0000A1                     	ds	2
  2085  0000A3                     main@sdCardAddress:
  2086                           	callstack 0
  2087                           
  2088                           ; 4 bytes @ 0x43
  2089  0000A3                     	ds	4
  2090                           
  2091                           	psect	cstackCOMRAM
  2092  000001                     __pcstackCOMRAM:
  2093                           	callstack 0
  2094  000001                     i2TMR0_WriteTimer@timerVal:
  2095                           	callstack 0
  2096                           
  2097                           ; 2 bytes @ 0x0
  2098  000001                     	ds	2
  2099  000003                     myTMR0ISR@bigOleWasteOfTime:
  2100                           	callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x2
  2103  000003                     	ds	2
  2104  000005                     ??_INTERRUPT_InterruptManager:
  2105                           
  2106                           ; 1 bytes @ 0x4
  2107  000005                     	ds	2
  2108  000007                     ??_SPI2_Open:
  2109  000007                     ?_strlen:
  2110                           	callstack 0
  2111  000007                     ?_isupper:
  2112                           	callstack 0
  2113  000007                     ?_isalpha:
  2114                           	callstack 0
  2115  000007                     ?_isdigit:
  2116                           	callstack 0
  2117  000007                     ?_isspace:
  2118                           	callstack 0
  2119  000007                     ?_islower:
  2120                           	callstack 0
  2121  000007                     ?___wmul:
  2122                           	callstack 0
  2123  000007                     ?___awmod:
  2124                           	callstack 0
  2125  000007                     ?___aodiv:
  2126                           	callstack 0
  2127  000007                     ?___aomod:
  2128                           	callstack 0
  2129  000007                     SPI2_ExchangeByte@data:
  2130                           	callstack 0
  2131  000007                     EUSART1_Write@txData:
  2132                           	callstack 0
  2133  000007                     TMR0_WriteTimer@timerVal:
  2134                           	callstack 0
  2135  000007                     TMR0_SetInterruptHandler@InterruptHandler:
  2136                           	callstack 0
  2137  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2138                           	callstack 0
  2139  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2140                           	callstack 0
  2141  000007                     EUSART1_SetErrorHandler@interruptHandler:
  2142                           	callstack 0
  2143  000007                     ___wmul@multiplier:
  2144                           	callstack 0
  2145  000007                     ___awmod@dividend:
  2146                           	callstack 0
  2147  000007                     isalpha@c:
  2148                           	callstack 0
  2149  000007                     isdigit@c:
  2150                           	callstack 0
  2151  000007                     isspace@c:
  2152                           	callstack 0
  2153  000007                     isupper@c:
  2154                           	callstack 0
  2155  000007                     strlen@s:
  2156                           	callstack 0
  2157  000007                     islower@c:
  2158                           	callstack 0
  2159  000007                     ___aodiv@dividend:
  2160                           	callstack 0
  2161  000007                     ___aomod@dividend:
  2162                           	callstack 0
  2163                           
  2164                           ; 8 bytes @ 0x6
  2165  000007                     	ds	1
  2166  000008                     SPI2_Open@spi2UniqueConfiguration:
  2167                           	callstack 0
  2168  000008                     putch@txData:
  2169                           	callstack 0
  2170  000008                     SDCARD_PollWriteComplete@status:
  2171                           	callstack 0
  2172  000008                     SDCARD_ReadBlock@addr:
  2173                           	callstack 0
  2174  000008                     SDCARD_WriteBlock@addr:
  2175                           	callstack 0
  2176                           
  2177                           ; 4 bytes @ 0x7
  2178  000008                     	ds	1
  2179  000009                     ??_isupper:
  2180  000009                     ??_isalpha:
  2181  000009                     ??_isdigit:
  2182  000009                     ??_isspace:
  2183  000009                     ??_islower:
  2184  000009                     ??_TMR0_Initialize:
  2185  000009                     ___wmul@multiplicand:
  2186                           	callstack 0
  2187  000009                     ___awmod@divisor:
  2188                           	callstack 0
  2189  000009                     fputc@c:
  2190                           	callstack 0
  2191  000009                     strlen@a:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x8
  2195  000009                     	ds	2
  2196  00000B                     ___awmod@counter:
  2197                           	callstack 0
  2198  00000B                     ___wmul@product:
  2199                           	callstack 0
  2200  00000B                     fputc@fp:
  2201                           	callstack 0
  2202                           
  2203                           ; 2 bytes @ 0xA
  2204  00000B                     	ds	1
  2205  00000C                     ___awmod@sign:
  2206                           	callstack 0
  2207  00000C                     SDCARD_ReadBlock@sdCardBuffer:
  2208                           	callstack 0
  2209  00000C                     SDCARD_WriteBlock@sdCardBuffer:
  2210                           	callstack 0
  2211                           
  2212                           ; 2 bytes @ 0xB
  2213  00000C                     	ds	1
  2214  00000D                     ??_fputc:
  2215  00000D                     ?_toupper:
  2216                           	callstack 0
  2217  00000D                     _isspace$1779:
  2218                           	callstack 0
  2219  00000D                     toupper@c:
  2220                           	callstack 0
  2221                           
  2222                           ; 2 bytes @ 0xC
  2223  00000D                     	ds	1
  2224  00000E                     ?_atoi:
  2225                           	callstack 0
  2226  00000E                     SDCARD_ReadBlock@i:
  2227                           	callstack 0
  2228  00000E                     SDCARD_WriteBlock@i:
  2229                           	callstack 0
  2230  00000E                     atoi@s:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0xD
  2234  00000E                     	ds	1
  2235  00000F                     ??_toupper:
  2236  00000F                     ___aodiv@divisor:
  2237                           	callstack 0
  2238  00000F                     ___aomod@divisor:
  2239                           	callstack 0
  2240                           
  2241                           ; 8 bytes @ 0xE
  2242  00000F                     	ds	1
  2243  000010                     ??_atoi:
  2244                           
  2245                           ; 1 bytes @ 0xF
  2246  000010                     	ds	2
  2247  000012                     ?_ctoa:
  2248                           	callstack 0
  2249  000012                     ctoa@fp:
  2250                           	callstack 0
  2251  000012                     fputs@s:
  2252                           	callstack 0
  2253                           
  2254                           ; 2 bytes @ 0x11
  2255  000012                     	ds	1
  2256  000013                     _toupper$1828:
  2257                           	callstack 0
  2258                           
  2259                           ; 2 bytes @ 0x12
  2260  000013                     	ds	1
  2261  000014                     ctoa@c:
  2262                           	callstack 0
  2263  000014                     atoi@neg:
  2264                           	callstack 0
  2265  000014                     fputs@fp:
  2266                           	callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x13
  2269  000014                     	ds	1
  2270  000015                     ??_ctoa:
  2271                           
  2272                           ; 1 bytes @ 0x14
  2273  000015                     	ds	1
  2274  000016                     fputs@c:
  2275                           	callstack 0
  2276  000016                     ctoa@l:
  2277                           	callstack 0
  2278  000016                     _atoi$1752:
  2279                           	callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x15
  2282  000016                     	ds	1
  2283  000017                     ___aodiv@counter:
  2284                           	callstack 0
  2285  000017                     ___aomod@counter:
  2286                           	callstack 0
  2287  000017                     fputs@i:
  2288                           	callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x16
  2291  000017                     	ds	1
  2292  000018                     ___aodiv@sign:
  2293                           	callstack 0
  2294  000018                     ___aomod@sign:
  2295                           	callstack 0
  2296  000018                     ctoa@w:
  2297                           	callstack 0
  2298  000018                     _atoi$1754:
  2299                           	callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x17
  2302  000018                     	ds	1
  2303  000019                     ?_abs:
  2304                           	callstack 0
  2305  000019                     ?_pad:
  2306                           	callstack 0
  2307  000019                     pad@fp:
  2308                           	callstack 0
  2309  000019                     abs@a:
  2310                           	callstack 0
  2311  000019                     ___aodiv@quotient:
  2312                           	callstack 0
  2313                           
  2314                           ; 8 bytes @ 0x18
  2315  000019                     	ds	1
  2316  00001A                     _atoi$1753:
  2317                           	callstack 0
  2318                           
  2319                           ; 1 bytes @ 0x19
  2320  00001A                     	ds	1
  2321  00001B                     ??_abs:
  2322  00001B                     pad@buf:
  2323                           	callstack 0
  2324  00001B                     atoi@n:
  2325                           	callstack 0
  2326                           
  2327                           ; 2 bytes @ 0x1A
  2328  00001B                     	ds	2
  2329  00001D                     pad@p:
  2330                           	callstack 0
  2331                           
  2332                           ; 2 bytes @ 0x1C
  2333  00001D                     	ds	2
  2334  00001F                     ??_pad:
  2335                           
  2336                           ; 1 bytes @ 0x1E
  2337  00001F                     	ds	1
  2338  000020                     pad@i:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x1F
  2342  000020                     	ds	2
  2343  000022                     pad@w:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x21
  2347  000022                     	ds	2
  2348  000024                     ?_dtoa:
  2349                           	callstack 0
  2350  000024                     ?_xtoa:
  2351                           	callstack 0
  2352  000024                     dtoa@fp:
  2353                           	callstack 0
  2354  000024                     xtoa@fp:
  2355                           	callstack 0
  2356                           
  2357                           ; 2 bytes @ 0x23
  2358  000024                     	ds	2
  2359  000026                     dtoa@d:
  2360                           	callstack 0
  2361  000026                     xtoa@d:
  2362                           	callstack 0
  2363                           
  2364                           ; 8 bytes @ 0x25
  2365  000026                     	ds	8
  2366  00002E                     ??_dtoa:
  2367  00002E                     xtoa@x:
  2368                           	callstack 0
  2369                           
  2370                           ; 1 bytes @ 0x2D
  2371  00002E                     	ds	1
  2372  00002F                     ??_xtoa:
  2373                           
  2374                           ; 1 bytes @ 0x2E
  2375  00002F                     	ds	7
  2376  000036                     _dtoa$1704:
  2377                           	callstack 0
  2378                           
  2379                           ; 2 bytes @ 0x35
  2380  000036                     	ds	1
  2381  000037                     _xtoa$1715:
  2382                           	callstack 0
  2383                           
  2384                           ; 2 bytes @ 0x36
  2385  000037                     	ds	1
  2386  000038                     dtoa@p:
  2387                           	callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x37
  2390  000038                     	ds	1
  2391  000039                     _xtoa$1716:
  2392                           	callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x38
  2395  000039                     	ds	1
  2396  00003A                     dtoa@w:
  2397                           	callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x39
  2400  00003A                     	ds	1
  2401  00003B                     xtoa@p:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x3A
  2405  00003B                     	ds	1
  2406  00003C                     dtoa@s:
  2407                           	callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x3B
  2410  00003C                     	ds	1
  2411  00003D                     xtoa@w:
  2412                           	callstack 0
  2413                           
  2414                           ; 2 bytes @ 0x3C
  2415  00003D                     	ds	1
  2416  00003E                     dtoa@n:
  2417                           	callstack 0
  2418                           
  2419                           ; 8 bytes @ 0x3D
  2420  00003E                     	ds	1
  2421  00003F                     xtoa@n:
  2422                           	callstack 0
  2423                           
  2424                           ; 8 bytes @ 0x3E
  2425  00003F                     	ds	7
  2426  000046                     dtoa@i:
  2427                           	callstack 0
  2428                           
  2429                           ; 2 bytes @ 0x45
  2430  000046                     	ds	1
  2431  000047                     xtoa@i:
  2432                           	callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x46
  2435  000047                     	ds	2
  2436  000049                     xtoa@c:
  2437                           	callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x48
  2440  000049                     	ds	2
  2441  00004B                     ?_vfpfcnvrt:
  2442                           	callstack 0
  2443  00004B                     vfpfcnvrt@fp:
  2444                           	callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x4A
  2447  00004B                     	ds	2
  2448  00004D                     vfpfcnvrt@fmt:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x4C
  2452  00004D                     	ds	2
  2453  00004F                     vfpfcnvrt@ap:
  2454                           	callstack 0
  2455                           
  2456                           ; 2 bytes @ 0x4E
  2457  00004F                     	ds	2
  2458  000051                     vfprintf@cfmt:
  2459                           	callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x50
  2462  000051                     	ds	2
  2463  000053                     
  2464                           ; 1 bytes @ 0x52
  2465 ;;
  2466 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2467 ;;
  2468 ;; *************** function _main *****************
  2469 ;; Defined at:
  2470 ;;		line 45 in file "main.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  i               2   61[BANK0 ] int 
  2475 ;;  sdCardAddres    4   67[BANK0 ] unsigned long 
  2476 ;;  localAddress    4   55[BANK0 ] unsigned long 
  2477 ;;  i               2   65[BANK0 ] unsigned short 
  2478 ;;  bufIdx          2   63[BANK0 ] unsigned short 
  2479 ;;  cmd             1   60[BANK0 ] unsigned char 
  2480 ;;  waveIdx         1   59[BANK0 ] unsigned char 
  2481 ;;  letter          1   54[BANK0 ] unsigned char 
  2482 ;;  status          1   53[BANK0 ] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;Total ram usage:       20 bytes
  2497 ;; Hardware stack levels required when called:   14
  2498 ;; This function calls:
  2499 ;;		_EUSART1_Read
  2500 ;;		_EUSART1_is_rx_ready
  2501 ;;		_SDCARD_Initialize
  2502 ;;		_SDCARD_PollWriteComplete
  2503 ;;		_SDCARD_ReadBlock
  2504 ;;		_SDCARD_WriteBlock
  2505 ;;		_SPI2_Close
  2506 ;;		_SPI2_Open
  2507 ;;		_SYSTEM_Initialize
  2508 ;;		_TMR0_SetInterruptHandler
  2509 ;;		_TMR0_WriteTimer
  2510 ;;		___awmod
  2511 ;;		_hexDumpBuffer
  2512 ;;		_printf
  2513 ;; This function is called by:
  2514 ;;		Startup code after reset
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text0
  2519  000042                     __ptext0:
  2520                           	callstack 0
  2521  000042                     _main:
  2522                           	callstack 17
  2523  000042                     
  2524                           ;main.c: 47:     uint8_t status;;main.c: 48:     uint16_t i;;main.c: 49:     uint32_t sd
      +                          CardAddress = 0x00000000;
  2525  000042  0E00               	movlw	0
  2526  000044  0100               	movlb	0	; () banked
  2527  000046  6FA3               	movwf	main@sdCardAddress& (0+255),b
  2528  000048  0E00               	movlw	0
  2529  00004A  6FA4               	movwf	(main@sdCardAddress+1)& (0+255),b
  2530  00004C  0E00               	movlw	0
  2531  00004E  6FA5               	movwf	(main@sdCardAddress+2)& (0+255),b
  2532  000050  0E00               	movlw	0
  2533  000052  6FA6               	movwf	(main@sdCardAddress+3)& (0+255),b
  2534                           
  2535                           ;main.c: 51:     uint8_t waveIdx = 0;
  2536  000054  0E00               	movlw	0
  2537  000056  6F9B               	movwf	main@waveIdx& (0+255),b
  2538                           
  2539                           ;main.c: 52:     uint32_t localAddress;;main.c: 53:     char cmd, letter;;main.c: 55:   
      +                            letter = '0';
  2540  000058  0E30               	movlw	48
  2541  00005A  6F96               	movwf	main@letter& (0+255),b
  2542  00005C                     
  2543                           ; BSR set to: 0
  2544                           ;main.c: 57:     SYSTEM_Initialize();
  2545  00005C  ECB6  F011         	call	_SYSTEM_Initialize	;wreg free
  2546  000060  888A               	bsf	138,4,c	;volatile
  2547  000062                     
  2548                           ;main.c: 61:     TMR0_WriteTimer(0x0000);
  2549  000062  0E00               	movlw	0
  2550  000064  6E08               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2551  000066  0E00               	movlw	0
  2552  000068  6E07               	movwf	TMR0_WriteTimer@timerVal^0,c
  2553  00006A  ECEE  F011         	call	_TMR0_WriteTimer	;wreg free
  2554  00006E                     
  2555                           ;main.c: 62:     INTCONbits.TMR0IF = 0;
  2556  00006E  94F2               	bcf	242,2,c	;volatile
  2557  000070                     l188:
  2558  000070  A4F2               	btfss	242,2,c	;volatile
  2559  000072  EF3D  F000         	goto	u3351
  2560  000076  EF3F  F000         	goto	u3350
  2561  00007A                     u3351:
  2562  00007A  EF38  F000         	goto	l188
  2563  00007E                     u3350:
  2564  00007E                     
  2565                           ;main.c: 65:     TMR0_SetInterruptHandler(myTMR0ISR);
  2566  00007E  0E74               	movlw	low _myTMR0ISR
  2567  000080  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2568  000082  0E22               	movlw	high _myTMR0ISR
  2569  000084  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2570  000086  ECF3  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  2571  00008A                     
  2572                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2573  00008A  8EF2               	bsf	242,7,c	;volatile
  2574  00008C                     
  2575                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  2576  00008C  8CF2               	bsf	242,6,c	;volatile
  2577  00008E                     
  2578                           ;main.c: 70:     printf("inLab 09\r\n");
  2579  00008E  0EC0               	movlw	low STR_1
  2580  000090  0100               	movlb	0	; () banked
  2581  000092  6F7F               	movwf	printf@fmt& (0+255),b
  2582  000094  0EFF               	movlw	high STR_1
  2583  000096  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2584  000098  EC81  F011         	call	_printf	;wreg free
  2585  00009C                     
  2586                           ;main.c: 71:     printf("SD card testing\r\n");
  2587  00009C  0E5E               	movlw	low STR_2
  2588  00009E  0100               	movlb	0	; () banked
  2589  0000A0  6F7F               	movwf	printf@fmt& (0+255),b
  2590  0000A2  0EFF               	movlw	high STR_2
  2591  0000A4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2592  0000A6  EC81  F011         	call	_printf	;wreg free
  2593  0000AA                     
  2594                           ;main.c: 72:     printf("Dev'21\r\n");
  2595  0000AA  0ECB               	movlw	low STR_3
  2596  0000AC  0100               	movlb	0	; () banked
  2597  0000AE  6F7F               	movwf	printf@fmt& (0+255),b
  2598  0000B0  0EFF               	movlw	high STR_3
  2599  0000B2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2600  0000B4  EC81  F011         	call	_printf	;wreg free
  2601  0000B8                     
  2602                           ;main.c: 73:     printf("No configuration of development board\r\n> ");
  2603  0000B8  0E92               	movlw	low STR_4
  2604  0000BA  0100               	movlb	0	; () banked
  2605  0000BC  6F7F               	movwf	printf@fmt& (0+255),b
  2606  0000BE  0EFD               	movlw	high STR_4
  2607  0000C0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2608  0000C2  EC81  F011         	call	_printf	;wreg free
  2609  0000C6                     
  2610                           ;main.c: 75:     SPI2_Close();
  2611  0000C6  EC13  F012         	call	_SPI2_Close	;wreg free
  2612  0000CA                     
  2613                           ;main.c: 76:     SPI2_Open(SPI2_DEFAULT);
  2614  0000CA  0E00               	movlw	0
  2615  0000CC  EC1E  F00E         	call	_SPI2_Open
  2616  0000D0                     l4147:
  2617                           
  2618                           ;main.c: 80:         if ((EUSART1_is_rx_ready())) {
  2619  0000D0  ECDB  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2620  0000D4  0900               	iorlw	0
  2621  0000D6  B4D8               	btfsc	status,2,c
  2622  0000D8  EF70  F000         	goto	u3361
  2623  0000DC  EF72  F000         	goto	u3360
  2624  0000E0                     u3361:
  2625  0000E0  EF68  F000         	goto	l4147
  2626  0000E4                     u3360:
  2627  0000E4                     
  2628                           ;main.c: 81:             cmd = EUSART1_Read();
  2629  0000E4  EC6C  F011         	call	_EUSART1_Read	;wreg free
  2630  0000E8  0100               	movlb	0	; () banked
  2631  0000EA  6F9C               	movwf	main@cmd& (0+255),b
  2632                           
  2633                           ;main.c: 82:             switch (cmd) {
  2634  0000EC  EF7D  F003         	goto	l4293
  2635  0000F0                     l4151:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;main.c: 88:                     printf("\r\n-------------------------------------------
      +                          ------\r\n");
  2639  0000F0  0ED3               	movlw	low STR_5
  2640  0000F2  6F7F               	movwf	printf@fmt& (0+255),b
  2641  0000F4  0EFC               	movlw	high STR_5
  2642  0000F6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2643  0000F8  EC81  F011         	call	_printf	;wreg free
  2644                           
  2645                           ;main.c: 89:                     printf("SD card address:  ");
  2646  0000FC  0E4B               	movlw	low STR_6
  2647  0000FE  0100               	movlb	0	; () banked
  2648  000100  6F7F               	movwf	printf@fmt& (0+255),b
  2649  000102  0EFF               	movlw	high STR_6
  2650  000104  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2651  000106  EC81  F011         	call	_printf	;wreg free
  2652                           
  2653                           ;main.c: 90:                     printf("%04x", sdCardAddress >> 16);
  2654  00010A  0EEE               	movlw	low STR_7
  2655  00010C  0100               	movlb	0	; () banked
  2656  00010E  6F7F               	movwf	printf@fmt& (0+255),b
  2657  000110  0EFF               	movlw	high STR_7
  2658  000112  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2659  000114  C0A5  F081         	movff	main@sdCardAddress+2,?_printf+2
  2660  000118  C0A6  F082         	movff	main@sdCardAddress+3,?_printf+3
  2661  00011C  6B83               	clrf	(?_printf+4)& (0+255),b
  2662  00011E  6B84               	clrf	(?_printf+5)& (0+255),b
  2663  000120  EC81  F011         	call	_printf	;wreg free
  2664                           
  2665                           ;main.c: 91:                     printf(":");
  2666  000124  0EFC               	movlw	low STR_8
  2667  000126  0100               	movlb	0	; () banked
  2668  000128  6F7F               	movwf	printf@fmt& (0+255),b
  2669  00012A  0EFF               	movlw	high STR_8
  2670  00012C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2671  00012E  EC81  F011         	call	_printf	;wreg free
  2672                           
  2673                           ;main.c: 92:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  2674  000132  0EEE               	movlw	low STR_7
  2675  000134  0100               	movlb	0	; () banked
  2676  000136  6F7F               	movwf	printf@fmt& (0+255),b
  2677  000138  0EFF               	movlw	high STR_7
  2678  00013A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2679  00013C  0EFF               	movlw	255
  2680  00013E  15A3               	andwf	main@sdCardAddress& (0+255),w,b
  2681  000140  6F81               	movwf	(?_printf+2)& (0+255),b
  2682  000142  0EFF               	movlw	255
  2683  000144  15A4               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2684  000146  6F82               	movwf	(?_printf+3)& (0+255),b
  2685  000148  0E00               	movlw	0
  2686  00014A  15A5               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2687  00014C  6F83               	movwf	(?_printf+4)& (0+255),b
  2688  00014E  0E00               	movlw	0
  2689  000150  15A6               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2690  000152  6F84               	movwf	(?_printf+5)& (0+255),b
  2691  000154  EC81  F011         	call	_printf	;wreg free
  2692                           
  2693                           ;main.c: 93:                     printf("\r\n");
  2694  000158  0EAE               	movlw	low (STR_39+12)
  2695  00015A  0100               	movlb	0	; () banked
  2696  00015C  6F7F               	movwf	printf@fmt& (0+255),b
  2697  00015E  0EFF               	movlw	high (STR_39+12)
  2698  000160  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2699  000162  EC81  F011         	call	_printf	;wreg free
  2700                           
  2701                           ;main.c: 94:                     printf("-----------------------------------------------
      +                          --\r\n");
  2702  000166  0ED5               	movlw	low (STR_5+2)
  2703  000168  0100               	movlb	0	; () banked
  2704  00016A  6F7F               	movwf	printf@fmt& (0+255),b
  2705  00016C  0EFC               	movlw	high (STR_5+2)
  2706  00016E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2707  000170  EC81  F011         	call	_printf	;wreg free
  2708                           
  2709                           ;main.c: 95:                     printf("?: help menu\r\n");
  2710  000174  0EB1               	movlw	low STR_12
  2711  000176  0100               	movlb	0	; () banked
  2712  000178  6F7F               	movwf	printf@fmt& (0+255),b
  2713  00017A  0EFF               	movlw	high STR_12
  2714  00017C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2715  00017E  EC81  F011         	call	_printf	;wreg free
  2716                           
  2717                           ;main.c: 96:                     printf("o: k\r\n");
  2718  000182  0EDC               	movlw	low STR_13
  2719  000184  0100               	movlb	0	; () banked
  2720  000186  6F7F               	movwf	printf@fmt& (0+255),b
  2721  000188  0EFF               	movlw	high STR_13
  2722  00018A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2723  00018C  EC81  F011         	call	_printf	;wreg free
  2724                           
  2725                           ;main.c: 97:                     printf("Z: Reset processor\r\n");
  2726  000190  0E0E               	movlw	low STR_14
  2727  000192  0100               	movlb	0	; () banked
  2728  000194  6F7F               	movwf	printf@fmt& (0+255),b
  2729  000196  0EFF               	movlw	high STR_14
  2730  000198  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2731  00019A  EC81  F011         	call	_printf	;wreg free
  2732                           
  2733                           ;main.c: 98:                     printf("z: Clear the terminal\r\n");
  2734  00019E  0EF6               	movlw	low STR_15
  2735  0001A0  0100               	movlb	0	; () banked
  2736  0001A2  6F7F               	movwf	printf@fmt& (0+255),b
  2737  0001A4  0EFE               	movlw	high STR_15
  2738  0001A6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2739  0001A8  EC81  F011         	call	_printf	;wreg free
  2740                           
  2741                           ;main.c: 99:                     printf("-----------------------------------------------
      +                          --\r\n");
  2742  0001AC  0ED5               	movlw	low (STR_5+2)
  2743  0001AE  0100               	movlb	0	; () banked
  2744  0001B0  6F7F               	movwf	printf@fmt& (0+255),b
  2745  0001B2  0EFC               	movlw	high (STR_5+2)
  2746  0001B4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2747  0001B6  EC81  F011         	call	_printf	;wreg free
  2748                           
  2749                           ;main.c: 100:                     printf("i: Initialize SD card\r\n");
  2750  0001BA  0EDE               	movlw	low STR_17
  2751  0001BC  0100               	movlb	0	; () banked
  2752  0001BE  6F7F               	movwf	printf@fmt& (0+255),b
  2753  0001C0  0EFE               	movlw	high STR_17
  2754  0001C2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2755  0001C4  EC81  F011         	call	_printf	;wreg free
  2756                           
  2757                           ;main.c: 101:                     printf("----------------------------------------------
      +                          ---\r\n");
  2758  0001C8  0ED5               	movlw	low (STR_5+2)
  2759  0001CA  0100               	movlb	0	; () banked
  2760  0001CC  6F7F               	movwf	printf@fmt& (0+255),b
  2761  0001CE  0EFC               	movlw	high (STR_5+2)
  2762  0001D0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2763  0001D2  EC81  F011         	call	_printf	;wreg free
  2764                           
  2765                           ;main.c: 105:                     printf("a/A decrease/increase read address\r\n");
  2766  0001D6  0E0E               	movlw	low STR_19
  2767  0001D8  0100               	movlb	0	; () banked
  2768  0001DA  6F7F               	movwf	printf@fmt& (0+255),b
  2769  0001DC  0EFE               	movlw	high STR_19
  2770  0001DE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2771  0001E0  EC81  F011         	call	_printf	;wreg free
  2772                           
  2773                           ;main.c: 106:                     printf("r: read a block of %d bytes from SD card\r\n",
      +                           512);
  2774  0001E4  0E67               	movlw	low STR_20
  2775  0001E6  0100               	movlb	0	; () banked
  2776  0001E8  6F7F               	movwf	printf@fmt& (0+255),b
  2777  0001EA  0EFD               	movlw	high STR_20
  2778  0001EC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2779  0001EE  0E02               	movlw	2
  2780  0001F0  6F82               	movwf	(?_printf+3)& (0+255),b
  2781  0001F2  0E00               	movlw	0
  2782  0001F4  6F81               	movwf	(?_printf+2)& (0+255),b
  2783  0001F6  EC81  F011         	call	_printf	;wreg free
  2784                           
  2785                           ;main.c: 107:                     printf("1: write a perfect 26 value sine wave to the S
      +                          D card\r\n", 512);
  2786  0001FA  0E9C               	movlw	low STR_21
  2787  0001FC  0100               	movlb	0	; () banked
  2788  0001FE  6F7F               	movwf	printf@fmt& (0+255),b
  2789  000200  0EFC               	movlw	high STR_21
  2790  000202  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2791  000204  0E02               	movlw	2
  2792  000206  6F82               	movwf	(?_printf+3)& (0+255),b
  2793  000208  0E00               	movlw	0
  2794  00020A  6F81               	movwf	(?_printf+2)& (0+255),b
  2795  00020C  EC81  F011         	call	_printf	;wreg free
  2796                           
  2797                           ;main.c: 108:                     printf("----------------------------------------------
      +                          ---\r\n");
  2798  000210  0ED5               	movlw	low (STR_5+2)
  2799  000212  0100               	movlb	0	; () banked
  2800  000214  6F7F               	movwf	printf@fmt& (0+255),b
  2801  000216  0EFC               	movlw	high (STR_5+2)
  2802  000218  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2803  00021A  EC81  F011         	call	_printf	;wreg free
  2804                           
  2805                           ;main.c: 109:                     printf("+/-: Increase/Decrease the sample rate by 10 u
      +                          s\r\n", 512);
  2806  00021E  0E09               	movlw	low STR_23
  2807  000220  0100               	movlb	0	; () banked
  2808  000222  6F7F               	movwf	printf@fmt& (0+255),b
  2809  000224  0EFD               	movlw	high STR_23
  2810  000226  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2811  000228  0E02               	movlw	2
  2812  00022A  6F82               	movwf	(?_printf+3)& (0+255),b
  2813  00022C  0E00               	movlw	0
  2814  00022E  6F81               	movwf	(?_printf+2)& (0+255),b
  2815  000230  EC81  F011         	call	_printf	;wreg free
  2816                           
  2817                           ;main.c: 110:                     printf("W: Write microphone => SD card at 1600 us\r\n"
      +                          , 512);
  2818  000234  0E3B               	movlw	low STR_24
  2819  000236  0100               	movlb	0	; () banked
  2820  000238  6F7F               	movwf	printf@fmt& (0+255),b
  2821  00023A  0EFD               	movlw	high STR_24
  2822  00023C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2823  00023E  0E02               	movlw	2
  2824  000240  6F82               	movwf	(?_printf+3)& (0+255),b
  2825  000242  0E00               	movlw	0
  2826  000244  6F81               	movwf	(?_printf+2)& (0+255),b
  2827  000246  EC81  F011         	call	_printf	;wreg free
  2828                           
  2829                           ;main.c: 111:                     printf("s: spool memory to a csv file\r\n", 512);
  2830  00024A  0E33               	movlw	low STR_25
  2831  00024C  0100               	movlb	0	; () banked
  2832  00024E  6F7F               	movwf	printf@fmt& (0+255),b
  2833  000250  0EFE               	movlw	high STR_25
  2834  000252  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2835  000254  0E02               	movlw	2
  2836  000256  6F82               	movwf	(?_printf+3)& (0+255),b
  2837  000258  0E00               	movlw	0
  2838  00025A  6F81               	movwf	(?_printf+2)& (0+255),b
  2839  00025C  EC81  F011         	call	_printf	;wreg free
  2840                           
  2841                           ;main.c: 112:                     printf("----------------------------------------------
      +                          ---\r\n");
  2842  000260  0ED5               	movlw	low (STR_5+2)
  2843  000262  0100               	movlb	0	; () banked
  2844  000264  6F7F               	movwf	printf@fmt& (0+255),b
  2845  000266  0EFC               	movlw	high (STR_5+2)
  2846  000268  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2847  00026A  EC81  F011         	call	_printf	;wreg free
  2848                           
  2849                           ;main.c: 113:                     break;
  2850  00026E  EF68  F000         	goto	l4147
  2851  000272                     l4153:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;main.c: 119:                     printf("o:	ok\r\n");
  2855  000272  0ED4               	movlw	low STR_27
  2856  000274  6F7F               	movwf	printf@fmt& (0+255),b
  2857  000276  0EFF               	movlw	high STR_27
  2858  000278  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2859  00027A  EC81  F011         	call	_printf	;wreg free
  2860                           
  2861                           ;main.c: 120:                     break;
  2862  00027E  EF68  F000         	goto	l4147
  2863  000282                     l4155:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;main.c: 126:                     for (i = 0; i < 40; i++) printf("\n");
  2867  000282  0E00               	movlw	0
  2868  000284  6FA2               	movwf	(main@i+1)& (0+255),b
  2869  000286  0E00               	movlw	0
  2870  000288  6FA1               	movwf	main@i& (0+255),b
  2871  00028A                     l4161:
  2872                           
  2873                           ; BSR set to: 0
  2874  00028A  0EF5               	movlw	low (STR_57+2)
  2875  00028C  6F7F               	movwf	printf@fmt& (0+255),b
  2876  00028E  0EFF               	movlw	high (STR_57+2)
  2877  000290  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2878  000292  EC81  F011         	call	_printf	;wreg free
  2879  000296  0100               	movlb	0	; () banked
  2880  000298  4BA1               	infsnz	main@i& (0+255),f,b
  2881  00029A  2BA2               	incf	(main@i+1)& (0+255),f,b
  2882  00029C                     
  2883                           ; BSR set to: 0
  2884  00029C  51A2               	movf	(main@i+1)& (0+255),w,b
  2885  00029E  E109               	bnz	u3370
  2886  0002A0  0E28               	movlw	40
  2887  0002A2  5DA1               	subwf	main@i& (0+255),w,b
  2888  0002A4  A0D8               	btfss	status,0,c
  2889  0002A6  EF57  F001         	goto	u3371
  2890  0002AA  EF59  F001         	goto	u3370
  2891  0002AE                     u3371:
  2892  0002AE  EF45  F001         	goto	l4161
  2893  0002B2                     u3370:
  2894  0002B2                     
  2895                           ; BSR set to: 0
  2896  0002B2  00FF               	reset		;# 
  2897                           
  2898                           ;main.c: 128:                     break;
  2899  0002B4  EF68  F000         	goto	l4147
  2900  0002B8                     l4167:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;main.c: 134:                     for (i = 0; i < 40; i++) printf("\n");
  2904  0002B8  0E00               	movlw	0
  2905  0002BA  6FA2               	movwf	(main@i+1)& (0+255),b
  2906  0002BC  0E00               	movlw	0
  2907  0002BE  6FA1               	movwf	main@i& (0+255),b
  2908  0002C0                     l4173:
  2909                           
  2910                           ; BSR set to: 0
  2911  0002C0  0EF5               	movlw	low (STR_57+2)
  2912  0002C2  6F7F               	movwf	printf@fmt& (0+255),b
  2913  0002C4  0EFF               	movlw	high (STR_57+2)
  2914  0002C6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2915  0002C8  EC81  F011         	call	_printf	;wreg free
  2916  0002CC  0100               	movlb	0	; () banked
  2917  0002CE  4BA1               	infsnz	main@i& (0+255),f,b
  2918  0002D0  2BA2               	incf	(main@i+1)& (0+255),f,b
  2919  0002D2                     
  2920                           ; BSR set to: 0
  2921  0002D2  51A2               	movf	(main@i+1)& (0+255),w,b
  2922  0002D4  E109               	bnz	u3380
  2923  0002D6  0E28               	movlw	40
  2924  0002D8  5DA1               	subwf	main@i& (0+255),w,b
  2925  0002DA  A0D8               	btfss	status,0,c
  2926  0002DC  EF72  F001         	goto	u3381
  2927  0002E0  EF74  F001         	goto	u3380
  2928  0002E4                     u3381:
  2929  0002E4  EF60  F001         	goto	l4173
  2930  0002E8                     u3380:
  2931  0002E8  EF68  F000         	goto	l4147
  2932  0002EC                     l4179:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;main.c: 159:                     SPI2_Close();
  2936  0002EC  EC13  F012         	call	_SPI2_Close	;wreg free
  2937  0002F0                     
  2938                           ;main.c: 160:                     SPI2_Open(SPI2_DEFAULT);
  2939  0002F0  0E00               	movlw	0
  2940  0002F2  EC1E  F00E         	call	_SPI2_Open
  2941  0002F6                     
  2942                           ;main.c: 161:                     SDCARD_Initialize(1);
  2943  0002F6  0E01               	movlw	1
  2944  0002F8  EC8D  F00B         	call	_SDCARD_Initialize
  2945                           
  2946                           ;main.c: 162:                     break;
  2947  0002FC  EF68  F000         	goto	l4147
  2948  000300                     l4185:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;main.c: 169:                     if (cmd == 'a') {
  2952  000300  0E61               	movlw	97
  2953  000302  199C               	xorwf	main@cmd& (0+255),w,b
  2954  000304  A4D8               	btfss	status,2,c
  2955  000306  EF87  F001         	goto	u3391
  2956  00030A  EF89  F001         	goto	u3390
  2957  00030E                     u3391:
  2958  00030E  EFB3  F001         	goto	l4195
  2959  000312                     u3390:
  2960  000312                     
  2961                           ; BSR set to: 0
  2962                           ;main.c: 170:                         sdCardAddress -= 512;
  2963  000312  0E00               	movlw	0
  2964  000314  5FA3               	subwf	main@sdCardAddress& (0+255),f,b
  2965  000316  0E02               	movlw	2
  2966  000318  5BA4               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  2967  00031A  0E00               	movlw	0
  2968  00031C  5BA5               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  2969  00031E  0E00               	movlw	0
  2970  000320  5BA6               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  2971                           
  2972                           ;main.c: 171:                         if (sdCardAddress >= 0x04000000) {
  2973  000322  0E04               	movlw	4
  2974  000324  5DA6               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  2975  000326  A0D8               	btfss	status,0,c
  2976  000328  EF98  F001         	goto	u3401
  2977  00032C  EF9A  F001         	goto	u3400
  2978  000330                     u3401:
  2979  000330  EFAB  F001         	goto	l4193
  2980  000334                     u3400:
  2981  000334                     
  2982                           ; BSR set to: 0
  2983                           ;main.c: 172:                             printf("Underflowed to high address\r\n");
  2984  000334  0E53               	movlw	low STR_30
  2985  000336  6F7F               	movwf	printf@fmt& (0+255),b
  2986  000338  0EFE               	movlw	high STR_30
  2987  00033A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2988  00033C  EC81  F011         	call	_printf	;wreg free
  2989  000340                     
  2990                           ;main.c: 173:                             sdCardAddress = 0x04000000 - 512;
  2991  000340  0E00               	movlw	0
  2992  000342  0100               	movlb	0	; () banked
  2993  000344  6FA3               	movwf	main@sdCardAddress& (0+255),b
  2994  000346  0EFE               	movlw	254
  2995  000348  6FA4               	movwf	(main@sdCardAddress+1)& (0+255),b
  2996  00034A  0EFF               	movlw	255
  2997  00034C  6FA5               	movwf	(main@sdCardAddress+2)& (0+255),b
  2998  00034E  0E03               	movlw	3
  2999  000350  6FA6               	movwf	(main@sdCardAddress+3)& (0+255),b
  3000                           
  3001                           ;main.c: 174:                         } else {
  3002  000352  EFDB  F001         	goto	l209
  3003  000356                     l4193:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;main.c: 175:                             printf("Decreased address\r\n");
  3007  000356  0E23               	movlw	low STR_31
  3008  000358  6F7F               	movwf	printf@fmt& (0+255),b
  3009  00035A  0EFF               	movlw	high STR_31
  3010  00035C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3011  00035E  EC81  F011         	call	_printf	;wreg free
  3012  000362  EFDB  F001         	goto	l209
  3013  000366                     l4195:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;main.c: 178:                         sdCardAddress += 512;
  3017  000366  0E00               	movlw	0
  3018  000368  27A3               	addwf	main@sdCardAddress& (0+255),f,b
  3019  00036A  0E02               	movlw	2
  3020  00036C  23A4               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3021  00036E  0E00               	movlw	0
  3022  000370  23A5               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3023  000372  0E00               	movlw	0
  3024  000374  23A6               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3025                           
  3026                           ;main.c: 179:                         if (sdCardAddress >= 0x04000000) {
  3027  000376  0E04               	movlw	4
  3028  000378  5DA6               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  3029  00037A  A0D8               	btfss	status,0,c
  3030  00037C  EFC2  F001         	goto	u3411
  3031  000380  EFC4  F001         	goto	u3410
  3032  000384                     u3411:
  3033  000384  EFD5  F001         	goto	l4201
  3034  000388                     u3410:
  3035  000388                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 180:                             printf("Overflowed to low address\r\n");
  3038  000388  0E8D               	movlw	low STR_32
  3039  00038A  6F7F               	movwf	printf@fmt& (0+255),b
  3040  00038C  0EFE               	movlw	high STR_32
  3041  00038E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3042  000390  EC81  F011         	call	_printf	;wreg free
  3043  000394                     
  3044                           ;main.c: 181:                             sdCardAddress = 0x00000000;
  3045  000394  0E00               	movlw	0
  3046  000396  0100               	movlb	0	; () banked
  3047  000398  6FA3               	movwf	main@sdCardAddress& (0+255),b
  3048  00039A  0E00               	movlw	0
  3049  00039C  6FA4               	movwf	(main@sdCardAddress+1)& (0+255),b
  3050  00039E  0E00               	movlw	0
  3051  0003A0  6FA5               	movwf	(main@sdCardAddress+2)& (0+255),b
  3052  0003A2  0E00               	movlw	0
  3053  0003A4  6FA6               	movwf	(main@sdCardAddress+3)& (0+255),b
  3054                           
  3055                           ;main.c: 182:                         } else {
  3056  0003A6  EFDB  F001         	goto	l209
  3057  0003AA                     l4201:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;main.c: 183:                             printf("Increased address\r\n");
  3061  0003AA  0E37               	movlw	low STR_33
  3062  0003AC  6F7F               	movwf	printf@fmt& (0+255),b
  3063  0003AE  0EFF               	movlw	high STR_33
  3064  0003B0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3065  0003B2  EC81  F011         	call	_printf	;wreg free
  3066  0003B6                     l209:
  3067                           
  3068                           ;main.c: 188:                     printf("SD card address:  ");
  3069  0003B6  0E4B               	movlw	low STR_6
  3070  0003B8  0100               	movlb	0	; () banked
  3071  0003BA  6F7F               	movwf	printf@fmt& (0+255),b
  3072  0003BC  0EFF               	movlw	high STR_6
  3073  0003BE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3074  0003C0  EC81  F011         	call	_printf	;wreg free
  3075                           
  3076                           ;main.c: 189:                     printf("%04x", sdCardAddress >> 16);
  3077  0003C4  0EEE               	movlw	low STR_7
  3078  0003C6  0100               	movlb	0	; () banked
  3079  0003C8  6F7F               	movwf	printf@fmt& (0+255),b
  3080  0003CA  0EFF               	movlw	high STR_7
  3081  0003CC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3082  0003CE  C0A5  F081         	movff	main@sdCardAddress+2,?_printf+2
  3083  0003D2  C0A6  F082         	movff	main@sdCardAddress+3,?_printf+3
  3084  0003D6  6B83               	clrf	(?_printf+4)& (0+255),b
  3085  0003D8  6B84               	clrf	(?_printf+5)& (0+255),b
  3086  0003DA  EC81  F011         	call	_printf	;wreg free
  3087                           
  3088                           ;main.c: 190:                     printf(":");
  3089  0003DE  0EFC               	movlw	low STR_8
  3090  0003E0  0100               	movlb	0	; () banked
  3091  0003E2  6F7F               	movwf	printf@fmt& (0+255),b
  3092  0003E4  0EFF               	movlw	high STR_8
  3093  0003E6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3094  0003E8  EC81  F011         	call	_printf	;wreg free
  3095                           
  3096                           ;main.c: 191:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3097  0003EC  0EEE               	movlw	low STR_7
  3098  0003EE  0100               	movlb	0	; () banked
  3099  0003F0  6F7F               	movwf	printf@fmt& (0+255),b
  3100  0003F2  0EFF               	movlw	high STR_7
  3101  0003F4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3102  0003F6  0EFF               	movlw	255
  3103  0003F8  15A3               	andwf	main@sdCardAddress& (0+255),w,b
  3104  0003FA  6F81               	movwf	(?_printf+2)& (0+255),b
  3105  0003FC  0EFF               	movlw	255
  3106  0003FE  15A4               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3107  000400  6F82               	movwf	(?_printf+3)& (0+255),b
  3108  000402  0E00               	movlw	0
  3109  000404  15A5               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3110  000406  6F83               	movwf	(?_printf+4)& (0+255),b
  3111  000408  0E00               	movlw	0
  3112  00040A  15A6               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3113  00040C  6F84               	movwf	(?_printf+5)& (0+255),b
  3114  00040E  EC81  F011         	call	_printf	;wreg free
  3115                           
  3116                           ;main.c: 192:                     printf("\r\n");
  3117  000412  0EAE               	movlw	low (STR_39+12)
  3118  000414  0100               	movlb	0	; () banked
  3119  000416  6F7F               	movwf	printf@fmt& (0+255),b
  3120  000418  0EFF               	movlw	high (STR_39+12)
  3121  00041A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3122  00041C  EC81  F011         	call	_printf	;wreg free
  3123                           
  3124                           ;main.c: 193:                     break;
  3125  000420  EF68  F000         	goto	l4147
  3126  000424                     l213:
  3127                           
  3128                           ; BSR set to: 0
  3129  000424  8A8B               	bsf	139,5,c	;volatile
  3130  000426                     
  3131                           ; BSR set to: 0
  3132                           ;main.c: 219:                     SDCARD_ReadBlock(sdCardAddress, firstBuffer);
  3133  000426  C0A3  F008         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3134  00042A  C0A4  F009         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3135  00042E  C0A5  F00A         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3136  000432  C0A6  F00B         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3137  000436  0ED5               	movlw	low _firstBuffer
  3138  000438  6E0C               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3139  00043A  0E02               	movlw	high _firstBuffer
  3140  00043C  6E0D               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3141  00043E  EC74  F00E         	call	_SDCARD_ReadBlock	;wreg free
  3142  000442  9A8B               	bcf	139,5,c	;volatile
  3143  000444                     
  3144                           ;main.c: 221:                     printf("Read block: \r\n");
  3145  000444  0EA2               	movlw	low STR_39
  3146  000446  0100               	movlb	0	; () banked
  3147  000448  6F7F               	movwf	printf@fmt& (0+255),b
  3148  00044A  0EFF               	movlw	high STR_39
  3149  00044C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3150  00044E  EC81  F011         	call	_printf	;wreg free
  3151  000452                     
  3152                           ;main.c: 222:                     printf("    Address:    ");
  3153  000452  0E81               	movlw	low STR_40
  3154  000454  0100               	movlb	0	; () banked
  3155  000456  6F7F               	movwf	printf@fmt& (0+255),b
  3156  000458  0EFF               	movlw	high STR_40
  3157  00045A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3158  00045C  EC81  F011         	call	_printf	;wreg free
  3159  000460                     
  3160                           ;main.c: 223:                     printf("%04x", sdCardAddress >> 16);
  3161  000460  0EEE               	movlw	low STR_7
  3162  000462  0100               	movlb	0	; () banked
  3163  000464  6F7F               	movwf	printf@fmt& (0+255),b
  3164  000466  0EFF               	movlw	high STR_7
  3165  000468  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3166  00046A  C0A5  F081         	movff	main@sdCardAddress+2,?_printf+2
  3167  00046E  C0A6  F082         	movff	main@sdCardAddress+3,?_printf+3
  3168  000472  6B83               	clrf	(?_printf+4)& (0+255),b
  3169  000474  6B84               	clrf	(?_printf+5)& (0+255),b
  3170  000476  EC81  F011         	call	_printf	;wreg free
  3171  00047A                     
  3172                           ;main.c: 224:                     printf(":");
  3173  00047A  0EFC               	movlw	low STR_8
  3174  00047C  0100               	movlb	0	; () banked
  3175  00047E  6F7F               	movwf	printf@fmt& (0+255),b
  3176  000480  0EFF               	movlw	high STR_8
  3177  000482  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3178  000484  EC81  F011         	call	_printf	;wreg free
  3179  000488                     
  3180                           ;main.c: 225:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3181  000488  0EEE               	movlw	low STR_7
  3182  00048A  0100               	movlb	0	; () banked
  3183  00048C  6F7F               	movwf	printf@fmt& (0+255),b
  3184  00048E  0EFF               	movlw	high STR_7
  3185  000490  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3186  000492  0EFF               	movlw	255
  3187  000494  15A3               	andwf	main@sdCardAddress& (0+255),w,b
  3188  000496  6F81               	movwf	(?_printf+2)& (0+255),b
  3189  000498  0EFF               	movlw	255
  3190  00049A  15A4               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3191  00049C  6F82               	movwf	(?_printf+3)& (0+255),b
  3192  00049E  0E00               	movlw	0
  3193  0004A0  15A5               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3194  0004A2  6F83               	movwf	(?_printf+4)& (0+255),b
  3195  0004A4  0E00               	movlw	0
  3196  0004A6  15A6               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3197  0004A8  6F84               	movwf	(?_printf+5)& (0+255),b
  3198  0004AA  EC81  F011         	call	_printf	;wreg free
  3199  0004AE                     
  3200                           ;main.c: 226:                     printf("\r\n");
  3201  0004AE  0EAE               	movlw	low (STR_39+12)
  3202  0004B0  0100               	movlb	0	; () banked
  3203  0004B2  6F7F               	movwf	printf@fmt& (0+255),b
  3204  0004B4  0EFF               	movlw	high (STR_39+12)
  3205  0004B6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3206  0004B8  EC81  F011         	call	_printf	;wreg free
  3207  0004BC                     
  3208                           ;main.c: 227:                     hexDumpBuffer(firstBuffer);
  3209  0004BC  0ED5               	movlw	low _firstBuffer
  3210  0004BE  0100               	movlb	0	; () banked
  3211  0004C0  6F89               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3212  0004C2  0E02               	movlw	high _firstBuffer
  3213  0004C4  6F8A               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3214  0004C6  EC06  F009         	call	_hexDumpBuffer	;wreg free
  3215                           
  3216                           ;main.c: 228:                     break;
  3217  0004CA  EF68  F000         	goto	l4147
  3218  0004CE                     l4221:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;main.c: 232:                     waveIdx = 0;
  3222  0004CE  0E00               	movlw	0
  3223  0004D0  6F9B               	movwf	main@waveIdx& (0+255),b
  3224  0004D2                     
  3225                           ; BSR set to: 0
  3226                           ;main.c: 233:                     localAddress = sdCardAddress;
  3227  0004D2  C0A3  F097         	movff	main@sdCardAddress,main@localAddress
  3228  0004D6  C0A4  F098         	movff	main@sdCardAddress+1,main@localAddress+1
  3229  0004DA  C0A5  F099         	movff	main@sdCardAddress+2,main@localAddress+2
  3230  0004DE  C0A6  F09A         	movff	main@sdCardAddress+3,main@localAddress+3
  3231  0004E2                     
  3232                           ; BSR set to: 0
  3233                           ;main.c: 234:                     printf("Writing sine wave to memory, starting with the
      +                           current address. Press any key to stop.\r\n");
  3234  0004E2  0E43               	movlw	low STR_45
  3235  0004E4  6F7F               	movwf	printf@fmt& (0+255),b
  3236  0004E6  0EFC               	movlw	high STR_45
  3237  0004E8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3238  0004EA  EC81  F011         	call	_printf	;wreg free
  3239                           
  3240                           ;main.c: 235:                     while (!(EUSART1_is_rx_ready())){
  3241  0004EE  EFCC  F002         	goto	l4247
  3242  0004F2                     l4227:
  3243                           
  3244                           ;main.c: 238:                     for(bufIdx = 0;bufIdx < 512;waveIdx = (waveIdx + 1) % 
      +                          26, bufIdx++){
  3245  0004F2  0E00               	movlw	0
  3246  0004F4  0100               	movlb	0	; () banked
  3247  0004F6  6FA0               	movwf	(main@bufIdx+1)& (0+255),b
  3248  0004F8  0E00               	movlw	0
  3249  0004FA  6F9F               	movwf	main@bufIdx& (0+255),b
  3250  0004FC                     l4233:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 239:                         firstBuffer[bufIdx] = sin[waveIdx];
  3254  0004FC  0E97               	movlw	low _sin
  3255  0004FE  259B               	addwf	main@waveIdx& (0+255),w,b
  3256  000500  6EF6               	movwf	tblptrl,c
  3257  000502  6AF7               	clrf	tblptrh,c
  3258  000504  0EF9               	movlw	high _sin
  3259  000506  22F7               	addwfc	tblptrh,f,c
  3260  000508                     	if	1	;There are 3 active tblptr bytes
  3261  000508  6AF8               	clrf	tblptru,c
  3262  00050A  0E00               	movlw	low (__mediumconst shr (0+16))
  3263  00050C  22F8               	addwfc	tblptru,f,c
  3264  00050E                     	endif
  3265  00050E  0ED5               	movlw	low _firstBuffer
  3266  000510  259F               	addwf	main@bufIdx& (0+255),w,b
  3267  000512  6ED9               	movwf	fsr2l,c
  3268  000514  0E02               	movlw	high _firstBuffer
  3269  000516  21A0               	addwfc	(main@bufIdx+1)& (0+255),w,b
  3270  000518  6EDA               	movwf	fsr2h,c
  3271  00051A  0008               	tblrd		*
  3272  00051C  CFF5 FFDF          	movff	tablat,indf2
  3273  000520                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 240:                     }
  3276  000520  0E01               	movlw	1
  3277  000522  259B               	addwf	main@waveIdx& (0+255),w,b
  3278  000524  6E07               	movwf	___awmod@dividend^0,c
  3279  000526  6A08               	clrf	(___awmod@dividend+1)^0,c
  3280  000528  0E00               	movlw	0
  3281  00052A  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3282  00052C  0E00               	movlw	0
  3283  00052E  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3284  000530  0E1A               	movlw	26
  3285  000532  6E09               	movwf	___awmod@divisor^0,c
  3286  000534  ECC6  F00D         	call	___awmod	;wreg free
  3287  000538  5007               	movf	?___awmod^0,w,c
  3288  00053A  0100               	movlb	0	; () banked
  3289  00053C  6F9B               	movwf	main@waveIdx& (0+255),b
  3290  00053E                     
  3291                           ; BSR set to: 0
  3292  00053E  4B9F               	infsnz	main@bufIdx& (0+255),f,b
  3293  000540  2BA0               	incf	(main@bufIdx+1)& (0+255),f,b
  3294  000542                     
  3295                           ; BSR set to: 0
  3296  000542  0E02               	movlw	2
  3297  000544  5DA0               	subwf	(main@bufIdx+1)& (0+255),w,b
  3298  000546  A0D8               	btfss	status,0,c
  3299  000548  EFA8  F002         	goto	u3421
  3300  00054C  EFAA  F002         	goto	u3420
  3301  000550                     u3421:
  3302  000550  EF7E  F002         	goto	l4233
  3303  000554                     u3420:
  3304  000554                     
  3305                           ; BSR set to: 0
  3306                           ;main.c: 242:                     SDCARD_WriteBlock(localAddress, firstBuffer);
  3307  000554  C097  F008         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3308  000558  C098  F009         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3309  00055C  C099  F00A         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3310  000560  C09A  F00B         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3311  000564  0ED5               	movlw	low _firstBuffer
  3312  000566  6E0C               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3313  000568  0E02               	movlw	high _firstBuffer
  3314  00056A  6E0D               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3315  00056C  EC0C  F00F         	call	_SDCARD_WriteBlock	;wreg free
  3316  000570                     l4243:
  3317  000570  EC5D  F010         	call	_SDCARD_PollWriteComplete	;wreg free
  3318  000574  0100               	movlb	0	; () banked
  3319  000576  6F95               	movwf	main@status& (0+255),b
  3320  000578  2995               	incf	main@status& (0+255),w,b
  3321  00057A  B4D8               	btfsc	status,2,c
  3322  00057C  EFC2  F002         	goto	u3431
  3323  000580  EFC4  F002         	goto	u3430
  3324  000584                     u3431:
  3325  000584  EFB8  F002         	goto	l4243
  3326  000588                     u3430:
  3327  000588                     
  3328                           ; BSR set to: 0
  3329                           ;main.c: 244:                     localAddress += 512;
  3330  000588  0E00               	movlw	0
  3331  00058A  2797               	addwf	main@localAddress& (0+255),f,b
  3332  00058C  0E02               	movlw	2
  3333  00058E  2398               	addwfc	(main@localAddress+1)& (0+255),f,b
  3334  000590  0E00               	movlw	0
  3335  000592  2399               	addwfc	(main@localAddress+2)& (0+255),f,b
  3336  000594  0E00               	movlw	0
  3337  000596  239A               	addwfc	(main@localAddress+3)& (0+255),f,b
  3338  000598                     l4247:
  3339                           
  3340                           ;main.c: 235:                     while (!(EUSART1_is_rx_ready())){
  3341  000598  ECDB  F011         	call	_EUSART1_is_rx_ready	;wreg free
  3342  00059C  0900               	iorlw	0
  3343  00059E  B4D8               	btfsc	status,2,c
  3344  0005A0  EFD4  F002         	goto	u3441
  3345  0005A4  EFD6  F002         	goto	u3440
  3346  0005A8                     u3441:
  3347  0005A8  EF79  F002         	goto	l4227
  3348  0005AC                     u3440:
  3349  0005AC                     
  3350                           ;main.c: 248:                     (void) EUSART1_Read();
  3351  0005AC  EC6C  F011         	call	_EUSART1_Read	;wreg free
  3352  0005B0                     
  3353                           ;main.c: 249:                     printf("Write stopped\r\n");
  3354  0005B0  0E92               	movlw	low STR_46
  3355  0005B2  0100               	movlb	0	; () banked
  3356  0005B4  6F7F               	movwf	printf@fmt& (0+255),b
  3357  0005B6  0EFF               	movlw	high STR_46
  3358  0005B8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3359  0005BA  EC81  F011         	call	_printf	;wreg free
  3360                           
  3361                           ;main.c: 250:                     break;
  3362  0005BE  EF68  F000         	goto	l4147
  3363  0005C2                     l4253:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;main.c: 252:                     printf("+/-: Increase the sample rate by 10 us\r\n", 5
      +                          12);
  3367  0005C2  0EE5               	movlw	low STR_47
  3368  0005C4  6F7F               	movwf	printf@fmt& (0+255),b
  3369  0005C6  0EFD               	movlw	high STR_47
  3370  0005C8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3371  0005CA  0E02               	movlw	2
  3372  0005CC  6F82               	movwf	(?_printf+3)& (0+255),b
  3373  0005CE  0E00               	movlw	0
  3374  0005D0  6F81               	movwf	(?_printf+2)& (0+255),b
  3375  0005D2  EC81  F011         	call	_printf	;wreg free
  3376                           
  3377                           ;main.c: 253:                     break;
  3378  0005D6  EF68  F000         	goto	l4147
  3379  0005DA                     l4255:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;main.c: 255:                     printf("+/-: Decrease the sample rate by 10 us\r\n", 5
      +                          12);
  3383  0005DA  0EBC               	movlw	low STR_48
  3384  0005DC  6F7F               	movwf	printf@fmt& (0+255),b
  3385  0005DE  0EFD               	movlw	high STR_48
  3386  0005E0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3387  0005E2  0E02               	movlw	2
  3388  0005E4  6F82               	movwf	(?_printf+3)& (0+255),b
  3389  0005E6  0E00               	movlw	0
  3390  0005E8  6F81               	movwf	(?_printf+2)& (0+255),b
  3391  0005EA  EC81  F011         	call	_printf	;wreg free
  3392                           
  3393                           ;main.c: 256:                     break;
  3394  0005EE  EF68  F000         	goto	l4147
  3395  0005F2                     l4257:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;main.c: 258:                     printf("W: Write microphone => SD card at 1600 us\r\n"
      +                          );
  3399  0005F2  0E3B               	movlw	low STR_24
  3400  0005F4  6F7F               	movwf	printf@fmt& (0+255),b
  3401  0005F6  0EFD               	movlw	high STR_24
  3402  0005F8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3403  0005FA  EC81  F011         	call	_printf	;wreg free
  3404                           
  3405                           ;main.c: 259:                     break;
  3406  0005FE  EF68  F000         	goto	l4147
  3407  000602                     l4259:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 262:                     printf("\r\nYou may terminate spooling at anytime with
      +                           a keypress.\r\nTo spool terminal contents into a file follow these instructions:\r\n\r\
      +                          nRight mouse click on the upper left of the PuTTY window\r\nSelect:     Change settings.
      +                          ..\r\nSelect:     Logging\r\nSelect:     Session logging: All session output\r\nLog file
      +                           name:  Browse and provide a .csv extension to your file name\r\nSelect:     Apply\r\nPr
      +                          ess any key to start");
  3411  000602  0EB5               	movlw	low STR_50
  3412  000604  6F7F               	movwf	printf@fmt& (0+255),b
  3413  000606  0EF9               	movlw	high STR_50
  3414  000608  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3415  00060A  EC81  F011         	call	_printf	;wreg free
  3416  00060E                     
  3417                           ;main.c: 266:                     localAddress = sdCardAddress;
  3418  00060E  C0A3  F097         	movff	main@sdCardAddress,main@localAddress
  3419  000612  C0A4  F098         	movff	main@sdCardAddress+1,main@localAddress+1
  3420  000616  C0A5  F099         	movff	main@sdCardAddress+2,main@localAddress+2
  3421  00061A  C0A6  F09A         	movff	main@sdCardAddress+3,main@localAddress+3
  3422                           
  3423                           ;main.c: 267:                     while(!(EUSART1_is_rx_ready())){
  3424  00061E  EF5D  F003         	goto	l4283
  3425  000622                     l4263:
  3426                           
  3427                           ;main.c: 268:                     SDCARD_ReadBlock(localAddress, firstBuffer);
  3428  000622  C097  F008         	movff	main@localAddress,SDCARD_ReadBlock@addr
  3429  000626  C098  F009         	movff	main@localAddress+1,SDCARD_ReadBlock@addr+1
  3430  00062A  C099  F00A         	movff	main@localAddress+2,SDCARD_ReadBlock@addr+2
  3431  00062E  C09A  F00B         	movff	main@localAddress+3,SDCARD_ReadBlock@addr+3
  3432  000632  0ED5               	movlw	low _firstBuffer
  3433  000634  6E0C               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3434  000636  0E02               	movlw	high _firstBuffer
  3435  000638  6E0D               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3436  00063A  EC74  F00E         	call	_SDCARD_ReadBlock	;wreg free
  3437  00063E                     
  3438                           ;main.c: 269:                     for(int i = 0;i<512;i++){
  3439  00063E  0E00               	movlw	0
  3440  000640  0100               	movlb	0	; () banked
  3441  000642  6F9E               	movwf	(main@i_708+1)& (0+255),b
  3442  000644  0E00               	movlw	0
  3443  000646  6F9D               	movwf	main@i_708& (0+255),b
  3444  000648                     l4267:
  3445                           
  3446                           ; BSR set to: 0
  3447  000648  BF9E               	btfsc	(main@i_708+1)& (0+255),7,b
  3448  00064A  EF2E  F003         	goto	u3451
  3449  00064E  0E02               	movlw	2
  3450  000650  5D9E               	subwf	(main@i_708+1)& (0+255),w,b
  3451  000652  A0D8               	btfss	status,0,c
  3452  000654  EF2E  F003         	goto	u3451
  3453  000658  EF30  F003         	goto	u3450
  3454  00065C                     u3451:
  3455  00065C  EF32  F003         	goto	l4271
  3456  000660                     u3450:
  3457  000660  EF54  F003         	goto	l4281
  3458  000664                     l4271:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;main.c: 270:                         printf("%d\r\n", firstBuffer[i]);
  3462  000664  0EE9               	movlw	low STR_51
  3463  000666  6F7F               	movwf	printf@fmt& (0+255),b
  3464  000668  0EFF               	movlw	high STR_51
  3465  00066A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3466  00066C  0ED5               	movlw	low _firstBuffer
  3467  00066E  259D               	addwf	main@i_708& (0+255),w,b
  3468  000670  6ED9               	movwf	fsr2l,c
  3469  000672  0E02               	movlw	high _firstBuffer
  3470  000674  219E               	addwfc	(main@i_708+1)& (0+255),w,b
  3471  000676  6EDA               	movwf	fsr2h,c
  3472  000678  50DF               	movf	indf2,w,c
  3473  00067A  6F93               	movwf	??_main& (0+255),b
  3474  00067C  5193               	movf	??_main& (0+255),w,b
  3475  00067E  6F81               	movwf	(?_printf+2)& (0+255),b
  3476  000680  6B82               	clrf	(?_printf+3)& (0+255),b
  3477  000682  EC81  F011         	call	_printf	;wreg free
  3478  000686                     
  3479                           ;main.c: 271:                         if((EUSART1_is_rx_ready())){
  3480  000686  ECDB  F011         	call	_EUSART1_is_rx_ready	;wreg free
  3481  00068A  0900               	iorlw	0
  3482  00068C  B4D8               	btfsc	status,2,c
  3483  00068E  EF4B  F003         	goto	u3461
  3484  000692  EF4D  F003         	goto	u3460
  3485  000696                     u3461:
  3486  000696  EF4F  F003         	goto	l4277
  3487  00069A                     u3460:
  3488  00069A  EF54  F003         	goto	l4281
  3489  00069E                     l4277:
  3490                           
  3491                           ;main.c: 275:                     }
  3492  00069E  0100               	movlb	0	; () banked
  3493  0006A0  4B9D               	infsnz	main@i_708& (0+255),f,b
  3494  0006A2  2B9E               	incf	(main@i_708+1)& (0+255),f,b
  3495  0006A4  EF24  F003         	goto	l4267
  3496  0006A8                     l4281:
  3497                           
  3498                           ;main.c: 276:                     localAddress += 512;
  3499  0006A8  0E00               	movlw	0
  3500  0006AA  0100               	movlb	0	; () banked
  3501  0006AC  2797               	addwf	main@localAddress& (0+255),f,b
  3502  0006AE  0E02               	movlw	2
  3503  0006B0  2398               	addwfc	(main@localAddress+1)& (0+255),f,b
  3504  0006B2  0E00               	movlw	0
  3505  0006B4  2399               	addwfc	(main@localAddress+2)& (0+255),f,b
  3506  0006B6  0E00               	movlw	0
  3507  0006B8  239A               	addwfc	(main@localAddress+3)& (0+255),f,b
  3508  0006BA                     l4283:
  3509                           
  3510                           ;main.c: 267:                     while(!(EUSART1_is_rx_ready())){
  3511  0006BA  ECDB  F011         	call	_EUSART1_is_rx_ready	;wreg free
  3512  0006BE  0900               	iorlw	0
  3513  0006C0  B4D8               	btfsc	status,2,c
  3514  0006C2  EF65  F003         	goto	u3471
  3515  0006C6  EF67  F003         	goto	u3470
  3516  0006CA                     u3471:
  3517  0006CA  EF11  F003         	goto	l4263
  3518  0006CE                     u3470:
  3519  0006CE                     
  3520                           ;main.c: 279:                     (void) EUSART1_Read();
  3521  0006CE  EC6C  F011         	call	_EUSART1_Read	;wreg free
  3522  0006D2                     
  3523                           ;main.c: 281:                     printf("Spooled 512 out of the 512 blocks. \r\nTo clos
      +                          e the file follow these instructions: \r\n \r\nRight mouse click on the upper left of th
      +                          e PuTTY window \r\nSelect:     Change settings... \r\nSelect:     Logging \r\nSelect:   
      +                            Session  logging: None \r\nSelect:     Apply");
  3524  0006D2  0E44               	movlw	low STR_52
  3525  0006D4  0100               	movlb	0	; () banked
  3526  0006D6  6F7F               	movwf	printf@fmt& (0+255),b
  3527  0006D8  0EFB               	movlw	high STR_52
  3528  0006DA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3529  0006DC  EC81  F011         	call	_printf	;wreg free
  3530                           
  3531                           ;main.c: 282:                     break;
  3532  0006E0  EF68  F000         	goto	l4147
  3533  0006E4                     l4289:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;main.c: 287:                     printf("Unknown key %c\r\n", cmd);
  3537  0006E4  0E70               	movlw	low STR_53
  3538  0006E6  6F7F               	movwf	printf@fmt& (0+255),b
  3539  0006E8  0EFF               	movlw	high STR_53
  3540  0006EA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3541  0006EC  C09C  F081         	movff	main@cmd,?_printf+2
  3542  0006F0  6B82               	clrf	(?_printf+3)& (0+255),b
  3543  0006F2  EC81  F011         	call	_printf	;wreg free
  3544                           
  3545                           ;main.c: 288:                     break;
  3546  0006F6  EF68  F000         	goto	l4147
  3547  0006FA                     l4293:
  3548                           
  3549                           ; BSR set to: 0
  3550  0006FA  519C               	movf	main@cmd& (0+255),w,b
  3551  0006FC  6F93               	movwf	??_main& (0+255),b
  3552  0006FE  6B94               	clrf	(??_main+1)& (0+255),b
  3553                           
  3554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3555                           ; Switch size 1, requested type "simple"
  3556                           ; Number of cases is 1, Range of values is 0 to 0
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte            4     3 (average)
  3560                           ;	Chosen strategy is simple_byte
  3561  000700  5194               	movf	(??_main+1)& (0+255),w,b
  3562  000702  0A00               	xorlw	0	; case 0
  3563  000704  B4D8               	btfsc	status,2,c
  3564  000706  EF87  F003         	goto	l4391
  3565  00070A  EF72  F003         	goto	l4289
  3566  00070E                     l4391:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 13, Range of values is 43 to 122
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte           40    21 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575  00070E  5193               	movf	??_main& (0+255),w,b
  3576  000710  0A2B               	xorlw	43	; case 43
  3577  000712  B4D8               	btfsc	status,2,c
  3578  000714  EFE1  F002         	goto	l4253
  3579  000718  0A06               	xorlw	6	; case 45
  3580  00071A  B4D8               	btfsc	status,2,c
  3581  00071C  EFED  F002         	goto	l4255
  3582  000720  0A1C               	xorlw	28	; case 49
  3583  000722  B4D8               	btfsc	status,2,c
  3584  000724  EF67  F002         	goto	l4221
  3585  000728  0A0E               	xorlw	14	; case 63
  3586  00072A  B4D8               	btfsc	status,2,c
  3587  00072C  EF78  F000         	goto	l4151
  3588  000730  0A7E               	xorlw	126	; case 65
  3589  000732  B4D8               	btfsc	status,2,c
  3590  000734  EF80  F001         	goto	l4185
  3591  000738  0A16               	xorlw	22	; case 87
  3592  00073A  B4D8               	btfsc	status,2,c
  3593  00073C  EFF9  F002         	goto	l4257
  3594  000740  0A0D               	xorlw	13	; case 90
  3595  000742  B4D8               	btfsc	status,2,c
  3596  000744  EF41  F001         	goto	l4155
  3597  000748  0A3B               	xorlw	59	; case 97
  3598  00074A  B4D8               	btfsc	status,2,c
  3599  00074C  EF80  F001         	goto	l4185
  3600  000750  0A08               	xorlw	8	; case 105
  3601  000752  B4D8               	btfsc	status,2,c
  3602  000754  EF76  F001         	goto	l4179
  3603  000758  0A06               	xorlw	6	; case 111
  3604  00075A  B4D8               	btfsc	status,2,c
  3605  00075C  EF39  F001         	goto	l4153
  3606  000760  0A1D               	xorlw	29	; case 114
  3607  000762  B4D8               	btfsc	status,2,c
  3608  000764  EF12  F002         	goto	l213
  3609  000768  0A01               	xorlw	1	; case 115
  3610  00076A  B4D8               	btfsc	status,2,c
  3611  00076C  EF01  F003         	goto	l4259
  3612  000770  0A09               	xorlw	9	; case 122
  3613  000772  B4D8               	btfsc	status,2,c
  3614  000774  EF5C  F001         	goto	l4167
  3615  000778  EF72  F003         	goto	l4289
  3616  00077C  EF1F  F000         	goto	start
  3617  000780                     __end_of_main:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _hexDumpBuffer *****************
  3621 ;; Defined at:
  3622 ;;		line 179 in file "sdCard.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  sdCardBuffer    2   41[BANK0 ] PTR unsigned char 
  3625 ;;		 -> firstBuffer(512), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  j               2   45[BANK0 ] int 
  3628 ;;  j               2   47[BANK0 ] int 
  3629 ;;  i               2   49[BANK0 ] unsigned short 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;Total ram usage:       10 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:   13
  3646 ;; This function calls:
  3647 ;;		_printf
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text1
  3654  00120C                     __ptext1:
  3655                           	callstack 0
  3656  00120C                     _hexDumpBuffer:
  3657                           	callstack 17
  3658  00120C                     
  3659                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  3660  00120C  0EF3               	movlw	low STR_57
  3661  00120E  0100               	movlb	0	; () banked
  3662  001210  6F7F               	movwf	printf@fmt& (0+255),b
  3663  001212  0EFF               	movlw	high STR_57
  3664  001214  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3665  001216  EC81  F011         	call	_printf	;wreg free
  3666  00121A                     
  3667                           ;sdCard.c: 185:                     printf(".");
  3668  00121A  0E00               	movlw	0
  3669  00121C  0100               	movlb	0	; () banked
  3670  00121E  6F92               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  3671  001220  0E00               	movlw	0
  3672  001222  6F91               	movwf	hexDumpBuffer@i& (0+255),b
  3673  001224                     l4073:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;sdCard.c: 186:                 } else {
  3677  001224  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3678  001226  1192               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3679  001228  B4D8               	btfsc	status,2,c
  3680  00122A  EF19  F009         	goto	u3261
  3681  00122E  EF1B  F009         	goto	u3260
  3682  001232                     u3261:
  3683  001232  EF30  F009         	goto	l4079
  3684  001236                     u3260:
  3685  001236                     
  3686                           ; BSR set to: 0
  3687  001236  0E07               	movlw	7
  3688  001238  1591               	andwf	hexDumpBuffer@i& (0+255),w,b
  3689  00123A  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3690  00123C  0E00               	movlw	0
  3691  00123E  1592               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3692  001240  6F8C               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  3693  001242  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3694  001244  118C               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  3695  001246  A4D8               	btfss	status,2,c
  3696  001248  EF28  F009         	goto	u3271
  3697  00124C  EF2A  F009         	goto	u3270
  3698  001250                     u3271:
  3699  001250  EF30  F009         	goto	l4079
  3700  001254                     u3270:
  3701  001254                     
  3702                           ; BSR set to: 0
  3703  001254  0E90               	movlw	low (STR_40+15)
  3704  001256  6F7F               	movwf	printf@fmt& (0+255),b
  3705  001258  0EFF               	movlw	high (STR_40+15)
  3706  00125A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3707  00125C  EC81  F011         	call	_printf	;wreg free
  3708  001260                     l4079:
  3709                           
  3710                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  3711  001260  0100               	movlb	0	; () banked
  3712  001262  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3713  001264  1192               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3714  001266  B4D8               	btfsc	status,2,c
  3715  001268  EF38  F009         	goto	u3281
  3716  00126C  EF3A  F009         	goto	u3280
  3717  001270                     u3281:
  3718  001270  EF93  F009         	goto	l458
  3719  001274                     u3280:
  3720  001274                     
  3721                           ; BSR set to: 0
  3722  001274  0E0F               	movlw	15
  3723  001276  1591               	andwf	hexDumpBuffer@i& (0+255),w,b
  3724  001278  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3725  00127A  0E00               	movlw	0
  3726  00127C  1592               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3727  00127E  6F8C               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  3728  001280  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3729  001282  118C               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  3730  001284  A4D8               	btfss	status,2,c
  3731  001286  EF47  F009         	goto	u3291
  3732  00128A  EF49  F009         	goto	u3290
  3733  00128E                     u3291:
  3734  00128E  EF93  F009         	goto	l458
  3735  001292                     u3290:
  3736  001292                     
  3737                           ; BSR set to: 0
  3738                           ;sdCard.c: 188:                 }
  3739  001292  0E8F               	movlw	low (STR_40+14)
  3740  001294  6F7F               	movwf	printf@fmt& (0+255),b
  3741  001296  0EFF               	movlw	high (STR_40+14)
  3742  001298  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3743  00129A  EC81  F011         	call	_printf	;wreg free
  3744  00129E                     
  3745                           ;sdCard.c: 189:             }
  3746  00129E  0EF0               	movlw	240
  3747  0012A0  0100               	movlb	0	; () banked
  3748  0012A2  2591               	addwf	hexDumpBuffer@i& (0+255),w,b
  3749  0012A4  6F8D               	movwf	hexDumpBuffer@j& (0+255),b
  3750  0012A6  0EFF               	movlw	255
  3751  0012A8  2192               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  3752  0012AA  6F8E               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  3753  0012AC  EF82  F009         	goto	l4095
  3754  0012B0                     l4087:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;sdCard.c: 190:             printf("\r\n");
  3758  0012B0  518D               	movf	hexDumpBuffer@j& (0+255),w,b
  3759  0012B2  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3760  0012B4  6ED9               	movwf	fsr2l,c
  3761  0012B6  518E               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3762  0012B8  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3763  0012BA  6EDA               	movwf	fsr2h,c
  3764  0012BC  0E20               	movlw	32
  3765  0012BE  60DF               	cpfslt	indf2,c
  3766  0012C0  EF64  F009         	goto	u3301
  3767  0012C4  EF66  F009         	goto	u3300
  3768  0012C8                     u3301:
  3769  0012C8  EF6E  F009         	goto	l4091
  3770  0012CC                     u3300:
  3771  0012CC                     
  3772                           ; BSR set to: 0
  3773                           ;sdCard.c: 191:         }
  3774  0012CC  0EFA               	movlw	low STR_60
  3775  0012CE  6F7F               	movwf	printf@fmt& (0+255),b
  3776  0012D0  0EFF               	movlw	high STR_60
  3777  0012D2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3778  0012D4  EC81  F011         	call	_printf	;wreg free
  3779                           
  3780                           ;sdCard.c: 192: 
  3781  0012D8  EF7F  F009         	goto	l4093
  3782  0012DC                     l4091:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  3786  0012DC  0EF7               	movlw	low STR_61
  3787  0012DE  6F7F               	movwf	printf@fmt& (0+255),b
  3788  0012E0  0EFF               	movlw	high STR_61
  3789  0012E2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3790  0012E4  518D               	movf	hexDumpBuffer@j& (0+255),w,b
  3791  0012E6  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3792  0012E8  6ED9               	movwf	fsr2l,c
  3793  0012EA  518E               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3794  0012EC  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3795  0012EE  6EDA               	movwf	fsr2h,c
  3796  0012F0  50DF               	movf	indf2,w,c
  3797  0012F2  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3798  0012F4  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3799  0012F6  6F81               	movwf	(?_printf+2)& (0+255),b
  3800  0012F8  6B82               	clrf	(?_printf+3)& (0+255),b
  3801  0012FA  EC81  F011         	call	_printf	;wreg free
  3802  0012FE                     l4093:
  3803                           
  3804                           ;sdCard.c: 195: 
  3805  0012FE  0100               	movlb	0	; () banked
  3806  001300  4B8D               	infsnz	hexDumpBuffer@j& (0+255),f,b
  3807  001302  2B8E               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  3808  001304                     l4095:
  3809                           
  3810                           ; BSR set to: 0
  3811  001304  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3812  001306  5D8D               	subwf	hexDumpBuffer@j& (0+255),w,b
  3813  001308  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3814  00130A  598E               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  3815  00130C  A0D8               	btfss	status,0,c
  3816  00130E  EF8B  F009         	goto	u3311
  3817  001312  EF8D  F009         	goto	u3310
  3818  001316                     u3311:
  3819  001316  EF58  F009         	goto	l4087
  3820  00131A                     u3310:
  3821  00131A                     
  3822                           ; BSR set to: 0
  3823                           ;sdCard.c: 196:     printf("   ");
  3824  00131A  0EAE               	movlw	low (STR_39+12)
  3825  00131C  6F7F               	movwf	printf@fmt& (0+255),b
  3826  00131E  0EFF               	movlw	high (STR_39+12)
  3827  001320  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3828  001322  EC81  F011         	call	_printf	;wreg free
  3829  001326                     l458:
  3830                           
  3831                           ;sdCard.c: 199:             printf(".");
  3832  001326  0EE3               	movlw	low STR_63
  3833  001328  0100               	movlb	0	; () banked
  3834  00132A  6F7F               	movwf	printf@fmt& (0+255),b
  3835  00132C  0EFF               	movlw	high STR_63
  3836  00132E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3837  001330  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3838  001332  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3839  001334  6ED9               	movwf	fsr2l,c
  3840  001336  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3841  001338  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3842  00133A  6EDA               	movwf	fsr2h,c
  3843  00133C  50DF               	movf	indf2,w,c
  3844  00133E  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3845  001340  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3846  001342  6F81               	movwf	(?_printf+2)& (0+255),b
  3847  001344  6B82               	clrf	(?_printf+3)& (0+255),b
  3848  001346  EC81  F011         	call	_printf	;wreg free
  3849  00134A                     
  3850                           ;sdCard.c: 200:         } else {
  3851  00134A  0100               	movlb	0	; () banked
  3852  00134C  4B91               	infsnz	hexDumpBuffer@i& (0+255),f,b
  3853  00134E  2B92               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  3854  001350                     
  3855                           ; BSR set to: 0
  3856  001350  0E02               	movlw	2
  3857  001352  5D92               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3858  001354  A0D8               	btfss	status,0,c
  3859  001356  EFAF  F009         	goto	u3321
  3860  00135A  EFB1  F009         	goto	u3320
  3861  00135E                     u3321:
  3862  00135E  EF12  F009         	goto	l4073
  3863  001362                     u3320:
  3864  001362                     
  3865                           ; BSR set to: 0
  3866                           ;sdCard.c: 202:         }
  3867  001362  0E8E               	movlw	low (STR_40+13)
  3868  001364  6F7F               	movwf	printf@fmt& (0+255),b
  3869  001366  0EFF               	movlw	high (STR_40+13)
  3870  001368  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3871  00136A  EC81  F011         	call	_printf	;wreg free
  3872  00136E                     
  3873                           ;sdCard.c: 203:     }
  3874  00136E  0EF0               	movlw	240
  3875  001370  0100               	movlb	0	; () banked
  3876  001372  2591               	addwf	hexDumpBuffer@i& (0+255),w,b
  3877  001374  6F8F               	movwf	hexDumpBuffer@j_1165& (0+255),b
  3878  001376  0EFF               	movlw	255
  3879  001378  2192               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  3880  00137A  6F90               	movwf	(hexDumpBuffer@j_1165+1)& (0+255),b
  3881  00137C  EFEA  F009         	goto	l4115
  3882  001380                     l4107:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;sdCard.c: 204:     printf("\r\n");
  3886  001380  518F               	movf	hexDumpBuffer@j_1165& (0+255),w,b
  3887  001382  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3888  001384  6ED9               	movwf	fsr2l,c
  3889  001386  5190               	movf	(hexDumpBuffer@j_1165+1)& (0+255),w,b
  3890  001388  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3891  00138A  6EDA               	movwf	fsr2h,c
  3892  00138C  0E20               	movlw	32
  3893  00138E  60DF               	cpfslt	indf2,c
  3894  001390  EFCC  F009         	goto	u3331
  3895  001394  EFCE  F009         	goto	u3330
  3896  001398                     u3331:
  3897  001398  EFD6  F009         	goto	l4111
  3898  00139C                     u3330:
  3899  00139C                     
  3900                           ; BSR set to: 0
  3901                           ;sdCard.c: 205: }
  3902  00139C  0EFA               	movlw	low STR_60
  3903  00139E  6F7F               	movwf	printf@fmt& (0+255),b
  3904  0013A0  0EFF               	movlw	high STR_60
  3905  0013A2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3906  0013A4  EC81  F011         	call	_printf	;wreg free
  3907  0013A8  EFE7  F009         	goto	l4113
  3908  0013AC                     l4111:
  3909                           
  3910                           ; BSR set to: 0
  3911  0013AC  0EF7               	movlw	low STR_61
  3912  0013AE  6F7F               	movwf	printf@fmt& (0+255),b
  3913  0013B0  0EFF               	movlw	high STR_61
  3914  0013B2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3915  0013B4  518F               	movf	hexDumpBuffer@j_1165& (0+255),w,b
  3916  0013B6  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3917  0013B8  6ED9               	movwf	fsr2l,c
  3918  0013BA  5190               	movf	(hexDumpBuffer@j_1165+1)& (0+255),w,b
  3919  0013BC  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3920  0013BE  6EDA               	movwf	fsr2h,c
  3921  0013C0  50DF               	movf	indf2,w,c
  3922  0013C2  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3923  0013C4  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3924  0013C6  6F81               	movwf	(?_printf+2)& (0+255),b
  3925  0013C8  6B82               	clrf	(?_printf+3)& (0+255),b
  3926  0013CA  EC81  F011         	call	_printf	;wreg free
  3927  0013CE                     l4113:
  3928  0013CE  0100               	movlb	0	; () banked
  3929  0013D0  4B8F               	infsnz	hexDumpBuffer@j_1165& (0+255),f,b
  3930  0013D2  2B90               	incf	(hexDumpBuffer@j_1165+1)& (0+255),f,b
  3931  0013D4                     l4115:
  3932                           
  3933                           ; BSR set to: 0
  3934  0013D4  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3935  0013D6  5D8F               	subwf	hexDumpBuffer@j_1165& (0+255),w,b
  3936  0013D8  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3937  0013DA  5990               	subwfb	(hexDumpBuffer@j_1165+1)& (0+255),w,b
  3938  0013DC  A0D8               	btfss	status,0,c
  3939  0013DE  EFF3  F009         	goto	u3341
  3940  0013E2  EFF5  F009         	goto	u3340
  3941  0013E6                     u3341:
  3942  0013E6  EFC0  F009         	goto	l4107
  3943  0013EA                     u3340:
  3944  0013EA                     
  3945                           ; BSR set to: 0
  3946  0013EA  0EAE               	movlw	low (STR_39+12)
  3947  0013EC  6F7F               	movwf	printf@fmt& (0+255),b
  3948  0013EE  0EFF               	movlw	high (STR_39+12)
  3949  0013F0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3950  0013F2  EC81  F011         	call	_printf	;wreg free
  3951  0013F6  0012               	return		;funcret
  3952  0013F8                     __end_of_hexDumpBuffer:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function ___awmod *****************
  3956 ;; Defined at:
  3957 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  dividend        2    6[COMRAM] int 
  3960 ;;  divisor         2    8[COMRAM] int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  sign            1   11[COMRAM] unsigned char 
  3963 ;;  counter         1   10[COMRAM] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2    6[COMRAM] int 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;Total ram usage:        6 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    4
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text2
  3988  001B8C                     __ptext2:
  3989                           	callstack 0
  3990  001B8C                     ___awmod:
  3991                           	callstack 26
  3992  001B8C  0E00               	movlw	0
  3993  001B8E  6E0C               	movwf	___awmod@sign^0,c
  3994  001B90  BE08               	btfsc	(___awmod@dividend+1)^0,7,c
  3995  001B92  EFCF  F00D         	goto	u2820
  3996  001B96  EFCD  F00D         	goto	u2821
  3997  001B9A                     u2821:
  3998  001B9A  EFD5  F00D         	goto	l3517
  3999  001B9E                     u2820:
  4000  001B9E  6C07               	negf	___awmod@dividend^0,c
  4001  001BA0  1E08               	comf	(___awmod@dividend+1)^0,f,c
  4002  001BA2  B0D8               	btfsc	status,0,c
  4003  001BA4  2A08               	incf	(___awmod@dividend+1)^0,f,c
  4004  001BA6  0E01               	movlw	1
  4005  001BA8  6E0C               	movwf	___awmod@sign^0,c
  4006  001BAA                     l3517:
  4007  001BAA  BE0A               	btfsc	(___awmod@divisor+1)^0,7,c
  4008  001BAC  EFDC  F00D         	goto	u2830
  4009  001BB0  EFDA  F00D         	goto	u2831
  4010  001BB4                     u2831:
  4011  001BB4  EFE0  F00D         	goto	l3521
  4012  001BB8                     u2830:
  4013  001BB8  6C09               	negf	___awmod@divisor^0,c
  4014  001BBA  1E0A               	comf	(___awmod@divisor+1)^0,f,c
  4015  001BBC  B0D8               	btfsc	status,0,c
  4016  001BBE  2A0A               	incf	(___awmod@divisor+1)^0,f,c
  4017  001BC0                     l3521:
  4018  001BC0  5009               	movf	___awmod@divisor^0,w,c
  4019  001BC2  100A               	iorwf	(___awmod@divisor+1)^0,w,c
  4020  001BC4  B4D8               	btfsc	status,2,c
  4021  001BC6  EFE7  F00D         	goto	u2841
  4022  001BCA  EFE9  F00D         	goto	u2840
  4023  001BCE                     u2841:
  4024  001BCE  EF0D  F00E         	goto	l3537
  4025  001BD2                     u2840:
  4026  001BD2  0E01               	movlw	1
  4027  001BD4  6E0B               	movwf	___awmod@counter^0,c
  4028  001BD6  EFF1  F00D         	goto	l3527
  4029  001BDA                     l3525:
  4030  001BDA  90D8               	bcf	status,0,c
  4031  001BDC  3609               	rlcf	___awmod@divisor^0,f,c
  4032  001BDE  360A               	rlcf	(___awmod@divisor+1)^0,f,c
  4033  001BE0  2A0B               	incf	___awmod@counter^0,f,c
  4034  001BE2                     l3527:
  4035  001BE2  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  4036  001BE4  EFF6  F00D         	goto	u2851
  4037  001BE8  EFF8  F00D         	goto	u2850
  4038  001BEC                     u2851:
  4039  001BEC  EFED  F00D         	goto	l3525
  4040  001BF0                     u2850:
  4041  001BF0                     l3529:
  4042  001BF0  5009               	movf	___awmod@divisor^0,w,c
  4043  001BF2  5C07               	subwf	___awmod@dividend^0,w,c
  4044  001BF4  500A               	movf	(___awmod@divisor+1)^0,w,c
  4045  001BF6  5808               	subwfb	(___awmod@dividend+1)^0,w,c
  4046  001BF8  A0D8               	btfss	status,0,c
  4047  001BFA  EF01  F00E         	goto	u2861
  4048  001BFE  EF03  F00E         	goto	u2860
  4049  001C02                     u2861:
  4050  001C02  EF07  F00E         	goto	l3533
  4051  001C06                     u2860:
  4052  001C06  5009               	movf	___awmod@divisor^0,w,c
  4053  001C08  5E07               	subwf	___awmod@dividend^0,f,c
  4054  001C0A  500A               	movf	(___awmod@divisor+1)^0,w,c
  4055  001C0C  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
  4056  001C0E                     l3533:
  4057  001C0E  90D8               	bcf	status,0,c
  4058  001C10  320A               	rrcf	(___awmod@divisor+1)^0,f,c
  4059  001C12  3209               	rrcf	___awmod@divisor^0,f,c
  4060  001C14  2E0B               	decfsz	___awmod@counter^0,f,c
  4061  001C16  EFF8  F00D         	goto	l3529
  4062  001C1A                     l3537:
  4063  001C1A  500C               	movf	___awmod@sign^0,w,c
  4064  001C1C  B4D8               	btfsc	status,2,c
  4065  001C1E  EF13  F00E         	goto	u2871
  4066  001C22  EF15  F00E         	goto	u2870
  4067  001C26                     u2871:
  4068  001C26  EF19  F00E         	goto	l3541
  4069  001C2A                     u2870:
  4070  001C2A  6C07               	negf	___awmod@dividend^0,c
  4071  001C2C  1E08               	comf	(___awmod@dividend+1)^0,f,c
  4072  001C2E  B0D8               	btfsc	status,0,c
  4073  001C30  2A08               	incf	(___awmod@dividend+1)^0,f,c
  4074  001C32                     l3541:
  4075  001C32  C007  F007         	movff	___awmod@dividend,?___awmod
  4076  001C36  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  4077  001C3A  0012               	return		;funcret
  4078  001C3C                     __end_of___awmod:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _TMR0_WriteTimer *****************
  4082 ;; Defined at:
  4083 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  timerVal        2    6[COMRAM] unsigned short 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text3
  4112  0023DC                     __ptext3:
  4113                           	callstack 0
  4114  0023DC                     _TMR0_WriteTimer:
  4115                           	callstack 26
  4116  0023DC                     
  4117                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4118  0023DC  5008               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4119  0023DE  6ED7               	movwf	215,c	;volatile
  4120  0023E0                     
  4121                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4122  0023E0  C007  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4123  0023E4  0012               	return		;funcret
  4124  0023E6                     __end_of_TMR0_WriteTimer:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _SYSTEM_Initialize *****************
  4128 ;; Defined at:
  4129 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    6
  4150 ;; This function calls:
  4151 ;;		_EUSART1_Initialize
  4152 ;;		_INTERRUPT_Initialize
  4153 ;;		_OSCILLATOR_Initialize
  4154 ;;		_PIN_MANAGER_Initialize
  4155 ;;		_SPI2_Initialize
  4156 ;;		_TMR0_Initialize
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text4
  4163  00236C                     __ptext4:
  4164                           	callstack 0
  4165  00236C                     _SYSTEM_Initialize:
  4166                           	callstack 24
  4167  00236C                     
  4168                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4169  00236C  EC11  F012         	call	_INTERRUPT_Initialize	;wreg free
  4170  002370                     
  4171                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  4172  002370  ECE5  F011         	call	_SPI2_Initialize	;wreg free
  4173  002374                     
  4174                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  4175  002374  EC55  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  4176  002378                     
  4177                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  4178  002378  ECA8  F011         	call	_OSCILLATOR_Initialize	;wreg free
  4179  00237C                     
  4180                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4181  00237C  EC04  F011         	call	_TMR0_Initialize	;wreg free
  4182  002380                     
  4183                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4184  002380  ECFF  F00F         	call	_EUSART1_Initialize	;wreg free
  4185  002384  0012               	return		;funcret
  4186  002386                     __end_of_SYSTEM_Initialize:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _TMR0_Initialize *****************
  4190 ;; Defined at:
  4191 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    5
  4212 ;; This function calls:
  4213 ;;		_TMR0_SetInterruptHandler
  4214 ;; This function is called by:
  4215 ;;		_SYSTEM_Initialize
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text5
  4220  002208                     __ptext5:
  4221                           	callstack 0
  4222  002208                     _TMR0_Initialize:
  4223                           	callstack 24
  4224  002208                     
  4225                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4226  002208  9CD5               	bcf	213,6,c	;volatile
  4227  00220A                     
  4228                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4229  00220A  0E00               	movlw	0
  4230  00220C  6ED7               	movwf	215,c	;volatile
  4231                           
  4232                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4233  00220E  0E00               	movlw	0
  4234  002210  6ED6               	movwf	214,c	;volatile
  4235  002212                     
  4236                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4237  002212  50D6               	movf	214,w,c	;volatile
  4238  002214  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  4239  002218  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  4240  00221A  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4241  00221E  6A09               	clrf	??_TMR0_Initialize^0,c
  4242  002220  1009               	iorwf	??_TMR0_Initialize^0,w,c
  4243  002222  6E57               	movwf	_timer0ReloadVal^0,c	;volatile
  4244  002224  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  4245  002226  6E58               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4246  002228                     
  4247                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4248  002228  94F2               	bcf	242,2,c	;volatile
  4249  00222A                     
  4250                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4251  00222A  8AF2               	bsf	242,5,c	;volatile
  4252  00222C                     
  4253                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4254  00222C  0E2A               	movlw	low _TMR0_DefaultInterruptHandler
  4255  00222E  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4256  002230  0E24               	movlw	high _TMR0_DefaultInterruptHandler
  4257  002232  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4258  002234  ECF3  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  4259  002238                     
  4260                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4261  002238  0E9F               	movlw	159
  4262  00223A  6ED5               	movwf	213,c	;volatile
  4263  00223C  0012               	return		;funcret
  4264  00223E                     __end_of_TMR0_Initialize:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _TMR0_SetInterruptHandler *****************
  4268 ;; Defined at:
  4269 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  4272 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        2 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    4
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_TMR0_Initialize
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text6
  4300  0023E6                     __ptext6:
  4301                           	callstack 0
  4302  0023E6                     _TMR0_SetInterruptHandler:
  4303                           	callstack 26
  4304  0023E6                     
  4305                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4306  0023E6  C007  F0B1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4307  0023EA  C008  F0B2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4308  0023EE  0012               	return		;funcret
  4309  0023F0                     __end_of_TMR0_SetInterruptHandler:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _SPI2_Initialize *****************
  4313 ;; Defined at:
  4314 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    4
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_SYSTEM_Initialize
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text7
  4343  0023CA                     __ptext7:
  4344                           	callstack 0
  4345  0023CA                     _SPI2_Initialize:
  4346                           	callstack 25
  4347  0023CA                     
  4348                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  4349  0023CA  0E40               	movlw	64
  4350  0023CC  6E6D               	movwf	109,c	;volatile
  4351                           
  4352                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  4353  0023CE  0E01               	movlw	1
  4354  0023D0  6E6C               	movwf	108,c	;volatile
  4355                           
  4356                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  4357  0023D2  0E01               	movlw	1
  4358  0023D4  6E6E               	movwf	110,c	;volatile
  4359  0023D6                     
  4360                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  4361  0023D6  9293               	bcf	147,1,c	;volatile
  4362  0023D8                     
  4363                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  4364  0023D8  9A6C               	bcf	108,5,c	;volatile
  4365  0023DA  0012               	return		;funcret
  4366  0023DC                     __end_of_SPI2_Initialize:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _PIN_MANAGER_Initialize *****************
  4370 ;; Defined at:
  4371 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    4
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_SYSTEM_Initialize
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text8
  4400  0022AA                     __ptext8:
  4401                           	callstack 0
  4402  0022AA                     _PIN_MANAGER_Initialize:
  4403                           	callstack 25
  4404  0022AA                     
  4405                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4406  0022AA  0E00               	movlw	0
  4407  0022AC  6E89               	movwf	137,c	;volatile
  4408                           
  4409                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4410  0022AE  0E00               	movlw	0
  4411  0022B0  6E8A               	movwf	138,c	;volatile
  4412                           
  4413                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4414  0022B2  0E00               	movlw	0
  4415  0022B4  6E8B               	movwf	139,c	;volatile
  4416                           
  4417                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4418  0022B6  0EBF               	movlw	191
  4419  0022B8  6E92               	movwf	146,c	;volatile
  4420                           
  4421                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  4422  0022BA  0EE5               	movlw	229
  4423  0022BC  6E93               	movwf	147,c	;volatile
  4424                           
  4425                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  4426  0022BE  0E8F               	movlw	143
  4427  0022C0  6E94               	movwf	148,c	;volatile
  4428                           
  4429                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0C;
  4430  0022C2  0E0C               	movlw	12
  4431  0022C4  010F               	movlb	15	; () banked
  4432  0022C6  6F3A               	movwf	58,b	;volatile
  4433                           
  4434                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  4435  0022C8  0E31               	movlw	49
  4436  0022CA  6F39               	movwf	57,b	;volatile
  4437                           
  4438                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4439  0022CC  0E2F               	movlw	47
  4440  0022CE  6F38               	movwf	56,b	;volatile
  4441                           
  4442                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4443  0022D0  0E00               	movlw	0
  4444  0022D2  6E61               	movwf	97,c	;volatile
  4445  0022D4                     
  4446                           ; BSR set to: 15
  4447                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4448  0022D4  8EF1               	bsf	241,7,c	;volatile
  4449  0022D6                     
  4450                           ; BSR set to: 15
  4451  0022D6  0012               	return		;funcret
  4452  0022D8                     __end_of_PIN_MANAGER_Initialize:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _OSCILLATOR_Initialize *****************
  4456 ;; Defined at:
  4457 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    4
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_SYSTEM_Initialize
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text9
  4486  002350                     __ptext9:
  4487                           	callstack 0
  4488  002350                     _OSCILLATOR_Initialize:
  4489                           	callstack 25
  4490  002350                     
  4491                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4492  002350  0E70               	movlw	112
  4493  002352  6ED3               	movwf	211,c	;volatile
  4494                           
  4495                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4496  002354  0E04               	movlw	4
  4497  002356  6ED2               	movwf	210,c	;volatile
  4498                           
  4499                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  4500  002358  0E40               	movlw	64
  4501  00235A  6E9B               	movwf	155,c	;volatile
  4502  00235C                     l367:
  4503                           
  4504                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  4505  00235C  AED2               	btfss	4050,7,c	;volatile
  4506  00235E  EFB3  F011         	goto	u2541
  4507  002362  EFB5  F011         	goto	u2540
  4508  002366                     u2541:
  4509  002366  EFAE  F011         	goto	l367
  4510  00236A                     u2540:
  4511  00236A  0012               	return		;funcret
  4512  00236C                     __end_of_OSCILLATOR_Initialize:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function _INTERRUPT_Initialize *****************
  4516 ;; Defined at:
  4517 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		None
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    4
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_SYSTEM_Initialize
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text10
  4546  002422                     __ptext10:
  4547                           	callstack 0
  4548  002422                     _INTERRUPT_Initialize:
  4549                           	callstack 25
  4550  002422                     
  4551                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4552  002422  9ED0               	bcf	208,7,c	;volatile
  4553  002424  0012               	return		;funcret
  4554  002426                     __end_of_INTERRUPT_Initialize:
  4555                           	callstack 0
  4556                           
  4557 ;; *************** function _EUSART1_Initialize *****************
  4558 ;; Defined at:
  4559 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;Total ram usage:        0 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    5
  4580 ;; This function calls:
  4581 ;;		_EUSART1_SetErrorHandler
  4582 ;;		_EUSART1_SetFramingErrorHandler
  4583 ;;		_EUSART1_SetOverrunErrorHandler
  4584 ;; This function is called by:
  4585 ;;		_SYSTEM_Initialize
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text11
  4590  001FFE                     __ptext11:
  4591                           	callstack 0
  4592  001FFE                     _EUSART1_Initialize:
  4593                           	callstack 24
  4594  001FFE                     
  4595                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4596  001FFE  0E08               	movlw	8
  4597  002000  6EB8               	movwf	184,c	;volatile
  4598                           
  4599                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4600  002002  0E90               	movlw	144
  4601  002004  6EAB               	movwf	171,c	;volatile
  4602                           
  4603                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4604  002006  0E24               	movlw	36
  4605  002008  6EAC               	movwf	172,c	;volatile
  4606                           
  4607                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4608  00200A  0E82               	movlw	130
  4609  00200C  6EAF               	movwf	175,c	;volatile
  4610                           
  4611                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4612  00200E  0E06               	movlw	6
  4613  002010  6EB0               	movwf	176,c	;volatile
  4614  002012                     
  4615                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4616  002012  0E00               	movlw	0
  4617  002014  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4618  002016  0E00               	movlw	0
  4619  002018  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4620  00201A  ECFD  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4621  00201E                     
  4622                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4623  00201E  0E00               	movlw	0
  4624  002020  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4625  002022  0E00               	movlw	0
  4626  002024  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4627  002026  ECF8  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4628  00202A                     
  4629                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4630  00202A  0E00               	movlw	0
  4631  00202C  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4632  00202E  0E00               	movlw	0
  4633  002030  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4634  002032  EC02  F012         	call	_EUSART1_SetErrorHandler	;wreg free
  4635  002036                     
  4636                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4637  002036  0E00               	movlw	0
  4638  002038  0100               	movlb	0	; () banked
  4639  00203A  6FB3               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4640  00203C                     
  4641                           ; BSR set to: 0
  4642  00203C  0012               	return		;funcret
  4643  00203E                     __end_of_EUSART1_Initialize:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4647 ;; Defined at:
  4648 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4651 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:        2 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    4
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_EUSART1_Initialize
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text12
  4678  0023F0                     __ptext12:
  4679                           	callstack 0
  4680  0023F0                     _EUSART1_SetOverrunErrorHandler:
  4681                           	callstack 24
  4682  0023F0                     
  4683                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4684  0023F0  C007  F0AD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4685  0023F4  C008  F0AE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4686  0023F8  0012               	return		;funcret
  4687  0023FA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4691 ;; Defined at:
  4692 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4695 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        2 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    4
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_EUSART1_Initialize
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text13
  4722  0023FA                     __ptext13:
  4723                           	callstack 0
  4724  0023FA                     _EUSART1_SetFramingErrorHandler:
  4725                           	callstack 24
  4726  0023FA                     
  4727                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4728  0023FA  C007  F0AF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4729  0023FE  C008  F0B0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4730  002402  0012               	return		;funcret
  4731  002404                     __end_of_EUSART1_SetFramingErrorHandler:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _EUSART1_SetErrorHandler *****************
  4735 ;; Defined at:
  4736 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  4739 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    4
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_EUSART1_Initialize
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text14
  4766  002404                     __ptext14:
  4767                           	callstack 0
  4768  002404                     _EUSART1_SetErrorHandler:
  4769                           	callstack 24
  4770  002404                     
  4771                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4772  002404  C007  F0AB         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4773  002408  C008  F0AC         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4774  00240C  0012               	return		;funcret
  4775  00240E                     __end_of_EUSART1_SetErrorHandler:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _SPI2_Open *****************
  4779 ;; Defined at:
  4780 ;;		line 72 in file "mcc_generated_files/spi2.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  spi2UniqueCo    1    wreg     enum E355
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  spi2UniqueCo    1    7[COMRAM] enum E355
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      _Bool 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;Total ram usage:        2 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    4
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text15
  4809  001C3C                     __ptext15:
  4810                           	callstack 0
  4811  001C3C                     _SPI2_Open:
  4812                           	callstack 26
  4813                           
  4814                           ;incstack = 0
  4815                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  4816  001C3C  6E08               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  4817  001C3E                     
  4818                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  4819  001C3E  BA6C               	btfsc	108,5,c	;volatile
  4820  001C40  EF24  F00E         	goto	u2551
  4821  001C44  EF26  F00E         	goto	u2550
  4822  001C48                     u2551:
  4823  001C48  EF73  F00E         	goto	l25
  4824  001C4C                     u2550:
  4825  001C4C                     
  4826                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  4827  001C4C  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4828  001C4E  0D04               	mullw	4
  4829  001C50  0E01               	movlw	1
  4830  001C52  26F3               	addwf	243,f,c
  4831  001C54  0E00               	movlw	0
  4832  001C56  22F4               	addwfc	244,f,c
  4833  001C58  0EB1               	movlw	low _spi2_configuration
  4834  001C5A  24F3               	addwf	243,w,c
  4835  001C5C  6EF6               	movwf	tblptrl,c
  4836  001C5E  0EF9               	movlw	high _spi2_configuration
  4837  001C60  20F4               	addwfc	244,w,c
  4838  001C62  6EF7               	movwf	tblptrh,c
  4839  001C64                     	if	1	;There are 3 active tblptr bytes
  4840  001C64  6AF8               	clrf	tblptru,c
  4841  001C66  0E00               	movlw	low (__mediumconst shr (0+16))
  4842  001C68  22F8               	addwfc	tblptru,f,c
  4843  001C6A                     	endif
  4844  001C6A  0008               	tblrd		*
  4845  001C6C  CFF5 FF6D          	movff	tablat,3949	;volatile
  4846                           
  4847                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  4848  001C70  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4849  001C72  0D04               	mullw	4
  4850  001C74  0EB1               	movlw	low _spi2_configuration
  4851  001C76  24F3               	addwf	243,w,c
  4852  001C78  6EF6               	movwf	tblptrl,c
  4853  001C7A  0EF9               	movlw	high _spi2_configuration
  4854  001C7C  20F4               	addwfc	244,w,c
  4855  001C7E  6EF7               	movwf	tblptrh,c
  4856  001C80                     	if	1	;There are 3 active tblptr bytes
  4857  001C80  6AF8               	clrf	tblptru,c
  4858  001C82  0E00               	movlw	low (__mediumconst shr (0+16))
  4859  001C84  22F8               	addwfc	tblptru,f,c
  4860  001C86                     	endif
  4861  001C86  0008               	tblrd		*
  4862  001C88  CFF5 FF6C          	movff	tablat,3948	;volatile
  4863  001C8C                     
  4864                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  4865  001C8C  0E00               	movlw	0
  4866  001C8E  6E6B               	movwf	107,c	;volatile
  4867  001C90                     
  4868                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  4869  001C90  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4870  001C92  0D04               	mullw	4
  4871  001C94  0E02               	movlw	2
  4872  001C96  26F3               	addwf	243,f,c
  4873  001C98  0E00               	movlw	0
  4874  001C9A  22F4               	addwfc	244,f,c
  4875  001C9C  0EB1               	movlw	low _spi2_configuration
  4876  001C9E  24F3               	addwf	243,w,c
  4877  001CA0  6EF6               	movwf	tblptrl,c
  4878  001CA2  0EF9               	movlw	high _spi2_configuration
  4879  001CA4  20F4               	addwfc	244,w,c
  4880  001CA6  6EF7               	movwf	tblptrh,c
  4881  001CA8                     	if	1	;There are 3 active tblptr bytes
  4882  001CA8  6AF8               	clrf	tblptru,c
  4883  001CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  4884  001CAC  22F8               	addwfc	tblptru,f,c
  4885  001CAE                     	endif
  4886  001CAE  0008               	tblrd		*
  4887  001CB0  CFF5 FF6E          	movff	tablat,3950	;volatile
  4888  001CB4                     
  4889                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  4890  001CB4  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4891  001CB6  0D04               	mullw	4
  4892  001CB8  0E03               	movlw	3
  4893  001CBA  26F3               	addwf	243,f,c
  4894  001CBC  0E00               	movlw	0
  4895  001CBE  22F4               	addwfc	244,f,c
  4896  001CC0  0EB1               	movlw	low _spi2_configuration
  4897  001CC2  24F3               	addwf	243,w,c
  4898  001CC4  6EF6               	movwf	tblptrl,c
  4899  001CC6  0EF9               	movlw	high _spi2_configuration
  4900  001CC8  20F4               	addwfc	244,w,c
  4901  001CCA  6EF7               	movwf	tblptrh,c
  4902  001CCC                     	if	1	;There are 3 active tblptr bytes
  4903  001CCC  6AF8               	clrf	tblptru,c
  4904  001CCE  0E00               	movlw	low (__mediumconst shr (0+16))
  4905  001CD0  22F8               	addwfc	tblptru,f,c
  4906  001CD2                     	endif
  4907  001CD2  0008               	tblrd		*
  4908  001CD4  CFF5 F007          	movff	tablat,??_SPI2_Open
  4909  001CD8  4607               	rlncf	??_SPI2_Open^0,f,c
  4910  001CDA  5093               	movf	147,w,c	;volatile
  4911  001CDC  1807               	xorwf	??_SPI2_Open^0,w,c
  4912  001CDE  0BFD               	andlw	-3
  4913  001CE0  1807               	xorwf	??_SPI2_Open^0,w,c
  4914  001CE2  6E93               	movwf	147,c	;volatile
  4915  001CE4                     
  4916                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  4917  001CE4  8A6C               	bsf	108,5,c	;volatile
  4918  001CE6                     l25:
  4919  001CE6  0012               	return		;funcret
  4920  001CE8                     __end_of_SPI2_Open:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _SPI2_Close *****************
  4924 ;; Defined at:
  4925 ;;		line 87 in file "mcc_generated_files/spi2.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		None
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    4
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_main
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text16
  4954  002426                     __ptext16:
  4955                           	callstack 0
  4956  002426                     _SPI2_Close:
  4957                           	callstack 26
  4958  002426                     
  4959                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  4960  002426  9A6C               	bcf	108,5,c	;volatile
  4961  002428  0012               	return		;funcret
  4962  00242A                     __end_of_SPI2_Close:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _SDCARD_WriteBlock *****************
  4966 ;; Defined at:
  4967 ;;		line 48 in file "sdCard.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  addr            4    7[COMRAM] unsigned long 
  4970 ;;  sdCardBuffer    2   11[COMRAM] PTR unsigned char 
  4971 ;;		 -> firstBuffer(512), 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  i               2   13[COMRAM] unsigned short 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4983 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;Total ram usage:        8 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    5
  4990 ;; This function calls:
  4991 ;;		_SPI2_ExchangeByte
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text17
  4998  001E18                     __ptext17:
  4999                           	callstack 0
  5000  001E18                     _SDCARD_WriteBlock:
  5001                           	callstack 25
  5002  001E18  988A               	bcf	138,4,c	;volatile
  5003  001E1A                     
  5004                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  5005  001E1A  0EFF               	movlw	255
  5006  001E1C  ECC3  F011         	call	_SPI2_ExchangeByte
  5007  001E20                     
  5008                           ;sdCard.c: 55: 
  5009  001E20  0E58               	movlw	88
  5010  001E22  ECC3  F011         	call	_SPI2_ExchangeByte
  5011  001E26                     
  5012                           ;sdCard.c: 56: 
  5013  001E26  500B               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5014  001E28  ECC3  F011         	call	_SPI2_ExchangeByte
  5015  001E2C                     
  5016                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5017  001E2C  500A               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5018  001E2E  ECC3  F011         	call	_SPI2_ExchangeByte
  5019  001E32                     
  5020                           ;sdCard.c: 58: 
  5021  001E32  5009               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5022  001E34  ECC3  F011         	call	_SPI2_ExchangeByte
  5023  001E38                     
  5024                           ;sdCard.c: 59: 
  5025  001E38  5008               	movf	SDCARD_WriteBlock@addr^0,w,c
  5026  001E3A  ECC3  F011         	call	_SPI2_ExchangeByte
  5027  001E3E                     
  5028                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  5029  001E3E  0EFF               	movlw	255
  5030  001E40  ECC3  F011         	call	_SPI2_ExchangeByte
  5031  001E44                     l3475:
  5032  001E44  0EFF               	movlw	255
  5033  001E46  ECC3  F011         	call	_SPI2_ExchangeByte
  5034  001E4A  0AFF               	xorlw	255
  5035  001E4C  B4D8               	btfsc	status,2,c
  5036  001E4E  EF2B  F00F         	goto	u2791
  5037  001E52  EF2D  F00F         	goto	u2790
  5038  001E56                     u2791:
  5039  001E56  EF22  F00F         	goto	l3475
  5040  001E5A                     u2790:
  5041  001E5A                     
  5042                           ;sdCard.c: 66: 
  5043  001E5A  0EFF               	movlw	255
  5044  001E5C  ECC3  F011         	call	_SPI2_ExchangeByte
  5045                           
  5046                           ;sdCard.c: 67: 
  5047  001E60  0EFF               	movlw	255
  5048  001E62  ECC3  F011         	call	_SPI2_ExchangeByte
  5049                           
  5050                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  5051  001E66  0EFF               	movlw	255
  5052  001E68  ECC3  F011         	call	_SPI2_ExchangeByte
  5053                           
  5054                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  5055  001E6C  0EFE               	movlw	254
  5056  001E6E  ECC3  F011         	call	_SPI2_ExchangeByte
  5057  001E72                     
  5058                           ;sdCard.c: 74: 
  5059  001E72  0E00               	movlw	0
  5060  001E74  6E0F               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  5061  001E76  0E00               	movlw	0
  5062  001E78  6E0E               	movwf	SDCARD_WriteBlock@i^0,c
  5063  001E7A                     l3485:
  5064                           
  5065                           ;sdCard.c: 75: 
  5066  001E7A  500E               	movf	SDCARD_WriteBlock@i^0,w,c
  5067  001E7C  240C               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  5068  001E7E  6ED9               	movwf	fsr2l,c
  5069  001E80  500F               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  5070  001E82  200D               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  5071  001E84  6EDA               	movwf	fsr2h,c
  5072  001E86  50DF               	movf	indf2,w,c
  5073  001E88  ECC3  F011         	call	_SPI2_ExchangeByte
  5074  001E8C  4A0E               	infsnz	SDCARD_WriteBlock@i^0,f,c
  5075  001E8E  2A0F               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  5076  001E90  0E02               	movlw	2
  5077  001E92  5C0F               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  5078  001E94  A0D8               	btfss	status,0,c
  5079  001E96  EF4F  F00F         	goto	u2801
  5080  001E9A  EF51  F00F         	goto	u2800
  5081  001E9E                     u2801:
  5082  001E9E  EF3D  F00F         	goto	l3485
  5083  001EA2                     u2800:
  5084  001EA2  888A               	bsf	138,4,c	;volatile
  5085  001EA4  0012               	return		;funcret
  5086  001EA6                     __end_of_SDCARD_WriteBlock:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _SDCARD_ReadBlock *****************
  5090 ;; Defined at:
  5091 ;;		line 13 in file "sdCard.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  addr            4    7[COMRAM] unsigned long 
  5094 ;;  sdCardBuffer    2   11[COMRAM] PTR unsigned char 
  5095 ;;		 -> firstBuffer(512), 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  i               2   13[COMRAM] unsigned short 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5107 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;Total ram usage:        8 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    5
  5114 ;; This function calls:
  5115 ;;		_SPI2_ExchangeByte
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text18
  5122  001CE8                     __ptext18:
  5123                           	callstack 0
  5124  001CE8                     _SDCARD_ReadBlock:
  5125                           	callstack 25
  5126  001CE8  988A               	bcf	138,4,c	;volatile
  5127  001CEA                     
  5128                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  5129  001CEA  0EFF               	movlw	255
  5130  001CEC  ECC3  F011         	call	_SPI2_ExchangeByte
  5131  001CF0                     
  5132                           ;sdCard.c: 19: 
  5133  001CF0  0E51               	movlw	81
  5134  001CF2  ECC3  F011         	call	_SPI2_ExchangeByte
  5135  001CF6                     
  5136                           ;sdCard.c: 20: 
  5137  001CF6  500B               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  5138  001CF8  ECC3  F011         	call	_SPI2_ExchangeByte
  5139  001CFC                     
  5140                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5141  001CFC  500A               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  5142  001CFE  ECC3  F011         	call	_SPI2_ExchangeByte
  5143  001D02                     
  5144                           ;sdCard.c: 22: 
  5145  001D02  5009               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  5146  001D04  ECC3  F011         	call	_SPI2_ExchangeByte
  5147  001D08                     
  5148                           ;sdCard.c: 23: 
  5149  001D08  5008               	movf	SDCARD_ReadBlock@addr^0,w,c
  5150  001D0A  ECC3  F011         	call	_SPI2_ExchangeByte
  5151  001D0E                     
  5152                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5153  001D0E  0EFF               	movlw	255
  5154  001D10  ECC3  F011         	call	_SPI2_ExchangeByte
  5155  001D14                     l3383:
  5156  001D14  0EFF               	movlw	255
  5157  001D16  ECC3  F011         	call	_SPI2_ExchangeByte
  5158  001D1A  0AFF               	xorlw	255
  5159  001D1C  B4D8               	btfsc	status,2,c
  5160  001D1E  EF93  F00E         	goto	u2671
  5161  001D22  EF95  F00E         	goto	u2670
  5162  001D26                     u2671:
  5163  001D26  EF8A  F00E         	goto	l3383
  5164  001D2A                     u2670:
  5165  001D2A                     l3385:
  5166  001D2A  0EFF               	movlw	255
  5167  001D2C  ECC3  F011         	call	_SPI2_ExchangeByte
  5168  001D30  0AFF               	xorlw	255
  5169  001D32  B4D8               	btfsc	status,2,c
  5170  001D34  EF9E  F00E         	goto	u2681
  5171  001D38  EFA0  F00E         	goto	u2680
  5172  001D3C                     u2681:
  5173  001D3C  EF95  F00E         	goto	l3385
  5174  001D40                     u2680:
  5175  001D40                     
  5176                           ;sdCard.c: 33: 
  5177  001D40  0E00               	movlw	0
  5178  001D42  6E0F               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  5179  001D44  0E00               	movlw	0
  5180  001D46  6E0E               	movwf	SDCARD_ReadBlock@i^0,c
  5181  001D48                     l3393:
  5182                           
  5183                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  5184  001D48  500E               	movf	SDCARD_ReadBlock@i^0,w,c
  5185  001D4A  240C               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  5186  001D4C  6ED9               	movwf	fsr2l,c
  5187  001D4E  500F               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  5188  001D50  200D               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  5189  001D52  6EDA               	movwf	fsr2h,c
  5190  001D54  0EFF               	movlw	255
  5191  001D56  ECC3  F011         	call	_SPI2_ExchangeByte
  5192  001D5A  6EDF               	movwf	indf2,c
  5193  001D5C  4A0E               	infsnz	SDCARD_ReadBlock@i^0,f,c
  5194  001D5E  2A0F               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  5195  001D60  0E02               	movlw	2
  5196  001D62  5C0F               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  5197  001D64  A0D8               	btfss	status,0,c
  5198  001D66  EFB7  F00E         	goto	u2691
  5199  001D6A  EFB9  F00E         	goto	u2690
  5200  001D6E                     u2691:
  5201  001D6E  EFA4  F00E         	goto	l3393
  5202  001D72                     u2690:
  5203  001D72                     
  5204                           ;sdCard.c: 37: 
  5205  001D72  0EFF               	movlw	255
  5206  001D74  ECC3  F011         	call	_SPI2_ExchangeByte
  5207                           
  5208                           ;sdCard.c: 38: 
  5209  001D78  0EFF               	movlw	255
  5210  001D7A  ECC3  F011         	call	_SPI2_ExchangeByte
  5211  001D7E  888A               	bsf	138,4,c	;volatile
  5212  001D80  0012               	return		;funcret
  5213  001D82                     __end_of_SDCARD_ReadBlock:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function _SDCARD_PollWriteComplete *****************
  5217 ;; Defined at:
  5218 ;;		line 86 in file "sdCard.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  status          1    7[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      unsigned char 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        1 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    5
  5239 ;; This function calls:
  5240 ;;		_SPI2_ExchangeByte
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text19
  5247  0020BA                     __ptext19:
  5248                           	callstack 0
  5249  0020BA                     _SDCARD_PollWriteComplete:
  5250                           	callstack 25
  5251  0020BA  988A               	bcf	138,4,c	;volatile
  5252  0020BC                     
  5253                           ;sdCard.c: 91: 
  5254  0020BC  0E0D               	movlw	13
  5255  0020BE  ECC3  F011         	call	_SPI2_ExchangeByte
  5256  0020C2  6E08               	movwf	SDCARD_PollWriteComplete@status^0,c
  5257  0020C4  888A               	bsf	138,4,c	;volatile
  5258  0020C6                     
  5259                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  5260  0020C6  2808               	incf	SDCARD_PollWriteComplete@status^0,w,c
  5261  0020C8  A4D8               	btfss	status,2,c
  5262  0020CA  EF69  F010         	goto	u2811
  5263  0020CE  EF6B  F010         	goto	u2810
  5264  0020D2                     u2811:
  5265  0020D2  EF6E  F010         	goto	l3503
  5266  0020D6                     u2810:
  5267  0020D6                     
  5268                           ;sdCard.c: 95:         return (status);
  5269  0020D6  0EFF               	movlw	255
  5270  0020D8  EF78  F010         	goto	l427
  5271  0020DC                     l3503:
  5272                           
  5273                           ;sdCard.c: 98: }
  5274  0020DC  0EFF               	movlw	255
  5275  0020DE  ECC3  F011         	call	_SPI2_ExchangeByte
  5276                           
  5277                           ;sdCard.c: 99: 
  5278  0020E2  0EFF               	movlw	255
  5279  0020E4  ECC3  F011         	call	_SPI2_ExchangeByte
  5280                           
  5281                           ;sdCard.c: 100: 
  5282  0020E8  0EFF               	movlw	255
  5283  0020EA  ECC3  F011         	call	_SPI2_ExchangeByte
  5284  0020EE                     
  5285                           ;sdCard.c: 101: 
  5286  0020EE  5008               	movf	SDCARD_PollWriteComplete@status^0,w,c
  5287  0020F0                     l427:
  5288  0020F0  0012               	return		;funcret
  5289  0020F2                     __end_of_SDCARD_PollWriteComplete:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _SDCARD_Initialize *****************
  5293 ;; Defined at:
  5294 ;;		line 111 in file "sdCard.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  verbose         1    wreg     unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  verbose         1   43[BANK0 ] unsigned char 
  5299 ;;  i               2   41[BANK0 ] int 
  5300 ;;  response        1   44[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;Total ram usage:        4 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:   13
  5317 ;; This function calls:
  5318 ;;		_SPI2_ExchangeByte
  5319 ;;		_printf
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text20
  5326  00171A                     __ptext20:
  5327                           	callstack 0
  5328  00171A                     _SDCARD_Initialize:
  5329                           	callstack 17
  5330                           
  5331                           ;incstack = 0
  5332                           ;SDCARD_Initialize@verbose stored from wreg
  5333  00171A  0100               	movlb	0	; () banked
  5334  00171C  6F8B               	movwf	SDCARD_Initialize@verbose& (0+255),b
  5335  00171E                     
  5336                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  5337  00171E  0E00               	movlw	0
  5338  001720  0100               	movlb	0	; () banked
  5339  001722  6F8A               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  5340  001724  0E00               	movlw	0
  5341  001726  6F89               	movwf	SDCARD_Initialize@i& (0+255),b
  5342  001728                     l3995:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  5346  001728  0EFF               	movlw	255
  5347  00172A  ECC3  F011         	call	_SPI2_ExchangeByte
  5348  00172E                     
  5349                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  5350  00172E  0100               	movlb	0	; () banked
  5351  001730  4B89               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  5352  001732  2B8A               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  5353  001734                     
  5354                           ; BSR set to: 0
  5355  001734  BF8A               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  5356  001736  EFA6  F00B         	goto	u3201
  5357  00173A  518A               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  5358  00173C  E109               	bnz	u3200
  5359  00173E  0E0A               	movlw	10
  5360  001740  5D89               	subwf	SDCARD_Initialize@i& (0+255),w,b
  5361  001742  A0D8               	btfss	status,0,c
  5362  001744  EFA6  F00B         	goto	u3201
  5363  001748  EFA8  F00B         	goto	u3200
  5364  00174C                     u3201:
  5365  00174C  EF94  F00B         	goto	l3995
  5366  001750                     u3200:
  5367  001750                     
  5368                           ; BSR set to: 0
  5369  001750  988A               	bcf	138,4,c	;volatile
  5370  001752                     
  5371                           ; BSR set to: 0
  5372                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  5373  001752  0EFF               	movlw	255
  5374  001754  ECC3  F011         	call	_SPI2_ExchangeByte
  5375                           
  5376                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  5377  001758  0E40               	movlw	64
  5378  00175A  ECC3  F011         	call	_SPI2_ExchangeByte
  5379                           
  5380                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  5381  00175E  0E00               	movlw	0
  5382  001760  ECC3  F011         	call	_SPI2_ExchangeByte
  5383                           
  5384                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  5385  001764  0E00               	movlw	0
  5386  001766  ECC3  F011         	call	_SPI2_ExchangeByte
  5387                           
  5388                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  5389  00176A  0E00               	movlw	0
  5390  00176C  ECC3  F011         	call	_SPI2_ExchangeByte
  5391                           
  5392                           ;sdCard.c: 130: 
  5393  001770  0E00               	movlw	0
  5394  001772  ECC3  F011         	call	_SPI2_ExchangeByte
  5395                           
  5396                           ;sdCard.c: 131: 
  5397  001776  0E95               	movlw	149
  5398  001778  ECC3  F011         	call	_SPI2_ExchangeByte
  5399                           
  5400                           ;sdCard.c: 132: 
  5401  00177C  0EFF               	movlw	255
  5402  00177E  ECC3  F011         	call	_SPI2_ExchangeByte
  5403                           
  5404                           ;sdCard.c: 133:     do {
  5405  001782  0EFF               	movlw	255
  5406  001784  ECC3  F011         	call	_SPI2_ExchangeByte
  5407  001788  0100               	movlb	0	; () banked
  5408  00178A  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  5409  00178C                     
  5410                           ; BSR set to: 0
  5411  00178C  888A               	bsf	138,4,c	;volatile
  5412  00178E                     
  5413                           ; BSR set to: 0
  5414                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  5415  00178E  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5416  001790  A4D8               	btfss	status,2,c
  5417  001792  EFCD  F00B         	goto	u3211
  5418  001796  EFCF  F00B         	goto	u3210
  5419  00179A                     u3211:
  5420  00179A  EFD8  F00B         	goto	l4009
  5421  00179E                     u3210:
  5422  00179E                     
  5423                           ; BSR set to: 0
  5424  00179E  0EA9               	movlw	low STR_54
  5425  0017A0  6F7F               	movwf	printf@fmt& (0+255),b
  5426  0017A2  0EFE               	movlw	high STR_54
  5427  0017A4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  5428  0017A6  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  5429  0017AA  6B82               	clrf	(?_printf+3)& (0+255),b
  5430  0017AC  EC81  F011         	call	_printf	;wreg free
  5431  0017B0                     l4009:
  5432  0017B0  988A               	bcf	138,4,c	;volatile
  5433  0017B2                     
  5434                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  5435  0017B2  0EFF               	movlw	255
  5436  0017B4  ECC3  F011         	call	_SPI2_ExchangeByte
  5437  0017B8                     
  5438                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  5439  0017B8  0E41               	movlw	65
  5440  0017BA  ECC3  F011         	call	_SPI2_ExchangeByte
  5441  0017BE                     
  5442                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  5443  0017BE  0E00               	movlw	0
  5444  0017C0  ECC3  F011         	call	_SPI2_ExchangeByte
  5445  0017C4                     
  5446                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  5447  0017C4  0E00               	movlw	0
  5448  0017C6  ECC3  F011         	call	_SPI2_ExchangeByte
  5449  0017CA                     
  5450                           ;sdCard.c: 145:     } while (response != 0);
  5451  0017CA  0E00               	movlw	0
  5452  0017CC  ECC3  F011         	call	_SPI2_ExchangeByte
  5453  0017D0                     
  5454                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  5455  0017D0  0E00               	movlw	0
  5456  0017D2  ECC3  F011         	call	_SPI2_ExchangeByte
  5457  0017D6                     
  5458                           ;sdCard.c: 147: 
  5459  0017D6  0EFF               	movlw	255
  5460  0017D8  ECC3  F011         	call	_SPI2_ExchangeByte
  5461  0017DC                     
  5462                           ;sdCard.c: 148: 
  5463  0017DC  0EFF               	movlw	255
  5464  0017DE  ECC3  F011         	call	_SPI2_ExchangeByte
  5465  0017E2                     
  5466                           ;sdCard.c: 149: 
  5467  0017E2  0EFF               	movlw	255
  5468  0017E4  ECC3  F011         	call	_SPI2_ExchangeByte
  5469  0017E8  0100               	movlb	0	; () banked
  5470  0017EA  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  5471  0017EC                     
  5472                           ; BSR set to: 0
  5473  0017EC  888A               	bsf	138,4,c	;volatile
  5474  0017EE                     
  5475                           ; BSR set to: 0
  5476                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  5477  0017EE  518C               	movf	SDCARD_Initialize@response& (0+255),w,b
  5478  0017F0  A4D8               	btfss	status,2,c
  5479  0017F2  EFFD  F00B         	goto	u3221
  5480  0017F6  EFFF  F00B         	goto	u3220
  5481  0017FA                     u3221:
  5482  0017FA  EFD8  F00B         	goto	l4009
  5483  0017FE                     u3220:
  5484  0017FE                     
  5485                           ; BSR set to: 0
  5486                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  5487  0017FE  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5488  001800  A4D8               	btfss	status,2,c
  5489  001802  EF05  F00C         	goto	u3231
  5490  001806  EF07  F00C         	goto	u3230
  5491  00180A                     u3231:
  5492  00180A  EF10  F00C         	goto	l4037
  5493  00180E                     u3230:
  5494  00180E                     
  5495                           ; BSR set to: 0
  5496  00180E  0EC4               	movlw	low STR_55
  5497  001810  6F7F               	movwf	printf@fmt& (0+255),b
  5498  001812  0EFE               	movlw	high STR_55
  5499  001814  6F80               	movwf	(printf@fmt+1)& (0+255),b
  5500  001816  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  5501  00181A  6B82               	clrf	(?_printf+3)& (0+255),b
  5502  00181C  EC81  F011         	call	_printf	;wreg free
  5503  001820                     l4037:
  5504  001820  988A               	bcf	138,4,c	;volatile
  5505  001822                     
  5506                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  5507  001822  0EFF               	movlw	255
  5508  001824  ECC3  F011         	call	_SPI2_ExchangeByte
  5509  001828                     
  5510                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  5511  001828  0E50               	movlw	80
  5512  00182A  ECC3  F011         	call	_SPI2_ExchangeByte
  5513  00182E                     
  5514                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  5515  00182E  0E00               	movlw	0
  5516  001830  ECC3  F011         	call	_SPI2_ExchangeByte
  5517  001834                     
  5518                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  5519  001834  0E00               	movlw	0
  5520  001836  ECC3  F011         	call	_SPI2_ExchangeByte
  5521  00183A                     
  5522                           ;sdCard.c: 162:     } while (response == 0xFF);
  5523  00183A  0E02               	movlw	2
  5524  00183C  ECC3  F011         	call	_SPI2_ExchangeByte
  5525  001840                     
  5526                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  5527  001840  0E00               	movlw	0
  5528  001842  ECC3  F011         	call	_SPI2_ExchangeByte
  5529  001846                     
  5530                           ;sdCard.c: 164: 
  5531  001846  0EFF               	movlw	255
  5532  001848  ECC3  F011         	call	_SPI2_ExchangeByte
  5533  00184C                     
  5534                           ;sdCard.c: 165: }
  5535  00184C  0EFF               	movlw	255
  5536  00184E  ECC3  F011         	call	_SPI2_ExchangeByte
  5537  001852                     
  5538                           ;sdCard.c: 166: 
  5539  001852  0EFF               	movlw	255
  5540  001854  ECC3  F011         	call	_SPI2_ExchangeByte
  5541  001858  0100               	movlb	0	; () banked
  5542  00185A  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  5543  00185C                     
  5544                           ; BSR set to: 0
  5545  00185C  888A               	bsf	138,4,c	;volatile
  5546  00185E                     
  5547                           ; BSR set to: 0
  5548                           ;sdCard.c: 168: 
  5549  00185E  298C               	incf	SDCARD_Initialize@response& (0+255),w,b
  5550  001860  B4D8               	btfsc	status,2,c
  5551  001862  EF35  F00C         	goto	u3241
  5552  001866  EF37  F00C         	goto	u3240
  5553  00186A                     u3241:
  5554  00186A  EF10  F00C         	goto	l4037
  5555  00186E                     u3240:
  5556  00186E                     
  5557                           ; BSR set to: 0
  5558                           ;sdCard.c: 169: 
  5559  00186E  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5560  001870  A4D8               	btfss	status,2,c
  5561  001872  EF3D  F00C         	goto	u3251
  5562  001876  EF3F  F00C         	goto	u3250
  5563  00187A                     u3251:
  5564  00187A  EF48  F00C         	goto	l452
  5565  00187E                     u3250:
  5566  00187E                     
  5567                           ; BSR set to: 0
  5568  00187E  0E71               	movlw	low STR_56
  5569  001880  6F7F               	movwf	printf@fmt& (0+255),b
  5570  001882  0EFE               	movlw	high STR_56
  5571  001884  6F80               	movwf	(printf@fmt+1)& (0+255),b
  5572  001886  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  5573  00188A  6B82               	clrf	(?_printf+3)& (0+255),b
  5574  00188C  EC81  F011         	call	_printf	;wreg free
  5575  001890                     l452:
  5576  001890  0012               	return		;funcret
  5577  001892                     __end_of_SDCARD_Initialize:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _printf *****************
  5581 ;; Defined at:
  5582 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  5585 ;;		 -> STR_67(3), STR_66(3), STR_65(2), STR_64(4), 
  5586 ;;		 -> STR_63(6), STR_62(3), STR_61(3), STR_60(2), 
  5587 ;;		 -> STR_59(3), STR_58(2), STR_57(4), STR_56(28), 
  5588 ;;		 -> STR_55(26), STR_54(27), STR_53(17), STR_52(255), 
  5589 ;;		 -> STR_51(5), STR_50(399), STR_49(44), STR_48(41), 
  5590 ;;		 -> STR_47(41), STR_46(16), STR_45(89), STR_44(3), 
  5591 ;;		 -> STR_43(5), STR_42(2), STR_41(5), STR_40(17), 
  5592 ;;		 -> STR_39(15), STR_38(3), STR_37(5), STR_36(2), 
  5593 ;;		 -> STR_35(5), STR_34(19), STR_33(20), STR_32(28), 
  5594 ;;		 -> STR_31(20), STR_30(30), STR_29(2), STR_28(2), 
  5595 ;;		 -> STR_27(8), STR_26(52), STR_25(32), STR_24(44), 
  5596 ;;		 -> STR_23(50), STR_22(52), STR_21(55), STR_20(43), 
  5597 ;;		 -> STR_19(37), STR_18(52), STR_17(24), STR_16(52), 
  5598 ;;		 -> STR_15(24), STR_14(21), STR_13(7), STR_12(15), 
  5599 ;;		 -> STR_11(52), STR_10(3), STR_9(5), STR_8(2), 
  5600 ;;		 -> STR_7(5), STR_6(19), STR_5(54), STR_4(42), 
  5601 ;;		 -> STR_3(9), STR_2(18), STR_1(11), 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  ap              2   39[BANK0 ] PTR void [1]
  5604 ;;		 -> ?_printf(2), 
  5605 ;;  ret             2    0        int 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2   31[BANK0 ] int 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;Total ram usage:       10 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:   12
  5622 ;; This function calls:
  5623 ;;		_vfprintf
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;;		_SDCARD_Initialize
  5627 ;;		_hexDumpBuffer
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text21
  5632  002302                     __ptext21:
  5633                           	callstack 0
  5634  002302                     _printf:
  5635                           	callstack 18
  5636  002302  0E81               	movlw	low (?_printf+2)
  5637  002304  0100               	movlb	0	; () banked
  5638  002306  6F87               	movwf	printf@ap& (0+255),b
  5639  002308  0E00               	movlw	high (?_printf+2)
  5640  00230A  6F88               	movwf	(printf@ap+1)& (0+255),b
  5641  00230C                     
  5642                           ; BSR set to: 0
  5643  00230C  0E00               	movlw	0
  5644  00230E  6F79               	movwf	vfprintf@fp& (0+255),b
  5645  002310  0E00               	movlw	0
  5646  002312  6F7A               	movwf	(vfprintf@fp+1)& (0+255),b
  5647  002314  C07F  F07B         	movff	printf@fmt,vfprintf@fmt
  5648  002318  C080  F07C         	movff	printf@fmt+1,vfprintf@fmt+1
  5649  00231C  0E87               	movlw	low printf@ap
  5650  00231E  6F7D               	movwf	vfprintf@ap& (0+255),b
  5651  002320  0E00               	movlw	high printf@ap
  5652  002322  6F7E               	movwf	(vfprintf@ap+1)& (0+255),b
  5653  002324  EC53  F00F         	call	_vfprintf	;wreg free
  5654  002328  0012               	return		;funcret
  5655  00232A                     __end_of_printf:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function _vfprintf *****************
  5659 ;; Defined at:
  5660 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  5663 ;;		 -> NULL(0), 
  5664 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  5665 ;;		 -> STR_67(3), STR_66(3), STR_65(2), STR_64(4), 
  5666 ;;		 -> STR_63(6), STR_62(3), STR_61(3), STR_60(2), 
  5667 ;;		 -> STR_59(3), STR_58(2), STR_57(4), STR_56(28), 
  5668 ;;		 -> STR_55(26), STR_54(27), STR_53(17), STR_52(255), 
  5669 ;;		 -> STR_51(5), STR_50(399), STR_49(44), STR_48(41), 
  5670 ;;		 -> STR_47(41), STR_46(16), STR_45(89), STR_44(3), 
  5671 ;;		 -> STR_43(5), STR_42(2), STR_41(5), STR_40(17), 
  5672 ;;		 -> STR_39(15), STR_38(3), STR_37(5), STR_36(2), 
  5673 ;;		 -> STR_35(5), STR_34(19), STR_33(20), STR_32(28), 
  5674 ;;		 -> STR_31(20), STR_30(30), STR_29(2), STR_28(2), 
  5675 ;;		 -> STR_27(8), STR_26(52), STR_25(32), STR_24(44), 
  5676 ;;		 -> STR_23(50), STR_22(52), STR_21(55), STR_20(43), 
  5677 ;;		 -> STR_19(37), STR_18(52), STR_17(24), STR_16(52), 
  5678 ;;		 -> STR_15(24), STR_14(21), STR_13(7), STR_12(15), 
  5679 ;;		 -> STR_11(52), STR_10(3), STR_9(5), STR_8(2), 
  5680 ;;		 -> STR_7(5), STR_6(19), STR_5(54), STR_4(42), 
  5681 ;;		 -> STR_3(9), STR_2(18), STR_1(11), 
  5682 ;;  ap              2   29[BANK0 ] PTR PTR void 
  5683 ;;		 -> printf@ap(2), 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  cfmt            2   80[COMRAM] PTR unsigned char 
  5686 ;;		 -> STR_67(3), STR_66(3), STR_65(2), STR_64(4), 
  5687 ;;		 -> STR_63(6), STR_62(3), STR_61(3), STR_60(2), 
  5688 ;;		 -> STR_59(3), STR_58(2), STR_57(4), STR_56(28), 
  5689 ;;		 -> STR_55(26), STR_54(27), STR_53(17), STR_52(255), 
  5690 ;;		 -> STR_51(5), STR_50(399), STR_49(44), STR_48(41), 
  5691 ;;		 -> STR_47(41), STR_46(16), STR_45(89), STR_44(3), 
  5692 ;;		 -> STR_43(5), STR_42(2), STR_41(5), STR_40(17), 
  5693 ;;		 -> STR_39(15), STR_38(3), STR_37(5), STR_36(2), 
  5694 ;;		 -> STR_35(5), STR_34(19), STR_33(20), STR_32(28), 
  5695 ;;		 -> STR_31(20), STR_30(30), STR_29(2), STR_28(2), 
  5696 ;;		 -> STR_27(8), STR_26(52), STR_25(32), STR_24(44), 
  5697 ;;		 -> STR_23(50), STR_22(52), STR_21(55), STR_20(43), 
  5698 ;;		 -> STR_19(37), STR_18(52), STR_17(24), STR_16(52), 
  5699 ;;		 -> STR_15(24), STR_14(21), STR_13(7), STR_12(15), 
  5700 ;;		 -> STR_11(52), STR_10(3), STR_9(5), STR_8(2), 
  5701 ;;		 -> STR_7(5), STR_6(19), STR_5(54), STR_4(42), 
  5702 ;;		 -> STR_3(9), STR_2(18), STR_1(11), 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2   25[BANK0 ] int 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;Total ram usage:        8 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:   11
  5719 ;; This function calls:
  5720 ;;		_vfpfcnvrt
  5721 ;; This function is called by:
  5722 ;;		_printf
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text22
  5727  001EA6                     __ptext22:
  5728                           	callstack 0
  5729  001EA6                     _vfprintf:
  5730                           	callstack 18
  5731  001EA6                     
  5732                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5733  001EA6  C07B  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  5734  001EAA  C07C  F052         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5735  001EAE                     
  5736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5737  001EAE  0E00               	movlw	0
  5738  001EB0  0100               	movlb	0	; () banked
  5739  001EB2  6FA8               	movwf	(_nout+1)& (0+255),b
  5740  001EB4  0E00               	movlw	0
  5741  001EB6  6FA7               	movwf	_nout& (0+255),b
  5742                           
  5743                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5744  001EB8  EF71  F00F         	goto	l3981
  5745  001EBC                     l3979:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5749  001EBC  C079  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  5750  001EC0  C07A  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5751  001EC4  0E51               	movlw	low vfprintf@cfmt
  5752  001EC6  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  5753  001EC8  0E00               	movlw	high vfprintf@cfmt
  5754  001ECA  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5755  001ECC  C07D  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  5756  001ED0  C07E  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5757  001ED4  ECC0  F003         	call	_vfpfcnvrt	;wreg free
  5758  001ED8  504B               	movf	?_vfpfcnvrt^0,w,c
  5759  001EDA  0100               	movlb	0	; () banked
  5760  001EDC  27A7               	addwf	_nout& (0+255),f,b
  5761  001EDE  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  5762  001EE0  23A8               	addwfc	(_nout+1)& (0+255),f,b
  5763  001EE2                     l3981:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5767  001EE2  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  5768  001EE6  C052  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5769  001EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5770  001EEA  6AF8               	clrf	tblptru,c
  5771  001EEC                     	endif
  5772  001EEC                     	if	0	;tblptru may be non-zero
  5773  001EEC                     	endif
  5774  001EEC  0008               	tblrd		*
  5775  001EEE  50F5               	movf	tablat,w,c
  5776  001EF0  0900               	iorlw	0
  5777  001EF2  A4D8               	btfss	status,2,c
  5778  001EF4  EF7E  F00F         	goto	u3191
  5779  001EF8  EF80  F00F         	goto	u3190
  5780  001EFC                     u3191:
  5781  001EFC  EF5E  F00F         	goto	l3979
  5782  001F00                     u3190:
  5783  001F00                     
  5784                           ; BSR set to: 0
  5785                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5786  001F00  C0A7  F079         	movff	_nout,?_vfprintf
  5787  001F04  C0A8  F07A         	movff	_nout+1,?_vfprintf+1
  5788  001F08                     
  5789                           ; BSR set to: 0
  5790  001F08  0012               	return		;funcret
  5791  001F0A                     __end_of_vfprintf:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _vfpfcnvrt *****************
  5795 ;; Defined at:
  5796 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  5799 ;;		 -> NULL(0), 
  5800 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  5801 ;;		 -> vfprintf@cfmt(2), 
  5802 ;;  ap              2   78[COMRAM] PTR PTR void 
  5803 ;;		 -> printf@ap(2), 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  llu             8   12[BANK0 ] unsigned long long 
  5806 ;;  ll              8    4[BANK0 ] long long 
  5807 ;;  f               4    0        long long 
  5808 ;;  vp              3    0        PTR void 
  5809 ;;  ct              3    0        unsigned char [3]
  5810 ;;  cp              3    0        PTR unsigned char 
  5811 ;;  done            2   20[BANK0 ] int 
  5812 ;;  i               2    0        int 
  5813 ;;  c               1   24[BANK0 ] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  2   74[COMRAM] int 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:         6      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:       31 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:   10
  5830 ;; This function calls:
  5831 ;;		_atoi
  5832 ;;		_ctoa
  5833 ;;		_dtoa
  5834 ;;		_fputc
  5835 ;;		_isdigit
  5836 ;;		_xtoa
  5837 ;; This function is called by:
  5838 ;;		_vfprintf
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text23
  5843  000780                     __ptext23:
  5844                           	callstack 0
  5845  000780                     _vfpfcnvrt:
  5846                           	callstack 18
  5847  000780                     
  5848                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5849  000780  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5850  000784  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5851  000788  CFDE FFF6          	movff	postinc2,tblptrl
  5852  00078C  CFDD FFF7          	movff	postdec2,tblptrh
  5853  000790                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5854  000790  6AF8               	clrf	tblptru,c
  5855  000792                     	endif
  5856  000792                     	if	0	;tblptru may be non-zero
  5857  000792                     	endif
  5858  000792  0008               	tblrd		*
  5859  000794  50F5               	movf	tablat,w,c
  5860  000796  0A25               	xorlw	37
  5861  000798  A4D8               	btfss	status,2,c
  5862  00079A  EFD1  F003         	goto	u3051
  5863  00079E  EFD3  F003         	goto	u3050
  5864  0007A2                     u3051:
  5865  0007A2  EF10  F006         	goto	l3959
  5866  0007A6                     u3050:
  5867  0007A6                     
  5868                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5869  0007A6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5870  0007AA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5871  0007AE  2ADE               	incf	postinc2,f,c
  5872  0007B0  0E00               	movlw	0
  5873  0007B2  22DD               	addwfc	postdec2,f,c
  5874  0007B4                     
  5875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5876  0007B4  0E00               	movlw	0
  5877  0007B6  6E54               	movwf	(_width+1)^0,c
  5878  0007B8  0E00               	movlw	0
  5879  0007BA  6E53               	movwf	_width^0,c
  5880  0007BC  C053  F055         	movff	_width,_flags
  5881  0007C0  C054  F056         	movff	_width+1,_flags+1
  5882  0007C4                     
  5883                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5884  0007C4  0100               	movlb	0	; () banked
  5885  0007C6  69A9               	setf	_prec& (0+255),b
  5886  0007C8  69AA               	setf	(_prec+1)& (0+255),b
  5887  0007CA                     
  5888                           ; BSR set to: 0
  5889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5890  0007CA  0E00               	movlw	0
  5891  0007CC  6F75               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5892  0007CE  0E00               	movlw	0
  5893  0007D0  6F74               	movwf	vfpfcnvrt@done& (0+255),b
  5894                           
  5895                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5896  0007D2  EF32  F004         	goto	l3889
  5897  0007D6                     l3863:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5901  0007D6  8055               	bsf	_flags^0,0,c
  5902  0007D8                     l3865:
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5906  0007D8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5907  0007DC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5908  0007E0  2ADE               	incf	postinc2,f,c
  5909  0007E2  0E00               	movlw	0
  5910  0007E4  22DD               	addwfc	postdec2,f,c
  5911                           
  5912                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5913  0007E6  EF32  F004         	goto	l3889
  5914  0007EA                     l3867:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5918  0007EA  8255               	bsf	_flags^0,1,c
  5919  0007EC  EFEC  F003         	goto	l3865
  5920  0007F0                     l3871:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5924  0007F0  8455               	bsf	_flags^0,2,c
  5925  0007F2  EFEC  F003         	goto	l3865
  5926  0007F6                     l3875:
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5930  0007F6  8655               	bsf	_flags^0,3,c
  5931  0007F8  EFEC  F003         	goto	l3865
  5932  0007FC                     l3879:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5936  0007FC  8855               	bsf	_flags^0,4,c
  5937  0007FE  EFEC  F003         	goto	l3865
  5938  000802                     l3883:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5942  000802  0E00               	movlw	0
  5943  000804  6F75               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5944  000806  0E01               	movlw	1
  5945  000808  6F74               	movwf	vfpfcnvrt@done& (0+255),b
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5948  00080A  EF32  F004         	goto	l3889
  5949  00080E                     l3887:
  5950                           
  5951                           ; BSR set to: 0
  5952  00080E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5953  000812  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5954  000816  CFDE FFF6          	movff	postinc2,tblptrl
  5955  00081A  CFDD FFF7          	movff	postdec2,tblptrh
  5956  00081E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5957  00081E  6AF8               	clrf	tblptru,c
  5958  000820                     	endif
  5959  000820                     	if	0	;tblptru may be non-zero
  5960  000820                     	endif
  5961  000820  0008               	tblrd		*
  5962  000822  50F5               	movf	tablat,w,c
  5963  000824  6F60               	movwf	??_vfpfcnvrt& (0+255),b
  5964  000826  6B61               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5965                           
  5966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5967                           ; Switch size 1, requested type "simple"
  5968                           ; Number of cases is 1, Range of values is 0 to 0
  5969                           ; switch strategies available:
  5970                           ; Name         Instructions Cycles
  5971                           ; simple_byte            4     3 (average)
  5972                           ;	Chosen strategy is simple_byte
  5973  000828  5161               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5974  00082A  0A00               	xorlw	0	; case 0
  5975  00082C  B4D8               	btfsc	status,2,c
  5976  00082E  EF1B  F004         	goto	l4393
  5977  000832  EF01  F004         	goto	l3883
  5978  000836                     l4393:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ; Switch size 1, requested type "simple"
  5982                           ; Number of cases is 5, Range of values is 32 to 48
  5983                           ; switch strategies available:
  5984                           ; Name         Instructions Cycles
  5985                           ; simple_byte           16     9 (average)
  5986                           ;	Chosen strategy is simple_byte
  5987  000836  5160               	movf	??_vfpfcnvrt& (0+255),w,b
  5988  000838  0A20               	xorlw	32	; case 32
  5989  00083A  B4D8               	btfsc	status,2,c
  5990  00083C  EFFB  F003         	goto	l3875
  5991  000840  0A03               	xorlw	3	; case 35
  5992  000842  B4D8               	btfsc	status,2,c
  5993  000844  EFFE  F003         	goto	l3879
  5994  000848  0A08               	xorlw	8	; case 43
  5995  00084A  B4D8               	btfsc	status,2,c
  5996  00084C  EFF8  F003         	goto	l3871
  5997  000850  0A06               	xorlw	6	; case 45
  5998  000852  B4D8               	btfsc	status,2,c
  5999  000854  EFEB  F003         	goto	l3863
  6000  000858  0A1D               	xorlw	29	; case 48
  6001  00085A  B4D8               	btfsc	status,2,c
  6002  00085C  EFF5  F003         	goto	l3867
  6003  000860  EF01  F004         	goto	l3883
  6004  000864                     l3889:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6008  000864  5174               	movf	vfpfcnvrt@done& (0+255),w,b
  6009  000866  1175               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6010  000868  B4D8               	btfsc	status,2,c
  6011  00086A  EF39  F004         	goto	u3061
  6012  00086E  EF3B  F004         	goto	u3060
  6013  000872                     u3061:
  6014  000872  EF07  F004         	goto	l3887
  6015  000876                     u3060:
  6016  000876                     
  6017                           ; BSR set to: 0
  6018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6019  000876  A055               	btfss	_flags^0,0,c
  6020  000878  EF40  F004         	goto	u3071
  6021  00087C  EF42  F004         	goto	u3070
  6022  000880                     u3071:
  6023  000880  EF43  F004         	goto	l3893
  6024  000884                     u3070:
  6025  000884                     
  6026                           ; BSR set to: 0
  6027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6028  000884  9255               	bcf	_flags^0,1,c
  6029  000886                     l3893:
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6033  000886  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6034  00088A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6035  00088E  CFDE FFF6          	movff	postinc2,tblptrl
  6036  000892  CFDD FFF7          	movff	postdec2,tblptrh
  6037  000896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6038  000896  6AF8               	clrf	tblptru,c
  6039  000898                     	endif
  6040  000898                     	if	0	;tblptru may be non-zero
  6041  000898                     	endif
  6042  000898  0008               	tblrd		*
  6043  00089A  50F5               	movf	tablat,w,c
  6044  00089C  0A2A               	xorlw	42
  6045  00089E  A4D8               	btfss	status,2,c
  6046  0008A0  EF54  F004         	goto	u3081
  6047  0008A4  EF56  F004         	goto	u3080
  6048  0008A8                     u3081:
  6049  0008A8  EF7F  F004         	goto	l3901
  6050  0008AC                     u3080:
  6051  0008AC                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6054  0008AC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6055  0008B0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6056  0008B4  2ADE               	incf	postinc2,f,c
  6057  0008B6  0E00               	movlw	0
  6058  0008B8  22DD               	addwfc	postdec2,f,c
  6059                           
  6060                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6061  0008BA  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6062  0008BE  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6063  0008C2  CFDF F060          	movff	indf2,??_vfpfcnvrt
  6064  0008C6  0E02               	movlw	2
  6065  0008C8  26DE               	addwf	postinc2,f,c
  6066  0008CA  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  6067  0008CE  0E00               	movlw	0
  6068  0008D0  22DD               	addwfc	postdec2,f,c
  6069  0008D2  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6070  0008D6  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6071  0008DA  CFDE F053          	movff	postinc2,_width
  6072  0008DE  CFDD F054          	movff	postdec2,_width+1
  6073  0008E2                     
  6074                           ; BSR set to: 0
  6075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6076  0008E2  BE54               	btfsc	(_width+1)^0,7,c
  6077  0008E4  EF78  F004         	goto	u3090
  6078  0008E8  EF76  F004         	goto	u3091
  6079  0008EC                     u3091:
  6080  0008EC  EFC4  F004         	goto	l3911
  6081  0008F0                     u3090:
  6082  0008F0                     
  6083                           ; BSR set to: 0
  6084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6085  0008F0  8055               	bsf	_flags^0,0,c
  6086                           
  6087                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6088  0008F2  6C53               	negf	_width^0,c
  6089  0008F4  1E54               	comf	(_width+1)^0,f,c
  6090  0008F6  B0D8               	btfsc	status,0,c
  6091  0008F8  2A54               	incf	(_width+1)^0,f,c
  6092  0008FA  EFC4  F004         	goto	l3911
  6093  0008FE                     l3901:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6097  0008FE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6098  000902  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6099  000906  CFDE F00E          	movff	postinc2,atoi@s
  6100  00090A  CFDD F00F          	movff	postdec2,atoi@s+1
  6101  00090E  ECFC  F009         	call	_atoi	;wreg free
  6102  000912  C00E  F053         	movff	?_atoi,_width
  6103  000916  C00F  F054         	movff	?_atoi+1,_width+1
  6104                           
  6105                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6106  00091A  EF96  F004         	goto	l3905
  6107  00091E                     l3903:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6111  00091E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6112  000922  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6113  000926  2ADE               	incf	postinc2,f,c
  6114  000928  0E00               	movlw	0
  6115  00092A  22DD               	addwfc	postdec2,f,c
  6116  00092C                     l3905:
  6117  00092C  0ED0               	movlw	208
  6118  00092E  0100               	movlb	0	; () banked
  6119  000930  6F60               	movwf	??_vfpfcnvrt& (0+255),b
  6120  000932  0EFF               	movlw	255
  6121  000934  6F61               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6122  000936  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6123  00093A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6124  00093E  CFDE FFF6          	movff	postinc2,tblptrl
  6125  000942  CFDD FFF7          	movff	postdec2,tblptrh
  6126  000946                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6127  000946  6AF8               	clrf	tblptru,c
  6128  000948                     	endif
  6129  000948                     	if	0	;tblptru may be non-zero
  6130  000948                     	endif
  6131  000948  0008               	tblrd		*
  6132  00094A  50F5               	movf	tablat,w,c
  6133  00094C  6F62               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6134  00094E  6B63               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6135  000950  5160               	movf	??_vfpfcnvrt& (0+255),w,b
  6136  000952  2762               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6137  000954  5161               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6138  000956  2363               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6139  000958  5163               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6140  00095A  E10A               	bnz	u3100
  6141  00095C  0E0A               	movlw	10
  6142  00095E  5D62               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6143  000960  A0D8               	btfss	status,0,c
  6144  000962  EFB5  F004         	goto	u3101
  6145  000966  EFB8  F004         	goto	u3100
  6146  00096A                     u3101:
  6147  00096A  0E01               	movlw	1
  6148  00096C  EFB9  F004         	goto	u3110
  6149  000970                     u3100:
  6150  000970  0E00               	movlw	0
  6151  000972                     u3110:
  6152  000972  6F76               	movwf	_vfpfcnvrt$1730& (0+255),b
  6153  000974  6B77               	clrf	(_vfpfcnvrt$1730+1)& (0+255),b
  6154  000976                     
  6155                           ; BSR set to: 0
  6156  000976  5176               	movf	_vfpfcnvrt$1730& (0+255),w,b
  6157  000978  1177               	iorwf	(_vfpfcnvrt$1730+1)& (0+255),w,b
  6158  00097A  A4D8               	btfss	status,2,c
  6159  00097C  EFC2  F004         	goto	u3121
  6160  000980  EFC4  F004         	goto	u3120
  6161  000984                     u3121:
  6162  000984  EF8F  F004         	goto	l3903
  6163  000988                     u3120:
  6164  000988                     l3911:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  6168  000988  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6169  00098C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6170  000990  CFDE FFF6          	movff	postinc2,tblptrl
  6171  000994  CFDD FFF7          	movff	postdec2,tblptrh
  6172  000998                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6173  000998  6AF8               	clrf	tblptru,c
  6174  00099A                     	endif
  6175  00099A                     	if	0	;tblptru may be non-zero
  6176  00099A                     	endif
  6177  00099A  0008               	tblrd		*
  6178  00099C  50F5               	movf	tablat,w,c
  6179  00099E  0A63               	xorlw	99
  6180  0009A0  A4D8               	btfss	status,2,c
  6181  0009A2  EFD5  F004         	goto	u3131
  6182  0009A6  EFD7  F004         	goto	u3130
  6183  0009AA                     u3131:
  6184  0009AA  EFFE  F004         	goto	l3919
  6185  0009AE                     u3130:
  6186  0009AE                     
  6187                           ; BSR set to: 0
  6188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  6189  0009AE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6190  0009B2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6191  0009B6  2ADE               	incf	postinc2,f,c
  6192  0009B8  0E00               	movlw	0
  6193  0009BA  22DD               	addwfc	postdec2,f,c
  6194                           
  6195                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6196  0009BC  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6197  0009C0  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6198  0009C4  CFDF F060          	movff	indf2,??_vfpfcnvrt
  6199  0009C8  0E02               	movlw	2
  6200  0009CA  26DE               	addwf	postinc2,f,c
  6201  0009CC  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  6202  0009D0  0E00               	movlw	0
  6203  0009D2  22DD               	addwfc	postdec2,f,c
  6204  0009D4  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6205  0009D8  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6206  0009DC  50DF               	movf	indf2,w,c
  6207  0009DE  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  6208  0009E0                     
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  6211  0009E0  C04B  F012         	movff	vfpfcnvrt@fp,ctoa@fp
  6212  0009E4  C04C  F013         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6213  0009E8  C078  F014         	movff	vfpfcnvrt@c,ctoa@c
  6214  0009EC  ECFB  F00C         	call	_ctoa	;wreg free
  6215  0009F0  C012  F04B         	movff	?_ctoa,?_vfpfcnvrt
  6216  0009F4  C013  F04C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6217  0009F8  EF2C  F006         	goto	l1291
  6218  0009FC                     l3919:
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6222  0009FC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6223  000A00  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6224  000A04  CFDE FFF6          	movff	postinc2,tblptrl
  6225  000A08  CFDD FFF7          	movff	postdec2,tblptrh
  6226  000A0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6227  000A0C  6AF8               	clrf	tblptru,c
  6228  000A0E                     	endif
  6229  000A0E                     	if	0	;tblptru may be non-zero
  6230  000A0E                     	endif
  6231  000A0E  0008               	tblrd		*
  6232  000A10  50F5               	movf	tablat,w,c
  6233  000A12  0A64               	xorlw	100
  6234  000A14  B4D8               	btfsc	status,2,c
  6235  000A16  EF0F  F005         	goto	u3141
  6236  000A1A  EF11  F005         	goto	u3140
  6237  000A1E                     u3141:
  6238  000A1E  EF24  F005         	goto	l3923
  6239  000A22                     u3140:
  6240  000A22                     
  6241                           ; BSR set to: 0
  6242  000A22  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6243  000A26  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6244  000A2A  CFDE FFF6          	movff	postinc2,tblptrl
  6245  000A2E  CFDD FFF7          	movff	postdec2,tblptrh
  6246  000A32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6247  000A32  6AF8               	clrf	tblptru,c
  6248  000A34                     	endif
  6249  000A34                     	if	0	;tblptru may be non-zero
  6250  000A34                     	endif
  6251  000A34  0008               	tblrd		*
  6252  000A36  50F5               	movf	tablat,w,c
  6253  000A38  0A69               	xorlw	105
  6254  000A3A  A4D8               	btfss	status,2,c
  6255  000A3C  EF22  F005         	goto	u3151
  6256  000A40  EF24  F005         	goto	u3150
  6257  000A44                     u3151:
  6258  000A44  EF64  F005         	goto	l3929
  6259  000A48                     u3150:
  6260  000A48                     l3923:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6264  000A48  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6265  000A4C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6266  000A50  2ADE               	incf	postinc2,f,c
  6267  000A52  0E00               	movlw	0
  6268  000A54  22DD               	addwfc	postdec2,f,c
  6269                           
  6270                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6271  000A56  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6272  000A5A  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6273  000A5E  CFDF F060          	movff	indf2,??_vfpfcnvrt
  6274  000A62  0E02               	movlw	2
  6275  000A64  26DE               	addwf	postinc2,f,c
  6276  000A66  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  6277  000A6A  0E00               	movlw	0
  6278  000A6C  22DD               	addwfc	postdec2,f,c
  6279  000A6E  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6280  000A72  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6281  000A76  CFDE F064          	movff	postinc2,vfpfcnvrt@ll
  6282  000A7A  CFDD F065          	movff	postdec2,vfpfcnvrt@ll+1
  6283  000A7E  0E00               	movlw	0
  6284  000A80  BF65               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6285  000A82  0EFF               	movlw	-1
  6286  000A84  6F66               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6287  000A86  6F67               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6288  000A88  6F68               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6289  000A8A  6F69               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6290  000A8C  6F6A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6291  000A8E  6F6B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6292  000A90                     
  6293                           ; BSR set to: 0
  6294                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6295  000A90  C04B  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  6296  000A94  C04C  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6297  000A98  C064  F026         	movff	vfpfcnvrt@ll,dtoa@d
  6298  000A9C  C065  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6299  000AA0  C066  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6300  000AA4  C067  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6301  000AA8  C068  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6302  000AAC  C069  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6303  000AB0  C06A  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6304  000AB4  C06B  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6305  000AB8  EC2D  F006         	call	_dtoa	;wreg free
  6306  000ABC  C024  F04B         	movff	?_dtoa,?_vfpfcnvrt
  6307  000AC0  C025  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6308  000AC4  EF2C  F006         	goto	l1291
  6309  000AC8                     l3929:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6313  000AC8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6314  000ACC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6315  000AD0  CFDE FFF6          	movff	postinc2,tblptrl
  6316  000AD4  CFDD FFF7          	movff	postdec2,tblptrh
  6317  000AD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6318  000AD8  6AF8               	clrf	tblptru,c
  6319  000ADA                     	endif
  6320  000ADA                     	if	0	;tblptru may be non-zero
  6321  000ADA                     	endif
  6322  000ADA  0008               	tblrd		*
  6323  000ADC  50F5               	movf	tablat,w,c
  6324  000ADE  0A78               	xorlw	120
  6325  000AE0  B4D8               	btfsc	status,2,c
  6326  000AE2  EF75  F005         	goto	u3161
  6327  000AE6  EF77  F005         	goto	u3160
  6328  000AEA                     u3161:
  6329  000AEA  EF8A  F005         	goto	l3933
  6330  000AEE                     u3160:
  6331  000AEE                     
  6332                           ; BSR set to: 0
  6333  000AEE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6334  000AF2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6335  000AF6  CFDE FFF6          	movff	postinc2,tblptrl
  6336  000AFA  CFDD FFF7          	movff	postdec2,tblptrh
  6337  000AFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6338  000AFE  6AF8               	clrf	tblptru,c
  6339  000B00                     	endif
  6340  000B00                     	if	0	;tblptru may be non-zero
  6341  000B00                     	endif
  6342  000B00  0008               	tblrd		*
  6343  000B02  50F5               	movf	tablat,w,c
  6344  000B04  0A58               	xorlw	88
  6345  000B06  A4D8               	btfss	status,2,c
  6346  000B08  EF88  F005         	goto	u3171
  6347  000B0C  EF8A  F005         	goto	u3170
  6348  000B10                     u3171:
  6349  000B10  EFD9  F005         	goto	l3943
  6350  000B14                     u3170:
  6351  000B14                     l3933:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  6355  000B14  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6356  000B18  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6357  000B1C  CFDE FFF6          	movff	postinc2,tblptrl
  6358  000B20  CFDD FFF7          	movff	postdec2,tblptrh
  6359  000B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6360  000B24  6AF8               	clrf	tblptru,c
  6361  000B26                     	endif
  6362  000B26                     	if	0	;tblptru may be non-zero
  6363  000B26                     	endif
  6364  000B26  0008               	tblrd		*
  6365  000B28  CFF5 F078          	movff	tablat,vfpfcnvrt@c
  6366  000B2C                     
  6367                           ; BSR set to: 0
  6368                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  6369  000B2C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6370  000B30  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6371  000B34  2ADE               	incf	postinc2,f,c
  6372  000B36  0E00               	movlw	0
  6373  000B38  22DD               	addwfc	postdec2,f,c
  6374  000B3A                     
  6375                           ; BSR set to: 0
  6376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6377  000B3A  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6378  000B3E  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6379  000B42  CFDF F060          	movff	indf2,??_vfpfcnvrt
  6380  000B46  0E02               	movlw	2
  6381  000B48  26DE               	addwf	postinc2,f,c
  6382  000B4A  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  6383  000B4E  0E00               	movlw	0
  6384  000B50  22DD               	addwfc	postdec2,f,c
  6385  000B52  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6386  000B56  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6387  000B5A  CFDE F062          	movff	postinc2,??_vfpfcnvrt+2
  6388  000B5E  CFDD F063          	movff	postdec2,??_vfpfcnvrt+3
  6389  000B62  C062  F06C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6390  000B66  C063  F06D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6391  000B6A  6B6E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6392  000B6C  6B6F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6393  000B6E  6B70               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6394  000B70  6B71               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6395  000B72  6B72               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6396  000B74  6B73               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6397  000B76                     
  6398                           ; BSR set to: 0
  6399                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  6400  000B76  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
  6401  000B7A  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6402  000B7E  C06C  F026         	movff	vfpfcnvrt@llu,xtoa@d
  6403  000B82  C06D  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6404  000B86  C06E  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6405  000B8A  C06F  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6406  000B8E  C070  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6407  000B92  C071  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6408  000B96  C072  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6409  000B9A  C073  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6410  000B9E  C078  F02E         	movff	vfpfcnvrt@c,xtoa@x
  6411  000BA2  EC9C  F007         	call	_xtoa	;wreg free
  6412  000BA6  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
  6413  000BAA  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6414  000BAE  EF2C  F006         	goto	l1291
  6415  000BB2                     l3943:
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6419  000BB2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6420  000BB6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6421  000BBA  CFDE FFF6          	movff	postinc2,tblptrl
  6422  000BBE  CFDD FFF7          	movff	postdec2,tblptrh
  6423  000BC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6424  000BC2  6AF8               	clrf	tblptru,c
  6425  000BC4                     	endif
  6426  000BC4                     	if	0	;tblptru may be non-zero
  6427  000BC4                     	endif
  6428  000BC4  0008               	tblrd		*
  6429  000BC6  50F5               	movf	tablat,w,c
  6430  000BC8  0A25               	xorlw	37
  6431  000BCA  A4D8               	btfss	status,2,c
  6432  000BCC  EFEA  F005         	goto	u3181
  6433  000BD0  EFEC  F005         	goto	u3180
  6434  000BD4                     u3181:
  6435  000BD4  EF03  F006         	goto	l3953
  6436  000BD8                     u3180:
  6437  000BD8                     
  6438                           ; BSR set to: 0
  6439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6440  000BD8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441  000BDC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442  000BE0  2ADE               	incf	postinc2,f,c
  6443  000BE2  0E00               	movlw	0
  6444  000BE4  22DD               	addwfc	postdec2,f,c
  6445  000BE6                     
  6446                           ; BSR set to: 0
  6447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6448  000BE6  0E00               	movlw	0
  6449  000BE8  6E0A               	movwf	(fputc@c+1)^0,c
  6450  000BEA  0E25               	movlw	37
  6451  000BEC  6E09               	movwf	fputc@c^0,c
  6452  000BEE  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  6453  000BF2  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6454  000BF6  ECC1  F00E         	call	_fputc	;wreg free
  6455  000BFA                     l3949:
  6456                           
  6457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6458  000BFA  0E00               	movlw	0
  6459  000BFC  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  6460  000BFE  0E01               	movlw	1
  6461  000C00  6E4B               	movwf	?_vfpfcnvrt^0,c
  6462  000C02  EF2C  F006         	goto	l1291
  6463  000C06                     l3953:
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6467  000C06  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6468  000C0A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6469  000C0E  2ADE               	incf	postinc2,f,c
  6470  000C10  0E00               	movlw	0
  6471  000C12  22DD               	addwfc	postdec2,f,c
  6472  000C14                     
  6473                           ; BSR set to: 0
  6474                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6475  000C14  0E00               	movlw	0
  6476  000C16  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  6477  000C18  0E00               	movlw	0
  6478  000C1A  6E4B               	movwf	?_vfpfcnvrt^0,c
  6479  000C1C  EF2C  F006         	goto	l1291
  6480  000C20                     l3959:
  6481                           
  6482                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6483  000C20  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6484  000C24  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6485  000C28  CFDE FFF6          	movff	postinc2,tblptrl
  6486  000C2C  CFDD FFF7          	movff	postdec2,tblptrh
  6487  000C30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6488  000C30  6AF8               	clrf	tblptru,c
  6489  000C32                     	endif
  6490  000C32                     	if	0	;tblptru may be non-zero
  6491  000C32                     	endif
  6492  000C32  0008               	tblrd		*
  6493  000C34  50F5               	movf	tablat,w,c
  6494  000C36  6E09               	movwf	fputc@c^0,c
  6495  000C38  6A0A               	clrf	(fputc@c+1)^0,c
  6496  000C3A  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  6497  000C3E  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6498  000C42  ECC1  F00E         	call	_fputc	;wreg free
  6499  000C46                     
  6500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6501  000C46  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6502  000C4A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6503  000C4E  2ADE               	incf	postinc2,f,c
  6504  000C50  0E00               	movlw	0
  6505  000C52  22DD               	addwfc	postdec2,f,c
  6506  000C54  EFFD  F005         	goto	l3949
  6507  000C58                     l1291:
  6508  000C58  0012               	return		;funcret
  6509  000C5A                     __end_of_vfpfcnvrt:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function _xtoa *****************
  6513 ;; Defined at:
  6514 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  6517 ;;		 -> NULL(0), 
  6518 ;;  d               8   37[COMRAM] unsigned long long 
  6519 ;;  x               1   45[COMRAM] unsigned char 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  n               8   62[COMRAM] unsigned long long 
  6522 ;;  c               2   72[COMRAM] int 
  6523 ;;  i               2   70[COMRAM] int 
  6524 ;;  w               2   60[COMRAM] int 
  6525 ;;  p               2   58[COMRAM] int 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  2   35[COMRAM] int 
  6528 ;; Registers used:
  6529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6535 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;Total ram usage:       39 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    9
  6542 ;; This function calls:
  6543 ;;		_isalpha
  6544 ;;		_isupper
  6545 ;;		_pad
  6546 ;;		_toupper
  6547 ;; This function is called by:
  6548 ;;		_vfpfcnvrt
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text24
  6553  000F38                     __ptext24:
  6554                           	callstack 0
  6555  000F38                     _xtoa:
  6556                           	callstack 18
  6557  000F38                     
  6558                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  6559  000F38  0100               	movlb	0	; () banked
  6560  000F3A  BFAA               	btfsc	(_prec+1)& (0+255),7,b
  6561  000F3C  EFA2  F007         	goto	u2131
  6562  000F40  EFA4  F007         	goto	u2130
  6563  000F44                     u2131:
  6564  000F44  EFA5  F007         	goto	l2921
  6565  000F48                     u2130:
  6566  000F48                     
  6567                           ; BSR set to: 0
  6568                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  6569  000F48  9255               	bcf	_flags^0,1,c
  6570  000F4A                     l2921:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  6574  000F4A  BFAA               	btfsc	(_prec+1)& (0+255),7,b
  6575  000F4C  EFB2  F007         	goto	u2140
  6576  000F50  51AA               	movf	(_prec+1)& (0+255),w,b
  6577  000F52  E106               	bnz	u2141
  6578  000F54  05A9               	decf	_prec& (0+255),w,b
  6579  000F56  B0D8               	btfsc	status,0,c
  6580  000F58  EFB0  F007         	goto	u2141
  6581  000F5C  EFB2  F007         	goto	u2140
  6582  000F60                     u2141:
  6583  000F60  EFB8  F007         	goto	l1239
  6584  000F64                     u2140:
  6585  000F64                     
  6586                           ; BSR set to: 0
  6587  000F64  0E00               	movlw	0
  6588  000F66  6E3C               	movwf	(xtoa@p+1)^0,c
  6589  000F68  0E01               	movlw	1
  6590  000F6A  6E3B               	movwf	xtoa@p^0,c
  6591  000F6C  EFBC  F007         	goto	l1241
  6592  000F70                     l1239:
  6593                           
  6594                           ; BSR set to: 0
  6595  000F70  C0A9  F03B         	movff	_prec,xtoa@p
  6596  000F74  C0AA  F03C         	movff	_prec+1,xtoa@p+1
  6597  000F78                     l1241:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  6601  000F78  C053  F03D         	movff	_width,xtoa@w
  6602  000F7C  C054  F03E         	movff	_width+1,xtoa@w+1
  6603                           
  6604                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6605  000F80  A855               	btfss	_flags^0,4,c
  6606  000F82  EFC5  F007         	goto	u2151
  6607  000F86  EFC7  F007         	goto	u2150
  6608  000F8A                     u2151:
  6609  000F8A  EFCB  F007         	goto	l2927
  6610  000F8E                     u2150:
  6611  000F8E                     
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  6614  000F8E  0EFE               	movlw	254
  6615  000F90  263D               	addwf	xtoa@w^0,f,c
  6616  000F92  0EFF               	movlw	255
  6617  000F94  223E               	addwfc	(xtoa@w+1)^0,f,c
  6618  000F96                     l2927:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  6622  000F96  C026  F03F         	movff	xtoa@d,xtoa@n
  6623  000F9A  C027  F040         	movff	xtoa@d+1,xtoa@n+1
  6624  000F9E  C028  F041         	movff	xtoa@d+2,xtoa@n+2
  6625  000FA2  C029  F042         	movff	xtoa@d+3,xtoa@n+3
  6626  000FA6  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
  6627  000FAA  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
  6628  000FAE  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
  6629  000FB2  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
  6630  000FB6                     
  6631                           ; BSR set to: 0
  6632                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  6633  000FB6  0E00               	movlw	0
  6634  000FB8  6E48               	movwf	(xtoa@i+1)^0,c
  6635  000FBA  0E1F               	movlw	31
  6636  000FBC  6E47               	movwf	xtoa@i^0,c
  6637  000FBE                     
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  6640  000FBE  0E00               	movlw	0
  6641  000FC0  6FD4               	movwf	(_dbuf+31)& (0+255),b
  6642                           
  6643                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6644  000FC2  EF96  F008         	goto	l2963
  6645  000FC6                     l2933:
  6646                           
  6647                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  6648  000FC6  0647               	decf	xtoa@i^0,f,c
  6649  000FC8  A0D8               	btfss	status,0,c
  6650  000FCA  0648               	decf	(xtoa@i+1)^0,f,c
  6651  000FCC                     
  6652                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  6653  000FCC  0E0F               	movlw	15
  6654  000FCE  143F               	andwf	xtoa@n^0,w,c
  6655  000FD0  6E49               	movwf	xtoa@c^0,c
  6656  000FD2  6A4A               	clrf	(xtoa@c+1)^0,c
  6657  000FD4                     
  6658                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  6659  000FD4  BE4A               	btfsc	(xtoa@c+1)^0,7,c
  6660  000FD6  EFF6  F007         	goto	u2161
  6661  000FDA  504A               	movf	(xtoa@c+1)^0,w,c
  6662  000FDC  E109               	bnz	u2160
  6663  000FDE  0E0A               	movlw	10
  6664  000FE0  5C49               	subwf	xtoa@c^0,w,c
  6665  000FE2  A0D8               	btfss	status,0,c
  6666  000FE4  EFF6  F007         	goto	u2161
  6667  000FE8  EFF8  F007         	goto	u2160
  6668  000FEC                     u2161:
  6669  000FEC  EF00  F008         	goto	l2941
  6670  000FF0                     u2160:
  6671  000FF0  0E57               	movlw	87
  6672  000FF2  2449               	addwf	xtoa@c^0,w,c
  6673  000FF4  6E49               	movwf	xtoa@c^0,c
  6674  000FF6  0E00               	movlw	0
  6675  000FF8  204A               	addwfc	(xtoa@c+1)^0,w,c
  6676  000FFA  6E4A               	movwf	(xtoa@c+1)^0,c
  6677  000FFC  EF06  F008         	goto	l1248
  6678  001000                     l2941:
  6679  001000  0E30               	movlw	48
  6680  001002  2449               	addwf	xtoa@c^0,w,c
  6681  001004  6E49               	movwf	xtoa@c^0,c
  6682  001006  0E00               	movlw	0
  6683  001008  204A               	addwfc	(xtoa@c+1)^0,w,c
  6684  00100A  6E4A               	movwf	(xtoa@c+1)^0,c
  6685  00100C                     l1248:
  6686  00100C  0EBF               	movlw	191
  6687  00100E  6E2F               	movwf	??_xtoa^0,c
  6688  001010  0EFF               	movlw	255
  6689  001012  6E30               	movwf	(??_xtoa+1)^0,c
  6690  001014  502E               	movf	xtoa@x^0,w,c
  6691  001016  6E31               	movwf	(??_xtoa+2)^0,c
  6692  001018  6A32               	clrf	(??_xtoa+3)^0,c
  6693  00101A  502F               	movf	??_xtoa^0,w,c
  6694  00101C  2631               	addwf	(??_xtoa+2)^0,f,c
  6695  00101E  5030               	movf	(??_xtoa+1)^0,w,c
  6696  001020  2232               	addwfc	(??_xtoa+3)^0,f,c
  6697  001022  5032               	movf	(??_xtoa+3)^0,w,c
  6698  001024  E10A               	bnz	u2170
  6699  001026  0E1A               	movlw	26
  6700  001028  5C31               	subwf	(??_xtoa+2)^0,w,c
  6701  00102A  A0D8               	btfss	status,0,c
  6702  00102C  EF1A  F008         	goto	u2171
  6703  001030  EF1D  F008         	goto	u2170
  6704  001034                     u2171:
  6705  001034  0E01               	movlw	1
  6706  001036  EF1E  F008         	goto	u2180
  6707  00103A                     u2170:
  6708  00103A  0E00               	movlw	0
  6709  00103C                     u2180:
  6710  00103C  6E37               	movwf	_xtoa$1715^0,c
  6711  00103E  6A38               	clrf	(_xtoa$1715+1)^0,c
  6712  001040  5037               	movf	_xtoa$1715^0,w,c
  6713  001042  1038               	iorwf	(_xtoa$1715+1)^0,w,c
  6714  001044  B4D8               	btfsc	status,2,c
  6715  001046  EF27  F008         	goto	u2191
  6716  00104A  EF29  F008         	goto	u2190
  6717  00104E                     u2191:
  6718  00104E  EF59  F008         	goto	l2955
  6719  001052                     u2190:
  6720  001052  0E9F               	movlw	159
  6721  001054  6E2F               	movwf	??_xtoa^0,c
  6722  001056  0EFF               	movlw	255
  6723  001058  6E30               	movwf	(??_xtoa+1)^0,c
  6724  00105A  0E20               	movlw	32
  6725  00105C  1049               	iorwf	xtoa@c^0,w,c
  6726  00105E  6E31               	movwf	(??_xtoa+2)^0,c
  6727  001060  0E00               	movlw	0
  6728  001062  104A               	iorwf	(xtoa@c+1)^0,w,c
  6729  001064  6E32               	movwf	(??_xtoa+3)^0,c
  6730  001066  502F               	movf	??_xtoa^0,w,c
  6731  001068  2631               	addwf	(??_xtoa+2)^0,f,c
  6732  00106A  5030               	movf	(??_xtoa+1)^0,w,c
  6733  00106C  2232               	addwfc	(??_xtoa+3)^0,f,c
  6734  00106E  5032               	movf	(??_xtoa+3)^0,w,c
  6735  001070  E10A               	bnz	u2200
  6736  001072  0E1A               	movlw	26
  6737  001074  5C31               	subwf	(??_xtoa+2)^0,w,c
  6738  001076  A0D8               	btfss	status,0,c
  6739  001078  EF40  F008         	goto	u2201
  6740  00107C  EF43  F008         	goto	u2200
  6741  001080                     u2201:
  6742  001080  0E01               	movlw	1
  6743  001082  EF44  F008         	goto	u2210
  6744  001086                     u2200:
  6745  001086  0E00               	movlw	0
  6746  001088                     u2210:
  6747  001088  6E39               	movwf	_xtoa$1716^0,c
  6748  00108A  6A3A               	clrf	(_xtoa$1716+1)^0,c
  6749  00108C  5039               	movf	_xtoa$1716^0,w,c
  6750  00108E  103A               	iorwf	(_xtoa$1716+1)^0,w,c
  6751  001090  B4D8               	btfsc	status,2,c
  6752  001092  EF4D  F008         	goto	u2221
  6753  001096  EF4F  F008         	goto	u2220
  6754  00109A                     u2221:
  6755  00109A  EF59  F008         	goto	l2955
  6756  00109E                     u2220:
  6757  00109E                     
  6758                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  6759  00109E  C049  F00D         	movff	xtoa@c,toupper@c
  6760  0010A2  C04A  F00E         	movff	xtoa@c+1,toupper@c+1
  6761  0010A6  EC85  F00F         	call	_toupper	;wreg free
  6762  0010AA  C00D  F049         	movff	?_toupper,xtoa@c
  6763  0010AE  C00E  F04A         	movff	?_toupper+1,xtoa@c+1
  6764  0010B2                     l2955:
  6765                           
  6766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  6767  0010B2  0EB5               	movlw	low _dbuf
  6768  0010B4  2447               	addwf	xtoa@i^0,w,c
  6769  0010B6  6ED9               	movwf	fsr2l,c
  6770  0010B8  0E00               	movlw	high _dbuf
  6771  0010BA  2048               	addwfc	(xtoa@i+1)^0,w,c
  6772  0010BC  6EDA               	movwf	fsr2h,c
  6773  0010BE  C049  FFDF         	movff	xtoa@c,indf2
  6774  0010C2                     
  6775                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  6776  0010C2  063B               	decf	xtoa@p^0,f,c
  6777  0010C4  A0D8               	btfss	status,0,c
  6778  0010C6  063C               	decf	(xtoa@p+1)^0,f,c
  6779  0010C8                     
  6780                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  6781  0010C8  063D               	decf	xtoa@w^0,f,c
  6782  0010CA  A0D8               	btfss	status,0,c
  6783  0010CC  063E               	decf	(xtoa@w+1)^0,f,c
  6784  0010CE                     
  6785                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  6786  0010CE  C03F  F02F         	movff	xtoa@n,??_xtoa
  6787  0010D2  C040  F030         	movff	xtoa@n+1,??_xtoa+1
  6788  0010D6  C041  F031         	movff	xtoa@n+2,??_xtoa+2
  6789  0010DA  C042  F032         	movff	xtoa@n+3,??_xtoa+3
  6790  0010DE  C043  F033         	movff	xtoa@n+4,??_xtoa+4
  6791  0010E2  C044  F034         	movff	xtoa@n+5,??_xtoa+5
  6792  0010E6  C045  F035         	movff	xtoa@n+6,??_xtoa+6
  6793  0010EA  C046  F036         	movff	xtoa@n+7,??_xtoa+7
  6794  0010EE  0E05               	movlw	5
  6795  0010F0  EF83  F008         	goto	u2230
  6796  0010F4                     u2235:
  6797  0010F4  90D8               	bcf	status,0,c
  6798  0010F6  3236               	rrcf	(??_xtoa+7)^0,f,c
  6799  0010F8  3235               	rrcf	(??_xtoa+6)^0,f,c
  6800  0010FA  3234               	rrcf	(??_xtoa+5)^0,f,c
  6801  0010FC  3233               	rrcf	(??_xtoa+4)^0,f,c
  6802  0010FE  3232               	rrcf	(??_xtoa+3)^0,f,c
  6803  001100  3231               	rrcf	(??_xtoa+2)^0,f,c
  6804  001102  3230               	rrcf	(??_xtoa+1)^0,f,c
  6805  001104  322F               	rrcf	??_xtoa^0,f,c
  6806  001106                     u2230:
  6807  001106  2EE8               	decfsz	wreg,f,c
  6808  001108  EF7A  F008         	goto	u2235
  6809  00110C  C02F  F03F         	movff	??_xtoa,xtoa@n
  6810  001110  C030  F040         	movff	??_xtoa+1,xtoa@n+1
  6811  001114  C031  F041         	movff	??_xtoa+2,xtoa@n+2
  6812  001118  C032  F042         	movff	??_xtoa+3,xtoa@n+3
  6813  00111C  C033  F043         	movff	??_xtoa+4,xtoa@n+4
  6814  001120  C034  F044         	movff	??_xtoa+5,xtoa@n+5
  6815  001124  C035  F045         	movff	??_xtoa+6,xtoa@n+6
  6816  001128  C036  F046         	movff	??_xtoa+7,xtoa@n+7
  6817  00112C                     l2963:
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6820  00112C  BE48               	btfsc	(xtoa@i+1)^0,7,c
  6821  00112E  EFA2  F008         	goto	u2241
  6822  001132  5048               	movf	(xtoa@i+1)^0,w,c
  6823  001134  E109               	bnz	u2240
  6824  001136  0E02               	movlw	2
  6825  001138  5C47               	subwf	xtoa@i^0,w,c
  6826  00113A  A0D8               	btfss	status,0,c
  6827  00113C  EFA2  F008         	goto	u2241
  6828  001140  EFA4  F008         	goto	u2240
  6829  001144                     u2241:
  6830  001144  EFD4  F008         	goto	l1262
  6831  001148                     u2240:
  6832  001148  503F               	movf	xtoa@n^0,w,c
  6833  00114A  1040               	iorwf	(xtoa@n+1)^0,w,c
  6834  00114C  1041               	iorwf	(xtoa@n+2)^0,w,c
  6835  00114E  1042               	iorwf	(xtoa@n+3)^0,w,c
  6836  001150  1043               	iorwf	(xtoa@n+4)^0,w,c
  6837  001152  1044               	iorwf	(xtoa@n+5)^0,w,c
  6838  001154  1045               	iorwf	(xtoa@n+6)^0,w,c
  6839  001156  1046               	iorwf	(xtoa@n+7)^0,w,c
  6840  001158  A4D8               	btfss	status,2,c
  6841  00115A  EFB1  F008         	goto	u2251
  6842  00115E  EFB3  F008         	goto	u2250
  6843  001162                     u2251:
  6844  001162  EFE3  F007         	goto	l2933
  6845  001166                     u2250:
  6846  001166  BE3C               	btfsc	(xtoa@p+1)^0,7,c
  6847  001168  EFC0  F008         	goto	u2260
  6848  00116C  503C               	movf	(xtoa@p+1)^0,w,c
  6849  00116E  E106               	bnz	u2261
  6850  001170  043B               	decf	xtoa@p^0,w,c
  6851  001172  B0D8               	btfsc	status,0,c
  6852  001174  EFBE  F008         	goto	u2261
  6853  001178  EFC0  F008         	goto	u2260
  6854  00117C                     u2261:
  6855  00117C  EFE3  F007         	goto	l2933
  6856  001180                     u2260:
  6857  001180  BE3E               	btfsc	(xtoa@w+1)^0,7,c
  6858  001182  EFCB  F008         	goto	u2271
  6859  001186  503E               	movf	(xtoa@w+1)^0,w,c
  6860  001188  E108               	bnz	u2270
  6861  00118A  043D               	decf	xtoa@w^0,w,c
  6862  00118C  A0D8               	btfss	status,0,c
  6863  00118E  EFCB  F008         	goto	u2271
  6864  001192  EFCD  F008         	goto	u2270
  6865  001196                     u2271:
  6866  001196  EFD4  F008         	goto	l1262
  6867  00119A                     u2270:
  6868  00119A  B255               	btfsc	_flags^0,1,c
  6869  00119C  EFD2  F008         	goto	u2281
  6870  0011A0  EFD4  F008         	goto	u2280
  6871  0011A4                     u2281:
  6872  0011A4  EFE3  F007         	goto	l2933
  6873  0011A8                     u2280:
  6874  0011A8                     l1262:
  6875                           
  6876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  6877  0011A8  A855               	btfss	_flags^0,4,c
  6878  0011AA  EFD9  F008         	goto	u2291
  6879  0011AE  EFDB  F008         	goto	u2290
  6880  0011B2                     u2291:
  6881  0011B2  EFF1  F008         	goto	l2979
  6882  0011B6                     u2290:
  6883  0011B6                     
  6884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  6885  0011B6  0647               	decf	xtoa@i^0,f,c
  6886  0011B8  A0D8               	btfss	status,0,c
  6887  0011BA  0648               	decf	(xtoa@i+1)^0,f,c
  6888  0011BC                     
  6889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  6890  0011BC  0EB5               	movlw	low _dbuf
  6891  0011BE  2447               	addwf	xtoa@i^0,w,c
  6892  0011C0  6ED9               	movwf	fsr2l,c
  6893  0011C2  0E00               	movlw	high _dbuf
  6894  0011C4  2048               	addwfc	(xtoa@i+1)^0,w,c
  6895  0011C6  6EDA               	movwf	fsr2h,c
  6896  0011C8  C02E  FFDF         	movff	xtoa@x,indf2
  6897  0011CC                     
  6898                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  6899  0011CC  0647               	decf	xtoa@i^0,f,c
  6900  0011CE  A0D8               	btfss	status,0,c
  6901  0011D0  0648               	decf	(xtoa@i+1)^0,f,c
  6902                           
  6903                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  6904  0011D2  0EB5               	movlw	low _dbuf
  6905  0011D4  2447               	addwf	xtoa@i^0,w,c
  6906  0011D6  6ED9               	movwf	fsr2l,c
  6907  0011D8  0E00               	movlw	high _dbuf
  6908  0011DA  2048               	addwfc	(xtoa@i+1)^0,w,c
  6909  0011DC  6EDA               	movwf	fsr2h,c
  6910  0011DE  0E30               	movlw	48
  6911  0011E0  6EDF               	movwf	indf2,c
  6912  0011E2                     l2979:
  6913                           
  6914                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  6915  0011E2  C024  F019         	movff	xtoa@fp,pad@fp
  6916  0011E6  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
  6917  0011EA  0EB5               	movlw	low _dbuf
  6918  0011EC  2447               	addwf	xtoa@i^0,w,c
  6919  0011EE  6E1B               	movwf	pad@buf^0,c
  6920  0011F0  0E00               	movlw	high _dbuf
  6921  0011F2  2048               	addwfc	(xtoa@i+1)^0,w,c
  6922  0011F4  6E1C               	movwf	(pad@buf+1)^0,c
  6923  0011F6  C03D  F01D         	movff	xtoa@w,pad@p
  6924  0011FA  C03E  F01E         	movff	xtoa@w+1,pad@p+1
  6925  0011FE  EC65  F00D         	call	_pad	;wreg free
  6926  001202  C019  F024         	movff	?_pad,?_xtoa
  6927  001206  C01A  F025         	movff	?_pad+1,?_xtoa+1
  6928  00120A  0012               	return		;funcret
  6929  00120C                     __end_of_xtoa:
  6930                           	callstack 0
  6931                           
  6932 ;; *************** function _toupper *****************
  6933 ;; Defined at:
  6934 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  c               2   12[COMRAM] int 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  2   12[COMRAM] int 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;Total ram usage:        8 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    5
  6955 ;; This function calls:
  6956 ;;		_islower
  6957 ;; This function is called by:
  6958 ;;		_xtoa
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text25
  6963  001F0A                     __ptext25:
  6964                           	callstack 0
  6965  001F0A                     _toupper:
  6966                           	callstack 21
  6967  001F0A  0E9F               	movlw	159
  6968  001F0C  6E0F               	movwf	??_toupper^0,c
  6969  001F0E  0EFF               	movlw	255
  6970  001F10  6E10               	movwf	(??_toupper+1)^0,c
  6971  001F12  C00D  F011         	movff	toupper@c,??_toupper+2
  6972  001F16  C00E  F012         	movff	toupper@c+1,??_toupper+3
  6973  001F1A  500F               	movf	??_toupper^0,w,c
  6974  001F1C  2611               	addwf	(??_toupper+2)^0,f,c
  6975  001F1E  5010               	movf	(??_toupper+1)^0,w,c
  6976  001F20  2212               	addwfc	(??_toupper+3)^0,f,c
  6977  001F22  5012               	movf	(??_toupper+3)^0,w,c
  6978  001F24  E10A               	bnz	u1860
  6979  001F26  0E1A               	movlw	26
  6980  001F28  5C11               	subwf	(??_toupper+2)^0,w,c
  6981  001F2A  A0D8               	btfss	status,0,c
  6982  001F2C  EF9A  F00F         	goto	u1861
  6983  001F30  EF9D  F00F         	goto	u1860
  6984  001F34                     u1861:
  6985  001F34  0E01               	movlw	1
  6986  001F36  EF9E  F00F         	goto	u1870
  6987  001F3A                     u1860:
  6988  001F3A  0E00               	movlw	0
  6989  001F3C                     u1870:
  6990  001F3C  6E13               	movwf	_toupper$1828^0,c
  6991  001F3E  6A14               	clrf	(_toupper$1828+1)^0,c
  6992  001F40  5013               	movf	_toupper$1828^0,w,c
  6993  001F42  1014               	iorwf	(_toupper$1828+1)^0,w,c
  6994  001F44  B4D8               	btfsc	status,2,c
  6995  001F46  EFA7  F00F         	goto	u1881
  6996  001F4A  EFA9  F00F         	goto	u1880
  6997  001F4E                     u1881:
  6998  001F4E  EFAF  F00F         	goto	l1399
  6999  001F52                     u1880:
  7000  001F52  0E5F               	movlw	95
  7001  001F54  140D               	andwf	toupper@c^0,w,c
  7002  001F56  6E0D               	movwf	?_toupper^0,c
  7003  001F58  6A0E               	clrf	(?_toupper+1)^0,c
  7004  001F5A  EFB3  F00F         	goto	l1404
  7005  001F5E                     l1399:
  7006  001F5E  C00D  F00D         	movff	toupper@c,?_toupper
  7007  001F62  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  7008  001F66                     l1404:
  7009  001F66  0012               	return		;funcret
  7010  001F68                     __end_of_toupper:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function _islower *****************
  7014 ;; Defined at:
  7015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  c               2    6[COMRAM] int 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  2    6[COMRAM] int 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;Total ram usage:        6 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    4
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		_toupper
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text26
  7044  0020F2                     __ptext26:
  7045                           	callstack 0
  7046  0020F2                     _islower:
  7047                           	callstack 21
  7048  0020F2  0E9F               	movlw	159
  7049  0020F4  6E09               	movwf	??_islower^0,c
  7050  0020F6  0EFF               	movlw	255
  7051  0020F8  6E0A               	movwf	(??_islower+1)^0,c
  7052  0020FA  C007  F00B         	movff	islower@c,??_islower+2
  7053  0020FE  C008  F00C         	movff	islower@c+1,??_islower+3
  7054  002102  5009               	movf	??_islower^0,w,c
  7055  002104  260B               	addwf	(??_islower+2)^0,f,c
  7056  002106  500A               	movf	(??_islower+1)^0,w,c
  7057  002108  220C               	addwfc	(??_islower+3)^0,f,c
  7058  00210A  500C               	movf	(??_islower+3)^0,w,c
  7059  00210C  E10A               	bnz	u1620
  7060  00210E  0E1A               	movlw	26
  7061  002110  5C0B               	subwf	(??_islower+2)^0,w,c
  7062  002112  A0D8               	btfss	status,0,c
  7063  002114  EF8E  F010         	goto	u1621
  7064  002118  EF91  F010         	goto	u1620
  7065  00211C                     u1621:
  7066  00211C  0E01               	movlw	1
  7067  00211E  EF92  F010         	goto	u1630
  7068  002122                     u1620:
  7069  002122  0E00               	movlw	0
  7070  002124                     u1630:
  7071  002124  6E07               	movwf	?_islower^0,c
  7072  002126  6A08               	clrf	(?_islower+1)^0,c
  7073  002128  0012               	return		;funcret
  7074  00212A                     __end_of_islower:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function _isupper *****************
  7078 ;; Defined at:
  7079 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  c               2    6[COMRAM] int 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2    6[COMRAM] int 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;Total ram usage:        6 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    4
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_xtoa
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text27
  7108  00212A                     __ptext27:
  7109                           	callstack 0
  7110  00212A                     _isupper:
  7111                           	callstack 22
  7112  00212A  0EBF               	movlw	191
  7113  00212C  6E09               	movwf	??_isupper^0,c
  7114  00212E  0EFF               	movlw	255
  7115  002130  6E0A               	movwf	(??_isupper+1)^0,c
  7116  002132  C007  F00B         	movff	isupper@c,??_isupper+2
  7117  002136  C008  F00C         	movff	isupper@c+1,??_isupper+3
  7118  00213A  5009               	movf	??_isupper^0,w,c
  7119  00213C  260B               	addwf	(??_isupper+2)^0,f,c
  7120  00213E  500A               	movf	(??_isupper+1)^0,w,c
  7121  002140  220C               	addwfc	(??_isupper+3)^0,f,c
  7122  002142  500C               	movf	(??_isupper+3)^0,w,c
  7123  002144  E10A               	bnz	u1820
  7124  002146  0E1A               	movlw	26
  7125  002148  5C0B               	subwf	(??_isupper+2)^0,w,c
  7126  00214A  A0D8               	btfss	status,0,c
  7127  00214C  EFAA  F010         	goto	u1821
  7128  002150  EFAD  F010         	goto	u1820
  7129  002154                     u1821:
  7130  002154  0E01               	movlw	1
  7131  002156  EFAE  F010         	goto	u1830
  7132  00215A                     u1820:
  7133  00215A  0E00               	movlw	0
  7134  00215C                     u1830:
  7135  00215C  6E07               	movwf	?_isupper^0,c
  7136  00215E  6A08               	clrf	(?_isupper+1)^0,c
  7137  002160  0012               	return		;funcret
  7138  002162                     __end_of_isupper:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function _isalpha *****************
  7142 ;; Defined at:
  7143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  c               2    6[COMRAM] int 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  2    6[COMRAM] int 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;Total ram usage:        6 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    4
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_xtoa
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text28
  7172  00207E                     __ptext28:
  7173                           	callstack 0
  7174  00207E                     _isalpha:
  7175                           	callstack 22
  7176  00207E  0E9F               	movlw	159
  7177  002080  6E09               	movwf	??_isalpha^0,c
  7178  002082  0EFF               	movlw	255
  7179  002084  6E0A               	movwf	(??_isalpha+1)^0,c
  7180  002086  0E20               	movlw	32
  7181  002088  1007               	iorwf	isalpha@c^0,w,c
  7182  00208A  6E0B               	movwf	(??_isalpha+2)^0,c
  7183  00208C  0E00               	movlw	0
  7184  00208E  1008               	iorwf	(isalpha@c+1)^0,w,c
  7185  002090  6E0C               	movwf	(??_isalpha+3)^0,c
  7186  002092  5009               	movf	??_isalpha^0,w,c
  7187  002094  260B               	addwf	(??_isalpha+2)^0,f,c
  7188  002096  500A               	movf	(??_isalpha+1)^0,w,c
  7189  002098  220C               	addwfc	(??_isalpha+3)^0,f,c
  7190  00209A  500C               	movf	(??_isalpha+3)^0,w,c
  7191  00209C  E10A               	bnz	u1840
  7192  00209E  0E1A               	movlw	26
  7193  0020A0  5C0B               	subwf	(??_isalpha+2)^0,w,c
  7194  0020A2  A0D8               	btfss	status,0,c
  7195  0020A4  EF56  F010         	goto	u1841
  7196  0020A8  EF59  F010         	goto	u1840
  7197  0020AC                     u1841:
  7198  0020AC  0E01               	movlw	1
  7199  0020AE  EF5A  F010         	goto	u1850
  7200  0020B2                     u1840:
  7201  0020B2  0E00               	movlw	0
  7202  0020B4                     u1850:
  7203  0020B4  6E07               	movwf	?_isalpha^0,c
  7204  0020B6  6A08               	clrf	(?_isalpha+1)^0,c
  7205  0020B8  0012               	return		;funcret
  7206  0020BA                     __end_of_isalpha:
  7207                           	callstack 0
  7208                           
  7209 ;; *************** function _dtoa *****************
  7210 ;; Defined at:
  7211 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  7214 ;;		 -> NULL(0), 
  7215 ;;  d               8   37[COMRAM] long long 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  n               8   61[COMRAM] long long 
  7218 ;;  i               2   69[COMRAM] int 
  7219 ;;  s               2   59[COMRAM] int 
  7220 ;;  w               2   57[COMRAM] int 
  7221 ;;  p               2   55[COMRAM] int 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2   35[COMRAM] int 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:       36 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    9
  7238 ;; This function calls:
  7239 ;;		___aodiv
  7240 ;;		___aomod
  7241 ;;		_abs
  7242 ;;		_pad
  7243 ;; This function is called by:
  7244 ;;		_vfpfcnvrt
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text29
  7249  000C5A                     __ptext29:
  7250                           	callstack 0
  7251  000C5A                     _dtoa:
  7252                           	callstack 18
  7253  000C5A                     
  7254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7255  000C5A  C026  F03E         	movff	dtoa@d,dtoa@n
  7256  000C5E  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  7257  000C62  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  7258  000C66  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  7259  000C6A  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  7260  000C6E  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  7261  000C72  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  7262  000C76  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  7263  000C7A                     
  7264                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7265  000C7A  BE45               	btfsc	(dtoa@n+7)^0,7,c
  7266  000C7C  EF42  F006         	goto	u1981
  7267  000C80  EF45  F006         	goto	u1980
  7268  000C84                     u1981:
  7269  000C84  0E01               	movlw	1
  7270  000C86  EF46  F006         	goto	u1990
  7271  000C8A                     u1980:
  7272  000C8A  0E00               	movlw	0
  7273  000C8C                     u1990:
  7274  000C8C  6E3C               	movwf	dtoa@s^0,c
  7275  000C8E  6A3D               	clrf	(dtoa@s+1)^0,c
  7276                           
  7277                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7278  000C90  503C               	movf	dtoa@s^0,w,c
  7279  000C92  103D               	iorwf	(dtoa@s+1)^0,w,c
  7280  000C94  B4D8               	btfsc	status,2,c
  7281  000C96  EF4F  F006         	goto	u2001
  7282  000C9A  EF51  F006         	goto	u2000
  7283  000C9E                     u2001:
  7284  000C9E  EF61  F006         	goto	l2861
  7285  000CA2                     u2000:
  7286  000CA2                     
  7287                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7288  000CA2  1E45               	comf	(dtoa@n+7)^0,f,c
  7289  000CA4  1E44               	comf	(dtoa@n+6)^0,f,c
  7290  000CA6  1E43               	comf	(dtoa@n+5)^0,f,c
  7291  000CA8  1E42               	comf	(dtoa@n+4)^0,f,c
  7292  000CAA  1E41               	comf	(dtoa@n+3)^0,f,c
  7293  000CAC  1E40               	comf	(dtoa@n+2)^0,f,c
  7294  000CAE  1E3F               	comf	(dtoa@n+1)^0,f,c
  7295  000CB0  6C3E               	negf	dtoa@n^0,c
  7296  000CB2  0E00               	movlw	0
  7297  000CB4  223F               	addwfc	(dtoa@n+1)^0,f,c
  7298  000CB6  2240               	addwfc	(dtoa@n+2)^0,f,c
  7299  000CB8  2241               	addwfc	(dtoa@n+3)^0,f,c
  7300  000CBA  2242               	addwfc	(dtoa@n+4)^0,f,c
  7301  000CBC  2243               	addwfc	(dtoa@n+5)^0,f,c
  7302  000CBE  2244               	addwfc	(dtoa@n+6)^0,f,c
  7303  000CC0  2245               	addwfc	(dtoa@n+7)^0,f,c
  7304  000CC2                     l2861:
  7305                           
  7306                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7307  000CC2  0100               	movlb	0	; () banked
  7308  000CC4  BFAA               	btfsc	(_prec+1)& (0+255),7,b
  7309  000CC6  EF67  F006         	goto	u2011
  7310  000CCA  EF69  F006         	goto	u2010
  7311  000CCE                     u2011:
  7312  000CCE  EF6A  F006         	goto	l2865
  7313  000CD2                     u2010:
  7314  000CD2                     
  7315                           ; BSR set to: 0
  7316                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7317  000CD2  9255               	bcf	_flags^0,1,c
  7318  000CD4                     l2865:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7322  000CD4  BFAA               	btfsc	(_prec+1)& (0+255),7,b
  7323  000CD6  EF77  F006         	goto	u2020
  7324  000CDA  51AA               	movf	(_prec+1)& (0+255),w,b
  7325  000CDC  E106               	bnz	u2021
  7326  000CDE  05A9               	decf	_prec& (0+255),w,b
  7327  000CE0  B0D8               	btfsc	status,0,c
  7328  000CE2  EF75  F006         	goto	u2021
  7329  000CE6  EF77  F006         	goto	u2020
  7330  000CEA                     u2021:
  7331  000CEA  EF7D  F006         	goto	l1214
  7332  000CEE                     u2020:
  7333  000CEE                     
  7334                           ; BSR set to: 0
  7335  000CEE  0E00               	movlw	0
  7336  000CF0  6E39               	movwf	(dtoa@p+1)^0,c
  7337  000CF2  0E01               	movlw	1
  7338  000CF4  6E38               	movwf	dtoa@p^0,c
  7339  000CF6  EF81  F006         	goto	l1216
  7340  000CFA                     l1214:
  7341                           
  7342                           ; BSR set to: 0
  7343  000CFA  C0A9  F038         	movff	_prec,dtoa@p
  7344  000CFE  C0AA  F039         	movff	_prec+1,dtoa@p+1
  7345  000D02                     l1216:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7349  000D02  C053  F03A         	movff	_width,dtoa@w
  7350  000D06  C054  F03B         	movff	_width+1,dtoa@w+1
  7351  000D0A                     
  7352                           ; BSR set to: 0
  7353                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7354  000D0A  503C               	movf	dtoa@s^0,w,c
  7355  000D0C  103D               	iorwf	(dtoa@s+1)^0,w,c
  7356  000D0E  A4D8               	btfss	status,2,c
  7357  000D10  EF8C  F006         	goto	u2031
  7358  000D14  EF8E  F006         	goto	u2030
  7359  000D18                     u2031:
  7360  000D18  EF95  F006         	goto	l2873
  7361  000D1C                     u2030:
  7362  000D1C                     
  7363                           ; BSR set to: 0
  7364  000D1C  A455               	btfss	_flags^0,2,c
  7365  000D1E  EF93  F006         	goto	u2041
  7366  000D22  EF95  F006         	goto	u2040
  7367  000D26                     u2041:
  7368  000D26  EF98  F006         	goto	l2875
  7369  000D2A                     u2040:
  7370  000D2A                     l2873:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  7374  000D2A  063A               	decf	dtoa@w^0,f,c
  7375  000D2C  A0D8               	btfss	status,0,c
  7376  000D2E  063B               	decf	(dtoa@w+1)^0,f,c
  7377  000D30                     l2875:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7381  000D30  0E00               	movlw	0
  7382  000D32  6E47               	movwf	(dtoa@i+1)^0,c
  7383  000D34  0E1F               	movlw	31
  7384  000D36  6E46               	movwf	dtoa@i^0,c
  7385  000D38                     
  7386                           ; BSR set to: 0
  7387                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7388  000D38  0E00               	movlw	0
  7389  000D3A  6FD4               	movwf	(_dbuf+31)& (0+255),b
  7390                           
  7391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7392  000D3C  EF1C  F007         	goto	l2889
  7393  000D40                     l2879:
  7394                           
  7395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  7396  000D40  0646               	decf	dtoa@i^0,f,c
  7397  000D42  A0D8               	btfss	status,0,c
  7398  000D44  0647               	decf	(dtoa@i+1)^0,f,c
  7399  000D46                     
  7400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7401  000D46  0EB5               	movlw	low _dbuf
  7402  000D48  2446               	addwf	dtoa@i^0,w,c
  7403  000D4A  6ED9               	movwf	fsr2l,c
  7404  000D4C  0E00               	movlw	high _dbuf
  7405  000D4E  2047               	addwfc	(dtoa@i+1)^0,w,c
  7406  000D50  6EDA               	movwf	fsr2h,c
  7407  000D52  C03E  F007         	movff	dtoa@n,___aomod@dividend
  7408  000D56  C03F  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7409  000D5A  C040  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7410  000D5E  C041  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7411  000D62  C042  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7412  000D66  C043  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7413  000D6A  C044  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7414  000D6E  C045  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7415  000D72  0E0A               	movlw	10
  7416  000D74  6E0F               	movwf	___aomod@divisor^0,c
  7417  000D76  0E00               	movlw	0
  7418  000D78  6E10               	movwf	(___aomod@divisor+1)^0,c
  7419  000D7A  0E00               	movlw	0
  7420  000D7C  6E11               	movwf	(___aomod@divisor+2)^0,c
  7421  000D7E  0E00               	movlw	0
  7422  000D80  6E12               	movwf	(___aomod@divisor+3)^0,c
  7423  000D82  0E00               	movlw	0
  7424  000D84  6E13               	movwf	(___aomod@divisor+4)^0,c
  7425  000D86  0E00               	movlw	0
  7426  000D88  6E14               	movwf	(___aomod@divisor+5)^0,c
  7427  000D8A  0E00               	movlw	0
  7428  000D8C  6E15               	movwf	(___aomod@divisor+6)^0,c
  7429  000D8E  0E00               	movlw	0
  7430  000D90  6E16               	movwf	(___aomod@divisor+7)^0,c
  7431  000D92  EC49  F00C         	call	___aomod	;wreg free
  7432  000D96  C007  F02E         	movff	?___aomod,??_dtoa
  7433  000D9A  C008  F02F         	movff	?___aomod+1,??_dtoa+1
  7434  000D9E  C009  F030         	movff	?___aomod+2,??_dtoa+2
  7435  000DA2  C00A  F031         	movff	?___aomod+3,??_dtoa+3
  7436  000DA6  C00B  F032         	movff	?___aomod+4,??_dtoa+4
  7437  000DAA  C00C  F033         	movff	?___aomod+5,??_dtoa+5
  7438  000DAE  C00D  F034         	movff	?___aomod+6,??_dtoa+6
  7439  000DB2  C00E  F035         	movff	?___aomod+7,??_dtoa+7
  7440  000DB6  C02E  F019         	movff	??_dtoa,abs@a
  7441  000DBA  C030  F01A         	movff	??_dtoa+2,abs@a+1
  7442  000DBE  EC1F  F010         	call	_abs	;wreg free
  7443  000DC2  5019               	movf	?_abs^0,w,c
  7444  000DC4  0F30               	addlw	48
  7445  000DC6  6EDF               	movwf	indf2,c
  7446  000DC8                     
  7447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  7448  000DC8  0638               	decf	dtoa@p^0,f,c
  7449  000DCA  A0D8               	btfss	status,0,c
  7450  000DCC  0639               	decf	(dtoa@p+1)^0,f,c
  7451  000DCE                     
  7452                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  7453  000DCE  063A               	decf	dtoa@w^0,f,c
  7454  000DD0  A0D8               	btfss	status,0,c
  7455  000DD2  063B               	decf	(dtoa@w+1)^0,f,c
  7456  000DD4                     
  7457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7458  000DD4  C03E  F007         	movff	dtoa@n,___aodiv@dividend
  7459  000DD8  C03F  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7460  000DDC  C040  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7461  000DE0  C041  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7462  000DE4  C042  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7463  000DE8  C043  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7464  000DEC  C044  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7465  000DF0  C045  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7466  000DF4  0E0A               	movlw	10
  7467  000DF6  6E0F               	movwf	___aodiv@divisor^0,c
  7468  000DF8  0E00               	movlw	0
  7469  000DFA  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7470  000DFC  0E00               	movlw	0
  7471  000DFE  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7472  000E00  0E00               	movlw	0
  7473  000E02  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7474  000E04  0E00               	movlw	0
  7475  000E06  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7476  000E08  0E00               	movlw	0
  7477  000E0A  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7478  000E0C  0E00               	movlw	0
  7479  000E0E  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7480  000E10  0E00               	movlw	0
  7481  000E12  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7482  000E14  ECC9  F00A         	call	___aodiv	;wreg free
  7483  000E18  C007  F03E         	movff	?___aodiv,dtoa@n
  7484  000E1C  C008  F03F         	movff	?___aodiv+1,dtoa@n+1
  7485  000E20  C009  F040         	movff	?___aodiv+2,dtoa@n+2
  7486  000E24  C00A  F041         	movff	?___aodiv+3,dtoa@n+3
  7487  000E28  C00B  F042         	movff	?___aodiv+4,dtoa@n+4
  7488  000E2C  C00C  F043         	movff	?___aodiv+5,dtoa@n+5
  7489  000E30  C00D  F044         	movff	?___aodiv+6,dtoa@n+6
  7490  000E34  C00E  F045         	movff	?___aodiv+7,dtoa@n+7
  7491  000E38                     l2889:
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7494  000E38  BE47               	btfsc	(dtoa@i+1)^0,7,c
  7495  000E3A  EF27  F007         	goto	u2051
  7496  000E3E  5047               	movf	(dtoa@i+1)^0,w,c
  7497  000E40  E108               	bnz	u2050
  7498  000E42  0446               	decf	dtoa@i^0,w,c
  7499  000E44  A0D8               	btfss	status,0,c
  7500  000E46  EF27  F007         	goto	u2051
  7501  000E4A  EF29  F007         	goto	u2050
  7502  000E4E                     u2051:
  7503  000E4E  EF59  F007         	goto	l2899
  7504  000E52                     u2050:
  7505  000E52  503E               	movf	dtoa@n^0,w,c
  7506  000E54  103F               	iorwf	(dtoa@n+1)^0,w,c
  7507  000E56  1040               	iorwf	(dtoa@n+2)^0,w,c
  7508  000E58  1041               	iorwf	(dtoa@n+3)^0,w,c
  7509  000E5A  1042               	iorwf	(dtoa@n+4)^0,w,c
  7510  000E5C  1043               	iorwf	(dtoa@n+5)^0,w,c
  7511  000E5E  1044               	iorwf	(dtoa@n+6)^0,w,c
  7512  000E60  1045               	iorwf	(dtoa@n+7)^0,w,c
  7513  000E62  A4D8               	btfss	status,2,c
  7514  000E64  EF36  F007         	goto	u2061
  7515  000E68  EF38  F007         	goto	u2060
  7516  000E6C                     u2061:
  7517  000E6C  EFA0  F006         	goto	l2879
  7518  000E70                     u2060:
  7519  000E70  BE39               	btfsc	(dtoa@p+1)^0,7,c
  7520  000E72  EF45  F007         	goto	u2070
  7521  000E76  5039               	movf	(dtoa@p+1)^0,w,c
  7522  000E78  E106               	bnz	u2071
  7523  000E7A  0438               	decf	dtoa@p^0,w,c
  7524  000E7C  B0D8               	btfsc	status,0,c
  7525  000E7E  EF43  F007         	goto	u2071
  7526  000E82  EF45  F007         	goto	u2070
  7527  000E86                     u2071:
  7528  000E86  EFA0  F006         	goto	l2879
  7529  000E8A                     u2070:
  7530  000E8A  BE3B               	btfsc	(dtoa@w+1)^0,7,c
  7531  000E8C  EF50  F007         	goto	u2081
  7532  000E90  503B               	movf	(dtoa@w+1)^0,w,c
  7533  000E92  E108               	bnz	u2080
  7534  000E94  043A               	decf	dtoa@w^0,w,c
  7535  000E96  A0D8               	btfss	status,0,c
  7536  000E98  EF50  F007         	goto	u2081
  7537  000E9C  EF52  F007         	goto	u2080
  7538  000EA0                     u2081:
  7539  000EA0  EF59  F007         	goto	l2899
  7540  000EA4                     u2080:
  7541  000EA4  B255               	btfsc	_flags^0,1,c
  7542  000EA6  EF57  F007         	goto	u2091
  7543  000EAA  EF59  F007         	goto	u2090
  7544  000EAE                     u2091:
  7545  000EAE  EFA0  F006         	goto	l2879
  7546  000EB2                     u2090:
  7547  000EB2                     l2899:
  7548                           
  7549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7550  000EB2  503C               	movf	dtoa@s^0,w,c
  7551  000EB4  103D               	iorwf	(dtoa@s+1)^0,w,c
  7552  000EB6  A4D8               	btfss	status,2,c
  7553  000EB8  EF60  F007         	goto	u2101
  7554  000EBC  EF62  F007         	goto	u2100
  7555  000EC0                     u2101:
  7556  000EC0  EF69  F007         	goto	l2903
  7557  000EC4                     u2100:
  7558  000EC4  A455               	btfss	_flags^0,2,c
  7559  000EC6  EF67  F007         	goto	u2111
  7560  000ECA  EF69  F007         	goto	u2110
  7561  000ECE                     u2111:
  7562  000ECE  EF87  F007         	goto	l2913
  7563  000ED2                     u2110:
  7564  000ED2                     l2903:
  7565                           
  7566                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  7567  000ED2  0646               	decf	dtoa@i^0,f,c
  7568  000ED4  A0D8               	btfss	status,0,c
  7569  000ED6  0647               	decf	(dtoa@i+1)^0,f,c
  7570  000ED8                     
  7571                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7572  000ED8  503C               	movf	dtoa@s^0,w,c
  7573  000EDA  103D               	iorwf	(dtoa@s+1)^0,w,c
  7574  000EDC  A4D8               	btfss	status,2,c
  7575  000EDE  EF73  F007         	goto	u2121
  7576  000EE2  EF75  F007         	goto	u2120
  7577  000EE6                     u2121:
  7578  000EE6  EF7B  F007         	goto	l2909
  7579  000EEA                     u2120:
  7580  000EEA  0E00               	movlw	0
  7581  000EEC  6E37               	movwf	(_dtoa$1704+1)^0,c
  7582  000EEE  0E2B               	movlw	43
  7583  000EF0  6E36               	movwf	_dtoa$1704^0,c
  7584  000EF2  EF7F  F007         	goto	l2911
  7585  000EF6                     l2909:
  7586  000EF6  0E00               	movlw	0
  7587  000EF8  6E37               	movwf	(_dtoa$1704+1)^0,c
  7588  000EFA  0E2D               	movlw	45
  7589  000EFC  6E36               	movwf	_dtoa$1704^0,c
  7590  000EFE                     l2911:
  7591  000EFE  0EB5               	movlw	low _dbuf
  7592  000F00  2446               	addwf	dtoa@i^0,w,c
  7593  000F02  6ED9               	movwf	fsr2l,c
  7594  000F04  0E00               	movlw	high _dbuf
  7595  000F06  2047               	addwfc	(dtoa@i+1)^0,w,c
  7596  000F08  6EDA               	movwf	fsr2h,c
  7597  000F0A  C036  FFDF         	movff	_dtoa$1704,indf2
  7598  000F0E                     l2913:
  7599                           
  7600                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7601  000F0E  C024  F019         	movff	dtoa@fp,pad@fp
  7602  000F12  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  7603  000F16  0EB5               	movlw	low _dbuf
  7604  000F18  2446               	addwf	dtoa@i^0,w,c
  7605  000F1A  6E1B               	movwf	pad@buf^0,c
  7606  000F1C  0E00               	movlw	high _dbuf
  7607  000F1E  2047               	addwfc	(dtoa@i+1)^0,w,c
  7608  000F20  6E1C               	movwf	(pad@buf+1)^0,c
  7609  000F22  C03A  F01D         	movff	dtoa@w,pad@p
  7610  000F26  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  7611  000F2A  EC65  F00D         	call	_pad	;wreg free
  7612  000F2E  C019  F024         	movff	?_pad,?_dtoa
  7613  000F32  C01A  F025         	movff	?_pad+1,?_dtoa+1
  7614  000F36  0012               	return		;funcret
  7615  000F38                     __end_of_dtoa:
  7616                           	callstack 0
  7617                           
  7618 ;; *************** function _pad *****************
  7619 ;; Defined at:
  7620 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  7623 ;;		 -> NULL(0), 
  7624 ;;  buf             2   26[COMRAM] PTR unsigned char 
  7625 ;;		 -> dbuf(32), 
  7626 ;;  p               2   28[COMRAM] int 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  w               2   33[COMRAM] int 
  7629 ;;  i               2   31[COMRAM] int 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  2   24[COMRAM] int 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7639 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;Total ram usage:       11 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    8
  7646 ;; This function calls:
  7647 ;;		_fputc
  7648 ;;		_fputs
  7649 ;;		_strlen
  7650 ;; This function is called by:
  7651 ;;		_dtoa
  7652 ;;		_xtoa
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text30
  7657  001ACA                     __ptext30:
  7658                           	callstack 0
  7659  001ACA                     _pad:
  7660                           	callstack 18
  7661  001ACA                     
  7662                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7663  001ACA  A055               	btfss	_flags^0,0,c
  7664  001ACC  EF6A  F00D         	goto	u1771
  7665  001AD0  EF6C  F00D         	goto	u1770
  7666  001AD4                     u1771:
  7667  001AD4  EF76  F00D         	goto	l2771
  7668  001AD8                     u1770:
  7669  001AD8                     
  7670                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7671  001AD8  C01B  F012         	movff	pad@buf,fputs@s
  7672  001ADC  C01C  F013         	movff	pad@buf+1,fputs@s+1
  7673  001AE0  C019  F014         	movff	pad@fp,fputs@fp
  7674  001AE4  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  7675  001AE8  ECDD  F00F         	call	_fputs	;wreg free
  7676  001AEC                     l2771:
  7677                           
  7678                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7679  001AEC  BE1E               	btfsc	(pad@p+1)^0,7,c
  7680  001AEE  EF7B  F00D         	goto	u1781
  7681  001AF2  EF7D  F00D         	goto	u1780
  7682  001AF6                     u1781:
  7683  001AF6  EF83  F00D         	goto	l2775
  7684  001AFA                     u1780:
  7685  001AFA  C01D  F022         	movff	pad@p,pad@w
  7686  001AFE  C01E  F023         	movff	pad@p+1,pad@w+1
  7687  001B02  EF87  F00D         	goto	l1187
  7688  001B06                     l2775:
  7689  001B06  0E00               	movlw	0
  7690  001B08  6E23               	movwf	(pad@w+1)^0,c
  7691  001B0A  0E00               	movlw	0
  7692  001B0C  6E22               	movwf	pad@w^0,c
  7693  001B0E                     l1187:
  7694                           
  7695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7696  001B0E  0E00               	movlw	0
  7697  001B10  6E21               	movwf	(pad@i+1)^0,c
  7698  001B12  0E00               	movlw	0
  7699  001B14  6E20               	movwf	pad@i^0,c
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7702  001B16  EF99  F00D         	goto	l2781
  7703  001B1A                     l2777:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7706  001B1A  0E00               	movlw	0
  7707  001B1C  6E0A               	movwf	(fputc@c+1)^0,c
  7708  001B1E  0E20               	movlw	32
  7709  001B20  6E09               	movwf	fputc@c^0,c
  7710  001B22  C019  F00B         	movff	pad@fp,fputc@fp
  7711  001B26  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  7712  001B2A  ECC1  F00E         	call	_fputc	;wreg free
  7713  001B2E                     
  7714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7715  001B2E  4A20               	infsnz	pad@i^0,f,c
  7716  001B30  2A21               	incf	(pad@i+1)^0,f,c
  7717  001B32                     l2781:
  7718                           
  7719                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7720  001B32  5022               	movf	pad@w^0,w,c
  7721  001B34  5C20               	subwf	pad@i^0,w,c
  7722  001B36  5021               	movf	(pad@i+1)^0,w,c
  7723  001B38  0A80               	xorlw	128
  7724  001B3A  6E1F               	movwf	??_pad^0,c
  7725  001B3C  5023               	movf	(pad@w+1)^0,w,c
  7726  001B3E  0A80               	xorlw	128
  7727  001B40  581F               	subwfb	??_pad^0,w,c
  7728  001B42  A0D8               	btfss	status,0,c
  7729  001B44  EFA6  F00D         	goto	u1791
  7730  001B48  EFA8  F00D         	goto	u1790
  7731  001B4C                     u1791:
  7732  001B4C  EF8D  F00D         	goto	l2777
  7733  001B50                     u1790:
  7734  001B50                     
  7735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7736  001B50  B055               	btfsc	_flags^0,0,c
  7737  001B52  EFAD  F00D         	goto	u1801
  7738  001B56  EFAF  F00D         	goto	u1800
  7739  001B5A                     u1801:
  7740  001B5A  EFB9  F00D         	goto	l2785
  7741  001B5E                     u1800:
  7742  001B5E                     
  7743                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7744  001B5E  C01B  F012         	movff	pad@buf,fputs@s
  7745  001B62  C01C  F013         	movff	pad@buf+1,fputs@s+1
  7746  001B66  C019  F014         	movff	pad@fp,fputs@fp
  7747  001B6A  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  7748  001B6E  ECDD  F00F         	call	_fputs	;wreg free
  7749  001B72                     l2785:
  7750                           
  7751                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7752  001B72  C01B  F007         	movff	pad@buf,strlen@s
  7753  001B76  C01C  F008         	movff	pad@buf+1,strlen@s+1
  7754  001B7A  EC1F  F011         	call	_strlen	;wreg free
  7755  001B7E  5022               	movf	pad@w^0,w,c
  7756  001B80  2407               	addwf	?_strlen^0,w,c
  7757  001B82  6E19               	movwf	?_pad^0,c
  7758  001B84  5023               	movf	(pad@w+1)^0,w,c
  7759  001B86  2008               	addwfc	(?_strlen+1)^0,w,c
  7760  001B88  6E1A               	movwf	(?_pad+1)^0,c
  7761  001B8A  0012               	return		;funcret
  7762  001B8C                     __end_of_pad:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _strlen *****************
  7766 ;; Defined at:
  7767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7770 ;;		 -> dbuf(32), 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7773 ;;		 -> dbuf(32), 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  2    6[COMRAM] unsigned int 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;Total ram usage:        4 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    4
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_pad
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text31
  7798  00223E                     __ptext31:
  7799                           	callstack 0
  7800  00223E                     _strlen:
  7801                           	callstack 21
  7802  00223E  C007  F009         	movff	strlen@s,strlen@a
  7803  002242  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7804  002246  EF27  F011         	goto	l2671
  7805  00224A                     l2669:
  7806  00224A  4A07               	infsnz	strlen@s^0,f,c
  7807  00224C  2A08               	incf	(strlen@s+1)^0,f,c
  7808  00224E                     l2671:
  7809  00224E  C007  FFD9         	movff	strlen@s,fsr2l
  7810  002252  C008  FFDA         	movff	strlen@s+1,fsr2h
  7811  002256  50DF               	movf	indf2,w,c
  7812  002258  A4D8               	btfss	status,2,c
  7813  00225A  EF31  F011         	goto	u1611
  7814  00225E  EF33  F011         	goto	u1610
  7815  002262                     u1611:
  7816  002262  EF25  F011         	goto	l2669
  7817  002266                     u1610:
  7818  002266  5009               	movf	strlen@a^0,w,c
  7819  002268  5C07               	subwf	strlen@s^0,w,c
  7820  00226A  6E07               	movwf	?_strlen^0,c
  7821  00226C  500A               	movf	(strlen@a+1)^0,w,c
  7822  00226E  5808               	subwfb	(strlen@s+1)^0,w,c
  7823  002270  6E08               	movwf	(?_strlen+1)^0,c
  7824  002272  0012               	return		;funcret
  7825  002274                     __end_of_strlen:
  7826                           	callstack 0
  7827                           
  7828 ;; *************** function _fputs *****************
  7829 ;; Defined at:
  7830 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  s               2   17[COMRAM] PTR const unsigned char 
  7833 ;;		 -> dbuf(32), 
  7834 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7835 ;;		 -> NULL(0), 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  i               2   22[COMRAM] int 
  7838 ;;  c               1   21[COMRAM] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  2   17[COMRAM] int 
  7841 ;; Registers used:
  7842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7851 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;Total ram usage:        7 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    7
  7855 ;; This function calls:
  7856 ;;		_fputc
  7857 ;; This function is called by:
  7858 ;;		_pad
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text32
  7863  001FBA                     __ptext32:
  7864                           	callstack 0
  7865  001FBA                     _fputs:
  7866                           	callstack 18
  7867  001FBA  0E00               	movlw	0
  7868  001FBC  6E18               	movwf	(fputs@i+1)^0,c
  7869  001FBE  0E00               	movlw	0
  7870  001FC0  6E17               	movwf	fputs@i^0,c
  7871  001FC2  EFEE  F00F         	goto	l2665
  7872  001FC6                     l2661:
  7873  001FC6  C016  F009         	movff	fputs@c,fputc@c
  7874  001FCA  6A0A               	clrf	(fputc@c+1)^0,c
  7875  001FCC  C014  F00B         	movff	fputs@fp,fputc@fp
  7876  001FD0  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  7877  001FD4  ECC1  F00E         	call	_fputc	;wreg free
  7878  001FD8  4A17               	infsnz	fputs@i^0,f,c
  7879  001FDA  2A18               	incf	(fputs@i+1)^0,f,c
  7880  001FDC                     l2665:
  7881  001FDC  5017               	movf	fputs@i^0,w,c
  7882  001FDE  2412               	addwf	fputs@s^0,w,c
  7883  001FE0  6ED9               	movwf	fsr2l,c
  7884  001FE2  5018               	movf	(fputs@i+1)^0,w,c
  7885  001FE4  2013               	addwfc	(fputs@s+1)^0,w,c
  7886  001FE6  6EDA               	movwf	fsr2h,c
  7887  001FE8  50DF               	movf	indf2,w,c
  7888  001FEA  6E16               	movwf	fputs@c^0,c
  7889  001FEC  5016               	movf	fputs@c^0,w,c
  7890  001FEE  A4D8               	btfss	status,2,c
  7891  001FF0  EFFC  F00F         	goto	u1601
  7892  001FF4  EFFE  F00F         	goto	u1600
  7893  001FF8                     u1601:
  7894  001FF8  EFE3  F00F         	goto	l2661
  7895  001FFC                     u1600:
  7896  001FFC  0012               	return		;funcret
  7897  001FFE                     __end_of_fputs:
  7898                           	callstack 0
  7899                           
  7900 ;; *************** function _abs *****************
  7901 ;; Defined at:
  7902 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  a               2   24[COMRAM] int 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;		None
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  2   24[COMRAM] int 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7920 ;;Total ram usage:        4 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    4
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_dtoa
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text33
  7931  00203E                     __ptext33:
  7932                           	callstack 0
  7933  00203E                     _abs:
  7934                           	callstack 22
  7935  00203E  BE1A               	btfsc	(abs@a+1)^0,7,c
  7936  002040  EF2C  F010         	goto	u1810
  7937  002044  501A               	movf	(abs@a+1)^0,w,c
  7938  002046  E106               	bnz	u1811
  7939  002048  0419               	decf	abs@a^0,w,c
  7940  00204A  B0D8               	btfsc	status,0,c
  7941  00204C  EF2A  F010         	goto	u1811
  7942  002050  EF2C  F010         	goto	u1810
  7943  002054                     u1811:
  7944  002054  EF3A  F010         	goto	l1308
  7945  002058                     u1810:
  7946  002058  C019  F01B         	movff	abs@a,??_abs
  7947  00205C  C01A  F01C         	movff	abs@a+1,??_abs+1
  7948  002060  1E1B               	comf	??_abs^0,f,c
  7949  002062  1E1C               	comf	(??_abs+1)^0,f,c
  7950  002064  4A1B               	infsnz	??_abs^0,f,c
  7951  002066  2A1C               	incf	(??_abs+1)^0,f,c
  7952  002068  C01B  F019         	movff	??_abs,?_abs
  7953  00206C  C01C  F01A         	movff	??_abs+1,?_abs+1
  7954  002070  EF3E  F010         	goto	l1311
  7955  002074                     l1308:
  7956  002074  C019  F019         	movff	abs@a,?_abs
  7957  002078  C01A  F01A         	movff	abs@a+1,?_abs+1
  7958  00207C                     l1311:
  7959  00207C  0012               	return		;funcret
  7960  00207E                     __end_of_abs:
  7961                           	callstack 0
  7962                           
  7963 ;; *************** function ___aomod *****************
  7964 ;; Defined at:
  7965 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  dividend        8    6[COMRAM] long long 
  7968 ;;  divisor         8   14[COMRAM] long long 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  sign            1   23[COMRAM] unsigned char 
  7971 ;;  counter         1   22[COMRAM] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  8    6[COMRAM] long long 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7981 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;Total ram usage:       18 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    4
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_dtoa
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text34
  7996  001892                     __ptext34:
  7997                           	callstack 0
  7998  001892                     ___aomod:
  7999                           	callstack 22
  8000  001892  0E00               	movlw	0
  8001  001894  6E18               	movwf	___aomod@sign^0,c
  8002  001896  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8003  001898  EF52  F00C         	goto	u1710
  8004  00189C  EF50  F00C         	goto	u1711
  8005  0018A0                     u1711:
  8006  0018A0  EF64  F00C         	goto	l2739
  8007  0018A4                     u1710:
  8008  0018A4  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8009  0018A6  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8010  0018A8  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8011  0018AA  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8012  0018AC  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8013  0018AE  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8014  0018B0  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8015  0018B2  6C07               	negf	___aomod@dividend^0,c
  8016  0018B4  0E00               	movlw	0
  8017  0018B6  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8018  0018B8  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8019  0018BA  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8020  0018BC  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8021  0018BE  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8022  0018C0  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8023  0018C2  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8024  0018C4  0E01               	movlw	1
  8025  0018C6  6E18               	movwf	___aomod@sign^0,c
  8026  0018C8                     l2739:
  8027  0018C8  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8028  0018CA  EF6B  F00C         	goto	u1720
  8029  0018CE  EF69  F00C         	goto	u1721
  8030  0018D2                     u1721:
  8031  0018D2  EF7B  F00C         	goto	l2743
  8032  0018D6                     u1720:
  8033  0018D6  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8034  0018D8  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8035  0018DA  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8036  0018DC  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8037  0018DE  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8038  0018E0  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8039  0018E2  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8040  0018E4  6C0F               	negf	___aomod@divisor^0,c
  8041  0018E6  0E00               	movlw	0
  8042  0018E8  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8043  0018EA  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8044  0018EC  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8045  0018EE  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8046  0018F0  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8047  0018F2  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8048  0018F4  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8049  0018F6                     l2743:
  8050  0018F6  500F               	movf	___aomod@divisor^0,w,c
  8051  0018F8  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8052  0018FA  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8053  0018FC  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8054  0018FE  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8055  001900  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8056  001902  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8057  001904  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8058  001906  B4D8               	btfsc	status,2,c
  8059  001908  EF88  F00C         	goto	u1731
  8060  00190C  EF8A  F00C         	goto	u1730
  8061  001910                     u1731:
  8062  001910  EFD2  F00C         	goto	l2759
  8063  001914                     u1730:
  8064  001914  0E01               	movlw	1
  8065  001916  6E17               	movwf	___aomod@counter^0,c
  8066  001918  EF98  F00C         	goto	l2749
  8067  00191C                     l2747:
  8068  00191C  90D8               	bcf	status,0,c
  8069  00191E  360F               	rlcf	___aomod@divisor^0,f,c
  8070  001920  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8071  001922  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8072  001924  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8073  001926  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8074  001928  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8075  00192A  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8076  00192C  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8077  00192E  2A17               	incf	___aomod@counter^0,f,c
  8078  001930                     l2749:
  8079  001930  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8080  001932  EF9D  F00C         	goto	u1741
  8081  001936  EF9F  F00C         	goto	u1740
  8082  00193A                     u1741:
  8083  00193A  EF8E  F00C         	goto	l2747
  8084  00193E                     u1740:
  8085  00193E                     l2751:
  8086  00193E  500F               	movf	___aomod@divisor^0,w,c
  8087  001940  5C07               	subwf	___aomod@dividend^0,w,c
  8088  001942  5010               	movf	(___aomod@divisor+1)^0,w,c
  8089  001944  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8090  001946  5011               	movf	(___aomod@divisor+2)^0,w,c
  8091  001948  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8092  00194A  5012               	movf	(___aomod@divisor+3)^0,w,c
  8093  00194C  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8094  00194E  5013               	movf	(___aomod@divisor+4)^0,w,c
  8095  001950  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8096  001952  5014               	movf	(___aomod@divisor+5)^0,w,c
  8097  001954  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8098  001956  5015               	movf	(___aomod@divisor+6)^0,w,c
  8099  001958  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8100  00195A  5016               	movf	(___aomod@divisor+7)^0,w,c
  8101  00195C  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8102  00195E  A0D8               	btfss	status,0,c
  8103  001960  EFB4  F00C         	goto	u1751
  8104  001964  EFB6  F00C         	goto	u1750
  8105  001968                     u1751:
  8106  001968  EFC6  F00C         	goto	l2755
  8107  00196C                     u1750:
  8108  00196C  500F               	movf	___aomod@divisor^0,w,c
  8109  00196E  5E07               	subwf	___aomod@dividend^0,f,c
  8110  001970  5010               	movf	(___aomod@divisor+1)^0,w,c
  8111  001972  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8112  001974  5011               	movf	(___aomod@divisor+2)^0,w,c
  8113  001976  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8114  001978  5012               	movf	(___aomod@divisor+3)^0,w,c
  8115  00197A  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8116  00197C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8117  00197E  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8118  001980  5014               	movf	(___aomod@divisor+5)^0,w,c
  8119  001982  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8120  001984  5015               	movf	(___aomod@divisor+6)^0,w,c
  8121  001986  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8122  001988  5016               	movf	(___aomod@divisor+7)^0,w,c
  8123  00198A  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8124  00198C                     l2755:
  8125  00198C  90D8               	bcf	status,0,c
  8126  00198E  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8127  001990  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8128  001992  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8129  001994  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8130  001996  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8131  001998  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8132  00199A  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8133  00199C  320F               	rrcf	___aomod@divisor^0,f,c
  8134  00199E  2E17               	decfsz	___aomod@counter^0,f,c
  8135  0019A0  EF9F  F00C         	goto	l2751
  8136  0019A4                     l2759:
  8137  0019A4  5018               	movf	___aomod@sign^0,w,c
  8138  0019A6  B4D8               	btfsc	status,2,c
  8139  0019A8  EFD8  F00C         	goto	u1761
  8140  0019AC  EFDA  F00C         	goto	u1760
  8141  0019B0                     u1761:
  8142  0019B0  EFEA  F00C         	goto	l2763
  8143  0019B4                     u1760:
  8144  0019B4  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8145  0019B6  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8146  0019B8  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8147  0019BA  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8148  0019BC  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8149  0019BE  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8150  0019C0  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8151  0019C2  6C07               	negf	___aomod@dividend^0,c
  8152  0019C4  0E00               	movlw	0
  8153  0019C6  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8154  0019C8  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8155  0019CA  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8156  0019CC  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8157  0019CE  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8158  0019D0  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8159  0019D2  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8160  0019D4                     l2763:
  8161  0019D4  C007  F007         	movff	___aomod@dividend,?___aomod
  8162  0019D8  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8163  0019DC  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8164  0019E0  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8165  0019E4  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8166  0019E8  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8167  0019EC  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8168  0019F0  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8169  0019F4  0012               	return		;funcret
  8170  0019F6                     __end_of___aomod:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function ___aodiv *****************
  8174 ;; Defined at:
  8175 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  dividend        8    6[COMRAM] long long 
  8178 ;;  divisor         8   14[COMRAM] long long 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  quotient        8   24[COMRAM] long long 
  8181 ;;  sign            1   23[COMRAM] unsigned char 
  8182 ;;  counter         1   22[COMRAM] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  8    6[COMRAM] long long 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8192 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;Total ram usage:       26 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    4
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_dtoa
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text35
  8207  001592                     __ptext35:
  8208                           	callstack 0
  8209  001592                     ___aodiv:
  8210                           	callstack 22
  8211  001592  0E00               	movlw	0
  8212  001594  6E18               	movwf	___aodiv@sign^0,c
  8213  001596  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8214  001598  EFD2  F00A         	goto	u1640
  8215  00159C  EFD0  F00A         	goto	u1641
  8216  0015A0                     u1641:
  8217  0015A0  EFE4  F00A         	goto	l2695
  8218  0015A4                     u1640:
  8219  0015A4  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8220  0015A6  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8221  0015A8  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8222  0015AA  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8223  0015AC  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8224  0015AE  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8225  0015B0  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8226  0015B2  6C0F               	negf	___aodiv@divisor^0,c
  8227  0015B4  0E00               	movlw	0
  8228  0015B6  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8229  0015B8  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8230  0015BA  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8231  0015BC  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8232  0015BE  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8233  0015C0  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8234  0015C2  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8235  0015C4  0E01               	movlw	1
  8236  0015C6  6E18               	movwf	___aodiv@sign^0,c
  8237  0015C8                     l2695:
  8238  0015C8  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8239  0015CA  EFEB  F00A         	goto	u1650
  8240  0015CE  EFE9  F00A         	goto	u1651
  8241  0015D2                     u1651:
  8242  0015D2  EFFD  F00A         	goto	l2701
  8243  0015D6                     u1650:
  8244  0015D6  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8245  0015D8  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8246  0015DA  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8247  0015DC  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8248  0015DE  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8249  0015E0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8250  0015E2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8251  0015E4  6C07               	negf	___aodiv@dividend^0,c
  8252  0015E6  0E00               	movlw	0
  8253  0015E8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8254  0015EA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8255  0015EC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8256  0015EE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8257  0015F0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8258  0015F2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8259  0015F4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8260  0015F6  0E01               	movlw	1
  8261  0015F8  1A18               	xorwf	___aodiv@sign^0,f,c
  8262  0015FA                     l2701:
  8263  0015FA  EE20  F019         	lfsr	2,___aodiv@quotient
  8264  0015FE  0E07               	movlw	7
  8265  001600                     u1661:
  8266  001600  6ADE               	clrf	postinc2,c
  8267  001602  06E8               	decf	wreg,f,c
  8268  001604  E2FD               	bc	u1661
  8269  001606  500F               	movf	___aodiv@divisor^0,w,c
  8270  001608  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8271  00160A  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8272  00160C  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8273  00160E  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8274  001610  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8275  001612  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8276  001614  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8277  001616  B4D8               	btfsc	status,2,c
  8278  001618  EF10  F00B         	goto	u1671
  8279  00161C  EF12  F00B         	goto	u1670
  8280  001620                     u1671:
  8281  001620  EF64  F00B         	goto	l2723
  8282  001624                     u1670:
  8283  001624  0E01               	movlw	1
  8284  001626  6E17               	movwf	___aodiv@counter^0,c
  8285  001628  EF20  F00B         	goto	l2709
  8286  00162C                     l2707:
  8287  00162C  90D8               	bcf	status,0,c
  8288  00162E  360F               	rlcf	___aodiv@divisor^0,f,c
  8289  001630  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8290  001632  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8291  001634  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8292  001636  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8293  001638  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8294  00163A  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8295  00163C  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8296  00163E  2A17               	incf	___aodiv@counter^0,f,c
  8297  001640                     l2709:
  8298  001640  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8299  001642  EF25  F00B         	goto	u1681
  8300  001646  EF27  F00B         	goto	u1680
  8301  00164A                     u1681:
  8302  00164A  EF16  F00B         	goto	l2707
  8303  00164E                     u1680:
  8304  00164E                     l2711:
  8305  00164E  90D8               	bcf	status,0,c
  8306  001650  3619               	rlcf	___aodiv@quotient^0,f,c
  8307  001652  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8308  001654  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8309  001656  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8310  001658  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8311  00165A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8312  00165C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8313  00165E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8314  001660  500F               	movf	___aodiv@divisor^0,w,c
  8315  001662  5C07               	subwf	___aodiv@dividend^0,w,c
  8316  001664  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8317  001666  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8318  001668  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8319  00166A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8320  00166C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8321  00166E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8322  001670  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8323  001672  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8324  001674  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8325  001676  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8326  001678  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8327  00167A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8328  00167C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8329  00167E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8330  001680  A0D8               	btfss	status,0,c
  8331  001682  EF45  F00B         	goto	u1691
  8332  001686  EF47  F00B         	goto	u1690
  8333  00168A                     u1691:
  8334  00168A  EF58  F00B         	goto	l2719
  8335  00168E                     u1690:
  8336  00168E  500F               	movf	___aodiv@divisor^0,w,c
  8337  001690  5E07               	subwf	___aodiv@dividend^0,f,c
  8338  001692  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8339  001694  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8340  001696  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8341  001698  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8342  00169A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8343  00169C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8344  00169E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8345  0016A0  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8346  0016A2  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8347  0016A4  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8348  0016A6  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8349  0016A8  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8350  0016AA  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8351  0016AC  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8352  0016AE  8019               	bsf	___aodiv@quotient^0,0,c
  8353  0016B0                     l2719:
  8354  0016B0  90D8               	bcf	status,0,c
  8355  0016B2  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8356  0016B4  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8357  0016B6  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8358  0016B8  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8359  0016BA  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8360  0016BC  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8361  0016BE  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8362  0016C0  320F               	rrcf	___aodiv@divisor^0,f,c
  8363  0016C2  2E17               	decfsz	___aodiv@counter^0,f,c
  8364  0016C4  EF27  F00B         	goto	l2711
  8365  0016C8                     l2723:
  8366  0016C8  5018               	movf	___aodiv@sign^0,w,c
  8367  0016CA  B4D8               	btfsc	status,2,c
  8368  0016CC  EF6A  F00B         	goto	u1701
  8369  0016D0  EF6C  F00B         	goto	u1700
  8370  0016D4                     u1701:
  8371  0016D4  EF7C  F00B         	goto	l2727
  8372  0016D8                     u1700:
  8373  0016D8  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8374  0016DA  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8375  0016DC  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8376  0016DE  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8377  0016E0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8378  0016E2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8379  0016E4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8380  0016E6  6C19               	negf	___aodiv@quotient^0,c
  8381  0016E8  0E00               	movlw	0
  8382  0016EA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8383  0016EC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8384  0016EE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8385  0016F0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8386  0016F2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8387  0016F4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8388  0016F6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8389  0016F8                     l2727:
  8390  0016F8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8391  0016FC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8392  001700  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8393  001704  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8394  001708  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8395  00170C  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8396  001710  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8397  001714  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8398  001718  0012               	return		;funcret
  8399  00171A                     __end_of___aodiv:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _ctoa *****************
  8403 ;; Defined at:
  8404 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  8407 ;;		 -> NULL(0), 
  8408 ;;  c               1   19[COMRAM] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  w               2   23[COMRAM] int 
  8411 ;;  l               2   21[COMRAM] int 
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  2   17[COMRAM] int 
  8414 ;; Registers used:
  8415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8424 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8425 ;;Total ram usage:        8 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    7
  8428 ;; This function calls:
  8429 ;;		_fputc
  8430 ;; This function is called by:
  8431 ;;		_vfpfcnvrt
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text36
  8436  0019F6                     __ptext36:
  8437                           	callstack 0
  8438  0019F6                     _ctoa:
  8439                           	callstack 20
  8440  0019F6                     
  8441                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8442  0019F6  5053               	movf	_width^0,w,c
  8443  0019F8  1054               	iorwf	(_width+1)^0,w,c
  8444  0019FA  A4D8               	btfss	status,2,c
  8445  0019FC  EF02  F00D         	goto	u1931
  8446  001A00  EF04  F00D         	goto	u1930
  8447  001A04                     u1931:
  8448  001A04  EF0A  F00D         	goto	l2831
  8449  001A08                     u1930:
  8450  001A08  C053  F018         	movff	_width,ctoa@w
  8451  001A0C  C054  F019         	movff	_width+1,ctoa@w+1
  8452  001A10  EF10  F00D         	goto	l2833
  8453  001A14                     l2831:
  8454  001A14  0EFF               	movlw	255
  8455  001A16  2453               	addwf	_width^0,w,c
  8456  001A18  6E18               	movwf	ctoa@w^0,c
  8457  001A1A  0EFF               	movlw	255
  8458  001A1C  2054               	addwfc	(_width+1)^0,w,c
  8459  001A1E  6E19               	movwf	(ctoa@w+1)^0,c
  8460  001A20                     l2833:
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  8463  001A20  A055               	btfss	_flags^0,0,c
  8464  001A22  EF15  F00D         	goto	u1941
  8465  001A26  EF17  F00D         	goto	u1940
  8466  001A2A                     u1941:
  8467  001A2A  EF20  F00D         	goto	l2837
  8468  001A2E                     u1940:
  8469  001A2E                     
  8470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  8471  001A2E  C014  F009         	movff	ctoa@c,fputc@c
  8472  001A32  6A0A               	clrf	(fputc@c+1)^0,c
  8473  001A34  C012  F00B         	movff	ctoa@fp,fputc@fp
  8474  001A38  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  8475  001A3C  ECC1  F00E         	call	_fputc	;wreg free
  8476  001A40                     l2837:
  8477                           
  8478                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  8479  001A40  BE19               	btfsc	(ctoa@w+1)^0,7,c
  8480  001A42  EF25  F00D         	goto	u1951
  8481  001A46  EF27  F00D         	goto	u1950
  8482  001A4A                     u1951:
  8483  001A4A  EF29  F00D         	goto	l2841
  8484  001A4E                     u1950:
  8485  001A4E  EF2D  F00D         	goto	l1203
  8486  001A52                     l2841:
  8487  001A52  0E00               	movlw	0
  8488  001A54  6E19               	movwf	(ctoa@w+1)^0,c
  8489  001A56  0E00               	movlw	0
  8490  001A58  6E18               	movwf	ctoa@w^0,c
  8491  001A5A                     l1203:
  8492                           
  8493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  8494  001A5A  0E00               	movlw	0
  8495  001A5C  6E17               	movwf	(ctoa@l+1)^0,c
  8496  001A5E  0E00               	movlw	0
  8497  001A60  6E16               	movwf	ctoa@l^0,c
  8498                           
  8499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8500  001A62  EF3F  F00D         	goto	l2847
  8501  001A66                     l2843:
  8502                           
  8503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  8504  001A66  0E00               	movlw	0
  8505  001A68  6E0A               	movwf	(fputc@c+1)^0,c
  8506  001A6A  0E20               	movlw	32
  8507  001A6C  6E09               	movwf	fputc@c^0,c
  8508  001A6E  C012  F00B         	movff	ctoa@fp,fputc@fp
  8509  001A72  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  8510  001A76  ECC1  F00E         	call	_fputc	;wreg free
  8511  001A7A                     
  8512                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  8513  001A7A  4A16               	infsnz	ctoa@l^0,f,c
  8514  001A7C  2A17               	incf	(ctoa@l+1)^0,f,c
  8515  001A7E                     l2847:
  8516                           
  8517                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  8518  001A7E  5018               	movf	ctoa@w^0,w,c
  8519  001A80  5C16               	subwf	ctoa@l^0,w,c
  8520  001A82  5017               	movf	(ctoa@l+1)^0,w,c
  8521  001A84  0A80               	xorlw	128
  8522  001A86  6E15               	movwf	??_ctoa^0,c
  8523  001A88  5019               	movf	(ctoa@w+1)^0,w,c
  8524  001A8A  0A80               	xorlw	128
  8525  001A8C  5815               	subwfb	??_ctoa^0,w,c
  8526  001A8E  A0D8               	btfss	status,0,c
  8527  001A90  EF4C  F00D         	goto	u1961
  8528  001A94  EF4E  F00D         	goto	u1960
  8529  001A98                     u1961:
  8530  001A98  EF33  F00D         	goto	l2843
  8531  001A9C                     u1960:
  8532  001A9C                     
  8533                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  8534  001A9C  B055               	btfsc	_flags^0,0,c
  8535  001A9E  EF53  F00D         	goto	u1971
  8536  001AA2  EF55  F00D         	goto	u1970
  8537  001AA6                     u1971:
  8538  001AA6  EF5E  F00D         	goto	l2851
  8539  001AAA                     u1970:
  8540  001AAA                     
  8541                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  8542  001AAA  C014  F009         	movff	ctoa@c,fputc@c
  8543  001AAE  6A0A               	clrf	(fputc@c+1)^0,c
  8544  001AB0  C012  F00B         	movff	ctoa@fp,fputc@fp
  8545  001AB4  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  8546  001AB8  ECC1  F00E         	call	_fputc	;wreg free
  8547  001ABC                     l2851:
  8548                           
  8549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  8550  001ABC  0E01               	movlw	1
  8551  001ABE  2416               	addwf	ctoa@l^0,w,c
  8552  001AC0  6E12               	movwf	?_ctoa^0,c
  8553  001AC2  0E00               	movlw	0
  8554  001AC4  2017               	addwfc	(ctoa@l+1)^0,w,c
  8555  001AC6  6E13               	movwf	(?_ctoa+1)^0,c
  8556  001AC8  0012               	return		;funcret
  8557  001ACA                     __end_of_ctoa:
  8558                           	callstack 0
  8559                           
  8560 ;; *************** function _fputc *****************
  8561 ;; Defined at:
  8562 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  c               2    8[COMRAM] int 
  8565 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  8566 ;;		 -> NULL(0), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  2    8[COMRAM] int 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;Total ram usage:        9 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    6
  8585 ;; This function calls:
  8586 ;;		_putch
  8587 ;; This function is called by:
  8588 ;;		_pad
  8589 ;;		_ctoa
  8590 ;;		_vfpfcnvrt
  8591 ;;		_fputs
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text37
  8596  001D82                     __ptext37:
  8597                           	callstack 0
  8598  001D82                     _fputc:
  8599                           	callstack 18
  8600  001D82  500B               	movf	fputc@fp^0,w,c
  8601  001D84  100C               	iorwf	(fputc@fp+1)^0,w,c
  8602  001D86  B4D8               	btfsc	status,2,c
  8603  001D88  EFC8  F00E         	goto	u1561
  8604  001D8C  EFCA  F00E         	goto	u1560
  8605  001D90                     u1561:
  8606  001D90  EFD3  F00E         	goto	l2649
  8607  001D94                     u1560:
  8608  001D94  500B               	movf	fputc@fp^0,w,c
  8609  001D96  100C               	iorwf	(fputc@fp+1)^0,w,c
  8610  001D98  A4D8               	btfss	status,2,c
  8611  001D9A  EFD1  F00E         	goto	u1571
  8612  001D9E  EFD3  F00E         	goto	u1570
  8613  001DA2                     u1571:
  8614  001DA2  EFD8  F00E         	goto	l2651
  8615  001DA6                     u1570:
  8616  001DA6                     l2649:
  8617  001DA6  5009               	movf	fputc@c^0,w,c
  8618  001DA8  EC07  F012         	call	_putch
  8619  001DAC  EF0B  F00F         	goto	l1380
  8620  001DB0                     l2651:
  8621  001DB0  EE20 F004          	lfsr	2,4
  8622  001DB4  500B               	movf	fputc@fp^0,w,c
  8623  001DB6  26D9               	addwf	fsr2l,f,c
  8624  001DB8  500C               	movf	(fputc@fp+1)^0,w,c
  8625  001DBA  22DA               	addwfc	fsr2h,f,c
  8626  001DBC  50DE               	movf	postinc2,w,c
  8627  001DBE  10DE               	iorwf	postinc2,w,c
  8628  001DC0  B4D8               	btfsc	status,2,c
  8629  001DC2  EFE5  F00E         	goto	u1581
  8630  001DC6  EFE7  F00E         	goto	u1580
  8631  001DCA                     u1581:
  8632  001DCA  EF02  F00F         	goto	l2655
  8633  001DCE                     u1580:
  8634  001DCE  EE20 F004          	lfsr	2,4
  8635  001DD2  500B               	movf	fputc@fp^0,w,c
  8636  001DD4  26D9               	addwf	fsr2l,f,c
  8637  001DD6  500C               	movf	(fputc@fp+1)^0,w,c
  8638  001DD8  22DA               	addwfc	fsr2h,f,c
  8639  001DDA  EE10 F002          	lfsr	1,2
  8640  001DDE  500B               	movf	fputc@fp^0,w,c
  8641  001DE0  26E1               	addwf	fsr1l,f,c
  8642  001DE2  500C               	movf	(fputc@fp+1)^0,w,c
  8643  001DE4  22E2               	addwfc	fsr1h,f,c
  8644  001DE6  50DE               	movf	postinc2,w,c
  8645  001DE8  5CE6               	subwf	postinc1,w,c
  8646  001DEA  50E6               	movf	postinc1,w,c
  8647  001DEC  0A80               	xorlw	128
  8648  001DEE  6E11               	movwf	(??_fputc+4)^0,c
  8649  001DF0  50DE               	movf	postinc2,w,c
  8650  001DF2  0A80               	xorlw	128
  8651  001DF4  5811               	subwfb	(??_fputc+4)^0,w,c
  8652  001DF6  B0D8               	btfsc	status,0,c
  8653  001DF8  EF00  F00F         	goto	u1591
  8654  001DFC  EF02  F00F         	goto	u1590
  8655  001E00                     u1591:
  8656  001E00  EF0B  F00F         	goto	l1380
  8657  001E04                     u1590:
  8658  001E04                     l2655:
  8659  001E04  EE20 F002          	lfsr	2,2
  8660  001E08  500B               	movf	fputc@fp^0,w,c
  8661  001E0A  26D9               	addwf	fsr2l,f,c
  8662  001E0C  500C               	movf	(fputc@fp+1)^0,w,c
  8663  001E0E  22DA               	addwfc	fsr2h,f,c
  8664  001E10  2ADE               	incf	postinc2,f,c
  8665  001E12  0E00               	movlw	0
  8666  001E14  22DD               	addwfc	postdec2,f,c
  8667  001E16                     l1380:
  8668  001E16  0012               	return		;funcret
  8669  001E18                     __end_of_fputc:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function _putch *****************
  8673 ;; Defined at:
  8674 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  txData          1    wreg     unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  txData          1    7[COMRAM] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;Total ram usage:        1 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    5
  8695 ;; This function calls:
  8696 ;;		_EUSART1_Write
  8697 ;; This function is called by:
  8698 ;;		_fputc
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text38
  8703  00240E                     __ptext38:
  8704                           	callstack 0
  8705  00240E                     _putch:
  8706                           	callstack 18
  8707                           
  8708                           ;incstack = 0
  8709                           ;putch@txData stored from wreg
  8710  00240E  6E08               	movwf	putch@txData^0,c
  8711  002410                     
  8712                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  8713  002410  5008               	movf	putch@txData^0,w,c
  8714  002412  ECD0  F011         	call	_EUSART1_Write
  8715  002416  0012               	return		;funcret
  8716  002418                     __end_of_putch:
  8717                           	callstack 0
  8718                           
  8719 ;; *************** function _EUSART1_Write *****************
  8720 ;; Defined at:
  8721 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  txData          1    wreg     unsigned char 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  txData          1    6[COMRAM] unsigned char 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  1    wreg      void 
  8728 ;; Registers used:
  8729 ;;		wreg
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;Total ram usage:        1 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    4
  8742 ;; This function calls:
  8743 ;;		Nothing
  8744 ;; This function is called by:
  8745 ;;		_putch
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text39
  8750  0023A0                     __ptext39:
  8751                           	callstack 0
  8752  0023A0                     _EUSART1_Write:
  8753                           	callstack 18
  8754                           
  8755                           ;incstack = 0
  8756                           ;EUSART1_Write@txData stored from wreg
  8757  0023A0  6E07               	movwf	EUSART1_Write@txData^0,c
  8758  0023A2                     l314:
  8759                           
  8760                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  8761  0023A2  A89E               	btfss	158,4,c	;volatile
  8762  0023A4  EFD6  F011         	goto	u1551
  8763  0023A8  EFD8  F011         	goto	u1550
  8764  0023AC                     u1551:
  8765  0023AC  EFD1  F011         	goto	l314
  8766  0023B0                     u1550:
  8767  0023B0                     
  8768                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  8769  0023B0  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  8770  0023B4  0012               	return		;funcret
  8771  0023B6                     __end_of_EUSART1_Write:
  8772                           	callstack 0
  8773                           
  8774 ;; *************** function _atoi *****************
  8775 ;; Defined at:
  8776 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8779 ;;		 -> STR_67(3), STR_66(3), STR_65(2), STR_64(4), 
  8780 ;;		 -> STR_63(6), STR_62(3), STR_61(3), STR_60(2), 
  8781 ;;		 -> STR_59(3), STR_58(2), STR_57(4), STR_56(28), 
  8782 ;;		 -> STR_55(26), STR_54(27), STR_53(17), STR_52(255), 
  8783 ;;		 -> STR_51(5), STR_50(399), STR_49(44), STR_48(41), 
  8784 ;;		 -> STR_47(41), STR_46(16), STR_45(89), STR_44(3), 
  8785 ;;		 -> STR_43(5), STR_42(2), STR_41(5), STR_40(17), 
  8786 ;;		 -> STR_39(15), STR_38(3), STR_37(5), STR_36(2), 
  8787 ;;		 -> STR_35(5), STR_34(19), STR_33(20), STR_32(28), 
  8788 ;;		 -> STR_31(20), STR_30(30), STR_29(2), STR_28(2), 
  8789 ;;		 -> STR_27(8), STR_26(52), STR_25(32), STR_24(44), 
  8790 ;;		 -> STR_23(50), STR_22(52), STR_21(55), STR_20(43), 
  8791 ;;		 -> STR_19(37), STR_18(52), STR_17(24), STR_16(52), 
  8792 ;;		 -> STR_15(24), STR_14(21), STR_13(7), STR_12(15), 
  8793 ;;		 -> STR_11(52), STR_10(3), STR_9(5), STR_8(2), 
  8794 ;;		 -> STR_7(5), STR_6(19), STR_5(54), STR_4(42), 
  8795 ;;		 -> STR_3(9), STR_2(18), STR_1(11), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  n               2   26[COMRAM] int 
  8798 ;;  neg             2   19[COMRAM] int 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2   13[COMRAM] int 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;Total ram usage:       15 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    5
  8815 ;; This function calls:
  8816 ;;		___wmul
  8817 ;;		_isdigit
  8818 ;;		_isspace
  8819 ;; This function is called by:
  8820 ;;		_vfpfcnvrt
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text40
  8825  0013F8                     __ptext40:
  8826                           	callstack 0
  8827  0013F8                     _atoi:
  8828                           	callstack 22
  8829  0013F8  0E00               	movlw	0
  8830  0013FA  6E1C               	movwf	(atoi@n+1)^0,c
  8831  0013FC  0E00               	movlw	0
  8832  0013FE  6E1B               	movwf	atoi@n^0,c
  8833  001400  0E00               	movlw	0
  8834  001402  6E15               	movwf	(atoi@neg+1)^0,c
  8835  001404  0E00               	movlw	0
  8836  001406  6E14               	movwf	atoi@neg^0,c
  8837  001408  EF08  F00A         	goto	l2987
  8838  00140C                     l2985:
  8839  00140C  4A0E               	infsnz	atoi@s^0,f,c
  8840  00140E  2A0F               	incf	(atoi@s+1)^0,f,c
  8841  001410                     l2987:
  8842  001410  0E01               	movlw	1
  8843  001412  6E1A               	movwf	_atoi$1753^0,c
  8844  001414  C00E  FFF6         	movff	atoi@s,tblptrl
  8845  001418  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8846  00141C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8847  00141C  6AF8               	clrf	tblptru,c
  8848  00141E                     	endif
  8849  00141E                     	if	0	;tblptru may be non-zero
  8850  00141E                     	endif
  8851  00141E  0008               	tblrd		*
  8852  001420  50F5               	movf	tablat,w,c
  8853  001422  0A20               	xorlw	32
  8854  001424  B4D8               	btfsc	status,2,c
  8855  001426  EF17  F00A         	goto	u2301
  8856  00142A  EF19  F00A         	goto	u2300
  8857  00142E                     u2301:
  8858  00142E  EF37  F00A         	goto	l2995
  8859  001432                     u2300:
  8860  001432  0EF7               	movlw	247
  8861  001434  6E10               	movwf	??_atoi^0,c
  8862  001436  0EFF               	movlw	255
  8863  001438  6E11               	movwf	(??_atoi+1)^0,c
  8864  00143A  C00E  FFF6         	movff	atoi@s,tblptrl
  8865  00143E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8866  001442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8867  001442  6AF8               	clrf	tblptru,c
  8868  001444                     	endif
  8869  001444                     	if	0	;tblptru may be non-zero
  8870  001444                     	endif
  8871  001444  0008               	tblrd		*
  8872  001446  50F5               	movf	tablat,w,c
  8873  001448  6E12               	movwf	(??_atoi+2)^0,c
  8874  00144A  6A13               	clrf	(??_atoi+3)^0,c
  8875  00144C  5010               	movf	??_atoi^0,w,c
  8876  00144E  2612               	addwf	(??_atoi+2)^0,f,c
  8877  001450  5011               	movf	(??_atoi+1)^0,w,c
  8878  001452  2213               	addwfc	(??_atoi+3)^0,f,c
  8879  001454  5013               	movf	(??_atoi+3)^0,w,c
  8880  001456  E109               	bnz	u2310
  8881  001458  0E05               	movlw	5
  8882  00145A  5C12               	subwf	(??_atoi+2)^0,w,c
  8883  00145C  A0D8               	btfss	status,0,c
  8884  00145E  EF33  F00A         	goto	u2311
  8885  001462  EF35  F00A         	goto	u2310
  8886  001466                     u2311:
  8887  001466  EF37  F00A         	goto	l2995
  8888  00146A                     u2310:
  8889  00146A  0E00               	movlw	0
  8890  00146C  6E1A               	movwf	_atoi$1753^0,c
  8891  00146E                     l2995:
  8892  00146E  C01A  F016         	movff	_atoi$1753,_atoi$1752
  8893  001472  6A17               	clrf	(_atoi$1752+1)^0,c
  8894  001474  5016               	movf	_atoi$1752^0,w,c
  8895  001476  1017               	iorwf	(_atoi$1752+1)^0,w,c
  8896  001478  A4D8               	btfss	status,2,c
  8897  00147A  EF41  F00A         	goto	u2321
  8898  00147E  EF43  F00A         	goto	u2320
  8899  001482                     u2321:
  8900  001482  EF06  F00A         	goto	l2985
  8901  001486                     u2320:
  8902  001486  EF4D  F00A         	goto	l3005
  8903  00148A                     l3001:
  8904  00148A  0E00               	movlw	0
  8905  00148C  6E15               	movwf	(atoi@neg+1)^0,c
  8906  00148E  0E01               	movlw	1
  8907  001490  6E14               	movwf	atoi@neg^0,c
  8908  001492                     l3003:
  8909  001492  4A0E               	infsnz	atoi@s^0,f,c
  8910  001494  2A0F               	incf	(atoi@s+1)^0,f,c
  8911  001496  EF84  F00A         	goto	l3011
  8912  00149A                     l3005:
  8913  00149A  C00E  FFF6         	movff	atoi@s,tblptrl
  8914  00149E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8915  0014A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8916  0014A2  6AF8               	clrf	tblptru,c
  8917  0014A4                     	endif
  8918  0014A4                     	if	0	;tblptru may be non-zero
  8919  0014A4                     	endif
  8920  0014A4  0008               	tblrd		*
  8921  0014A6  50F5               	movf	tablat,w,c
  8922  0014A8  6E10               	movwf	??_atoi^0,c
  8923  0014AA  6A11               	clrf	(??_atoi+1)^0,c
  8924                           
  8925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8926                           ; Switch size 1, requested type "simple"
  8927                           ; Number of cases is 1, Range of values is 0 to 0
  8928                           ; switch strategies available:
  8929                           ; Name         Instructions Cycles
  8930                           ; simple_byte            4     3 (average)
  8931                           ;	Chosen strategy is simple_byte
  8932  0014AC  5011               	movf	(??_atoi+1)^0,w,c
  8933  0014AE  0A00               	xorlw	0	; case 0
  8934  0014B0  B4D8               	btfsc	status,2,c
  8935  0014B2  EF5D  F00A         	goto	l4395
  8936  0014B6  EF84  F00A         	goto	l3011
  8937  0014BA                     l4395:
  8938                           
  8939                           ; Switch size 1, requested type "simple"
  8940                           ; Number of cases is 2, Range of values is 43 to 45
  8941                           ; switch strategies available:
  8942                           ; Name         Instructions Cycles
  8943                           ; simple_byte            7     4 (average)
  8944                           ;	Chosen strategy is simple_byte
  8945  0014BA  5010               	movf	??_atoi^0,w,c
  8946  0014BC  0A2B               	xorlw	43	; case 43
  8947  0014BE  B4D8               	btfsc	status,2,c
  8948  0014C0  EF49  F00A         	goto	l3003
  8949  0014C4  0A06               	xorlw	6	; case 45
  8950  0014C6  B4D8               	btfsc	status,2,c
  8951  0014C8  EF45  F00A         	goto	l3001
  8952  0014CC  EF84  F00A         	goto	l3011
  8953  0014D0                     l3007:
  8954  0014D0  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8955  0014D4  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8956  0014D8  0E00               	movlw	0
  8957  0014DA  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8958  0014DC  0E0A               	movlw	10
  8959  0014DE  6E09               	movwf	___wmul@multiplicand^0,c
  8960  0014E0  EC95  F011         	call	___wmul	;wreg free
  8961  0014E4  C00E  FFF6         	movff	atoi@s,tblptrl
  8962  0014E8  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8963  0014EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8964  0014EC  6AF8               	clrf	tblptru,c
  8965  0014EE                     	endif
  8966  0014EE                     	if	0	;tblptru may be non-zero
  8967  0014EE                     	endif
  8968  0014EE  0008               	tblrd		*
  8969  0014F0  50F5               	movf	tablat,w,c
  8970  0014F2  5E07               	subwf	?___wmul^0,f,c
  8971  0014F4  0E00               	movlw	0
  8972  0014F6  5A08               	subwfb	(?___wmul+1)^0,f,c
  8973  0014F8  0E30               	movlw	48
  8974  0014FA  2407               	addwf	?___wmul^0,w,c
  8975  0014FC  6E1B               	movwf	atoi@n^0,c
  8976  0014FE  0E00               	movlw	0
  8977  001500  2008               	addwfc	(?___wmul+1)^0,w,c
  8978  001502  6E1C               	movwf	(atoi@n+1)^0,c
  8979  001504  EF49  F00A         	goto	l3003
  8980  001508                     l3011:
  8981  001508  0ED0               	movlw	208
  8982  00150A  6E10               	movwf	??_atoi^0,c
  8983  00150C  0EFF               	movlw	255
  8984  00150E  6E11               	movwf	(??_atoi+1)^0,c
  8985  001510  C00E  FFF6         	movff	atoi@s,tblptrl
  8986  001514  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8987  001518                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8988  001518  6AF8               	clrf	tblptru,c
  8989  00151A                     	endif
  8990  00151A                     	if	0	;tblptru may be non-zero
  8991  00151A                     	endif
  8992  00151A  0008               	tblrd		*
  8993  00151C  50F5               	movf	tablat,w,c
  8994  00151E  6E12               	movwf	(??_atoi+2)^0,c
  8995  001520  6A13               	clrf	(??_atoi+3)^0,c
  8996  001522  5010               	movf	??_atoi^0,w,c
  8997  001524  2612               	addwf	(??_atoi+2)^0,f,c
  8998  001526  5011               	movf	(??_atoi+1)^0,w,c
  8999  001528  2213               	addwfc	(??_atoi+3)^0,f,c
  9000  00152A  5013               	movf	(??_atoi+3)^0,w,c
  9001  00152C  E10A               	bnz	u2330
  9002  00152E  0E0A               	movlw	10
  9003  001530  5C12               	subwf	(??_atoi+2)^0,w,c
  9004  001532  A0D8               	btfss	status,0,c
  9005  001534  EF9E  F00A         	goto	u2331
  9006  001538  EFA1  F00A         	goto	u2330
  9007  00153C                     u2331:
  9008  00153C  0E01               	movlw	1
  9009  00153E  EFA2  F00A         	goto	u2340
  9010  001542                     u2330:
  9011  001542  0E00               	movlw	0
  9012  001544                     u2340:
  9013  001544  6E18               	movwf	_atoi$1754^0,c
  9014  001546  6A19               	clrf	(_atoi$1754+1)^0,c
  9015  001548  5018               	movf	_atoi$1754^0,w,c
  9016  00154A  1019               	iorwf	(_atoi$1754+1)^0,w,c
  9017  00154C  A4D8               	btfss	status,2,c
  9018  00154E  EFAB  F00A         	goto	u2351
  9019  001552  EFAD  F00A         	goto	u2350
  9020  001556                     u2351:
  9021  001556  EF68  F00A         	goto	l3007
  9022  00155A                     u2350:
  9023  00155A  5014               	movf	atoi@neg^0,w,c
  9024  00155C  1015               	iorwf	(atoi@neg+1)^0,w,c
  9025  00155E  A4D8               	btfss	status,2,c
  9026  001560  EFB4  F00A         	goto	u2361
  9027  001564  EFB6  F00A         	goto	u2360
  9028  001568                     u2361:
  9029  001568  EFC4  F00A         	goto	l1339
  9030  00156C                     u2360:
  9031  00156C  C01B  F010         	movff	atoi@n,??_atoi
  9032  001570  C01C  F011         	movff	atoi@n+1,??_atoi+1
  9033  001574  1E10               	comf	??_atoi^0,f,c
  9034  001576  1E11               	comf	(??_atoi+1)^0,f,c
  9035  001578  4A10               	infsnz	??_atoi^0,f,c
  9036  00157A  2A11               	incf	(??_atoi+1)^0,f,c
  9037  00157C  C010  F00E         	movff	??_atoi,?_atoi
  9038  001580  C011  F00F         	movff	??_atoi+1,?_atoi+1
  9039  001584  EFC8  F00A         	goto	l1342
  9040  001588                     l1339:
  9041  001588  C01B  F00E         	movff	atoi@n,?_atoi
  9042  00158C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  9043  001590                     l1342:
  9044  001590  0012               	return		;funcret
  9045  001592                     __end_of_atoi:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function _isspace *****************
  9049 ;; Defined at:
  9050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  c               2    6[COMRAM] int 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  2    6[COMRAM] int 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2, status,0
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;Total ram usage:        7 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    4
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_atoi
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text41
  9079  001F68                     __ptext41:
  9080                           	callstack 0
  9081  001F68                     _isspace:
  9082                           	callstack 22
  9083  001F68  0E01               	movlw	1
  9084  001F6A  6E0D               	movwf	_isspace$1779^0,c
  9085  001F6C  0E20               	movlw	32
  9086  001F6E  1807               	xorwf	isspace@c^0,w,c
  9087  001F70  1008               	iorwf	(isspace@c+1)^0,w,c
  9088  001F72  B4D8               	btfsc	status,2,c
  9089  001F74  EFBE  F00F         	goto	u1911
  9090  001F78  EFC0  F00F         	goto	u1910
  9091  001F7C                     u1911:
  9092  001F7C  EFD9  F00F         	goto	l2823
  9093  001F80                     u1910:
  9094  001F80  0EF7               	movlw	247
  9095  001F82  6E09               	movwf	??_isspace^0,c
  9096  001F84  0EFF               	movlw	255
  9097  001F86  6E0A               	movwf	(??_isspace+1)^0,c
  9098  001F88  C007  F00B         	movff	isspace@c,??_isspace+2
  9099  001F8C  C008  F00C         	movff	isspace@c+1,??_isspace+3
  9100  001F90  5009               	movf	??_isspace^0,w,c
  9101  001F92  260B               	addwf	(??_isspace+2)^0,f,c
  9102  001F94  500A               	movf	(??_isspace+1)^0,w,c
  9103  001F96  220C               	addwfc	(??_isspace+3)^0,f,c
  9104  001F98  500C               	movf	(??_isspace+3)^0,w,c
  9105  001F9A  E109               	bnz	u1920
  9106  001F9C  0E05               	movlw	5
  9107  001F9E  5C0B               	subwf	(??_isspace+2)^0,w,c
  9108  001FA0  A0D8               	btfss	status,0,c
  9109  001FA2  EFD5  F00F         	goto	u1921
  9110  001FA6  EFD7  F00F         	goto	u1920
  9111  001FAA                     u1921:
  9112  001FAA  EFD9  F00F         	goto	l2823
  9113  001FAE                     u1920:
  9114  001FAE  0E00               	movlw	0
  9115  001FB0  6E0D               	movwf	_isspace$1779^0,c
  9116  001FB2                     l2823:
  9117  001FB2  C00D  F007         	movff	_isspace$1779,?_isspace
  9118  001FB6  6A08               	clrf	(?_isspace+1)^0,c
  9119  001FB8  0012               	return		;funcret
  9120  001FBA                     __end_of_isspace:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function _isdigit *****************
  9124 ;; Defined at:
  9125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  c               2    6[COMRAM] int 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  2    6[COMRAM] int 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;Total ram usage:        6 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    4
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_vfpfcnvrt
  9150 ;;		_atoi
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text42
  9155  002162                     __ptext42:
  9156                           	callstack 0
  9157  002162                     _isdigit:
  9158                           	callstack 23
  9159  002162  0ED0               	movlw	208
  9160  002164  6E09               	movwf	??_isdigit^0,c
  9161  002166  0EFF               	movlw	255
  9162  002168  6E0A               	movwf	(??_isdigit+1)^0,c
  9163  00216A  C007  F00B         	movff	isdigit@c,??_isdigit+2
  9164  00216E  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  9165  002172  5009               	movf	??_isdigit^0,w,c
  9166  002174  260B               	addwf	(??_isdigit+2)^0,f,c
  9167  002176  500A               	movf	(??_isdigit+1)^0,w,c
  9168  002178  220C               	addwfc	(??_isdigit+3)^0,f,c
  9169  00217A  500C               	movf	(??_isdigit+3)^0,w,c
  9170  00217C  E10A               	bnz	u1890
  9171  00217E  0E0A               	movlw	10
  9172  002180  5C0B               	subwf	(??_isdigit+2)^0,w,c
  9173  002182  A0D8               	btfss	status,0,c
  9174  002184  EFC6  F010         	goto	u1891
  9175  002188  EFC9  F010         	goto	u1890
  9176  00218C                     u1891:
  9177  00218C  0E01               	movlw	1
  9178  00218E  EFCA  F010         	goto	u1900
  9179  002192                     u1890:
  9180  002192  0E00               	movlw	0
  9181  002194                     u1900:
  9182  002194  6E07               	movwf	?_isdigit^0,c
  9183  002196  6A08               	clrf	(?_isdigit+1)^0,c
  9184  002198  0012               	return		;funcret
  9185  00219A                     __end_of_isdigit:
  9186                           	callstack 0
  9187                           
  9188 ;; *************** function ___wmul *****************
  9189 ;; Defined at:
  9190 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  multiplier      2    6[COMRAM] unsigned int 
  9193 ;;  multiplicand    2    8[COMRAM] unsigned int 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  product         2   10[COMRAM] unsigned int 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    6[COMRAM] unsigned int 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0, prodl, prodh
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;Total ram usage:        6 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    4
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_atoi
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text43
  9220  00232A                     __ptext43:
  9221                           	callstack 0
  9222  00232A                     ___wmul:
  9223                           	callstack 22
  9224  00232A  5007               	movf	___wmul@multiplier^0,w,c
  9225  00232C  0209               	mulwf	___wmul@multiplicand^0,c
  9226  00232E  CFF3 F00B          	movff	prodl,___wmul@product
  9227  002332  CFF4 F00C          	movff	prodh,___wmul@product+1
  9228  002336  5007               	movf	___wmul@multiplier^0,w,c
  9229  002338  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  9230  00233A  50F3               	movf	243,w,c
  9231  00233C  260C               	addwf	(___wmul@product+1)^0,f,c
  9232  00233E  5008               	movf	(___wmul@multiplier+1)^0,w,c
  9233  002340  0209               	mulwf	___wmul@multiplicand^0,c
  9234  002342  50F3               	movf	243,w,c
  9235  002344  260C               	addwf	(___wmul@product+1)^0,f,c
  9236  002346  C00B  F007         	movff	___wmul@product,?___wmul
  9237  00234A  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  9238  00234E  0012               	return		;funcret
  9239  002350                     __end_of___wmul:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _SPI2_ExchangeByte *****************
  9243 ;; Defined at:
  9244 ;;		line 92 in file "mcc_generated_files/spi2.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  data            1    wreg     unsigned char 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  data            1    6[COMRAM] unsigned char 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      unsigned char 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;Total ram usage:        1 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    4
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_SDCARD_ReadBlock
  9269 ;;		_SDCARD_WriteBlock
  9270 ;;		_SDCARD_PollWriteComplete
  9271 ;;		_SDCARD_Initialize
  9272 ;;		_SPI2_WriteBlock
  9273 ;;		_SPI2_ReadBlock
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text44
  9278  002386                     __ptext44:
  9279                           	callstack 0
  9280  002386                     _SPI2_ExchangeByte:
  9281                           	callstack 25
  9282                           
  9283                           ;incstack = 0
  9284                           ;SPI2_ExchangeByte@data stored from wreg
  9285  002386  6E07               	movwf	SPI2_ExchangeByte@data^0,c
  9286  002388                     
  9287                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
  9288  002388  C007  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  9289  00238C                     l31:
  9290  00238C  AEA4               	btfss	164,7,c	;volatile
  9291  00238E  EFCB  F011         	goto	u2521
  9292  002392  EFCD  F011         	goto	u2520
  9293  002396                     u2521:
  9294  002396  EFC6  F011         	goto	l31
  9295  00239A                     u2520:
  9296  00239A                     
  9297                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
  9298  00239A  9EA4               	bcf	164,7,c	;volatile
  9299                           
  9300                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
  9301  00239C  506F               	movf	111,w,c	;volatile
  9302  00239E  0012               	return		;funcret
  9303  0023A0                     __end_of_SPI2_ExchangeByte:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function _EUSART1_is_rx_ready *****************
  9307 ;; Defined at:
  9308 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      _Bool 
  9315 ;; Registers used:
  9316 ;;		wreg
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    4
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text45
  9337  0023B6                     __ptext45:
  9338                           	callstack 0
  9339  0023B6                     _EUSART1_is_rx_ready:
  9340                           	callstack 26
  9341  0023B6                     
  9342                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  9343  0023B6  BA9E               	btfsc	158,5,c	;volatile
  9344  0023B8  EFE0  F011         	goto	u2581
  9345  0023BC  EFE3  F011         	goto	u2580
  9346  0023C0                     u2581:
  9347  0023C0  0E01               	movlw	1
  9348  0023C2  EFE4  F011         	goto	u2586
  9349  0023C6                     u2580:
  9350  0023C6  0E00               	movlw	0
  9351  0023C8                     u2586:
  9352  0023C8  0012               	return		;funcret
  9353  0023CA                     __end_of_EUSART1_is_rx_ready:
  9354                           	callstack 0
  9355                           
  9356 ;; *************** function _EUSART1_Read *****************
  9357 ;; Defined at:
  9358 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      unsigned char 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    4
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_main
  9383 ;;		_getch
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text46
  9388  0022D8                     __ptext46:
  9389                           	callstack 0
  9390  0022D8                     _EUSART1_Read:
  9391                           	callstack 26
  9392  0022D8                     l307:
  9393                           
  9394                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  9395  0022D8  AA9E               	btfss	158,5,c	;volatile
  9396  0022DA  EF71  F011         	goto	u2591
  9397  0022DE  EF73  F011         	goto	u2590
  9398  0022E2                     u2591:
  9399  0022E2  EF6C  F011         	goto	l307
  9400  0022E6                     u2590:
  9401  0022E6                     
  9402                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  9403  0022E6  0E00               	movlw	0
  9404  0022E8  0100               	movlb	0	; () banked
  9405  0022EA  6FB3               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9406  0022EC                     
  9407                           ; BSR set to: 0
  9408                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  9409  0022EC  A2AB               	btfss	171,1,c	;volatile
  9410  0022EE  EF7B  F011         	goto	u2601
  9411  0022F2  EF7D  F011         	goto	u2600
  9412  0022F6                     u2601:
  9413  0022F6  EF7F  F011         	goto	l3285
  9414  0022FA                     u2600:
  9415  0022FA                     
  9416                           ; BSR set to: 0
  9417                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  9418  0022FA  98AB               	bcf	171,4,c	;volatile
  9419                           
  9420                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  9421  0022FC  88AB               	bsf	171,4,c	;volatile
  9422  0022FE                     l3285:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  9426  0022FE  50AE               	movf	174,w,c	;volatile
  9427  002300                     
  9428                           ; BSR set to: 0
  9429  002300  0012               	return		;funcret
  9430  002302                     __end_of_EUSART1_Read:
  9431                           	callstack 0
  9432                           
  9433 ;; *************** function _INTERRUPT_InterruptManager *****************
  9434 ;; Defined at:
  9435 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;		None
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:        2 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    3
  9456 ;; This function calls:
  9457 ;;		_TMR0_ISR
  9458 ;; This function is called by:
  9459 ;;		Interrupt level 2
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	intcode
  9464  000008                     __pintcode:
  9465                           	callstack 0
  9466  000008                     _INTERRUPT_InterruptManager:
  9467                           	callstack 17
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;incstack = 0
  9471  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9472  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  9473  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9474  000012                     
  9475                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  9476  000012  AAF2               	btfss	242,5,c	;volatile
  9477  000014  EF0E  F000         	goto	i2u303_41
  9478  000018  EF10  F000         	goto	i2u303_40
  9479  00001C                     i2u303_41:
  9480  00001C  EF19  F000         	goto	i2l386
  9481  000020                     i2u303_40:
  9482  000020  A4F2               	btfss	242,2,c	;volatile
  9483  000022  EF15  F000         	goto	i2u304_41
  9484  000026  EF17  F000         	goto	i2u304_40
  9485  00002A                     i2u304_41:
  9486  00002A  EF19  F000         	goto	i2l386
  9487  00002E                     i2u304_40:
  9488  00002E                     
  9489                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  9490  00002E  ECCD  F010         	call	_TMR0_ISR	;wreg free
  9491  000032                     i2l386:
  9492  000032  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9493  000036  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9494  00003A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9495  00003C  0011               	retfie		f
  9496  00003E                     __end_of_INTERRUPT_InterruptManager:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _TMR0_ISR *****************
  9500 ;; Defined at:
  9501 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    2
  9522 ;; This function calls:
  9523 ;;		Absolute function
  9524 ;;		_TMR0_DefaultInterruptHandler
  9525 ;;		_myTMR0ISR
  9526 ;; This function is called by:
  9527 ;;		_INTERRUPT_InterruptManager
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text48
  9532  00219A                     __ptext48:
  9533                           	callstack 0
  9534  00219A                     _TMR0_ISR:
  9535                           	callstack 17
  9536  00219A                     
  9537                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  9538  00219A  94F2               	bcf	242,2,c	;volatile
  9539  00219C                     
  9540                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  9541  00219C  5058               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  9542  00219E  6ED7               	movwf	215,c	;volatile
  9543  0021A0                     
  9544                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  9545  0021A0  C057  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  9546  0021A4                     
  9547                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  9548  0021A4  0100               	movlb	0	; () banked
  9549  0021A6  51B1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9550  0021A8  11B2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9551  0021AA  B4D8               	btfsc	status,2,c
  9552  0021AC  EFDA  F010         	goto	i2u256_41
  9553  0021B0  EFDC  F010         	goto	i2u256_40
  9554  0021B4                     i2u256_41:
  9555  0021B4  EFE8  F010         	goto	i2l131
  9556  0021B8                     i2u256_40:
  9557  0021B8                     
  9558                           ; BSR set to: 0
  9559                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  9560  0021B8  D802               	call	i2u257_48
  9561  0021BA  EFE8  F010         	goto	i2u257_49
  9562  0021BE                     i2u257_48:
  9563  0021BE  0005               	push	
  9564  0021C0  6EFA               	movwf	pclath,c
  9565  0021C2  51B1               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9566  0021C4  6EFD               	movwf	tosl,c
  9567  0021C6  51B2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9568  0021C8  6EFE               	movwf	tosh,c
  9569  0021CA  6AFF               	clrf	tosu,c
  9570  0021CC  50FA               	movf	pclath,w,c
  9571  0021CE  0012               	return		;indir
  9572  0021D0                     i2u257_49:
  9573  0021D0                     i2l131:
  9574  0021D0  0012               	return		;funcret
  9575  0021D2                     __end_of_TMR0_ISR:
  9576                           	callstack 0
  9577                           
  9578 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9579 ;; Defined at:
  9580 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		None
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_TMR0_Initialize
  9604 ;;		_TMR0_ISR
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text49
  9609  00242A                     __ptext49:
  9610                           	callstack 0
  9611  00242A                     _TMR0_DefaultInterruptHandler:
  9612                           	callstack 18
  9613  00242A  0012               	return		;funcret
  9614  00242C                     __end_of_TMR0_DefaultInterruptHandler:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function _myTMR0ISR *****************
  9618 ;; Defined at:
  9619 ;;		line 310 in file "main.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  bigOleWasteO    2    2[COMRAM] unsigned short 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, status,2, status,0, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;Total ram usage:        2 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    1
  9640 ;; This function calls:
  9641 ;;		i2_TMR0_WriteTimer
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;;		_TMR0_ISR
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text50
  9649  002274                     __ptext50:
  9650                           	callstack 0
  9651  002274                     _myTMR0ISR:
  9652                           	callstack 17
  9653  002274  8C89               	bsf	137,6,c	;volatile
  9654  002276                     
  9655                           ;main.c: 315:     for (bigOleWasteOfTime = 0; bigOleWasteOfTime < 40; bigOleWasteOfTime+
      +                          +);
  9656  002276  0E00               	movlw	0
  9657  002278  6E04               	movwf	(myTMR0ISR@bigOleWasteOfTime+1)^0,c
  9658  00227A  0E00               	movlw	0
  9659  00227C  6E03               	movwf	myTMR0ISR@bigOleWasteOfTime^0,c
  9660  00227E                     i2l3207:
  9661  00227E  4A03               	infsnz	myTMR0ISR@bigOleWasteOfTime^0,f,c
  9662  002280  2A04               	incf	(myTMR0ISR@bigOleWasteOfTime+1)^0,f,c
  9663  002282  5004               	movf	(myTMR0ISR@bigOleWasteOfTime+1)^0,w,c
  9664  002284  E109               	bnz	i2u253_40
  9665  002286  0E28               	movlw	40
  9666  002288  5C03               	subwf	myTMR0ISR@bigOleWasteOfTime^0,w,c
  9667  00228A  A0D8               	btfss	status,0,c
  9668  00228C  EF4A  F011         	goto	i2u253_41
  9669  002290  EF4C  F011         	goto	i2u253_40
  9670  002294                     i2u253_41:
  9671  002294  EF3F  F011         	goto	i2l3207
  9672  002298                     i2u253_40:
  9673  002298                     
  9674                           ;main.c: 316:     TMR0_WriteTimer(0x10000 - 1600);
  9675  002298  0EF9               	movlw	249
  9676  00229A  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  9677  00229C  0EC0               	movlw	192
  9678  00229E  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  9679  0022A0  EC0C  F012         	call	i2_TMR0_WriteTimer	;wreg free
  9680  0022A4                     
  9681                           ;main.c: 319:     INTCONbits.TMR0IF = 0;
  9682  0022A4  94F2               	bcf	242,2,c	;volatile
  9683  0022A6  9C89               	bcf	137,6,c	;volatile
  9684  0022A8  0012               	return		;funcret
  9685  0022AA                     __end_of_myTMR0ISR:
  9686                           	callstack 0
  9687                           
  9688 ;; *************** function i2_TMR0_WriteTimer *****************
  9689 ;; Defined at:
  9690 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  timerVal        2    0[COMRAM] unsigned short 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;Total ram usage:        2 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_myTMR0ISR
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text51
  9718  002418                     __ptext51:
  9719                           	callstack 0
  9720  002418                     i2_TMR0_WriteTimer:
  9721                           	callstack 17
  9722  002418                     
  9723                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  9724  002418  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  9725  00241A  6ED7               	movwf	215,c	;volatile
  9726  00241C                     
  9727                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  9728  00241C  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  9729  002420  0012               	return		;funcret
  9730  002422                     __end_ofi2_TMR0_WriteTimer:
  9731                           	callstack 0
  9732                           
  9733                           	psect	text52
  9734  000000                     __ptext52:
  9735                           	callstack 0
  9736  000000                     
  9737                           	psect	rparam
  9738  0000                     
  9739                           	psect	temp
  9740  000059                     btemp:
  9741                           	callstack 0
  9742  000059                     	ds	1
  9743  0000                     int$flags	set	btemp
  9744  0000                     wtemp8	set	btemp+1
  9745  0000                     ttemp5	set	btemp+1
  9746  0000                     ttemp6	set	btemp+4
  9747  0000                     ttemp7	set	btemp+8
  9748                           
  9749                           	psect	idloc
  9750                           
  9751                           ;Config register IDLOC0 @ 0x200000
  9752                           ;	unspecified, using default values
  9753  200000                     	org	2097152
  9754  200000  FF                 	db	255
  9755                           
  9756                           ;Config register IDLOC1 @ 0x200001
  9757                           ;	unspecified, using default values
  9758  200001                     	org	2097153
  9759  200001  FF                 	db	255
  9760                           
  9761                           ;Config register IDLOC2 @ 0x200002
  9762                           ;	unspecified, using default values
  9763  200002                     	org	2097154
  9764  200002  FF                 	db	255
  9765                           
  9766                           ;Config register IDLOC3 @ 0x200003
  9767                           ;	unspecified, using default values
  9768  200003                     	org	2097155
  9769  200003  FF                 	db	255
  9770                           
  9771                           ;Config register IDLOC4 @ 0x200004
  9772                           ;	unspecified, using default values
  9773  200004                     	org	2097156
  9774  200004  FF                 	db	255
  9775                           
  9776                           ;Config register IDLOC5 @ 0x200005
  9777                           ;	unspecified, using default values
  9778  200005                     	org	2097157
  9779  200005  FF                 	db	255
  9780                           
  9781                           ;Config register IDLOC6 @ 0x200006
  9782                           ;	unspecified, using default values
  9783  200006                     	org	2097158
  9784  200006  FF                 	db	255
  9785                           
  9786                           ;Config register IDLOC7 @ 0x200007
  9787                           ;	unspecified, using default values
  9788  200007                     	org	2097159
  9789  200007  FF                 	db	255
  9790                           
  9791                           	psect	config
  9792                           
  9793                           ; Padding undefined space
  9794  300000                     	org	3145728
  9795  300000  FF                 	db	255
  9796                           
  9797                           ;Config register CONFIG1H @ 0x300001
  9798                           ;	Oscillator Selection bits
  9799                           ;	FOSC = INTIO67, Internal oscillator block
  9800                           ;	4X PLL Enable
  9801                           ;	PLLCFG = OFF, Oscillator used directly
  9802                           ;	Primary clock enable bit
  9803                           ;	PRICLKEN = ON, Primary clock enabled
  9804                           ;	Fail-Safe Clock Monitor Enable bit
  9805                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9806                           ;	Internal/External Oscillator Switchover bit
  9807                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9808  300001                     	org	3145729
  9809  300001  28                 	db	40
  9810                           
  9811                           ;Config register CONFIG2L @ 0x300002
  9812                           ;	Power-up Timer Enable bit
  9813                           ;	PWRTEN = OFF, Power up timer disabled
  9814                           ;	Brown-out Reset Enable bits
  9815                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9816                           ;	Brown Out Reset Voltage bits
  9817                           ;	BORV = 190, VBOR set to 1.90 V nominal
  9818  300002                     	org	3145730
  9819  300002  1F                 	db	31
  9820                           
  9821                           ;Config register CONFIG2H @ 0x300003
  9822                           ;	Watchdog Timer Enable bits
  9823                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  9824                           ;	Watchdog Timer Postscale Select bits
  9825                           ;	WDTPS = 32768, 1:32768
  9826  300003                     	org	3145731
  9827  300003  3C                 	db	60
  9828                           
  9829                           ; Padding undefined space
  9830  300004                     	org	3145732
  9831  300004  FF                 	db	255
  9832                           
  9833                           ;Config register CONFIG3H @ 0x300005
  9834                           ;	CCP2 MUX bit
  9835                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  9836                           ;	PORTB A/D Enable bit
  9837                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  9838                           ;	P3A/CCP3 Mux bit
  9839                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  9840                           ;	HFINTOSC Fast Start-up
  9841                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  9842                           ;	Timer3 Clock input mux bit
  9843                           ;	T3CMX = PORTC0, T3CKI is on RC0
  9844                           ;	ECCP2 B output mux bit
  9845                           ;	P2BMX = PORTB5, P2B is on RB5
  9846                           ;	MCLR Pin Enable bit
  9847                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  9848  300005                     	org	3145733
  9849  300005  BF                 	db	191
  9850                           
  9851                           ;Config register CONFIG4L @ 0x300006
  9852                           ;	Stack Full/Underflow Reset Enable bit
  9853                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9854                           ;	Single-Supply ICSP Enable bit
  9855                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9856                           ;	Extended Instruction Set Enable bit
  9857                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9858                           ;	Background Debug
  9859                           ;	DEBUG = OFF, Disabled
  9860  300006                     	org	3145734
  9861  300006  85                 	db	133
  9862                           
  9863                           ; Padding undefined space
  9864  300007                     	org	3145735
  9865  300007  FF                 	db	255
  9866                           
  9867                           ;Config register CONFIG5L @ 0x300008
  9868                           ;	Code Protection Block 0
  9869                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9870                           ;	Code Protection Block 1
  9871                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9872                           ;	Code Protection Block 2
  9873                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9874                           ;	Code Protection Block 3
  9875                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9876  300008                     	org	3145736
  9877  300008  0F                 	db	15
  9878                           
  9879                           ;Config register CONFIG5H @ 0x300009
  9880                           ;	Boot Block Code Protection bit
  9881                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9882                           ;	Data EEPROM Code Protection bit
  9883                           ;	CPD = OFF, Data EEPROM not code-protected
  9884  300009                     	org	3145737
  9885  300009  C0                 	db	192
  9886                           
  9887                           ;Config register CONFIG6L @ 0x30000A
  9888                           ;	Write Protection Block 0
  9889                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9890                           ;	Write Protection Block 1
  9891                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9892                           ;	Write Protection Block 2
  9893                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9894                           ;	Write Protection Block 3
  9895                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9896  30000A                     	org	3145738
  9897  30000A  0F                 	db	15
  9898                           
  9899                           ;Config register CONFIG6H @ 0x30000B
  9900                           ;	Configuration Register Write Protection bit
  9901                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9902                           ;	Boot Block Write Protection bit
  9903                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9904                           ;	Data EEPROM Write Protection bit
  9905                           ;	WRTD = OFF, Data EEPROM not write-protected
  9906  30000B                     	org	3145739
  9907  30000B  E0                 	db	224
  9908                           
  9909                           ;Config register CONFIG7L @ 0x30000C
  9910                           ;	Table Read Protection Block 0
  9911                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9912                           ;	Table Read Protection Block 1
  9913                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9914                           ;	Table Read Protection Block 2
  9915                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9916                           ;	Table Read Protection Block 3
  9917                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9918  30000C                     	org	3145740
  9919  30000C  0F                 	db	15
  9920                           
  9921                           ;Config register CONFIG7H @ 0x30000D
  9922                           ;	Boot Block Table Read Protection bit
  9923                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9924  30000D                     	org	3145741
  9925  30000D  40                 	db	64
  9926                           tosu	equ	0xFFF
  9927                           tosh	equ	0xFFE
  9928                           tosl	equ	0xFFD
  9929                           stkptr	equ	0xFFC
  9930                           pclatu	equ	0xFFB
  9931                           pclath	equ	0xFFA
  9932                           pcl	equ	0xFF9
  9933                           tblptru	equ	0xFF8
  9934                           tblptrh	equ	0xFF7
  9935                           tblptrl	equ	0xFF6
  9936                           tablat	equ	0xFF5
  9937                           prodh	equ	0xFF4
  9938                           prodl	equ	0xFF3
  9939                           indf0	equ	0xFEF
  9940                           postinc0	equ	0xFEE
  9941                           postdec0	equ	0xFED
  9942                           preinc0	equ	0xFEC
  9943                           plusw0	equ	0xFEB
  9944                           fsr0h	equ	0xFEA
  9945                           fsr0l	equ	0xFE9
  9946                           wreg	equ	0xFE8
  9947                           indf1	equ	0xFE7
  9948                           postinc1	equ	0xFE6
  9949                           postdec1	equ	0xFE5
  9950                           preinc1	equ	0xFE4
  9951                           plusw1	equ	0xFE3
  9952                           fsr1h	equ	0xFE2
  9953                           fsr1l	equ	0xFE1
  9954                           bsr	equ	0xFE0
  9955                           indf2	equ	0xFDF
  9956                           postinc2	equ	0xFDE
  9957                           postdec2	equ	0xFDD
  9958                           preinc2	equ	0xFDC
  9959                           plusw2	equ	0xFDB
  9960                           fsr2h	equ	0xFDA
  9961                           fsr2l	equ	0xFD9
  9962                           status	equ	0xFD8

Data Sizes:
    Strings     1609
    Constant    30
    Data        0
    BSS         1076
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     71     117
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1610_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), 
		 -> STR_63(CODE[6]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[3]), STR_58(CODE[2]), STR_57(CODE[4]), STR_56(CODE[28]), 
		 -> STR_55(CODE[26]), STR_54(CODE[27]), STR_53(CODE[17]), STR_52(CODE[255]), 
		 -> STR_51(CODE[5]), STR_50(CODE[399]), STR_49(CODE[44]), STR_48(CODE[41]), 
		 -> STR_47(CODE[41]), STR_46(CODE[16]), STR_45(CODE[89]), STR_44(CODE[3]), 
		 -> STR_43(CODE[5]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), 
		 -> STR_39(CODE[15]), STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), 
		 -> STR_35(CODE[5]), STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), 
		 -> STR_31(CODE[20]), STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[8]), STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), 
		 -> STR_23(CODE[50]), STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), 
		 -> STR_19(CODE[37]), STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), 
		 -> STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[52]), STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), 
		 -> STR_63(CODE[6]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[3]), STR_58(CODE[2]), STR_57(CODE[4]), STR_56(CODE[28]), 
		 -> STR_55(CODE[26]), STR_54(CODE[27]), STR_53(CODE[17]), STR_52(CODE[255]), 
		 -> STR_51(CODE[5]), STR_50(CODE[399]), STR_49(CODE[44]), STR_48(CODE[41]), 
		 -> STR_47(CODE[41]), STR_46(CODE[16]), STR_45(CODE[89]), STR_44(CODE[3]), 
		 -> STR_43(CODE[5]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), 
		 -> STR_39(CODE[15]), STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), 
		 -> STR_35(CODE[5]), STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), 
		 -> STR_31(CODE[20]), STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[8]), STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), 
		 -> STR_23(CODE[50]), STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), 
		 -> STR_19(CODE[37]), STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), 
		 -> STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[52]), STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 399
		 -> STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), 
		 -> STR_63(CODE[6]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[3]), STR_58(CODE[2]), STR_57(CODE[4]), STR_56(CODE[28]), 
		 -> STR_55(CODE[26]), STR_54(CODE[27]), STR_53(CODE[17]), STR_52(CODE[255]), 
		 -> STR_51(CODE[5]), STR_50(CODE[399]), STR_49(CODE[44]), STR_48(CODE[41]), 
		 -> STR_47(CODE[41]), STR_46(CODE[16]), STR_45(CODE[89]), STR_44(CODE[3]), 
		 -> STR_43(CODE[5]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), 
		 -> STR_39(CODE[15]), STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), 
		 -> STR_35(CODE[5]), STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), 
		 -> STR_31(CODE[20]), STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[8]), STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), 
		 -> STR_23(CODE[50]), STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), 
		 -> STR_19(CODE[37]), STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), 
		 -> STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[52]), STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), 
		 -> STR_63(CODE[6]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[3]), STR_58(CODE[2]), STR_57(CODE[4]), STR_56(CODE[28]), 
		 -> STR_55(CODE[26]), STR_54(CODE[27]), STR_53(CODE[17]), STR_52(CODE[255]), 
		 -> STR_51(CODE[5]), STR_50(CODE[399]), STR_49(CODE[44]), STR_48(CODE[41]), 
		 -> STR_47(CODE[41]), STR_46(CODE[16]), STR_45(CODE[89]), STR_44(CODE[3]), 
		 -> STR_43(CODE[5]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), 
		 -> STR_39(CODE[15]), STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), 
		 -> STR_35(CODE[5]), STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), 
		 -> STR_31(CODE[20]), STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[8]), STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), 
		 -> STR_23(CODE[50]), STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), 
		 -> STR_19(CODE[37]), STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), 
		 -> STR_15(CODE[24]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), 
		 -> STR_11(CODE[52]), STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> firstBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> firstBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> firstBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   75249
                                             51 BANK0     20    20      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___awmod
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   24423
                                             41 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     353
                                              7 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     505
                                              7 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                              7 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   23980
                                             41 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   23633
                                             31 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17504
                                             80 COMRAM     2     2      0
                                             25 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   16950
                                             74 COMRAM     6     0      6
                                              0 BANK0     25    25      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5359
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5454
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3805
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1623
                                             17 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1268
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0     116
                                              4 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     116
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           2     2      0     116
                                              2 COMRAM     2     2      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___awmod
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     400      37       26.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      12        0.0%
DATA                 0      0     4CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 26 14:28:49 2020

                                            l21 23DA                                              l31 238C  
                                            l33 239A                                              l25 1CE6  
                                            l34 239E                                              l28 2428  
                                            l88 22D6                            SDCARD_ReadBlock@addr 0008  
                           ___wmul@multiplicand 0009                                 _timer0ReloadVal 0057  
                                hexDumpBuffer@i 0091                                  hexDumpBuffer@j 008D  
                                           l112 223C                                             l124 23E4  
                                           l213 0424                                             l134 23EE  
                                           l311 2300                                             l209 03B6  
                                           l314 23A2                                             l307 22D8  
                                           l323 2416                                             l317 23B4  
                                           l341 240C                                             l422 20BA  
                                           l407 1D80                                             l335 2402  
                                           l433 1750                                             l417 1EA2  
                                           l338 23F8                                             l290 203C  
                                           l370 236A                                             l427 20F0  
                                           l419 1EA4                                             l452 1890  
                                           l364 2384                                             l188 0070  
                                           l367 235C                                             l199 02B2  
                                           l472 234E                                             l298 23C8  
                                           l458 1326                                             l379 2424  
                                           l716 1C3A                                             l469 13F6  
                                           l586 1718                                             l599 19F4  
                                           _abs 203E                                             _pad 1ACA  
                                           _sin F997                                    ___awmod@sign 000C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1203 1A5A  
                                          ?_abs 0019                                            l1206 1A9C  
                                          l1214 0CFA                                            l1150 2328  
                                          l1311 207C                                            l1303 1F00  
                                          l1208 1AC8                                            l1216 0D02  
                                          l1304 1F08                                            l3001 148A  
                                          l1241 0F78                                            l1234 0F36  
                                          l1410 2128                                            l3011 1508  
                                          l3003 1492                                            l1308 2074  
                                          l1404 1F66                                            l3005 149A  
                                          l1342 1590                                            l1190 1B50  
                                          l1262 11A8                                            l1351 2198  
                                          l3015 1548                                            l3007 14D0  
                                          l1239 0F70                                            l1192 1B8A  
                                          l1264 120A                                            l1248 100C  
                                          l3017 155A                                            l1345 20B8  
                                          l4001 1752                                            l3019 156C  
                                          l1339 1588                                            l1187 1B0E  
                                          l1291 0C58                                            l4011 17B2  
                                          l4003 178C                                            l1380 1E16  
                                          l1365 2160                                            l4021 17D0  
                                          l4013 17B8                                            l4005 178E  
                                          l3221 201E                                            l4101 1350  
                                          l1278 0876                                            l1359 1FB8  
                                          l4031 17EE                                            l4023 17D6  
                                          l4015 17BE                                            l4007 179E  
                                          l3231 1C3E                                            l3151 23FA  
                                          l3223 202A                                            l4111 13AC  
                                          l4103 1362                                            l4041 1828  
                                          l4033 17FE                                            l4025 17DC  
                                          l4017 17C4                                            l4009 17B0  
                                          l3401 1D7E                                            l3241 1CE4  
                                          l3233 1C4C                                            l3153 23F0  
                                          l3225 2036                                            l3217 1FFE  
                                          l4113 13CE                                            l4105 136E  
                                          l4201 03AA                                            l4121 005C  
                                          l1394 2272                                            l4051 1846  
                                          l4043 182E                                            l4035 180E  
                                          l4027 17E2                                            l4019 17CA  
                                          l3235 1C8C                                            l3155 2404  
                                          l3219 2012                                            l3227 2422  
                                          l3171 23D6                                            l4107 1380  
                                          l4115 13D4                                            l4211 0460  
                                          l4203 0426                                            l4131 008A  
                                          l4123 0060                                            l1388 1FFC  
                                          l2701 15FA                                            l4061 186E  
                                          l4053 184C                                            l4045 1834  
                                          l4037 1820                                            l4029 17EC  
                                          l3245 2426                                            l3237 1C90  
                                          l3229 2350                                            l3173 23D8  
                                          l3149 23E6                                            l3181 2208  
                                          l3261 236C                                            l4117 13EA  
                                          l4109 139C                                            l4221 04CE  
                                          l4213 047A                                            l4205 0442  
                                          l4141 00B8                                            l4133 008C  
                                          l4125 0062                                            l3175 2388  
                                          l2711 164E                                            l2703 1606  
                                          l1399 1F5E                                            l4063 187E  
                                          l4055 1852                                            l4047 183A  
                                          l4039 1822                                            l3503 20DC  
                                          l3239 1CB4                                            l3191 222C  
                                          l3183 220A                                            l3271 2380  
                                          l3263 2370                                            l3247 23DC  
                                          l3511 1B90                                            l4223 04D2  
                                          l4215 0488                                            l4207 0444  
                                          l4151 00F0                                            l4143 00C6  
                                          l4135 008E                                            l4127 006E  
                                          l4119 0042                                            l3281 22EC  
                                          l3273 23B6                                            l2641 23B0  
                                          l2721 16C2                                            l2713 1660  
                                          l2705 1624                                            l2801 1F0A  
                                          l4057 185C                                            l4049 1840  
                                          l3505 20EE                                            l3177 22AA  
                                          l3169 23CA                                            l3193 2238  
                                          l3185 2212                                            l3265 2374  
                                          l3249 23E0                                            l3521 1BC0  
                                          l3513 1B9E                                            l4081 1274  
                                          l4073 1224                                            l4065 120C  
                                          l4241 0554                                            l4233 04FC  
                                          l4225 04E2                                            l4217 04AE  
                                          l4209 0452                                            l4161 028A  
                                          l4153 0272                                            l4145 00CA  
                                          l4137 009C                                            l4129 007E  
                                          l3283 22FA                                            l2811 2162  
                                          l2643 2410                                            l2651 1DB0  
                                          l2715 168E                                            l2707 162C  
                                          l2723 16C8                                            l2731 1892  
                                          l4059 185E                                            l3371 1CF0  
                                          l3179 22D4                                            l3187 2228  
                                          l3267 2378                                            l3531 1C06  
                                          l3523 1BD2                                            l3515 1BA6  
                                          l4091 12DC                                            l4083 1292  
                                          l4075 1236                                            l4067 121A  
                                          l4251 05B0                                            l4243 0570  
                                          l4235 0520                                            l4227 04F2  
                                          l4219 04BC                                            l4163 0296  
                                          l4155 0282                                            l4147 00D0  
                                          l4139 00AA                                            l3285 22FE  
                                          l3277 22D8                                            l2821 1FAE  
                                          l2653 1DCE                                            l2645 1D82  
                                          l2725 16D8                                            l2717 16AE  
                                          l2709 1640                                            l2741 18D6  
                                          l2733 1896                                            l2661 1FC6  
                                          l2901 0EC4                                            l2805 1F40  
                                          l3381 1D0E                                            l3373 1CF6  
                                          l3365 1CE8                                            l3461 1E1A  
                                          l3189 222A                                            l3269 237C  
                                          l3541 1C32                                            l3533 1C0E  
                                          l3525 1BDA                                            l3517 1BAA  
                                          l3509 1B8C                                            l4093 12FE  
                                          l4085 129E                                            l4077 1254  
                                          l4261 060E                                            l4253 05C2  
                                          l4245 0588                                            l4237 053E  
                                          l4181 02F0                                            l4173 02C0  
                                          l4165 029C                                            l4149 00E4  
                                          l3279 22E6                                            l2823 1FB2  
                                          l2815 1F68                                            l2639 23A2  
                                          l2655 1E04                                            l2647 1D94  
                                          l2831 1A14                                            l2727 16F8  
                                          l2719 16B0                                            l2751 193E  
                                          l2743 18F6                                            l2735 18A4  
                                          l2663 1FD8                                            l2671 224E  
                                          l2911 0EFE                                            l2903 0ED2  
                                          l2807 1F52                                            l3383 1D14  
                                          l3375 1CFC                                            l3367 1CE8  
                                          l3471 1E38                                            l3463 1E20  
                                          l3535 1C14                                            l3527 1BE2  
                                          l3519 1BB8                                            l4087 12B0  
                                          l4095 1304                                            l4079 1260  
                                          l4271 0664                                            l4263 0622  
                                          l4255 05DA                                            l4239 0542  
                                          l4247 0598                                            l4191 0340  
                                          l4183 02F6                                            l4175 02CC  
                                          l4167 02B8                                            l2681 232A  
                                          l2817 1F6C                                            l2649 1DA6  
                                          l2841 1A52                                            l2833 1A20  
                                          l2761 19B4                                            l2753 196C  
                                          l2745 1914                                            l2737 18C4  
                                          l2665 1FDC                                            l2673 2266  
                                          l2905 0ED8                                            l2913 0F0E  
                                          l2921 0F4A                                            l3393 1D48  
                                          l3385 1D2A                                            l3377 1D02  
                                          l3369 1CEA                                            l3473 1E3E  
                                          l3465 1E26                                            l3457 1E18  
                                          l3529 1BF0                                            l3537 1C1A  
                                          l4097 131A                                            l4089 12CC  
                                          l4273 0686                                            l4281 06A8  
                                          l4265 063E                                            l4257 05F2  
                                          l4249 05AC                                            l4193 0356  
                                          l4185 0300                                            l4177 02D2  
                                          l2683 2346                                            l2819 1F80  
                                          l2851 1ABC                                            l2843 1A66  
                                          l2835 1A2E                                            l2827 19F6  
                                          l2691 15A4                                            l2763 19D4  
                                          l2755 198C                                            l2747 191C  
                                          l2739 18C8                                            l2659 1FBA  
                                          l2667 223E                                            l2771 1AEC  
                                          l2907 0EEA                                            l2931 0FBE  
                                          l2923 0F64                                            l3491 20BC  
                                          l3395 1D5C                                            l3387 1D40  
                                          l3379 1D08                                            l3475 1E44  
                                          l3467 1E2C                                            l3459 1E18  
                                          l3539 1C2A                                            l4099 134A  
                                          l4267 0648                                            l4283 06BA  
                                          l4259 0602                                            l4187 0312  
                                          l4195 0366                                            l4179 02EC  
                                          l2845 1A7A                                            l2837 1A40  
                                          l2829 1A08                                            l2693 15C4  
                                          l2757 199E                                            l2749 1930  
                                          l2669 224A                                            l2781 1B32  
                                          l2773 1AFA                                            l2909 0EF6  
                                          l2861 0CC2                                            l2677 20F2  
                                          l2941 1000                                            l2933 0FC6  
                                          l2925 0F8E                                            l2917 0F38  
                                          l3901 08FE                                            l3493 20C4  
                                          l3397 1D60                                            l3485 1E7A  
                                          l3477 1E5A                                            l3469 1E32  
                                          l4285 06CE                                            l4277 069E  
                                          l4197 0388                                            l4189 0334  
                                          l4293 06FA                                            ?_pad 0019  
                                          l2847 1A7E                                            l2695 15C8  
                                          l2687 1592                                            l2759 19A4  
                                          l2791 2058                                            l2783 1B5E  
                                          l2775 1B06                                            l2767 1ACA  
                                          l2871 0D1C                                            l2863 0CD2  
                                          l2855 0C5A                                            l2951 108C  
                                          l2935 0FCC                                            l2927 0F96  
                                          l2919 0F48                                            l3903 091E  
                                          l3911 0988                                            l3495 20C6  
                                          l3399 1D72                                            l3487 1E8C  
                                          l3479 1E72                                            l4391 070E  
                                          l4287 06D2                                            l4199 0394  
                                          l2849 1AAA                                            l2697 15D6  
                                          l2689 1596                                            l2785 1B72  
                                          l2777 1B1A                                            l2769 1AD8  
                                          l2881 0D46                                            l2873 0D2A  
                                          l2865 0CD4                                            l2857 0C7A  
                                          l2793 212A                                            l2961 10CE  
                                          l2953 109E                                            l2945 1040  
                                          l2937 0FD4                                            l2929 0FB6  
                                          l3921 0A22                                            l3913 09AE  
                                          l3905 092C                                            l4393 0836  
                                          l3497 20D6                                            l3489 1E90  
                                          l4289 06E4                                            l4395 14BA  
                                          l2699 15F6                                            l2779 1B2E  
                                          l2891 0E52                                            l2883 0DC8  
                                          l2875 0D30                                            l2867 0CEE  
                                          l2859 0CA2                                            l2971 119A  
                                          l2947 1052                                            l2955 10B2  
                                          l2939 0FF0                                            l2963 112C  
                                          l3931 0AEE                                            l3923 0A48  
                                          l3915 09E0                                            l2789 203E  
                                          l2893 0E70                                            l2885 0DCE  
                                          l2877 0D38                                            l2869 0D0A  
                                          l2797 207E                                            l2973 11B6  
                                          l2965 1148                                            l2957 10C2  
                                          l3933 0B14                                            l3925 0A90  
                                          l3909 0976                                            l3861 07CA  
                                          l3853 0780                                            l2991 1432  
                                          l2983 13F8                                            l2895 0E8A  
                                          l2887 0DD4                                            l2879 0D40  
                                          l2975 11BC                                            l2967 1166  
                                          l2959 10C8                                            l3935 0B2C  
                                          l3943 0BB2                                            l3919 09FC  
                                          l3871 07F0                                            l3863 07D6  
                                          l3855 07A6                                            l2993 146A  
                                          l2985 140C                                            l2897 0EA4  
                                          l2889 0E38                                            l2977 11CC  
                                          l2969 1180                                            l3961 0C46  
                                          l3945 0BD8                                            l3953 0C06  
                                          l3937 0B3A                                            l3929 0AC8  
                                          l3865 07D8                                            l3857 07B4  
                                          l2995 146E                                            l2987 1410  
                                          l2899 0EB2                                            l2979 11E2  
                                          l3955 0C14                                            l3947 0BE6  
                                          l3939 0B76                                            l3891 0884  
                                          l3883 0802                                            l3875 07F6  
                                          l3867 07EA                                            l3859 07C4  
                                          l2989 1414                                            l3949 0BFA  
                                          l3893 0886                                            l3981 1EE2  
                                          l2999 1474                                            l3895 08AC  
                                          l3887 080E                                            l3879 07FC  
                                          l3959 0C20                                            l3975 1EA6  
                                          l3983 2302                                            l3897 08E2  
                                          l3889 0864                                            l3977 1EAE  
                                          l3985 230C                                            l3899 08F0  
                                          l3979 1EBC                                            l3995 1728  
                                          l3997 172E                                            l3989 171E  
                                          l3999 1734                                            STR_1 FFC0  
                                          STR_2 FF5E                                            STR_3 FFCB  
                                          STR_4 FD92                                            STR_5 FCD3  
                                          STR_6 FF4B                                            STR_7 FFEE  
                                          STR_8 FFFC                                            STR_9 FFEE  
                                          u2000 0CA2                                            u2001 0C9E  
                                          u2010 0CD2                                            u2011 0CCE  
                                          u2100 0EC4                                            u2020 0CEE  
                                          u2101 0EC0                                            u2021 0CEA  
                                          u2110 0ED2                                            u2030 0D1C  
                                          u2111 0ECE                                            u2031 0D18  
                                          u2120 0EEA                                            u2040 0D2A  
                                          u2200 1086                                            u2121 0EE6  
                                          u2041 0D26                                            u2201 1080  
                                          u2050 0E52                                            u2210 1088  
                                          u2130 0F48                                            u2051 0E4E  
                                          u2131 0F44                                            u2300 1432  
                                          u2060 0E70                                            u2220 109E  
                                          u2140 0F64                                            u3100 0970  
                                          u2301 142E                                            u2061 0E6C  
                                          u2221 109A                                            u2141 0F60  
                                          u3101 096A                                            _LATA 000F89  
                                          u2310 146A                                            u2070 0E8A  
                                          u2230 1106                                            u2150 0F8E  
                                          u3110 0972                                            _LATB 000F8A  
                                          u2311 1466                                            u2071 0E86  
                                          u2151 0F8A                                            _LATC 000F8B  
                                          u2320 1486                                            u1600 1FFC  
                                          u2080 0EA4                                            u2240 1148  
                                          u2160 0FF0                                            u3120 0988  
                                          u3200 1750                                            u2321 1482  
                                          u1601 1FF8                                            u2081 0EA0  
                                          u2241 1144                                            u2161 0FEC  
                                          u3121 0984                                            u3201 174C  
                                          u2330 1542                                            u1610 2266  
                                          u2090 0EB2                                            u2250 1166  
                                          u2170 103A                                            u3130 09AE  
                                          u3050 07A6                                            u3210 179E  
                                          u2331 153C                                            u1611 2262  
                                          u2091 0EAE                                            u2251 1162  
                                          u2235 10F4                                            u2171 1034  
                                          u3131 09AA                                            u3051 07A2  
                                          u3211 179A                                            u2340 1544  
                                          u1700 16D8                                            u1620 2122  
                                          u2260 1180                                            u2180 103C  
                                          u3140 0A22                                            u3060 0876  
                                          u3220 17FE                                            u3300 12CC  
                                          u1701 16D4                                            u1621 211C  
                                          u2261 117C                                            u3141 0A1E  
                                          u3061 0872                                            u3221 17FA  
                                          u3301 12C8                                            u2350 155A  
                                          u1550 23B0                                            u1710 18A4  
                                          u1630 2124                                            u2270 119A  
                                          u2190 1052                                            u3150 0A48  
                                          u3070 0884                                            u3230 180E  
                                          u3310 131A                                            u2351 1556  
                                          u1551 23AC                                            u1711 18A0  
                                          u2271 1196                                            u2191 104E  
                                          u3151 0A44                                            u3071 0880  
                                          u3231 180A                                            u3311 1316  
                                          u2600 22FA                                            u2520 239A  
                                          u2360 156C                                            u1560 1D94  
                                          u1640 15A4                                            u1720 18D6  
                                          u1800 1B5E                                            u2280 11A8  
                                          u3160 0AEE                                            u3080 08AC  
                                          u3240 186E                                            u3320 1362  
                                          u3400 0334                                            u2601 22F6  
                                          u2521 2396                                            u2361 1568  
                                          u1561 1D90                                            u1641 15A0  
                                          u1721 18D2                                            u1801 1B5A  
                                          u2281 11A4                                            u3161 0AEA  
                                          u3081 08A8                                            u3241 186A  
                                          u3321 135E                                            u3401 0330  
                                          u1570 1DA6                                            u1650 15D6  
                                          u1730 1914                                            u1810 2058  
                                          u2290 11B6                                            u3170 0B14  
                                          u3090 08F0                                            u3250 187E  
                                          u3330 139C                                            u3410 0388  
                                          u1571 1DA2                                            u1651 15D2  
                                          u1731 1910                                            u1811 2054  
                                          u2291 11B2                                            u3171 0B10  
                                          u3091 08EC                                            u3251 187A  
                                          u3331 1398                                            u3411 0384  
                                          u1900 2194                                            u1580 1DCE  
                                          u1740 193E                                            u1820 215A  
                                          u3180 0BD8                                            u2540 236A  
                                          u3340 13EA                                            u3260 1236  
                                          u3420 0554                                            u1581 1DCA  
                                          u1661 1600                                            u1741 193A  
                                          u1821 2154                                            u3181 0BD4  
                                          u2541 2366                                            u3341 13E6  
                                          u3261 1232                                            u3421 0550  
                                          u1910 1F80                                            u1590 1E04  
                                          u1670 1624                                            u1750 196C  
                                          u1830 215C                                            u3190 1F00  
                                          u2550 1C4C                                            u3270 1254  
                                          u3430 0588                                            u3350 007E  
                                          u1911 1F7C                                            u1591 1E00  
                                          u1671 1620                                            u1751 1968  
                                          u3191 1EFC                                            u2551 1C48  
                                          u3271 1250                                            u3431 0584  
                                          u3351 007A                                            u1920 1FAE  
                                          u1680 164E                                            u1760 19B4  
                                          u1840 20B2                                            u2800 1EA2  
                                          u3280 1274                                            u3440 05AC  
                                          u3360 00E4                                            u1921 1FAA  
                                          u1681 164A                                            u1761 19B0  
                                          u1841 20AC                                            u2801 1E9E  
                                          u3281 1270                                            u3441 05A8  
                                          u3361 00E0                                            u1930 1A08  
                                          u1690 168E                                            u1770 1AD8  
                                          u1850 20B4                                            u2810 20D6  
                                          u3290 1292                                            u3450 0660  
                                          u3370 02B2                                            u1931 1A04  
                                          u1691 168A                                            u1771 1AD4  
                                          u2811 20D2                                            u3291 128E  
                                          u3451 065C                                            u3371 02AE  
                                          u2580 23C6                                            u1940 1A2E  
                                          u1780 1AFA                                            u1860 1F3A  
                                          u2820 1B9E                                            u3460 069A  
                                          u3380 02E8                                            u2581 23C0  
                                          u1941 1A2A                                            u1781 1AF6  
                                          u1861 1F34                                            u2821 1B9A  
                                          u3461 0696                                            u3381 02E4  
                                          u2590 22E6                                            u1950 1A4E  
                                          u1790 1B50                                            u1870 1F3C  
                                          u2670 1D2A                                            u2830 1BB8  
                                          u3470 06CE                                            u3390 0312  
                                          u2591 22E2                                            u1951 1A4A  
                                          u1791 1B4C                                            u2671 1D26  
                                          u2831 1BB4                                            u3471 06CA  
                                          u3391 030E                                            u1960 1A9C  
                                          u1880 1F52                                            u2680 1D40  
                                          u2840 1BD2                                            u1961 1A98  
                                          u1881 1F4E                                            u2681 1D3C  
                                          u2841 1BCE                                            u2586 23C8  
                                          u1890 2192                                            u1970 1AAA  
                                          u2690 1D72                                            u2850 1BF0  
                                          u1891 218C                                            u1971 1AA6  
                                          u2691 1D6E                                            u2851 1BEC  
                                          u1980 0C8A                                            u2860 1C06  
                                          u1981 0C84                                            u2861 1C02  
                                          u1990 0C8C                                            u2790 1E5A  
                                          u2870 1C2A                                            u2791 1E56  
                                          u2871 1C26                                            _WPUB 000F61  
                                 _EUSART1_Write 23A0                                            abs@a 0019  
                                          _dbuf 00B5                                            _atoi 13F8  
                                          _ctoa 19F6                                            _main 0042  
                                          _dtoa 0C5A                                   ?_EUSART1_Read 0001  
                                          _prec 00A9                                            _nout 00A7  
                                          pad@i 0020                                            pad@p 001D  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0022                                            fsr2l 000FD9  
                                          btemp 0059                                     main@waveIdx 009B  
                                          _xtoa 0F38                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 008B  
                                          start 003E                       __size_of_SDCARD_ReadBlock 009A  
                                  ___param_bank 000000                                           ??_abs 001B  
                                         ??_pad 001F                         __end_of_TMR0_Initialize 223E  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 236C                                 __end_of___aodiv 171A  
                                         ?_atoi 000E                                     ?_SPI2_Close 0001  
                                         ?_ctoa 0012                                           ?_main 0001  
                                         ?_dtoa 0024                                 __end_of___aomod 19F6  
                                         STR_10 FFAE                                           STR_11 FCD5  
                                         STR_12 FFB1                                           STR_20 FD67  
                                         STR_13 FFDC                                           STR_21 FC9C  
                                         STR_22 FCD5                                           STR_14 FF0E  
                                         STR_30 FE53                                           STR_31 FF23  
                                         STR_15 FEF6                                           STR_23 FD09  
                                         STR_16 FCD5                                           STR_40 FF81  
                                         STR_32 FE8D                                           STR_24 FD3B  
                                         STR_41 FFEE                                           STR_33 FF37  
                                         STR_17 FEDE                                           STR_25 FE33  
                                         STR_26 FCD5                                           STR_18 FCD5  
                                         STR_34 FF4B                                           STR_42 FFFC  
                                         STR_50 F9B5                                           STR_43 FFEE  
                                         STR_35 FFEE                                           STR_51 FFE9  
                                         STR_27 FFD4                                           STR_19 FE0E  
                                         STR_28 FFF5                                           STR_44 FFAE  
                                         STR_36 FFFC                                           STR_60 FFFA  
                                         STR_52 FB44                                 __end_of___awmod 1C3C  
                                         STR_29 FFF5                                           STR_37 FFEE  
                                         STR_61 FFF7                                           STR_53 FF70  
                                         STR_45 FC43                                           STR_62 FFAE  
                                         STR_38 FFAE                                           STR_46 FF92  
                                         STR_54 FEA9                                           STR_63 FFE3  
                                         STR_39 FFA2                                           STR_55 FEC4  
                                         STR_47 FDE5                                           STR_64 FF8E  
                                         STR_56 FE71                                           STR_48 FDBC  
                                         STR_49 FD3B                                           STR_65 FFFA  
                                         STR_57 FFF3                                           STR_58 FF90  
                                         STR_66 FFF7                                           STR_67 FFAE  
                                         STR_59 FF8F                                           _T0CON 000FD5  
                                         ?_xtoa 0024                                           i2l131 21D0  
                                         i2l124 2420                                           i2l241 2274  
                                         i2l137 242A                                 _TMR0_WriteTimer 23DC  
                                         i2l247 22A8                                           i2l386 0032  
                                  vfpfcnvrt@fmt 004D                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 006C                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                            __size_of_SPI2_Open 00AC                       ?_TMR0_SetInterruptHandler 0007  
                              __end_of_TMR0_ISR 21D2                                           _flags 0055  
                                         _fputc 1D82                                 __end_of_isalpha 20BA  
                                         _fputs 1FBA                                 __end_of_isdigit 219A  
                                         atoi@n 001B                                           pad@fp 0019  
                                         atoi@s 000E                                           _width 0053  
                                         ctoa@c 0014                                           _putch 240E  
                                         ctoa@l 0016                                           ctoa@w 0018  
                                         main@i 00A1                                           dtoa@d 0026  
                                         dtoa@i 0046                                           dtoa@n 003E  
                                         dtoa@p 0038                                           dtoa@s 003C  
                                         dtoa@w 003A                                 __end_of_islower 212A  
                               __end_of_isspace 1FBA                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 2162                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0007  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                                           status 000FD8  
                                         wtemp8 005A                                           xtoa@c 0049  
                                         xtoa@d 0026                                           xtoa@i 0047  
                                         xtoa@n 003F                                           xtoa@p 003B  
                                         xtoa@w 003D                                           xtoa@x 002E  
                               __end_of_toupper 1F68              _EUSART1_DefaultFramingErrorHandler 000000  
                                  _toupper$1828 0013                                 __initialization 21D2  
                  SDCARD_ReadBlock@sdCardBuffer 000C                                    __end_of_atoi 1592  
                                  __end_of_ctoa 1ACA                      __end_of_EUSART1_Initialize 203E  
                                  __end_of_main 0780                                    __end_of_dtoa 0F38  
                             _SPI2_ExchangeByte 2386                                    __end_of_xtoa 120C  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 0010                                          ??_ctoa 0015  
                                        ??_main 0093                                          ??_dtoa 002E  
                                        ??_xtoa 002F                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 0012                             ??_SPI2_ExchangeByte 0007  
                                        ?_fputc 0009                                          ?_fputs 0012  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l3201 2276  
                                        i2l3211 2298                                          i2l3213 22A4  
                                        i2l3215 22A6                                          i2l3207 227E  
                                        i2l3209 2282                                          i2l3251 219A  
                                        i2l3165 2418                                          i2l3253 219C  
                                        i2l3167 241C                                          i2l3255 21A0  
                                        i2l3257 21A4                                          i2l3259 21B8  
                                        i2l3751 002E                                          i2l3747 0012  
                                        i2l3749 0020                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 0074  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                             __size_of_SPI2_Close 0004  
                             __end_of_SPI2_Open 1CE8                       __end_of_SPI2_ExchangeByte 23A0  
                                  vfprintf@cfmt 0051                                       ??___aodiv 0017  
                                     ??___aomod 0017                                          ___wmul 232A  
                                     ??___awmod 000B                         __end_of_TMR0_WriteTimer 23E6  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 0007  
                              ?_TMR0_Initialize 0001                                          clear_0 21DA  
                                        clear_1 21EC                                 ___awmod@divisor 0009  
                               ___awmod@counter 000B                                          _printf 2302  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          ctoa@fp 0012  
                                        dtoa@fp 0024                                          _strlen 223E  
                                        fputc@c 0009                                          fputs@c 0016  
                                        fputs@i 0017                                          fputs@s 0012  
                                     ??_isalpha 0009                                       ??_isdigit 0009  
                                     ??_islower 0009                                    __mediumconst F996  
                                     ??_isspace 0009                                          tblptrh 000FF7  
                                     ??_isupper 0009                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1F0A  
                               ??_EUSART1_Write 0007        TMR0_SetInterruptHandler@InterruptHandler 0007  
                                        xtoa@fp 0024                                       ??_toupper 000F  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 236C  
                                    __accesstop 0060                         __end_of__initialization 21FE  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 1CE8                      __end_of_spi2_configuration F9B5  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 1E18  
                                 __end_of_fputs 1FFE                                   __end_of_putch 2418  
                          __end_of_EUSART1_Read 2302                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 2386                                         ??_fputs 0016  
                            __size_of_myTMR0ISR 0036                                         ??_putch 0008  
                            SDCARD_WriteBlock@i 000E                               ??_SPI2_Initialize 0007  
                                    __pbssBANK0 00A7                      __size_of_SPI2_ExchangeByte 001A  
               __end_of_EUSART1_SetErrorHandler 240E                __end_of_TMR0_SetInterruptHandler 23F0  
                                       ?___wmul 0007                                      ??_TMR0_ISR 0005  
                              ?_TMR0_WriteTimer 0007                                         ?_printf 007F  
                                  ??_SPI2_Close 0007                                         ?_strlen 0007  
        __end_of_EUSART1_SetFramingErrorHandler 2404         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 23FA                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 04DA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                               SDCARD_ReadBlock@i 000E  
              __end_of_SDCARD_PollWriteComplete 20F2                              __end_of_SPI2_Close 242A  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 13F8                       SDCARD_Initialize@response 008C  
                                       ___aodiv 1592                                         ___aomod 1892  
                                       ___awmod 1B8C                                 __size_of___wmul 0026  
                             __end_of_myTMR0ISR 22AA                                       ?_vfprintf 0079  
                           _EUSART1_is_rx_ready 23B6                                         __pcinit 21D2  
                                       __ramtop 1000                                         __ptext0 0042  
                                       __ptext1 120C                                         __ptext2 1B8C  
                                       __ptext3 23DC                                         __ptext4 236C  
                                       __ptext5 2208                                         __ptext6 23E6  
                                       __ptext7 23CA                                         __ptext8 22AA  
                                       __ptext9 2350                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 2350                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 207E  
                                       _isdigit 2162                                ___awmod@dividend 0007  
                            _EUSART1_Initialize 1FFE                                         _islower 20F2  
                      ??_PIN_MANAGER_Initialize 0007                                         _isspace 1F68  
                                       _isupper 212A                                         atoi@neg 0014  
                                       main@cmd 009C                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 1F0A                            end_of_initialization 21FE  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000B                     _EUSART1_OverrunErrorHandler 00AD  
                                       fputs@fp 0014                   SDCARD_WriteBlock@sdCardBuffer 000C  
                             __end_of_vfpfcnvrt 0C5A                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                                      ??_vfprintf 0051  
                                     _SPI2_Open 1C3C                            ??_EUSART1_Initialize 0009  
                         SDCARD_WriteBlock@addr 0008                                         strlen@a 0009  
                                       strlen@s 0007                      myTMR0ISR@bigOleWasteOfTime 0003  
                      _TMR0_SetInterruptHandler 23E6                                main@localAddress 0097  
                      __end_of_SDCARD_ReadBlock 1D82                                       _TRISBbits 000F93  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0008  
                           EUSART1_Write@txData 0007                           ??_EUSART1_is_rx_ready 0007  
                                    main@bufIdx 009F                                    _EUSART1_Read 22D8  
                                    main@letter 0096                                      main@status 0095  
                      _SDCARD_PollWriteComplete 20BA                    __end_of_INTERRUPT_Initialize 2426  
                             _SDCARD_Initialize 171A                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 004F                                     vfpfcnvrt@fp 004B  
                                   vfpfcnvrt@ll 0064                                  __end_of___wmul 2350  
                             __size_of_TMR0_ISR 0038                              ?_SDCARD_Initialize 0001  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 23CA  
                                __end_of_printf 232A                                  __end_of_strlen 2274  
                            _spi2_configuration F9B1                             start_initialization 21D2  
                           ??_SDCARD_Initialize 0053                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_abs 207E  
                                   __end_of_pad 1B8C                                     __end_of_sin F9B1  
                                   putch@txData 0008                           __end_of_EUSART1_Write 23B6  
                             main@sdCardAddress 00A3                       __end_of_SDCARD_Initialize 1892  
                                   vfprintf@fmt 007B                                        ??___wmul 000B  
                                      ??_printf 0053                           SPI2_ExchangeByte@data 0007  
                                      ??_strlen 0009                                     __pbssBIGRAM 00D5  
                                   __pbssCOMRAM 0053                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1165 008F                                ___aodiv@dividend 0007  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
                                     _atoi$1752 0016                                       _atoi$1753 001A  
                                     _atoi$1754 0018                           _TMR0_InterruptHandler 00B1  
                        _PIN_MANAGER_Initialize 22AA                                       _dtoa$1704 0036  
                             _SDCARD_WriteBlock 1E18                                       __pintcode 0008  
                                 __pmediumconst F996                         __end_of_SPI2_Initialize 23DC  
                                      ?___aodiv 0007                                        ?___aomod 0007  
                              ___aodiv@quotient 0019                                        ?___awmod 0007  
                            ?_SDCARD_WriteBlock 0008                                     ??_SPI2_Open 0007  
              SPI2_Open@spi2UniqueConfiguration 0008                    ??_INTERRUPT_InterruptManager 0005  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 2274  
                           ??_SDCARD_WriteBlock 000E                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0007  
                                      ?_isdigit 0007                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00AB                                        ?_islower 0007  
                                      ?_isspace 0007                                        ?_isupper 0007  
                       _EUSART1_SetErrorHandler 2404                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000D  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2422  
                             ??_TMR0_Initialize 0009                                  ___wmul@product 000B  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0007  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                     __end_of_SDCARD_WriteBlock 1EA6                                        i2u303_40 0020  
                                      i2u303_41 001C             __size_of_INTERRUPT_InterruptManager 0036  
                                      i2u304_40 002E                                        i2u304_41 002A  
                                      i2u253_40 2298                      ??_TMR0_SetInterruptHandler 0009  
                                      i2u253_41 2294                                        i2u256_40 21B8  
                                      i2u256_41 21B4                                        _PIR1bits 000F9E  
                                      i2u257_48 21BE                                        i2u257_49 21D0  
                                      _PIR3bits 000FA4                      __size_of_SDCARD_Initialize 0178  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 219A  
                                      _SSP2STAT 000F6D                                       _vfpfcnvrt 0780  
                                     _xtoa$1715 0037                                       _xtoa$1716 0039  
                                     main@i_708 009D                               ___wmul@multiplier 0007  
                                    ?_myTMR0ISR 0001                               i2_TMR0_WriteTimer 2418  
                             ?_SDCARD_ReadBlock 0008                                    _isspace$1779 000D  
                        __size_of_hexDumpBuffer 01EC                                      vfpfcnvrt@c 0078  
                                   _firstBuffer 02D5                              ?i2_TMR0_WriteTimer 0001  
                                  _secondBuffer 00D5                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 000E  
                    ??_SDCARD_PollWriteComplete 0008                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 007D  
                                      __Lrparam 0000                                      vfprintf@fp 0079  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 0007  
                              __size_of___aodiv 0188                              SDCARD_Initialize@i 0089  
                              __size_of___aomod 0164                                __size_of___awmod 00B0  
                   __size_of_EUSART1_Initialize 0040                                      ?_vfpfcnvrt 004B  
                               ___aodiv@divisor 000F                                 ___aodiv@counter 0017  
                     __end_ofi2_TMR0_WriteTimer 2422                       ??_EUSART1_SetErrorHandler 0009  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 23CA  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2422                                        __ptext11 1FFE  
                                      __ptext20 171A                                        __ptext12 23F0  
                                      __ptext21 2302                                        __ptext13 23FA  
                                      __ptext30 1ACA                                        __ptext22 1EA6  
                                      __ptext14 2404                                        __ptext31 223E  
                                      __ptext23 0780                                        __ptext15 1C3C  
                                      __ptext40 13F8                                        __ptext32 1FBA  
                                      __ptext24 0F38                                        __ptext16 2426  
                                      __ptext41 1F68                                        __ptext33 203E  
                                      __ptext25 1F0A                                        __ptext17 1E18  
                                      __ptext50 2274                                        __ptext42 2162  
                                      __ptext34 1892                                        __ptext26 20F2  
                                      __ptext18 1CE8                                        __ptext51 2418  
                                      __ptext43 232A                                        __ptext35 1592  
                                      __ptext27 212A                                        __ptext19 20BA  
                                      __ptext52 0000                                        __ptext44 2386  
                                      __ptext36 19F6                                        __ptext28 207E  
                                      __ptext45 23B6                                        __ptext37 1D82  
                                      __ptext29 0C5A                                        __ptext46 22D8  
                                      __ptext38 240E                                        __ptext39 23A0  
                                      __ptext48 219A                                        __ptext49 242A  
                              __size_of_isupper 0038                                        _bufState 00B4  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0007  
                             ??_TMR0_WriteTimer 0009                                __size_of_toupper 005E  
                                 __size_of_atoi 019A                                   __size_of_ctoa 00D4  
                                 __size_of_main 073E                                   __size_of_dtoa 02DE  
                                 __size_of_xtoa 02D4                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 242C           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 242A  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                                 _hexDumpBuffer 120C                                        int$flags 0059  
                                      _vfprintf 1EA6              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 007F  
                   _EUSART1_FramingErrorHandler 00AF                                ___aomod@dividend 0007  
                                   ??_myTMR0ISR 0003                                  _vfpfcnvrt$1730 0076  
                                    _INTCONbits 000FF2                                        isalpha@c 0007  
                                      isdigit@c 0007                          ??_INTERRUPT_Initialize 0007  
                      SDCARD_Initialize@verbose 008B                                        intlevel2 0000  
                                      islower@c 0007                                        isspace@c 0007  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 23FA  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 23F0  
                                    _RCSTA1bits 000FAB                                        isupper@c 0007  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 0089                                        printf@ap 0087  
EUSART1_SetFramingErrorHandler@interruptHandler 0007                                 ___aomod@divisor 000F  
                                   ??_vfpfcnvrt 0060                                 ___aomod@counter 0017  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 00B3  
                                    _SPI2_Close 2426                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 2208                                        toupper@c 000D  
                                  ___aodiv@sign 0018                  __end_of_PIN_MANAGER_Initialize 22D8  
                     hexDumpBuffer@sdCardBuffer 0089                                    ___aomod@sign 0018  
                                  fp__myTMR0ISR 0000  
