

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 25 15:54:02 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 05/05/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F26K22 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   106  0000                     
   107 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   108  0000                     
   109 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   110  0000                     
   111                           	psect	mediumconst
   112  00FB94                     __pmediumconst:
   113                           	callstack 0
   114  00FB94  00                 	db	0
   115  00FB95                     _spi2_configuration:
   116                           	callstack 0
   117  00FB95  01                 	db	1
   118  00FB96  40                 	db	64
   119  00FB97  01                 	db	1
   120  00FB98  00                 	db	0
   121  00FB99                     __end_of_spi2_configuration:
   122                           	callstack 0
   123  0000                     _ANSELA	set	3896
   124  0000                     _ANSELB	set	3897
   125  0000                     _ANSELC	set	3898
   126  0000                     _RCONbits	set	4048
   127  0000                     _OSCTUNE	set	3995
   128  0000                     _OSCCON2	set	4050
   129  0000                     _OSCCON	set	4051
   130  0000                     _TXREG1	set	4013
   131  0000                     _RCREG1	set	4014
   132  0000                     _RCSTA1bits	set	4011
   133  0000                     _TXSTA1bits	set	4012
   134  0000                     _PIR1bits	set	3998
   135  0000                     _SPBRGH1	set	4016
   136  0000                     _SPBRG1	set	4015
   137  0000                     _TXSTA1	set	4012
   138  0000                     _RCSTA1	set	4011
   139  0000                     _BAUDCON1	set	4024
   140  0000                     _LATAbits	set	3977
   141  0000                     _LATCbits	set	3979
   142  0000                     _LATBbits	set	3978
   143  0000                     _T0CON	set	4053
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR0H	set	4055
   146  0000                     _T0CONbits	set	4053
   147  0000                     _INTCONbits	set	4082
   148  0000                     _INTCON2bits	set	4081
   149  0000                     _WPUB	set	3937
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISA	set	3986
   153  0000                     _LATC	set	3979
   154  0000                     _LATB	set	3978
   155  0000                     _LATA	set	3977
   156  0000                     _PIR3bits	set	4004
   157  0000                     _SSP2BUF	set	3951
   158  0000                     _SSP2CON2	set	3947
   159  0000                     _SSP2CON1bits	set	3948
   160  0000                     _TRISBbits	set	3987
   161  0000                     _SSP2ADD	set	3950
   162  0000                     _SSP2CON1	set	3948
   163  0000                     _SSP2STAT	set	3949
   164  0000                     _PLLRDY	set	32407
   165  00FB99                     STR_27:
   166  00FB99  20                 	db	32
   167  00FB9A  20                 	db	32
   168  00FB9B  20                 	db	32
   169  00FB9C  20                 	db	32
   170  00FB9D  43                 	db	67	;'C'
   171  00FB9E  6F                 	db	111	;'o'
   172  00FB9F  6E                 	db	110	;'n'
   173  00FBA0  6E                 	db	110	;'n'
   174  00FBA1  65                 	db	101	;'e'
   175  00FBA2  63                 	db	99	;'c'
   176  00FBA3  74                 	db	116	;'t'
   177  00FBA4  20                 	db	32
   178  00FBA5  6F                 	db	111	;'o'
   179  00FBA6  73                 	db	115	;'s'
   180  00FBA7  63                 	db	99	;'c'
   181  00FBA8  69                 	db	105	;'i'
   182  00FBA9  6C                 	db	108	;'l'
   183  00FBAA  6C                 	db	108	;'l'
   184  00FBAB  6F                 	db	111	;'o'
   185  00FBAC  73                 	db	115	;'s'
   186  00FBAD  63                 	db	99	;'c'
   187  00FBAE  6F                 	db	111	;'o'
   188  00FBAF  70                 	db	112	;'p'
   189  00FBB0  65                 	db	101	;'e'
   190  00FBB1  20                 	db	32
   191  00FBB2  63                 	db	99	;'c'
   192  00FBB3  68                 	db	104	;'h'
   193  00FBB4  61                 	db	97	;'a'
   194  00FBB5  6E                 	db	110	;'n'
   195  00FBB6  6E                 	db	110	;'n'
   196  00FBB7  65                 	db	101	;'e'
   197  00FBB8  6C                 	db	108	;'l'
   198  00FBB9  20                 	db	32
   199  00FBBA  31                 	db	49	;'1'
   200  00FBBB  20                 	db	32
   201  00FBBC  74                 	db	116	;'t'
   202  00FBBD  6F                 	db	111	;'o'
   203  00FBBE  20                 	db	32
   204  00FBBF  50                 	db	80	;'P'
   205  00FBC0  49                 	db	73	;'I'
   206  00FBC1  43                 	db	67	;'C'
   207  00FBC2  20                 	db	32
   208  00FBC3  68                 	db	104	;'h'
   209  00FBC4  65                 	db	101	;'e'
   210  00FBC5  61                 	db	97	;'a'
   211  00FBC6  64                 	db	100	;'d'
   212  00FBC7  65                 	db	101	;'e'
   213  00FBC8  72                 	db	114	;'r'
   214  00FBC9  20                 	db	32
   215  00FBCA  70                 	db	112	;'p'
   216  00FBCB  69                 	db	105	;'i'
   217  00FBCC  6E                 	db	110	;'n'
   218  00FBCD  20                 	db	32
   219  00FBCE  52                 	db	82	;'R'
   220  00FBCF  42                 	db	66	;'B'
   221  00FBD0  31                 	db	49	;'1'
   222  00FBD1  20                 	db	32
   223  00FBD2  28                 	db	40
   224  00FBD3  76                 	db	118	;'v'
   225  00FBD4  65                 	db	101	;'e'
   226  00FBD5  72                 	db	114	;'r'
   227  00FBD6  74                 	db	116	;'t'
   228  00FBD7  69                 	db	105	;'i'
   229  00FBD8  63                 	db	99	;'c'
   230  00FBD9  61                 	db	97	;'a'
   231  00FBDA  6C                 	db	108	;'l'
   232  00FBDB  20                 	db	32
   233  00FBDC  73                 	db	115	;'s'
   234  00FBDD  63                 	db	99	;'c'
   235  00FBDE  61                 	db	97	;'a'
   236  00FBDF  6C                 	db	108	;'l'
   237  00FBE0  65                 	db	101	;'e'
   238  00FBE1  20                 	db	32
   239  00FBE2  32                 	db	50	;'2'
   240  00FBE3  76                 	db	118	;'v'
   241  00FBE4  2F                 	db	47
   242  00FBE5  64                 	db	100	;'d'
   243  00FBE6  69                 	db	105	;'i'
   244  00FBE7  76                 	db	118	;'v'
   245  00FBE8  29                 	db	41
   246  00FBE9  0D                 	db	13
   247  00FBEA  0A                 	db	10
   248  00FBEB  00                 	db	0
   249  00FBEC                     STR_28:
   250  00FBEC  20                 	db	32
   251  00FBED  20                 	db	32
   252  00FBEE  20                 	db	32
   253  00FBEF  20                 	db	32
   254  00FBF0  43                 	db	67	;'C'
   255  00FBF1  6F                 	db	111	;'o'
   256  00FBF2  6E                 	db	110	;'n'
   257  00FBF3  6E                 	db	110	;'n'
   258  00FBF4  65                 	db	101	;'e'
   259  00FBF5  63                 	db	99	;'c'
   260  00FBF6  74                 	db	116	;'t'
   261  00FBF7  20                 	db	32
   262  00FBF8  6F                 	db	111	;'o'
   263  00FBF9  73                 	db	115	;'s'
   264  00FBFA  63                 	db	99	;'c'
   265  00FBFB  69                 	db	105	;'i'
   266  00FBFC  6C                 	db	108	;'l'
   267  00FBFD  6C                 	db	108	;'l'
   268  00FBFE  6F                 	db	111	;'o'
   269  00FBFF  73                 	db	115	;'s'
   270  00FC00  63                 	db	99	;'c'
   271  00FC01  6F                 	db	111	;'o'
   272  00FC02  70                 	db	112	;'p'
   273  00FC03  65                 	db	101	;'e'
   274  00FC04  20                 	db	32
   275  00FC05  63                 	db	99	;'c'
   276  00FC06  68                 	db	104	;'h'
   277  00FC07  61                 	db	97	;'a'
   278  00FC08  6E                 	db	110	;'n'
   279  00FC09  6E                 	db	110	;'n'
   280  00FC0A  65                 	db	101	;'e'
   281  00FC0B  6C                 	db	108	;'l'
   282  00FC0C  20                 	db	32
   283  00FC0D  32                 	db	50	;'2'
   284  00FC0E  20                 	db	32
   285  00FC0F  74                 	db	116	;'t'
   286  00FC10  6F                 	db	111	;'o'
   287  00FC11  20                 	db	32
   288  00FC12  50                 	db	80	;'P'
   289  00FC13  49                 	db	73	;'I'
   290  00FC14  43                 	db	67	;'C'
   291  00FC15  20                 	db	32
   292  00FC16  68                 	db	104	;'h'
   293  00FC17  65                 	db	101	;'e'
   294  00FC18  61                 	db	97	;'a'
   295  00FC19  64                 	db	100	;'d'
   296  00FC1A  65                 	db	101	;'e'
   297  00FC1B  72                 	db	114	;'r'
   298  00FC1C  20                 	db	32
   299  00FC1D  70                 	db	112	;'p'
   300  00FC1E  69                 	db	105	;'i'
   301  00FC1F  6E                 	db	110	;'n'
   302  00FC20  20                 	db	32
   303  00FC21  52                 	db	82	;'R'
   304  00FC22  42                 	db	66	;'B'
   305  00FC23  33                 	db	51	;'3'
   306  00FC24  20                 	db	32
   307  00FC25  28                 	db	40
   308  00FC26  76                 	db	118	;'v'
   309  00FC27  65                 	db	101	;'e'
   310  00FC28  72                 	db	114	;'r'
   311  00FC29  74                 	db	116	;'t'
   312  00FC2A  69                 	db	105	;'i'
   313  00FC2B  63                 	db	99	;'c'
   314  00FC2C  61                 	db	97	;'a'
   315  00FC2D  6C                 	db	108	;'l'
   316  00FC2E  20                 	db	32
   317  00FC2F  73                 	db	115	;'s'
   318  00FC30  63                 	db	99	;'c'
   319  00FC31  61                 	db	97	;'a'
   320  00FC32  6C                 	db	108	;'l'
   321  00FC33  65                 	db	101	;'e'
   322  00FC34  20                 	db	32
   323  00FC35  32                 	db	50	;'2'
   324  00FC36  76                 	db	118	;'v'
   325  00FC37  2F                 	db	47
   326  00FC38  64                 	db	100	;'d'
   327  00FC39  69                 	db	105	;'i'
   328  00FC3A  76                 	db	118	;'v'
   329  00FC3B  29                 	db	41
   330  00FC3C  0D                 	db	13
   331  00FC3D  0A                 	db	10
   332  00FC3E  00                 	db	0
   333  00FC3F                     STR_5:
   334  00FC3F  0D                 	db	13
   335  00FC40  0A                 	db	10
   336  00FC41  2D                 	db	45
   337  00FC42  2D                 	db	45
   338  00FC43  2D                 	db	45
   339  00FC44  2D                 	db	45
   340  00FC45  2D                 	db	45
   341  00FC46  2D                 	db	45
   342  00FC47  2D                 	db	45
   343  00FC48  2D                 	db	45
   344  00FC49  2D                 	db	45
   345  00FC4A  2D                 	db	45
   346  00FC4B  2D                 	db	45
   347  00FC4C  2D                 	db	45
   348  00FC4D  2D                 	db	45
   349  00FC4E  2D                 	db	45
   350  00FC4F  2D                 	db	45
   351  00FC50  2D                 	db	45
   352  00FC51  2D                 	db	45
   353  00FC52  2D                 	db	45
   354  00FC53  2D                 	db	45
   355  00FC54  2D                 	db	45
   356  00FC55  2D                 	db	45
   357  00FC56  2D                 	db	45
   358  00FC57  2D                 	db	45
   359  00FC58  2D                 	db	45
   360  00FC59  2D                 	db	45
   361  00FC5A  2D                 	db	45
   362  00FC5B  2D                 	db	45
   363  00FC5C  2D                 	db	45
   364  00FC5D  2D                 	db	45
   365  00FC5E  2D                 	db	45
   366  00FC5F  2D                 	db	45
   367  00FC60  2D                 	db	45
   368  00FC61  2D                 	db	45
   369  00FC62  2D                 	db	45
   370  00FC63  2D                 	db	45
   371  00FC64  2D                 	db	45
   372  00FC65  2D                 	db	45
   373  00FC66  2D                 	db	45
   374  00FC67  2D                 	db	45
   375  00FC68  2D                 	db	45
   376  00FC69  2D                 	db	45
   377  00FC6A  2D                 	db	45
   378  00FC6B  2D                 	db	45
   379  00FC6C  2D                 	db	45
   380  00FC6D  2D                 	db	45
   381  00FC6E  2D                 	db	45
   382  00FC6F  2D                 	db	45
   383  00FC70  2D                 	db	45
   384  00FC71  2D                 	db	45
   385  00FC72  0D                 	db	13
   386  00FC73  0A                 	db	10
   387  00FC74  00                 	db	0
   388  00FC75                     STR_16:
   389  00FC75  2D                 	db	45
   390  00FC76  2D                 	db	45
   391  00FC77  2D                 	db	45
   392  00FC78  2D                 	db	45
   393  00FC79  2D                 	db	45
   394  00FC7A  2D                 	db	45
   395  00FC7B  2D                 	db	45
   396  00FC7C  2D                 	db	45
   397  00FC7D  2D                 	db	45
   398  00FC7E  2D                 	db	45
   399  00FC7F  2D                 	db	45
   400  00FC80  2D                 	db	45
   401  00FC81  2D                 	db	45
   402  00FC82  2D                 	db	45
   403  00FC83  2D                 	db	45
   404  00FC84  2D                 	db	45
   405  00FC85  53                 	db	83	;'S'
   406  00FC86  50                 	db	80	;'P'
   407  00FC87  49                 	db	73	;'I'
   408  00FC88  20                 	db	32
   409  00FC89  54                 	db	84	;'T'
   410  00FC8A  45                 	db	69	;'E'
   411  00FC8B  53                 	db	83	;'S'
   412  00FC8C  54                 	db	84	;'T'
   413  00FC8D  2D                 	db	45
   414  00FC8E  2D                 	db	45
   415  00FC8F  2D                 	db	45
   416  00FC90  2D                 	db	45
   417  00FC91  2D                 	db	45
   418  00FC92  2D                 	db	45
   419  00FC93  2D                 	db	45
   420  00FC94  2D                 	db	45
   421  00FC95  2D                 	db	45
   422  00FC96  2D                 	db	45
   423  00FC97  2D                 	db	45
   424  00FC98  2D                 	db	45
   425  00FC99  2D                 	db	45
   426  00FC9A  2D                 	db	45
   427  00FC9B  2D                 	db	45
   428  00FC9C  2D                 	db	45
   429  00FC9D  2D                 	db	45
   430  00FC9E  2D                 	db	45
   431  00FC9F  2D                 	db	45
   432  00FCA0  2D                 	db	45
   433  00FCA1  2D                 	db	45
   434  00FCA2  2D                 	db	45
   435  00FCA3  2D                 	db	45
   436  00FCA4  2D                 	db	45
   437  00FCA5  2D                 	db	45
   438  00FCA6  0D                 	db	13
   439  00FCA7  0A                 	db	10
   440  00FCA8  00                 	db	0
   441  00FCA9                     STR_18:
   442  00FCA9  2D                 	db	45
   443  00FCAA  2D                 	db	45
   444  00FCAB  2D                 	db	45
   445  00FCAC  2D                 	db	45
   446  00FCAD  2D                 	db	45
   447  00FCAE  2D                 	db	45
   448  00FCAF  2D                 	db	45
   449  00FCB0  2D                 	db	45
   450  00FCB1  2D                 	db	45
   451  00FCB2  2D                 	db	45
   452  00FCB3  2D                 	db	45
   453  00FCB4  2D                 	db	45
   454  00FCB5  2D                 	db	45
   455  00FCB6  2D                 	db	45
   456  00FCB7  53                 	db	83	;'S'
   457  00FCB8  44                 	db	68	;'D'
   458  00FCB9  20                 	db	32
   459  00FCBA  43                 	db	67	;'C'
   460  00FCBB  41                 	db	65	;'A'
   461  00FCBC  52                 	db	82	;'R'
   462  00FCBD  44                 	db	68	;'D'
   463  00FCBE  20                 	db	32
   464  00FCBF  54                 	db	84	;'T'
   465  00FCC0  45                 	db	69	;'E'
   466  00FCC1  53                 	db	83	;'S'
   467  00FCC2  54                 	db	84	;'T'
   468  00FCC3  53                 	db	83	;'S'
   469  00FCC4  2D                 	db	45
   470  00FCC5  2D                 	db	45
   471  00FCC6  2D                 	db	45
   472  00FCC7  2D                 	db	45
   473  00FCC8  2D                 	db	45
   474  00FCC9  2D                 	db	45
   475  00FCCA  2D                 	db	45
   476  00FCCB  2D                 	db	45
   477  00FCCC  2D                 	db	45
   478  00FCCD  2D                 	db	45
   479  00FCCE  2D                 	db	45
   480  00FCCF  2D                 	db	45
   481  00FCD0  2D                 	db	45
   482  00FCD1  2D                 	db	45
   483  00FCD2  2D                 	db	45
   484  00FCD3  2D                 	db	45
   485  00FCD4  2D                 	db	45
   486  00FCD5  2D                 	db	45
   487  00FCD6  2D                 	db	45
   488  00FCD7  2D                 	db	45
   489  00FCD8  2D                 	db	45
   490  00FCD9  2D                 	db	45
   491  00FCDA  0D                 	db	13
   492  00FCDB  0A                 	db	10
   493  00FCDC  00                 	db	0
   494  00FCDD                     STR_30:
   495  00FCDD  20                 	db	32
   496  00FCDE  20                 	db	32
   497  00FCDF  20                 	db	32
   498  00FCE0  20                 	db	32
   499  00FCE1  53                 	db	83	;'S'
   500  00FCE2  65                 	db	101	;'e'
   501  00FCE3  74                 	db	116	;'t'
   502  00FCE4  20                 	db	32
   503  00FCE5  74                 	db	116	;'t'
   504  00FCE6  68                 	db	104	;'h'
   505  00FCE7  65                 	db	101	;'e'
   506  00FCE8  20                 	db	32
   507  00FCE9  68                 	db	104	;'h'
   508  00FCEA  6F                 	db	111	;'o'
   509  00FCEB  72                 	db	114	;'r'
   510  00FCEC  69                 	db	105	;'i'
   511  00FCED  7A                 	db	122	;'z'
   512  00FCEE  6F                 	db	111	;'o'
   513  00FCEF  6E                 	db	110	;'n'
   514  00FCF0  74                 	db	116	;'t'
   515  00FCF1  61                 	db	97	;'a'
   516  00FCF2  6C                 	db	108	;'l'
   517  00FCF3  20                 	db	32
   518  00FCF4  73                 	db	115	;'s'
   519  00FCF5  63                 	db	99	;'c'
   520  00FCF6  61                 	db	97	;'a'
   521  00FCF7  6C                 	db	108	;'l'
   522  00FCF8  65                 	db	101	;'e'
   523  00FCF9  20                 	db	32
   524  00FCFA  74                 	db	116	;'t'
   525  00FCFB  6F                 	db	111	;'o'
   526  00FCFC  20                 	db	32
   527  00FCFD  35                 	db	53	;'5'
   528  00FCFE  30                 	db	48	;'0'
   529  00FCFF  30                 	db	48	;'0'
   530  00FD00  6E                 	db	110	;'n'
   531  00FD01  73                 	db	115	;'s'
   532  00FD02  2F                 	db	47
   533  00FD03  64                 	db	100	;'d'
   534  00FD04  69                 	db	105	;'i'
   535  00FD05  76                 	db	118	;'v'
   536  00FD06  0D                 	db	13
   537  00FD07  0A                 	db	10
   538  00FD08  00                 	db	0
   539  00FD09                     STR_42:
   540  00FD09  57                 	db	87	;'W'
   541  00FD0A  72                 	db	114	;'r'
   542  00FD0B  69                 	db	105	;'i'
   543  00FD0C  74                 	db	116	;'t'
   544  00FD0D  65                 	db	101	;'e'
   545  00FD0E  20                 	db	32
   546  00FD0F  62                 	db	98	;'b'
   547  00FD10  6C                 	db	108	;'l'
   548  00FD11  6F                 	db	111	;'o'
   549  00FD12  63                 	db	99	;'c'
   550  00FD13  6B                 	db	107	;'k'
   551  00FD14  20                 	db	32
   552  00FD15  6F                 	db	111	;'o'
   553  00FD16  66                 	db	102	;'f'
   554  00FD17  20                 	db	32
   555  00FD18  64                 	db	100	;'d'
   556  00FD19  65                 	db	101	;'e'
   557  00FD1A  63                 	db	99	;'c'
   558  00FD1B  72                 	db	114	;'r'
   559  00FD1C  65                 	db	101	;'e'
   560  00FD1D  6D                 	db	109	;'m'
   561  00FD1E  65                 	db	101	;'e'
   562  00FD1F  6E                 	db	110	;'n'
   563  00FD20  74                 	db	116	;'t'
   564  00FD21  65                 	db	101	;'e'
   565  00FD22  64                 	db	100	;'d'
   566  00FD23  20                 	db	32
   567  00FD24  38                 	db	56	;'8'
   568  00FD25  2D                 	db	45
   569  00FD26  62                 	db	98	;'b'
   570  00FD27  69                 	db	105	;'i'
   571  00FD28  74                 	db	116	;'t'
   572  00FD29  20                 	db	32
   573  00FD2A  76                 	db	118	;'v'
   574  00FD2B  61                 	db	97	;'a'
   575  00FD2C  6C                 	db	108	;'l'
   576  00FD2D  75                 	db	117	;'u'
   577  00FD2E  65                 	db	101	;'e'
   578  00FD2F  73                 	db	115	;'s'
   579  00FD30  3A                 	db	58	;':'
   580  00FD31  0D                 	db	13
   581  00FD32  0A                 	db	10
   582  00FD33  00                 	db	0
   583  00FD34                     STR_21:
   584  00FD34  72                 	db	114	;'r'
   585  00FD35  3A                 	db	58	;':'
   586  00FD36  20                 	db	32
   587  00FD37  72                 	db	114	;'r'
   588  00FD38  65                 	db	101	;'e'
   589  00FD39  61                 	db	97	;'a'
   590  00FD3A  64                 	db	100	;'d'
   591  00FD3B  20                 	db	32
   592  00FD3C  61                 	db	97	;'a'
   593  00FD3D  20                 	db	32
   594  00FD3E  62                 	db	98	;'b'
   595  00FD3F  6C                 	db	108	;'l'
   596  00FD40  6F                 	db	111	;'o'
   597  00FD41  63                 	db	99	;'c'
   598  00FD42  6B                 	db	107	;'k'
   599  00FD43  20                 	db	32
   600  00FD44  6F                 	db	111	;'o'
   601  00FD45  66                 	db	102	;'f'
   602  00FD46  20                 	db	32
   603  00FD47  25                 	db	37
   604  00FD48  64                 	db	100	;'d'
   605  00FD49  20                 	db	32
   606  00FD4A  62                 	db	98	;'b'
   607  00FD4B  79                 	db	121	;'y'
   608  00FD4C  74                 	db	116	;'t'
   609  00FD4D  65                 	db	101	;'e'
   610  00FD4E  73                 	db	115	;'s'
   611  00FD4F  20                 	db	32
   612  00FD50  66                 	db	102	;'f'
   613  00FD51  72                 	db	114	;'r'
   614  00FD52  6F                 	db	111	;'o'
   615  00FD53  6D                 	db	109	;'m'
   616  00FD54  20                 	db	32
   617  00FD55  53                 	db	83	;'S'
   618  00FD56  44                 	db	68	;'D'
   619  00FD57  20                 	db	32
   620  00FD58  63                 	db	99	;'c'
   621  00FD59  61                 	db	97	;'a'
   622  00FD5A  72                 	db	114	;'r'
   623  00FD5B  64                 	db	100	;'d'
   624  00FD5C  0D                 	db	13
   625  00FD5D  0A                 	db	10
   626  00FD5E  00                 	db	0
   627  00FD5F                     STR_22:
   628  00FD5F  77                 	db	119	;'w'
   629  00FD60  3A                 	db	58	;':'
   630  00FD61  20                 	db	32
   631  00FD62  77                 	db	119	;'w'
   632  00FD63  72                 	db	114	;'r'
   633  00FD64  69                 	db	105	;'i'
   634  00FD65  74                 	db	116	;'t'
   635  00FD66  65                 	db	101	;'e'
   636  00FD67  20                 	db	32
   637  00FD68  61                 	db	97	;'a'
   638  00FD69  20                 	db	32
   639  00FD6A  62                 	db	98	;'b'
   640  00FD6B  6C                 	db	108	;'l'
   641  00FD6C  6F                 	db	111	;'o'
   642  00FD6D  63                 	db	99	;'c'
   643  00FD6E  6B                 	db	107	;'k'
   644  00FD6F  20                 	db	32
   645  00FD70  6F                 	db	111	;'o'
   646  00FD71  66                 	db	102	;'f'
   647  00FD72  20                 	db	32
   648  00FD73  25                 	db	37
   649  00FD74  64                 	db	100	;'d'
   650  00FD75  20                 	db	32
   651  00FD76  62                 	db	98	;'b'
   652  00FD77  79                 	db	121	;'y'
   653  00FD78  74                 	db	116	;'t'
   654  00FD79  65                 	db	101	;'e'
   655  00FD7A  73                 	db	115	;'s'
   656  00FD7B  20                 	db	32
   657  00FD7C  74                 	db	116	;'t'
   658  00FD7D  6F                 	db	111	;'o'
   659  00FD7E  20                 	db	32
   660  00FD7F  53                 	db	83	;'S'
   661  00FD80  44                 	db	68	;'D'
   662  00FD81  20                 	db	32
   663  00FD82  63                 	db	99	;'c'
   664  00FD83  61                 	db	97	;'a'
   665  00FD84  72                 	db	114	;'r'
   666  00FD85  64                 	db	100	;'d'
   667  00FD86  0D                 	db	13
   668  00FD87  0A                 	db	10
   669  00FD88  00                 	db	0
   670  00FD89                     STR_4:
   671  00FD89  4E                 	db	78	;'N'
   672  00FD8A  6F                 	db	111	;'o'
   673  00FD8B  20                 	db	32
   674  00FD8C  63                 	db	99	;'c'
   675  00FD8D  6F                 	db	111	;'o'
   676  00FD8E  6E                 	db	110	;'n'
   677  00FD8F  66                 	db	102	;'f'
   678  00FD90  69                 	db	105	;'i'
   679  00FD91  67                 	db	103	;'g'
   680  00FD92  75                 	db	117	;'u'
   681  00FD93  72                 	db	114	;'r'
   682  00FD94  61                 	db	97	;'a'
   683  00FD95  74                 	db	116	;'t'
   684  00FD96  69                 	db	105	;'i'
   685  00FD97  6F                 	db	111	;'o'
   686  00FD98  6E                 	db	110	;'n'
   687  00FD99  20                 	db	32
   688  00FD9A  6F                 	db	111	;'o'
   689  00FD9B  66                 	db	102	;'f'
   690  00FD9C  20                 	db	32
   691  00FD9D  64                 	db	100	;'d'
   692  00FD9E  65                 	db	101	;'e'
   693  00FD9F  76                 	db	118	;'v'
   694  00FDA0  65                 	db	101	;'e'
   695  00FDA1  6C                 	db	108	;'l'
   696  00FDA2  6F                 	db	111	;'o'
   697  00FDA3  70                 	db	112	;'p'
   698  00FDA4  6D                 	db	109	;'m'
   699  00FDA5  65                 	db	101	;'e'
   700  00FDA6  6E                 	db	110	;'n'
   701  00FDA7  74                 	db	116	;'t'
   702  00FDA8  20                 	db	32
   703  00FDA9  62                 	db	98	;'b'
   704  00FDAA  6F                 	db	111	;'o'
   705  00FDAB  61                 	db	97	;'a'
   706  00FDAC  72                 	db	114	;'r'
   707  00FDAD  64                 	db	100	;'d'
   708  00FDAE  0D                 	db	13
   709  00FDAF  0A                 	db	10
   710  00FDB0  3E                 	db	62	;'>'
   711  00FDB1  20                 	db	32
   712  00FDB2  00                 	db	0
   713  00FDB3                     STR_20:
   714  00FDB3  61                 	db	97	;'a'
   715  00FDB4  2F                 	db	47
   716  00FDB5  41                 	db	65	;'A'
   717  00FDB6  20                 	db	32
   718  00FDB7  64                 	db	100	;'d'
   719  00FDB8  65                 	db	101	;'e'
   720  00FDB9  63                 	db	99	;'c'
   721  00FDBA  72                 	db	114	;'r'
   722  00FDBB  65                 	db	101	;'e'
   723  00FDBC  61                 	db	97	;'a'
   724  00FDBD  73                 	db	115	;'s'
   725  00FDBE  65                 	db	101	;'e'
   726  00FDBF  2F                 	db	47
   727  00FDC0  69                 	db	105	;'i'
   728  00FDC1  6E                 	db	110	;'n'
   729  00FDC2  63                 	db	99	;'c'
   730  00FDC3  72                 	db	114	;'r'
   731  00FDC4  65                 	db	101	;'e'
   732  00FDC5  61                 	db	97	;'a'
   733  00FDC6  73                 	db	115	;'s'
   734  00FDC7  65                 	db	101	;'e'
   735  00FDC8  20                 	db	32
   736  00FDC9  72                 	db	114	;'r'
   737  00FDCA  65                 	db	101	;'e'
   738  00FDCB  61                 	db	97	;'a'
   739  00FDCC  64                 	db	100	;'d'
   740  00FDCD  20                 	db	32
   741  00FDCE  61                 	db	97	;'a'
   742  00FDCF  64                 	db	100	;'d'
   743  00FDD0  64                 	db	100	;'d'
   744  00FDD1  72                 	db	114	;'r'
   745  00FDD2  65                 	db	101	;'e'
   746  00FDD3  73                 	db	115	;'s'
   747  00FDD4  73                 	db	115	;'s'
   748  00FDD5  0D                 	db	13
   749  00FDD6  0A                 	db	10
   750  00FDD7  00                 	db	0
   751  00FDD8                     STR_17:
   752  00FDD8  74                 	db	116	;'t'
   753  00FDD9  3A                 	db	58	;':'
   754  00FDDA  20                 	db	32
   755  00FDDB  73                 	db	115	;'s'
   756  00FDDC  65                 	db	101	;'e'
   757  00FDDD  6E                 	db	110	;'n'
   758  00FDDE  64                 	db	100	;'d'
   759  00FDDF  20                 	db	32
   760  00FDE0  61                 	db	97	;'a'
   761  00FDE1  20                 	db	32
   762  00FDE2  54                 	db	84	;'T'
   763  00FDE3  65                 	db	101	;'e'
   764  00FDE4  73                 	db	115	;'s'
   765  00FDE5  74                 	db	116	;'t'
   766  00FDE6  20                 	db	32
   767  00FDE7  63                 	db	99	;'c'
   768  00FDE8  68                 	db	104	;'h'
   769  00FDE9  61                 	db	97	;'a'
   770  00FDEA  72                 	db	114	;'r'
   771  00FDEB  61                 	db	97	;'a'
   772  00FDEC  63                 	db	99	;'c'
   773  00FDED  74                 	db	116	;'t'
   774  00FDEE  65                 	db	101	;'e'
   775  00FDEF  72                 	db	114	;'r'
   776  00FDF0  20                 	db	32
   777  00FDF1  6F                 	db	111	;'o'
   778  00FDF2  76                 	db	118	;'v'
   779  00FDF3  65                 	db	101	;'e'
   780  00FDF4  72                 	db	114	;'r'
   781  00FDF5  20                 	db	32
   782  00FDF6  53                 	db	83	;'S'
   783  00FDF7  50                 	db	80	;'P'
   784  00FDF8  49                 	db	73	;'I'
   785  00FDF9  0D                 	db	13
   786  00FDFA  0A                 	db	10
   787  00FDFB  00                 	db	0
   788  00FDFC                     STR_33:
   789  00FDFC  55                 	db	85	;'U'
   790  00FDFD  6E                 	db	110	;'n'
   791  00FDFE  64                 	db	100	;'d'
   792  00FDFF  65                 	db	101	;'e'
   793  00FE00  72                 	db	114	;'r'
   794  00FE01  66                 	db	102	;'f'
   795  00FE02  6C                 	db	108	;'l'
   796  00FE03  6F                 	db	111	;'o'
   797  00FE04  77                 	db	119	;'w'
   798  00FE05  65                 	db	101	;'e'
   799  00FE06  64                 	db	100	;'d'
   800  00FE07  20                 	db	32
   801  00FE08  74                 	db	116	;'t'
   802  00FE09  6F                 	db	111	;'o'
   803  00FE0A  20                 	db	32
   804  00FE0B  68                 	db	104	;'h'
   805  00FE0C  69                 	db	105	;'i'
   806  00FE0D  67                 	db	103	;'g'
   807  00FE0E  68                 	db	104	;'h'
   808  00FE0F  20                 	db	32
   809  00FE10  61                 	db	97	;'a'
   810  00FE11  64                 	db	100	;'d'
   811  00FE12  64                 	db	100	;'d'
   812  00FE13  72                 	db	114	;'r'
   813  00FE14  65                 	db	101	;'e'
   814  00FE15  73                 	db	115	;'s'
   815  00FE16  73                 	db	115	;'s'
   816  00FE17  0D                 	db	13
   817  00FE18  0A                 	db	10
   818  00FE19  00                 	db	0
   819  00FE1A                     STR_32:
   820  00FE1A  73                 	db	115	;'s'
   821  00FE1B  65                 	db	101	;'e'
   822  00FE1C  6E                 	db	110	;'n'
   823  00FE1D  74                 	db	116	;'t'
   824  00FE1E  3A                 	db	58	;':'
   825  00FE1F  20                 	db	32
   826  00FE20  25                 	db	37
   827  00FE21  30                 	db	48	;'0'
   828  00FE22  32                 	db	50	;'2'
   829  00FE23  78                 	db	120	;'x'
   830  00FE24  20                 	db	32
   831  00FE25  20                 	db	32
   832  00FE26  72                 	db	114	;'r'
   833  00FE27  65                 	db	101	;'e'
   834  00FE28  63                 	db	99	;'c'
   835  00FE29  65                 	db	101	;'e'
   836  00FE2A  69                 	db	105	;'i'
   837  00FE2B  76                 	db	118	;'v'
   838  00FE2C  65                 	db	101	;'e'
   839  00FE2D  64                 	db	100	;'d'
   840  00FE2E  3A                 	db	58	;':'
   841  00FE2F  20                 	db	32
   842  00FE30  25                 	db	37
   843  00FE31  30                 	db	48	;'0'
   844  00FE32  32                 	db	50	;'2'
   845  00FE33  78                 	db	120	;'x'
   846  00FE34  0D                 	db	13
   847  00FE35  0A                 	db	10
   848  00FE36  00                 	db	0
   849  00FE37                     STR_31:
   850  00FE37  20                 	db	32
   851  00FE38  20                 	db	32
   852  00FE39  20                 	db	32
   853  00FE3A  20                 	db	32
   854  00FE3B  48                 	db	72	;'H'
   855  00FE3C  69                 	db	105	;'i'
   856  00FE3D  74                 	db	116	;'t'
   857  00FE3E  20                 	db	32
   858  00FE3F  61                 	db	97	;'a'
   859  00FE40  6E                 	db	110	;'n'
   860  00FE41  79                 	db	121	;'y'
   861  00FE42  20                 	db	32
   862  00FE43  6B                 	db	107	;'k'
   863  00FE44  65                 	db	101	;'e'
   864  00FE45  79                 	db	121	;'y'
   865  00FE46  20                 	db	32
   866  00FE47  77                 	db	119	;'w'
   867  00FE48  68                 	db	104	;'h'
   868  00FE49  65                 	db	101	;'e'
   869  00FE4A  6E                 	db	110	;'n'
   870  00FE4B  20                 	db	32
   871  00FE4C  72                 	db	114	;'r'
   872  00FE4D  65                 	db	101	;'e'
   873  00FE4E  61                 	db	97	;'a'
   874  00FE4F  64                 	db	100	;'d'
   875  00FE50  79                 	db	121	;'y'
   876  00FE51  0D                 	db	13
   877  00FE52  0A                 	db	10
   878  00FE53  00                 	db	0
   879  00FE54                     STR_58:
   880  00FE54  42                 	db	66	;'B'
   881  00FE55  6C                 	db	108	;'l'
   882  00FE56  6F                 	db	111	;'o'
   883  00FE57  63                 	db	99	;'c'
   884  00FE58  6B                 	db	107	;'k'
   885  00FE59  20                 	db	32
   886  00FE5A  4C                 	db	76	;'L'
   887  00FE5B  65                 	db	101	;'e'
   888  00FE5C  6E                 	db	110	;'n'
   889  00FE5D  67                 	db	103	;'g'
   890  00FE5E  74                 	db	116	;'t'
   891  00FE5F  68                 	db	104	;'h'
   892  00FE60  20                 	db	32
   893  00FE61  52                 	db	82	;'R'
   894  00FE62  65                 	db	101	;'e'
   895  00FE63  73                 	db	115	;'s'
   896  00FE64  70                 	db	112	;'p'
   897  00FE65  6F                 	db	111	;'o'
   898  00FE66  6E                 	db	110	;'n'
   899  00FE67  73                 	db	115	;'s'
   900  00FE68  65                 	db	101	;'e'
   901  00FE69  3A                 	db	58	;':'
   902  00FE6A  20                 	db	32
   903  00FE6B  25                 	db	37
   904  00FE6C  78                 	db	120	;'x'
   905  00FE6D  0D                 	db	13
   906  00FE6E  0A                 	db	10
   907  00FE6F  00                 	db	0
   908  00FE70                     STR_35:
   909  00FE70  4F                 	db	79	;'O'
   910  00FE71  76                 	db	118	;'v'
   911  00FE72  65                 	db	101	;'e'
   912  00FE73  72                 	db	114	;'r'
   913  00FE74  66                 	db	102	;'f'
   914  00FE75  6C                 	db	108	;'l'
   915  00FE76  6F                 	db	111	;'o'
   916  00FE77  77                 	db	119	;'w'
   917  00FE78  65                 	db	101	;'e'
   918  00FE79  64                 	db	100	;'d'
   919  00FE7A  20                 	db	32
   920  00FE7B  74                 	db	116	;'t'
   921  00FE7C  6F                 	db	111	;'o'
   922  00FE7D  20                 	db	32
   923  00FE7E  6C                 	db	108	;'l'
   924  00FE7F  6F                 	db	111	;'o'
   925  00FE80  77                 	db	119	;'w'
   926  00FE81  20                 	db	32
   927  00FE82  61                 	db	97	;'a'
   928  00FE83  64                 	db	100	;'d'
   929  00FE84  64                 	db	100	;'d'
   930  00FE85  72                 	db	114	;'r'
   931  00FE86  65                 	db	101	;'e'
   932  00FE87  73                 	db	115	;'s'
   933  00FE88  73                 	db	115	;'s'
   934  00FE89  0D                 	db	13
   935  00FE8A  0A                 	db	10
   936  00FE8B  00                 	db	0
   937  00FE8C                     STR_56:
   938  00FE8C  43                 	db	67	;'C'
   939  00FE8D  4D                 	db	77	;'M'
   940  00FE8E  44                 	db	68	;'D'
   941  00FE8F  30                 	db	48	;'0'
   942  00FE90  2C                 	db	44
   943  00FE91  20                 	db	32
   944  00FE92  52                 	db	82	;'R'
   945  00FE93  65                 	db	101	;'e'
   946  00FE94  73                 	db	115	;'s'
   947  00FE95  65                 	db	101	;'e'
   948  00FE96  74                 	db	116	;'t'
   949  00FE97  20                 	db	32
   950  00FE98  52                 	db	82	;'R'
   951  00FE99  65                 	db	101	;'e'
   952  00FE9A  73                 	db	115	;'s'
   953  00FE9B  70                 	db	112	;'p'
   954  00FE9C  6F                 	db	111	;'o'
   955  00FE9D  6E                 	db	110	;'n'
   956  00FE9E  73                 	db	115	;'s'
   957  00FE9F  65                 	db	101	;'e'
   958  00FEA0  3A                 	db	58	;':'
   959  00FEA1  20                 	db	32
   960  00FEA2  25                 	db	37
   961  00FEA3  78                 	db	120	;'x'
   962  00FEA4  0D                 	db	13
   963  00FEA5  0A                 	db	10
   964  00FEA6  00                 	db	0
   965  00FEA7                     STR_29:
   966  00FEA7  20                 	db	32
   967  00FEA8  20                 	db	32
   968  00FEA9  20                 	db	32
   969  00FEAA  20                 	db	32
   970  00FEAB  54                 	db	84	;'T'
   971  00FEAC  72                 	db	114	;'r'
   972  00FEAD  69                 	db	105	;'i'
   973  00FEAE  67                 	db	103	;'g'
   974  00FEAF  67                 	db	103	;'g'
   975  00FEB0  65                 	db	101	;'e'
   976  00FEB1  72                 	db	114	;'r'
   977  00FEB2  20                 	db	32
   978  00FEB3  6F                 	db	111	;'o'
   979  00FEB4  6E                 	db	110	;'n'
   980  00FEB5  20                 	db	32
   981  00FEB6  63                 	db	99	;'c'
   982  00FEB7  68                 	db	104	;'h'
   983  00FEB8  61                 	db	97	;'a'
   984  00FEB9  6E                 	db	110	;'n'
   985  00FEBA  6E                 	db	110	;'n'
   986  00FEBB  65                 	db	101	;'e'
   987  00FEBC  6C                 	db	108	;'l'
   988  00FEBD  20                 	db	32
   989  00FEBE  31                 	db	49	;'1'
   990  00FEBF  0D                 	db	13
   991  00FEC0  0A                 	db	10
   992  00FEC1  00                 	db	0
   993  00FEC2                     STR_57:
   994  00FEC2  43                 	db	67	;'C'
   995  00FEC3  4D                 	db	77	;'M'
   996  00FEC4  44                 	db	68	;'D'
   997  00FEC5  31                 	db	49	;'1'
   998  00FEC6  2C                 	db	44
   999  00FEC7  20                 	db	32
  1000  00FEC8  49                 	db	73	;'I'
  1001  00FEC9  6E                 	db	110	;'n'
  1002  00FECA  69                 	db	105	;'i'
  1003  00FECB  74                 	db	116	;'t'
  1004  00FECC  20                 	db	32
  1005  00FECD  52                 	db	82	;'R'
  1006  00FECE  65                 	db	101	;'e'
  1007  00FECF  73                 	db	115	;'s'
  1008  00FED0  70                 	db	112	;'p'
  1009  00FED1  6F                 	db	111	;'o'
  1010  00FED2  6E                 	db	110	;'n'
  1011  00FED3  73                 	db	115	;'s'
  1012  00FED4  65                 	db	101	;'e'
  1013  00FED5  3A                 	db	58	;':'
  1014  00FED6  20                 	db	32
  1015  00FED7  25                 	db	37
  1016  00FED8  78                 	db	120	;'x'
  1017  00FED9  0D                 	db	13
  1018  00FEDA  0A                 	db	10
  1019  00FEDB  00                 	db	0
  1020  00FEDC                     STR_19:
  1021  00FEDC  69                 	db	105	;'i'
  1022  00FEDD  3A                 	db	58	;':'
  1023  00FEDE  20                 	db	32
  1024  00FEDF  49                 	db	73	;'I'
  1025  00FEE0  6E                 	db	110	;'n'
  1026  00FEE1  69                 	db	105	;'i'
  1027  00FEE2  74                 	db	116	;'t'
  1028  00FEE3  69                 	db	105	;'i'
  1029  00FEE4  61                 	db	97	;'a'
  1030  00FEE5  6C                 	db	108	;'l'
  1031  00FEE6  69                 	db	105	;'i'
  1032  00FEE7  7A                 	db	122	;'z'
  1033  00FEE8  65                 	db	101	;'e'
  1034  00FEE9  20                 	db	32
  1035  00FEEA  53                 	db	83	;'S'
  1036  00FEEB  44                 	db	68	;'D'
  1037  00FEEC  20                 	db	32
  1038  00FEED  63                 	db	99	;'c'
  1039  00FEEE  61                 	db	97	;'a'
  1040  00FEEF  72                 	db	114	;'r'
  1041  00FEF0  64                 	db	100	;'d'
  1042  00FEF1  0D                 	db	13
  1043  00FEF2  0A                 	db	10
  1044  00FEF3  00                 	db	0
  1045  00FEF4                     STR_15:
  1046  00FEF4  7A                 	db	122	;'z'
  1047  00FEF5  3A                 	db	58	;':'
  1048  00FEF6  20                 	db	32
  1049  00FEF7  43                 	db	67	;'C'
  1050  00FEF8  6C                 	db	108	;'l'
  1051  00FEF9  65                 	db	101	;'e'
  1052  00FEFA  61                 	db	97	;'a'
  1053  00FEFB  72                 	db	114	;'r'
  1054  00FEFC  20                 	db	32
  1055  00FEFD  74                 	db	116	;'t'
  1056  00FEFE  68                 	db	104	;'h'
  1057  00FEFF  65                 	db	101	;'e'
  1058  00FF00  20                 	db	32
  1059  00FF01  74                 	db	116	;'t'
  1060  00FF02  65                 	db	101	;'e'
  1061  00FF03  72                 	db	114	;'r'
  1062  00FF04  6D                 	db	109	;'m'
  1063  00FF05  69                 	db	105	;'i'
  1064  00FF06  6E                 	db	110	;'n'
  1065  00FF07  61                 	db	97	;'a'
  1066  00FF08  6C                 	db	108	;'l'
  1067  00FF09  0D                 	db	13
  1068  00FF0A  0A                 	db	10
  1069  00FF0B  00                 	db	0
  1070  00FF0C                     STR_48:
  1071  00FF0C  20                 	db	32
  1072  00FF0D  20                 	db	32
  1073  00FF0E  20                 	db	32
  1074  00FF0F  20                 	db	32
  1075  00FF10  53                 	db	83	;'S'
  1076  00FF11  74                 	db	116	;'t'
  1077  00FF12  61                 	db	97	;'a'
  1078  00FF13  74                 	db	116	;'t'
  1079  00FF14  75                 	db	117	;'u'
  1080  00FF15  73                 	db	115	;'s'
  1081  00FF16  3A                 	db	58	;':'
  1082  00FF17  20                 	db	32
  1083  00FF18  20                 	db	32
  1084  00FF19  20                 	db	32
  1085  00FF1A  20                 	db	32
  1086  00FF1B  20                 	db	32
  1087  00FF1C  25                 	db	37
  1088  00FF1D  30                 	db	48	;'0'
  1089  00FF1E  32                 	db	50	;'2'
  1090  00FF1F  78                 	db	120	;'x'
  1091  00FF20  0D                 	db	13
  1092  00FF21  0A                 	db	10
  1093  00FF22  00                 	db	0
  1094  00FF23                     STR_14:
  1095  00FF23  5A                 	db	90	;'Z'
  1096  00FF24  3A                 	db	58	;':'
  1097  00FF25  20                 	db	32
  1098  00FF26  52                 	db	82	;'R'
  1099  00FF27  65                 	db	101	;'e'
  1100  00FF28  73                 	db	115	;'s'
  1101  00FF29  65                 	db	101	;'e'
  1102  00FF2A  74                 	db	116	;'t'
  1103  00FF2B  20                 	db	32
  1104  00FF2C  70                 	db	112	;'p'
  1105  00FF2D  72                 	db	114	;'r'
  1106  00FF2E  6F                 	db	111	;'o'
  1107  00FF2F  63                 	db	99	;'c'
  1108  00FF30  65                 	db	101	;'e'
  1109  00FF31  73                 	db	115	;'s'
  1110  00FF32  73                 	db	115	;'s'
  1111  00FF33  6F                 	db	111	;'o'
  1112  00FF34  72                 	db	114	;'r'
  1113  00FF35  0D                 	db	13
  1114  00FF36  0A                 	db	10
  1115  00FF37  00                 	db	0
  1116  00FF38                     STR_34:
  1117  00FF38  44                 	db	68	;'D'
  1118  00FF39  65                 	db	101	;'e'
  1119  00FF3A  63                 	db	99	;'c'
  1120  00FF3B  72                 	db	114	;'r'
  1121  00FF3C  65                 	db	101	;'e'
  1122  00FF3D  61                 	db	97	;'a'
  1123  00FF3E  73                 	db	115	;'s'
  1124  00FF3F  65                 	db	101	;'e'
  1125  00FF40  64                 	db	100	;'d'
  1126  00FF41  20                 	db	32
  1127  00FF42  61                 	db	97	;'a'
  1128  00FF43  64                 	db	100	;'d'
  1129  00FF44  64                 	db	100	;'d'
  1130  00FF45  72                 	db	114	;'r'
  1131  00FF46  65                 	db	101	;'e'
  1132  00FF47  73                 	db	115	;'s'
  1133  00FF48  73                 	db	115	;'s'
  1134  00FF49  0D                 	db	13
  1135  00FF4A  0A                 	db	10
  1136  00FF4B  00                 	db	0
  1137  00FF4C                     STR_36:
  1138  00FF4C  49                 	db	73	;'I'
  1139  00FF4D  6E                 	db	110	;'n'
  1140  00FF4E  63                 	db	99	;'c'
  1141  00FF4F  72                 	db	114	;'r'
  1142  00FF50  65                 	db	101	;'e'
  1143  00FF51  61                 	db	97	;'a'
  1144  00FF52  73                 	db	115	;'s'
  1145  00FF53  65                 	db	101	;'e'
  1146  00FF54  64                 	db	100	;'d'
  1147  00FF55  20                 	db	32
  1148  00FF56  61                 	db	97	;'a'
  1149  00FF57  64                 	db	100	;'d'
  1150  00FF58  64                 	db	100	;'d'
  1151  00FF59  72                 	db	114	;'r'
  1152  00FF5A  65                 	db	101	;'e'
  1153  00FF5B  73                 	db	115	;'s'
  1154  00FF5C  73                 	db	115	;'s'
  1155  00FF5D  0D                 	db	13
  1156  00FF5E  0A                 	db	10
  1157  00FF5F  00                 	db	0
  1158  00FF60                     STR_6:
  1159  00FF60  53                 	db	83	;'S'
  1160  00FF61  44                 	db	68	;'D'
  1161  00FF62  20                 	db	32
  1162  00FF63  63                 	db	99	;'c'
  1163  00FF64  61                 	db	97	;'a'
  1164  00FF65  72                 	db	114	;'r'
  1165  00FF66  64                 	db	100	;'d'
  1166  00FF67  20                 	db	32
  1167  00FF68  61                 	db	97	;'a'
  1168  00FF69  64                 	db	100	;'d'
  1169  00FF6A  64                 	db	100	;'d'
  1170  00FF6B  72                 	db	114	;'r'
  1171  00FF6C  65                 	db	101	;'e'
  1172  00FF6D  73                 	db	115	;'s'
  1173  00FF6E  73                 	db	115	;'s'
  1174  00FF6F  3A                 	db	58	;':'
  1175  00FF70  20                 	db	32
  1176  00FF71  20                 	db	32
  1177  00FF72  00                 	db	0
  1178  00FF73                     STR_2:
  1179  00FF73  53                 	db	83	;'S'
  1180  00FF74  44                 	db	68	;'D'
  1181  00FF75  20                 	db	32
  1182  00FF76  63                 	db	99	;'c'
  1183  00FF77  61                 	db	97	;'a'
  1184  00FF78  72                 	db	114	;'r'
  1185  00FF79  64                 	db	100	;'d'
  1186  00FF7A  20                 	db	32
  1187  00FF7B  74                 	db	116	;'t'
  1188  00FF7C  65                 	db	101	;'e'
  1189  00FF7D  73                 	db	115	;'s'
  1190  00FF7E  74                 	db	116	;'t'
  1191  00FF7F  69                 	db	105	;'i'
  1192  00FF80  6E                 	db	110	;'n'
  1193  00FF81  67                 	db	103	;'g'
  1194  00FF82  0D                 	db	13
  1195  00FF83  0A                 	db	10
  1196  00FF84  00                 	db	0
  1197  00FF85                     STR_55:
  1198  00FF85  55                 	db	85	;'U'
  1199  00FF86  6E                 	db	110	;'n'
  1200  00FF87  6B                 	db	107	;'k'
  1201  00FF88  6E                 	db	110	;'n'
  1202  00FF89  6F                 	db	111	;'o'
  1203  00FF8A  77                 	db	119	;'w'
  1204  00FF8B  6E                 	db	110	;'n'
  1205  00FF8C  20                 	db	32
  1206  00FF8D  6B                 	db	107	;'k'
  1207  00FF8E  65                 	db	101	;'e'
  1208  00FF8F  79                 	db	121	;'y'
  1209  00FF90  20                 	db	32
  1210  00FF91  25                 	db	37
  1211  00FF92  63                 	db	99	;'c'
  1212  00FF93  0D                 	db	13
  1213  00FF94  0A                 	db	10
  1214  00FF95  00                 	db	0
  1215  00FF96                     STR_43:
  1216  00FF96  20                 	db	32
  1217  00FF97  20                 	db	32
  1218  00FF98  20                 	db	32
  1219  00FF99  20                 	db	32
  1220  00FF9A  41                 	db	65	;'A'
  1221  00FF9B  64                 	db	100	;'d'
  1222  00FF9C  64                 	db	100	;'d'
  1223  00FF9D  72                 	db	114	;'r'
  1224  00FF9E  65                 	db	101	;'e'
  1225  00FF9F  73                 	db	115	;'s'
  1226  00FFA0  73                 	db	115	;'s'
  1227  00FFA1  3A                 	db	58	;':'
  1228  00FFA2  20                 	db	32
  1229  00FFA3  20                 	db	32
  1230  00FFA4  20                 	db	32
  1231  00FFA5  20                 	db	32
  1232  00FFA6  00                 	db	0
  1233  00FFA7                     STR_49:
  1234  00FFA7  52                 	db	82	;'R'
  1235  00FFA8  65                 	db	101	;'e'
  1236  00FFA9  61                 	db	97	;'a'
  1237  00FFAA  64                 	db	100	;'d'
  1238  00FFAB  20                 	db	32
  1239  00FFAC  62                 	db	98	;'b'
  1240  00FFAD  6C                 	db	108	;'l'
  1241  00FFAE  6F                 	db	111	;'o'
  1242  00FFAF  63                 	db	99	;'c'
  1243  00FFB0  6B                 	db	107	;'k'
  1244  00FFB1  3A                 	db	58	;':'
  1245  00FFB2  20                 	db	32
  1246  00FFB3  0D                 	db	13
  1247  00FFB4  0A                 	db	10
  1248  00FFB5  00                 	db	0
  1249  00FFB6                     STR_12:
  1250  00FFB6  3F                 	db	63	;'?'
  1251  00FFB7  3A                 	db	58	;':'
  1252  00FFB8  20                 	db	32
  1253  00FFB9  68                 	db	104	;'h'
  1254  00FFBA  65                 	db	101	;'e'
  1255  00FFBB  6C                 	db	108	;'l'
  1256  00FFBC  70                 	db	112	;'p'
  1257  00FFBD  20                 	db	32
  1258  00FFBE  6D                 	db	109	;'m'
  1259  00FFBF  65                 	db	101	;'e'
  1260  00FFC0  6E                 	db	110	;'n'
  1261  00FFC1  75                 	db	117	;'u'
  1262  00FFC2  0D                 	db	13
  1263  00FFC3  0A                 	db	10
  1264  00FFC4  00                 	db	0
  1265  00FFC5                     STR_1:
  1266  00FFC5  69                 	db	105	;'i'
  1267  00FFC6  6E                 	db	110	;'n'
  1268  00FFC7  4C                 	db	76	;'L'
  1269  00FFC8  61                 	db	97	;'a'
  1270  00FFC9  62                 	db	98	;'b'
  1271  00FFCA  20                 	db	32
  1272  00FFCB  30                 	db	48	;'0'
  1273  00FFCC  39                 	db	57	;'9'
  1274  00FFCD  0D                 	db	13
  1275  00FFCE  0A                 	db	10
  1276  00FFCF  00                 	db	0
  1277  00FFD0                     STR_3:
  1278  00FFD0  44                 	db	68	;'D'
  1279  00FFD1  65                 	db	101	;'e'
  1280  00FFD2  76                 	db	118	;'v'
  1281  00FFD3  27                 	db	39
  1282  00FFD4  32                 	db	50	;'2'
  1283  00FFD5  31                 	db	49	;'1'
  1284  00FFD6  0D                 	db	13
  1285  00FFD7  0A                 	db	10
  1286  00FFD8  00                 	db	0
  1287  00FFD9                     STR_24:
  1288  00FFD9  6F                 	db	111	;'o'
  1289  00FFDA  3A                 	db	58	;':'
  1290  00FFDB  09                 	db	9
  1291  00FFDC  6F                 	db	111	;'o'
  1292  00FFDD  6B                 	db	107	;'k'
  1293  00FFDE  0D                 	db	13
  1294  00FFDF  0A                 	db	10
  1295  00FFE0  00                 	db	0
  1296  00FFE1                     STR_13:
  1297  00FFE1  6F                 	db	111	;'o'
  1298  00FFE2  3A                 	db	58	;':'
  1299  00FFE3  20                 	db	32
  1300  00FFE4  6B                 	db	107	;'k'
  1301  00FFE5  0D                 	db	13
  1302  00FFE6  0A                 	db	10
  1303  00FFE7  00                 	db	0
  1304  00FFE8                     STR_65:
  1305  00FFE8  25                 	db	37
  1306  00FFE9  30                 	db	48	;'0'
  1307  00FFEA  32                 	db	50	;'2'
  1308  00FFEB  78                 	db	120	;'x'
  1309  00FFEC  20                 	db	32
  1310  00FFED  00                 	db	0
  1311  00FFEE                     STR_7:
  1312  00FFEE  25                 	db	37
  1313  00FFEF  30                 	db	48	;'0'
  1314  00FFF0  34                 	db	52	;'4'
  1315  00FFF1  78                 	db	120	;'x'
  1316  00FFF2  00                 	db	0
  1317  00FFF3                     STR_59:
  1318  00FFF3  0D                 	db	13
  1319  00FFF4  0A                 	db	10
  1320  00FFF5  0A                 	db	10
  1321  00FFF6  00                 	db	0
  1322  00FFF7                     STR_63:
  1323  00FFF7  25                 	db	37
  1324  00FFF8  63                 	db	99	;'c'
  1325  00FFF9  00                 	db	0
  1326  00FFFA                     STR_62:
  1327  00FFFA  2E                 	db	46
  1328  00FFFB  00                 	db	0
  1329  00FFFC                     STR_8:
  1330  00FFFC  3A                 	db	58	;':'
  1331  00FFFD  00                 	db	0
  1332  00FFFE  00                 	db	0	; dummy byte at the end
  1333  0000                     
  1334                           ; #config settings
  1335                           
  1336                           	psect	cinit
  1337  00202C                     __pcinit:
  1338                           	callstack 0
  1339  00202C                     start_initialization:
  1340                           	callstack 0
  1341  00202C                     __initialization:
  1342                           	callstack 0
  1343                           
  1344                           ; Clear objects allocated to BIGRAM (512 bytes)
  1345  00202C  EE00  F0CB         	lfsr	0,__pbssBIGRAM
  1346  002030  EE12 F000          	lfsr	1,512
  1347  002034                     clear_0:
  1348  002034  6AEE               	clrf	postinc0,c
  1349  002036  50E5               	movf	postdec1,w,c
  1350  002038  50E1               	movf	fsr1l,w,c
  1351  00203A  E1FC               	bnz	clear_0
  1352  00203C  50E2               	movf	fsr1h,w,c
  1353  00203E  E1FA               	bnz	clear_0
  1354                           
  1355                           ; Clear objects allocated to BANK0 (45 bytes)
  1356  002040  EE00  F09E         	lfsr	0,__pbssBANK0
  1357  002044  0E2D               	movlw	45
  1358  002046                     clear_1:
  1359  002046  6AEE               	clrf	postinc0,c
  1360  002048  06E8               	decf	wreg,f,c
  1361  00204A  E1FD               	bnz	clear_1
  1362                           
  1363                           ; Clear objects allocated to COMRAM (6 bytes)
  1364  00204C  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1365  00204E  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1366  002050  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1367  002052  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1368  002054  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1369  002056  6A53               	clrf	__pbssCOMRAM& (0+255),c
  1370  002058                     end_of_initialization:
  1371                           	callstack 0
  1372  002058                     __end_of__initialization:
  1373                           	callstack 0
  1374  002058  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1375  00205A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1376  00205C  0100               	movlb	0
  1377  00205E  EF21  F000         	goto	_main	;jump to C main() function
  1378                           
  1379                           	psect	bssCOMRAM
  1380  000053                     __pbssCOMRAM:
  1381                           	callstack 0
  1382  000053                     _width:
  1383                           	callstack 0
  1384  000053                     	ds	2
  1385  000055                     _flags:
  1386                           	callstack 0
  1387  000055                     	ds	2
  1388  000057                     _timer0ReloadVal:
  1389                           	callstack 0
  1390  000057                     	ds	2
  1391                           
  1392                           	psect	bssBANK0
  1393  00009E                     __pbssBANK0:
  1394                           	callstack 0
  1395  00009E                     _nout:
  1396                           	callstack 0
  1397  00009E                     	ds	2
  1398  0000A0                     _prec:
  1399                           	callstack 0
  1400  0000A0                     	ds	2
  1401  0000A2                     _EUSART1_ErrorHandler:
  1402                           	callstack 0
  1403  0000A2                     	ds	2
  1404  0000A4                     _EUSART1_OverrunErrorHandler:
  1405                           	callstack 0
  1406  0000A4                     	ds	2
  1407  0000A6                     _EUSART1_FramingErrorHandler:
  1408                           	callstack 0
  1409  0000A6                     	ds	2
  1410  0000A8                     _TMR0_InterruptHandler:
  1411                           	callstack 0
  1412  0000A8                     	ds	2
  1413  0000AA                     _eusart1RxLastError:
  1414                           	callstack 0
  1415  0000AA                     	ds	1
  1416  0000AB                     _dbuf:
  1417                           	callstack 0
  1418  0000AB                     	ds	32
  1419                           
  1420                           	psect	bssBIGRAM
  1421  0000CB                     __pbssBIGRAM:
  1422                           	callstack 0
  1423  0000CB                     _sdCardBuffer:
  1424                           	callstack 0
  1425  0000CB                     	ds	512
  1426                           
  1427                           	psect	cstackBANK0
  1428  000060                     __pcstackBANK0:
  1429                           	callstack 0
  1430  000060                     ??_vfpfcnvrt:
  1431                           
  1432                           ; 1 bytes @ 0x0
  1433  000060                     	ds	4
  1434  000064                     vfpfcnvrt@ll:
  1435                           	callstack 0
  1436                           
  1437                           ; 8 bytes @ 0x4
  1438  000064                     	ds	8
  1439  00006C                     vfpfcnvrt@llu:
  1440                           	callstack 0
  1441                           
  1442                           ; 8 bytes @ 0xC
  1443  00006C                     	ds	8
  1444  000074                     vfpfcnvrt@done:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x14
  1448  000074                     	ds	2
  1449  000076                     _vfpfcnvrt$1723:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x16
  1453  000076                     	ds	2
  1454  000078                     vfpfcnvrt@c:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x18
  1458  000078                     	ds	1
  1459  000079                     ?_vfprintf:
  1460                           	callstack 0
  1461  000079                     vfprintf@fp:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x19
  1465  000079                     	ds	2
  1466  00007B                     vfprintf@fmt:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x1B
  1470  00007B                     	ds	2
  1471  00007D                     vfprintf@ap:
  1472                           	callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x1D
  1475  00007D                     	ds	2
  1476  00007F                     ?_printf:
  1477                           	callstack 0
  1478  00007F                     printf@fmt:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x1F
  1482  00007F                     	ds	8
  1483  000087                     printf@ap:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x27
  1487  000087                     	ds	2
  1488  000089                     SDCARD_Initialize@i:
  1489                           	callstack 0
  1490  000089                     hexDumpBuffer@sdCardBuffer:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x29
  1494  000089                     	ds	2
  1495  00008B                     ??_hexDumpBuffer:
  1496  00008B                     SDCARD_Initialize@verbose:
  1497                           	callstack 0
  1498                           
  1499                           ; 1 bytes @ 0x2B
  1500  00008B                     	ds	1
  1501  00008C                     SDCARD_Initialize@response:
  1502                           	callstack 0
  1503                           
  1504                           ; 1 bytes @ 0x2C
  1505  00008C                     	ds	1
  1506  00008D                     hexDumpBuffer@j:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x2D
  1510  00008D                     	ds	2
  1511  00008F                     hexDumpBuffer@j_1158:
  1512                           	callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x2F
  1515  00008F                     	ds	2
  1516  000091                     hexDumpBuffer@i:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x31
  1520  000091                     	ds	2
  1521  000093                     ??_main:
  1522                           
  1523                           ; 1 bytes @ 0x33
  1524  000093                     	ds	2
  1525  000095                     main@status:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x35
  1529  000095                     	ds	1
  1530  000096                     main@letter:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x36
  1534  000096                     	ds	1
  1535  000097                     main@cmd:
  1536                           	callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x37
  1539  000097                     	ds	1
  1540  000098                     main@i:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x38
  1544  000098                     	ds	2
  1545  00009A                     main@sdCardAddress:
  1546                           	callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x3A
  1549  00009A                     	ds	4
  1550                           
  1551                           	psect	cstackCOMRAM
  1552  000001                     __pcstackCOMRAM:
  1553                           	callstack 0
  1554  000001                     i2TMR0_WriteTimer@timerVal:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x0
  1558  000001                     	ds	2
  1559  000003                     myTMR0ISR@bigOleWasteOfTime:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x2
  1563  000003                     	ds	2
  1564  000005                     ??_INTERRUPT_InterruptManager:
  1565                           
  1566                           ; 1 bytes @ 0x4
  1567  000005                     	ds	2
  1568  000007                     ??_SPI2_Open:
  1569  000007                     ?_strlen:
  1570                           	callstack 0
  1571  000007                     ?_isupper:
  1572                           	callstack 0
  1573  000007                     ?_isalpha:
  1574                           	callstack 0
  1575  000007                     ?_isdigit:
  1576                           	callstack 0
  1577  000007                     ?_isspace:
  1578                           	callstack 0
  1579  000007                     ?_islower:
  1580                           	callstack 0
  1581  000007                     ?___wmul:
  1582                           	callstack 0
  1583  000007                     ?___aodiv:
  1584                           	callstack 0
  1585  000007                     ?___aomod:
  1586                           	callstack 0
  1587  000007                     SPI2_ExchangeByte@data:
  1588                           	callstack 0
  1589  000007                     EUSART1_Write@txData:
  1590                           	callstack 0
  1591  000007                     TMR0_WriteTimer@timerVal:
  1592                           	callstack 0
  1593  000007                     TMR0_SetInterruptHandler@InterruptHandler:
  1594                           	callstack 0
  1595  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1596                           	callstack 0
  1597  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1598                           	callstack 0
  1599  000007                     EUSART1_SetErrorHandler@interruptHandler:
  1600                           	callstack 0
  1601  000007                     ___wmul@multiplier:
  1602                           	callstack 0
  1603  000007                     isalpha@c:
  1604                           	callstack 0
  1605  000007                     isdigit@c:
  1606                           	callstack 0
  1607  000007                     isspace@c:
  1608                           	callstack 0
  1609  000007                     isupper@c:
  1610                           	callstack 0
  1611  000007                     strlen@s:
  1612                           	callstack 0
  1613  000007                     islower@c:
  1614                           	callstack 0
  1615  000007                     ___aodiv@dividend:
  1616                           	callstack 0
  1617  000007                     ___aomod@dividend:
  1618                           	callstack 0
  1619                           
  1620                           ; 8 bytes @ 0x6
  1621  000007                     	ds	1
  1622  000008                     SPI2_Open@spi2UniqueConfiguration:
  1623                           	callstack 0
  1624  000008                     putch@txData:
  1625                           	callstack 0
  1626  000008                     SDCARD_PollWriteComplete@status:
  1627                           	callstack 0
  1628  000008                     SDCARD_ReadBlock@addr:
  1629                           	callstack 0
  1630  000008                     SDCARD_WriteBlock@addr:
  1631                           	callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x7
  1634  000008                     	ds	1
  1635  000009                     ??_isupper:
  1636  000009                     ??_isalpha:
  1637  000009                     ??_isdigit:
  1638  000009                     ??_isspace:
  1639  000009                     ??_islower:
  1640  000009                     ??_TMR0_Initialize:
  1641  000009                     ___wmul@multiplicand:
  1642                           	callstack 0
  1643  000009                     fputc@c:
  1644                           	callstack 0
  1645  000009                     strlen@a:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x8
  1649  000009                     	ds	2
  1650  00000B                     ___wmul@product:
  1651                           	callstack 0
  1652  00000B                     fputc@fp:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0xA
  1656  00000B                     	ds	1
  1657  00000C                     SDCARD_ReadBlock@sdCardBuffer:
  1658                           	callstack 0
  1659  00000C                     SDCARD_WriteBlock@sdCardBuffer:
  1660                           	callstack 0
  1661                           
  1662                           ; 2 bytes @ 0xB
  1663  00000C                     	ds	1
  1664  00000D                     ??_fputc:
  1665  00000D                     ?_toupper:
  1666                           	callstack 0
  1667  00000D                     _isspace$1772:
  1668                           	callstack 0
  1669  00000D                     toupper@c:
  1670                           	callstack 0
  1671                           
  1672                           ; 2 bytes @ 0xC
  1673  00000D                     	ds	1
  1674  00000E                     ?_atoi:
  1675                           	callstack 0
  1676  00000E                     SDCARD_ReadBlock@i:
  1677                           	callstack 0
  1678  00000E                     SDCARD_WriteBlock@i:
  1679                           	callstack 0
  1680  00000E                     atoi@s:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0xD
  1684  00000E                     	ds	1
  1685  00000F                     ??_toupper:
  1686  00000F                     ___aodiv@divisor:
  1687                           	callstack 0
  1688  00000F                     ___aomod@divisor:
  1689                           	callstack 0
  1690                           
  1691                           ; 8 bytes @ 0xE
  1692  00000F                     	ds	1
  1693  000010                     ??_atoi:
  1694                           
  1695                           ; 1 bytes @ 0xF
  1696  000010                     	ds	2
  1697  000012                     ?_ctoa:
  1698                           	callstack 0
  1699  000012                     ctoa@fp:
  1700                           	callstack 0
  1701  000012                     fputs@s:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x11
  1705  000012                     	ds	1
  1706  000013                     _toupper$1821:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x12
  1710  000013                     	ds	1
  1711  000014                     ctoa@c:
  1712                           	callstack 0
  1713  000014                     atoi@neg:
  1714                           	callstack 0
  1715  000014                     fputs@fp:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x13
  1719  000014                     	ds	1
  1720  000015                     ??_ctoa:
  1721                           
  1722                           ; 1 bytes @ 0x14
  1723  000015                     	ds	1
  1724  000016                     fputs@c:
  1725                           	callstack 0
  1726  000016                     ctoa@l:
  1727                           	callstack 0
  1728  000016                     _atoi$1745:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x15
  1732  000016                     	ds	1
  1733  000017                     ___aodiv@counter:
  1734                           	callstack 0
  1735  000017                     ___aomod@counter:
  1736                           	callstack 0
  1737  000017                     fputs@i:
  1738                           	callstack 0
  1739                           
  1740                           ; 2 bytes @ 0x16
  1741  000017                     	ds	1
  1742  000018                     ___aodiv@sign:
  1743                           	callstack 0
  1744  000018                     ___aomod@sign:
  1745                           	callstack 0
  1746  000018                     ctoa@w:
  1747                           	callstack 0
  1748  000018                     _atoi$1747:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x17
  1752  000018                     	ds	1
  1753  000019                     ?_abs:
  1754                           	callstack 0
  1755  000019                     ?_pad:
  1756                           	callstack 0
  1757  000019                     pad@fp:
  1758                           	callstack 0
  1759  000019                     abs@a:
  1760                           	callstack 0
  1761  000019                     ___aodiv@quotient:
  1762                           	callstack 0
  1763                           
  1764                           ; 8 bytes @ 0x18
  1765  000019                     	ds	1
  1766  00001A                     _atoi$1746:
  1767                           	callstack 0
  1768                           
  1769                           ; 1 bytes @ 0x19
  1770  00001A                     	ds	1
  1771  00001B                     ??_abs:
  1772  00001B                     pad@buf:
  1773                           	callstack 0
  1774  00001B                     atoi@n:
  1775                           	callstack 0
  1776                           
  1777                           ; 2 bytes @ 0x1A
  1778  00001B                     	ds	2
  1779  00001D                     pad@p:
  1780                           	callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x1C
  1783  00001D                     	ds	2
  1784  00001F                     ??_pad:
  1785                           
  1786                           ; 1 bytes @ 0x1E
  1787  00001F                     	ds	1
  1788  000020                     pad@i:
  1789                           	callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x1F
  1792  000020                     	ds	2
  1793  000022                     pad@w:
  1794                           	callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x21
  1797  000022                     	ds	2
  1798  000024                     ?_dtoa:
  1799                           	callstack 0
  1800  000024                     ?_xtoa:
  1801                           	callstack 0
  1802  000024                     dtoa@fp:
  1803                           	callstack 0
  1804  000024                     xtoa@fp:
  1805                           	callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x23
  1808  000024                     	ds	2
  1809  000026                     dtoa@d:
  1810                           	callstack 0
  1811  000026                     xtoa@d:
  1812                           	callstack 0
  1813                           
  1814                           ; 8 bytes @ 0x25
  1815  000026                     	ds	8
  1816  00002E                     ??_dtoa:
  1817  00002E                     xtoa@x:
  1818                           	callstack 0
  1819                           
  1820                           ; 1 bytes @ 0x2D
  1821  00002E                     	ds	1
  1822  00002F                     ??_xtoa:
  1823                           
  1824                           ; 1 bytes @ 0x2E
  1825  00002F                     	ds	7
  1826  000036                     _dtoa$1697:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x35
  1830  000036                     	ds	1
  1831  000037                     _xtoa$1708:
  1832                           	callstack 0
  1833                           
  1834                           ; 2 bytes @ 0x36
  1835  000037                     	ds	1
  1836  000038                     dtoa@p:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x37
  1840  000038                     	ds	1
  1841  000039                     _xtoa$1709:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x38
  1845  000039                     	ds	1
  1846  00003A                     dtoa@w:
  1847                           	callstack 0
  1848                           
  1849                           ; 2 bytes @ 0x39
  1850  00003A                     	ds	1
  1851  00003B                     xtoa@p:
  1852                           	callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x3A
  1855  00003B                     	ds	1
  1856  00003C                     dtoa@s:
  1857                           	callstack 0
  1858                           
  1859                           ; 2 bytes @ 0x3B
  1860  00003C                     	ds	1
  1861  00003D                     xtoa@w:
  1862                           	callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x3C
  1865  00003D                     	ds	1
  1866  00003E                     dtoa@n:
  1867                           	callstack 0
  1868                           
  1869                           ; 8 bytes @ 0x3D
  1870  00003E                     	ds	1
  1871  00003F                     xtoa@n:
  1872                           	callstack 0
  1873                           
  1874                           ; 8 bytes @ 0x3E
  1875  00003F                     	ds	7
  1876  000046                     dtoa@i:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x45
  1880  000046                     	ds	1
  1881  000047                     xtoa@i:
  1882                           	callstack 0
  1883                           
  1884                           ; 2 bytes @ 0x46
  1885  000047                     	ds	2
  1886  000049                     xtoa@c:
  1887                           	callstack 0
  1888                           
  1889                           ; 2 bytes @ 0x48
  1890  000049                     	ds	2
  1891  00004B                     ?_vfpfcnvrt:
  1892                           	callstack 0
  1893  00004B                     vfpfcnvrt@fp:
  1894                           	callstack 0
  1895                           
  1896                           ; 2 bytes @ 0x4A
  1897  00004B                     	ds	2
  1898  00004D                     vfpfcnvrt@fmt:
  1899                           	callstack 0
  1900                           
  1901                           ; 2 bytes @ 0x4C
  1902  00004D                     	ds	2
  1903  00004F                     vfpfcnvrt@ap:
  1904                           	callstack 0
  1905                           
  1906                           ; 2 bytes @ 0x4E
  1907  00004F                     	ds	2
  1908  000051                     vfprintf@cfmt:
  1909                           	callstack 0
  1910                           
  1911                           ; 2 bytes @ 0x50
  1912  000051                     	ds	2
  1913  000053                     
  1914                           ; 1 bytes @ 0x52
  1915 ;;
  1916 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1917 ;;
  1918 ;; *************** function _main *****************
  1919 ;; Defined at:
  1920 ;;		line 40 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  sdCardAddres    4   58[BANK0 ] unsigned long 
  1925 ;;  i               2   56[BANK0 ] unsigned short 
  1926 ;;  cmd             1   55[BANK0 ] unsigned char 
  1927 ;;  letter          1   54[BANK0 ] unsigned char 
  1928 ;;  status          1   53[BANK0 ] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;Total ram usage:       11 bytes
  1943 ;; Hardware stack levels required when called:   14
  1944 ;; This function calls:
  1945 ;;		_EUSART1_Read
  1946 ;;		_EUSART1_is_rx_ready
  1947 ;;		_SDCARD_Initialize
  1948 ;;		_SDCARD_PollWriteComplete
  1949 ;;		_SDCARD_ReadBlock
  1950 ;;		_SDCARD_WriteBlock
  1951 ;;		_SPI2_Close
  1952 ;;		_SPI2_ExchangeByte
  1953 ;;		_SPI2_Open
  1954 ;;		_SYSTEM_Initialize
  1955 ;;		_TMR0_SetInterruptHandler
  1956 ;;		_TMR0_WriteTimer
  1957 ;;		_hexDumpBuffer
  1958 ;;		_printf
  1959 ;; This function is called by:
  1960 ;;		Startup code after reset
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text0
  1965  000042                     __ptext0:
  1966                           	callstack 0
  1967  000042                     _main:
  1968                           	callstack 17
  1969  000042                     
  1970                           ;main.c: 42:     SPI2_Close();;main.c: 43:     SPI2_Open(SPI2_DEFAULT);;main.c: 44: 
  1971  000042  0E00               	movlw	0
  1972  000044  0100               	movlb	0	; () banked
  1973  000046  6F9A               	movwf	main@sdCardAddress& (0+255),b
  1974  000048  0E00               	movlw	0
  1975  00004A  6F9B               	movwf	(main@sdCardAddress+1)& (0+255),b
  1976  00004C  0E00               	movlw	0
  1977  00004E  6F9C               	movwf	(main@sdCardAddress+2)& (0+255),b
  1978  000050  0E00               	movlw	0
  1979  000052  6F9D               	movwf	(main@sdCardAddress+3)& (0+255),b
  1980                           
  1981                           ;main.c: 45:     for (;;) {;main.c: 47:         if ((EUSART1_is_rx_ready())) {
  1982  000054  0E30               	movlw	48
  1983  000056  6F96               	movwf	main@letter& (0+255),b
  1984  000058                     
  1985                           ; BSR set to: 0
  1986                           ;main.c: 49:             switch (cmd) {
  1987  000058  ECE3  F010         	call	_SYSTEM_Initialize	;wreg free
  1988  00005C  888A               	bsf	138,4,c	;volatile
  1989  00005E                     
  1990                           ;main.c: 53: 
  1991  00005E  0E00               	movlw	0
  1992  000060  6E08               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1993  000062  0E00               	movlw	0
  1994  000064  6E07               	movwf	TMR0_WriteTimer@timerVal^0,c
  1995  000066  EC1B  F011         	call	_TMR0_WriteTimer	;wreg free
  1996  00006A                     
  1997                           ;main.c: 54:                 case '?':
  1998  00006A  94F2               	bcf	242,2,c	;volatile
  1999  00006C                     l184:
  2000  00006C  A4F2               	btfss	242,2,c	;volatile
  2001  00006E  EF3B  F000         	goto	u3171
  2002  000072  EF3D  F000         	goto	u3170
  2003  000076                     u3171:
  2004  000076  EF36  F000         	goto	l184
  2005  00007A                     u3170:
  2006  00007A                     
  2007                           ;main.c: 57:                     printf("%04x", sdCardAddress >> 16);
  2008  00007A  0ECE               	movlw	low _myTMR0ISR
  2009  00007C  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2010  00007E  0E20               	movlw	high _myTMR0ISR
  2011  000080  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2012  000082  EC20  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  2013  000086                     
  2014                           ;main.c: 59:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  2015  000086  8EF2               	bsf	242,7,c	;volatile
  2016  000088                     
  2017                           ;main.c: 60:                     printf("\r\n");
  2018  000088  8CF2               	bsf	242,6,c	;volatile
  2019  00008A                     
  2020                           ;main.c: 62:                     printf("?: help menu\r\n");
  2021  00008A  0EC5               	movlw	low STR_1
  2022  00008C  0100               	movlb	0	; () banked
  2023  00008E  6F7F               	movwf	printf@fmt& (0+255),b
  2024  000090  0EFF               	movlw	high STR_1
  2025  000092  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2026  000094  ECAE  F010         	call	_printf	;wreg free
  2027  000098                     
  2028                           ;main.c: 63:                     printf("o: k\r\n");
  2029  000098  0E73               	movlw	low STR_2
  2030  00009A  0100               	movlb	0	; () banked
  2031  00009C  6F7F               	movwf	printf@fmt& (0+255),b
  2032  00009E  0EFF               	movlw	high STR_2
  2033  0000A0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2034  0000A2  ECAE  F010         	call	_printf	;wreg free
  2035  0000A6                     
  2036                           ;main.c: 64:                     printf("Z: Reset processor\r\n");
  2037  0000A6  0ED0               	movlw	low STR_3
  2038  0000A8  0100               	movlb	0	; () banked
  2039  0000AA  6F7F               	movwf	printf@fmt& (0+255),b
  2040  0000AC  0EFF               	movlw	high STR_3
  2041  0000AE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2042  0000B0  ECAE  F010         	call	_printf	;wreg free
  2043  0000B4                     
  2044                           ;main.c: 65:                     printf("z: Clear the terminal\r\n");
  2045  0000B4  0E89               	movlw	low STR_4
  2046  0000B6  0100               	movlb	0	; () banked
  2047  0000B8  6F7F               	movwf	printf@fmt& (0+255),b
  2048  0000BA  0EFD               	movlw	high STR_4
  2049  0000BC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2050  0000BE  ECAE  F010         	call	_printf	;wreg free
  2051  0000C2                     
  2052                           ;main.c: 67:                     printf("t: send a Test character over SPI\r\n");
  2053  0000C2  EC40  F011         	call	_SPI2_Close	;wreg free
  2054  0000C6                     
  2055                           ;main.c: 68:                     printf("--------------SD CARD TESTS--------------------
      +                          --\r\n");
  2056  0000C6  0E00               	movlw	0
  2057  0000C8  EC4B  F00D         	call	_SPI2_Open
  2058  0000CC                     l3986:
  2059                           
  2060                           ;main.c: 72:                     printf("w: write a block of %d bytes to SD card\r\n", 5
      +                          12);
  2061  0000CC  EC08  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2062  0000D0  0900               	iorlw	0
  2063  0000D2  B4D8               	btfsc	status,2,c
  2064  0000D4  EF6E  F000         	goto	u3181
  2065  0000D8  EF70  F000         	goto	u3180
  2066  0000DC                     u3181:
  2067  0000DC  EF66  F000         	goto	l3986
  2068  0000E0                     u3180:
  2069  0000E0                     
  2070                           ;main.c: 73:                     printf("-----------------------------------------------
      +                          --\r\n");
  2071  0000E0  EC99  F010         	call	_EUSART1_Read	;wreg free
  2072  0000E4  0100               	movlb	0	; () banked
  2073  0000E6  6F97               	movwf	main@cmd& (0+255),b
  2074                           
  2075                           ;main.c: 74:                     break;
  2076  0000E8  EF0E  F003         	goto	l4092
  2077  0000EC                     l3990:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 80:                     printf("o:	ok\r\n");
  2081  0000EC  0E3F               	movlw	low STR_5
  2082  0000EE  6F7F               	movwf	printf@fmt& (0+255),b
  2083  0000F0  0EFC               	movlw	high STR_5
  2084  0000F2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2085  0000F4  ECAE  F010         	call	_printf	;wreg free
  2086                           
  2087                           ;main.c: 81:                     break;
  2088  0000F8  0E60               	movlw	low STR_6
  2089  0000FA  0100               	movlb	0	; () banked
  2090  0000FC  6F7F               	movwf	printf@fmt& (0+255),b
  2091  0000FE  0EFF               	movlw	high STR_6
  2092  000100  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2093  000102  ECAE  F010         	call	_printf	;wreg free
  2094                           
  2095                           ;main.c: 82: 
  2096  000106  0EEE               	movlw	low STR_7
  2097  000108  0100               	movlb	0	; () banked
  2098  00010A  6F7F               	movwf	printf@fmt& (0+255),b
  2099  00010C  0EFF               	movlw	high STR_7
  2100  00010E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2101  000110  C09C  F081         	movff	main@sdCardAddress+2,?_printf+2
  2102  000114  C09D  F082         	movff	main@sdCardAddress+3,?_printf+3
  2103  000118  6B83               	clrf	(?_printf+4)& (0+255),b
  2104  00011A  6B84               	clrf	(?_printf+5)& (0+255),b
  2105  00011C  ECAE  F010         	call	_printf	;wreg free
  2106                           
  2107                           ;main.c: 83: 
  2108  000120  0EFC               	movlw	low STR_8
  2109  000122  0100               	movlb	0	; () banked
  2110  000124  6F7F               	movwf	printf@fmt& (0+255),b
  2111  000126  0EFF               	movlw	high STR_8
  2112  000128  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2113  00012A  ECAE  F010         	call	_printf	;wreg free
  2114                           
  2115                           ;main.c: 84: 
  2116  00012E  0EEE               	movlw	low STR_7
  2117  000130  0100               	movlb	0	; () banked
  2118  000132  6F7F               	movwf	printf@fmt& (0+255),b
  2119  000134  0EFF               	movlw	high STR_7
  2120  000136  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2121  000138  0EFF               	movlw	255
  2122  00013A  159A               	andwf	main@sdCardAddress& (0+255),w,b
  2123  00013C  6F81               	movwf	(?_printf+2)& (0+255),b
  2124  00013E  0EFF               	movlw	255
  2125  000140  159B               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2126  000142  6F82               	movwf	(?_printf+3)& (0+255),b
  2127  000144  0E00               	movlw	0
  2128  000146  159C               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2129  000148  6F83               	movwf	(?_printf+4)& (0+255),b
  2130  00014A  0E00               	movlw	0
  2131  00014C  159D               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2132  00014E  6F84               	movwf	(?_printf+5)& (0+255),b
  2133  000150  ECAE  F010         	call	_printf	;wreg free
  2134                           
  2135                           ;main.c: 85: 
  2136  000154  0EB3               	movlw	low (STR_49+12)
  2137  000156  0100               	movlb	0	; () banked
  2138  000158  6F7F               	movwf	printf@fmt& (0+255),b
  2139  00015A  0EFF               	movlw	high (STR_49+12)
  2140  00015C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2141  00015E  ECAE  F010         	call	_printf	;wreg free
  2142                           
  2143                           ;main.c: 86:                 case 'Z':
  2144  000162  0E41               	movlw	low (STR_5+2)
  2145  000164  0100               	movlb	0	; () banked
  2146  000166  6F7F               	movwf	printf@fmt& (0+255),b
  2147  000168  0EFC               	movlw	high (STR_5+2)
  2148  00016A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2149  00016C  ECAE  F010         	call	_printf	;wreg free
  2150                           
  2151                           ;main.c: 87:                     for (i = 0; i < 40; i++) printf("\n");
  2152  000170  0EB6               	movlw	low STR_12
  2153  000172  0100               	movlb	0	; () banked
  2154  000174  6F7F               	movwf	printf@fmt& (0+255),b
  2155  000176  0EFF               	movlw	high STR_12
  2156  000178  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2157  00017A  ECAE  F010         	call	_printf	;wreg free
  2158                           
  2159                           ;main.c: 88:                     __asm("reset");
  2160  00017E  0EE1               	movlw	low STR_13
  2161  000180  0100               	movlb	0	; () banked
  2162  000182  6F7F               	movwf	printf@fmt& (0+255),b
  2163  000184  0EFF               	movlw	high STR_13
  2164  000186  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2165  000188  ECAE  F010         	call	_printf	;wreg free
  2166                           
  2167                           ;main.c: 89:                     break;
  2168  00018C  0E23               	movlw	low STR_14
  2169  00018E  0100               	movlb	0	; () banked
  2170  000190  6F7F               	movwf	printf@fmt& (0+255),b
  2171  000192  0EFF               	movlw	high STR_14
  2172  000194  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2173  000196  ECAE  F010         	call	_printf	;wreg free
  2174                           
  2175                           ;main.c: 90: 
  2176  00019A  0EF4               	movlw	low STR_15
  2177  00019C  0100               	movlb	0	; () banked
  2178  00019E  6F7F               	movwf	printf@fmt& (0+255),b
  2179  0001A0  0EFE               	movlw	high STR_15
  2180  0001A2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2181  0001A4  ECAE  F010         	call	_printf	;wreg free
  2182                           
  2183                           ;main.c: 91: 
  2184  0001A8  0E75               	movlw	low STR_16
  2185  0001AA  0100               	movlb	0	; () banked
  2186  0001AC  6F7F               	movwf	printf@fmt& (0+255),b
  2187  0001AE  0EFC               	movlw	high STR_16
  2188  0001B0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2189  0001B2  ECAE  F010         	call	_printf	;wreg free
  2190                           
  2191                           ;main.c: 92: 
  2192  0001B6  0ED8               	movlw	low STR_17
  2193  0001B8  0100               	movlb	0	; () banked
  2194  0001BA  6F7F               	movwf	printf@fmt& (0+255),b
  2195  0001BC  0EFD               	movlw	high STR_17
  2196  0001BE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2197  0001C0  ECAE  F010         	call	_printf	;wreg free
  2198                           
  2199                           ;main.c: 93: 
  2200  0001C4  0EA9               	movlw	low STR_18
  2201  0001C6  0100               	movlb	0	; () banked
  2202  0001C8  6F7F               	movwf	printf@fmt& (0+255),b
  2203  0001CA  0EFC               	movlw	high STR_18
  2204  0001CC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2205  0001CE  ECAE  F010         	call	_printf	;wreg free
  2206                           
  2207                           ;main.c: 94:                 case 'z':
  2208  0001D2  0EDC               	movlw	low STR_19
  2209  0001D4  0100               	movlb	0	; () banked
  2210  0001D6  6F7F               	movwf	printf@fmt& (0+255),b
  2211  0001D8  0EFE               	movlw	high STR_19
  2212  0001DA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2213  0001DC  ECAE  F010         	call	_printf	;wreg free
  2214                           
  2215                           ;main.c: 95:                     for (i = 0; i < 40; i++) printf("\n");
  2216  0001E0  0EB3               	movlw	low STR_20
  2217  0001E2  0100               	movlb	0	; () banked
  2218  0001E4  6F7F               	movwf	printf@fmt& (0+255),b
  2219  0001E6  0EFD               	movlw	high STR_20
  2220  0001E8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2221  0001EA  ECAE  F010         	call	_printf	;wreg free
  2222                           
  2223                           ;main.c: 96:                     break;
  2224  0001EE  0E34               	movlw	low STR_21
  2225  0001F0  0100               	movlb	0	; () banked
  2226  0001F2  6F7F               	movwf	printf@fmt& (0+255),b
  2227  0001F4  0EFD               	movlw	high STR_21
  2228  0001F6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2229  0001F8  0E02               	movlw	2
  2230  0001FA  6F82               	movwf	(?_printf+3)& (0+255),b
  2231  0001FC  0E00               	movlw	0
  2232  0001FE  6F81               	movwf	(?_printf+2)& (0+255),b
  2233  000200  ECAE  F010         	call	_printf	;wreg free
  2234                           
  2235                           ;main.c: 97: 
  2236  000204  0E5F               	movlw	low STR_22
  2237  000206  0100               	movlb	0	; () banked
  2238  000208  6F7F               	movwf	printf@fmt& (0+255),b
  2239  00020A  0EFD               	movlw	high STR_22
  2240  00020C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2241  00020E  0E02               	movlw	2
  2242  000210  6F82               	movwf	(?_printf+3)& (0+255),b
  2243  000212  0E00               	movlw	0
  2244  000214  6F81               	movwf	(?_printf+2)& (0+255),b
  2245  000216  ECAE  F010         	call	_printf	;wreg free
  2246                           
  2247                           ;main.c: 98: 
  2248  00021A  0E41               	movlw	low (STR_5+2)
  2249  00021C  0100               	movlb	0	; () banked
  2250  00021E  6F7F               	movwf	printf@fmt& (0+255),b
  2251  000220  0EFC               	movlw	high (STR_5+2)
  2252  000222  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2253  000224  ECAE  F010         	call	_printf	;wreg free
  2254                           
  2255                           ;main.c: 99: 
  2256  000228  EF66  F000         	goto	l3986
  2257  00022C                     l3992:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 105:                     printf("    Set the horizontal scale to 500ns/div\r\n"
      +                          );
  2261  00022C  0ED9               	movlw	low STR_24
  2262  00022E  6F7F               	movwf	printf@fmt& (0+255),b
  2263  000230  0EFF               	movlw	high STR_24
  2264  000232  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2265  000234  ECAE  F010         	call	_printf	;wreg free
  2266                           
  2267                           ;main.c: 106:                     printf("    Hit any key when ready\r\n");
  2268  000238  EF66  F000         	goto	l3986
  2269  00023C                     l3994:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 112:                     break;
  2273  00023C  0E00               	movlw	0
  2274  00023E  6F99               	movwf	(main@i+1)& (0+255),b
  2275  000240  0E00               	movlw	0
  2276  000242  6F98               	movwf	main@i& (0+255),b
  2277  000244                     l4000:
  2278                           
  2279                           ; BSR set to: 0
  2280  000244  0EF5               	movlw	low (STR_59+2)
  2281  000246  6F7F               	movwf	printf@fmt& (0+255),b
  2282  000248  0EFF               	movlw	high (STR_59+2)
  2283  00024A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2284  00024C  ECAE  F010         	call	_printf	;wreg free
  2285  000250  0100               	movlb	0	; () banked
  2286  000252  4B98               	infsnz	main@i& (0+255),f,b
  2287  000254  2B99               	incf	(main@i+1)& (0+255),f,b
  2288  000256                     
  2289                           ; BSR set to: 0
  2290  000256  5199               	movf	(main@i+1)& (0+255),w,b
  2291  000258  E109               	bnz	u3190
  2292  00025A  0E28               	movlw	40
  2293  00025C  5D98               	subwf	main@i& (0+255),w,b
  2294  00025E  A0D8               	btfss	status,0,c
  2295  000260  EF34  F001         	goto	u3191
  2296  000264  EF36  F001         	goto	u3190
  2297  000268                     u3191:
  2298  000268  EF22  F001         	goto	l4000
  2299  00026C                     u3190:
  2300  00026C                     
  2301                           ; BSR set to: 0
  2302  00026C  00FF               	reset		;# 
  2303                           
  2304                           ;main.c: 114: 
  2305  00026E  EF66  F000         	goto	l3986
  2306  000272                     l4006:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 120:                     SPI2_Open(SPI2_DEFAULT);
  2310  000272  0E00               	movlw	0
  2311  000274  6F99               	movwf	(main@i+1)& (0+255),b
  2312  000276  0E00               	movlw	0
  2313  000278  6F98               	movwf	main@i& (0+255),b
  2314  00027A                     l4012:
  2315                           
  2316                           ; BSR set to: 0
  2317  00027A  0EF5               	movlw	low (STR_59+2)
  2318  00027C  6F7F               	movwf	printf@fmt& (0+255),b
  2319  00027E  0EFF               	movlw	high (STR_59+2)
  2320  000280  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2321  000282  ECAE  F010         	call	_printf	;wreg free
  2322  000286  0100               	movlb	0	; () banked
  2323  000288  4B98               	infsnz	main@i& (0+255),f,b
  2324  00028A  2B99               	incf	(main@i+1)& (0+255),f,b
  2325  00028C                     
  2326                           ; BSR set to: 0
  2327  00028C  5199               	movf	(main@i+1)& (0+255),w,b
  2328  00028E  E109               	bnz	u3200
  2329  000290  0E28               	movlw	40
  2330  000292  5D98               	subwf	main@i& (0+255),w,b
  2331  000294  A0D8               	btfss	status,0,c
  2332  000296  EF4F  F001         	goto	u3201
  2333  00029A  EF51  F001         	goto	u3200
  2334  00029E                     u3201:
  2335  00029E  EF3D  F001         	goto	l4012
  2336  0002A2                     u3200:
  2337  0002A2  EF66  F000         	goto	l3986
  2338  0002A6                     l4018:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 127:                 case 'A':
  2342  0002A6  0E99               	movlw	low STR_27
  2343  0002A8  6F7F               	movwf	printf@fmt& (0+255),b
  2344  0002AA  0EFB               	movlw	high STR_27
  2345  0002AC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2346  0002AE  ECAE  F010         	call	_printf	;wreg free
  2347                           
  2348                           ;main.c: 128:                 case 'a':
  2349  0002B2  0EEC               	movlw	low STR_28
  2350  0002B4  0100               	movlb	0	; () banked
  2351  0002B6  6F7F               	movwf	printf@fmt& (0+255),b
  2352  0002B8  0EFB               	movlw	high STR_28
  2353  0002BA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2354  0002BC  ECAE  F010         	call	_printf	;wreg free
  2355                           
  2356                           ;main.c: 129:                     if (cmd == 'a') {
  2357  0002C0  0EA7               	movlw	low STR_29
  2358  0002C2  0100               	movlb	0	; () banked
  2359  0002C4  6F7F               	movwf	printf@fmt& (0+255),b
  2360  0002C6  0EFE               	movlw	high STR_29
  2361  0002C8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2362  0002CA  ECAE  F010         	call	_printf	;wreg free
  2363                           
  2364                           ;main.c: 130:                         sdCardAddress -= 512;
  2365  0002CE  0EDD               	movlw	low STR_30
  2366  0002D0  0100               	movlb	0	; () banked
  2367  0002D2  6F7F               	movwf	printf@fmt& (0+255),b
  2368  0002D4  0EFC               	movlw	high STR_30
  2369  0002D6  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2370  0002D8  ECAE  F010         	call	_printf	;wreg free
  2371                           
  2372                           ;main.c: 131:                         if (sdCardAddress >= 0x04000000) {
  2373  0002DC  0E37               	movlw	low STR_31
  2374  0002DE  0100               	movlb	0	; () banked
  2375  0002E0  6F7F               	movwf	printf@fmt& (0+255),b
  2376  0002E2  0EFE               	movlw	high STR_31
  2377  0002E4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2378  0002E6  ECAE  F010         	call	_printf	;wreg free
  2379  0002EA                     l4020:
  2380  0002EA  EC08  F011         	call	_EUSART1_is_rx_ready	;wreg free
  2381  0002EE  0900               	iorlw	0
  2382  0002F0  B4D8               	btfsc	status,2,c
  2383  0002F2  EF7D  F001         	goto	u3211
  2384  0002F6  EF7F  F001         	goto	u3210
  2385  0002FA                     u3211:
  2386  0002FA  EF75  F001         	goto	l4020
  2387  0002FE                     u3210:
  2388  0002FE                     
  2389                           ;main.c: 133:                             sdCardAddress = 0x04000000 - 512;
  2390  0002FE  EC99  F010         	call	_EUSART1_Read	;wreg free
  2391  000302                     
  2392                           ;main.c: 135:                             printf("Decreased address\r\n");
  2393  000302  0E1A               	movlw	low STR_32
  2394  000304  0100               	movlb	0	; () banked
  2395  000306  6F7F               	movwf	printf@fmt& (0+255),b
  2396  000308  0EFE               	movlw	high STR_32
  2397  00030A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2398  00030C  C096  F081         	movff	main@letter,?_printf+2
  2399  000310  6B82               	clrf	(?_printf+3)& (0+255),b
  2400  000312  5196               	movf	main@letter& (0+255),w,b
  2401  000314  ECF0  F010         	call	_SPI2_ExchangeByte
  2402  000318  0100               	movlb	0	; () banked
  2403  00031A  6F93               	movwf	??_main& (0+255),b
  2404  00031C  5193               	movf	??_main& (0+255),w,b
  2405  00031E  6F83               	movwf	(?_printf+4)& (0+255),b
  2406  000320  6B84               	clrf	(?_printf+5)& (0+255),b
  2407  000322  ECAE  F010         	call	_printf	;wreg free
  2408  000326                     
  2409                           ;main.c: 136:                         }
  2410  000326  0100               	movlb	0	; () banked
  2411  000328  2B96               	incf	main@letter& (0+255),f,b
  2412                           
  2413                           ;main.c: 137:                     } else {
  2414  00032A  EF66  F000         	goto	l3986
  2415  00032E                     l4028:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;main.c: 144:                         }
  2419  00032E  EC40  F011         	call	_SPI2_Close	;wreg free
  2420  000332                     
  2421                           ;main.c: 145:                     }
  2422  000332  0E00               	movlw	0
  2423  000334  EC4B  F00D         	call	_SPI2_Open
  2424  000338                     
  2425                           ;main.c: 146: 
  2426  000338  0E01               	movlw	1
  2427  00033A  EC12  F00B         	call	_SDCARD_Initialize
  2428                           
  2429                           ;main.c: 147: 
  2430  00033E  EF66  F000         	goto	l3986
  2431  000342                     l4034:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;main.c: 154: 
  2435  000342  0E61               	movlw	97
  2436  000344  1997               	xorwf	main@cmd& (0+255),w,b
  2437  000346  A4D8               	btfss	status,2,c
  2438  000348  EFA8  F001         	goto	u3221
  2439  00034C  EFAA  F001         	goto	u3220
  2440  000350                     u3221:
  2441  000350  EFD4  F001         	goto	l4044
  2442  000354                     u3220:
  2443  000354                     
  2444                           ; BSR set to: 0
  2445                           ;main.c: 155: 
  2446  000354  0E00               	movlw	0
  2447  000356  5F9A               	subwf	main@sdCardAddress& (0+255),f,b
  2448  000358  0E02               	movlw	2
  2449  00035A  5B9B               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  2450  00035C  0E00               	movlw	0
  2451  00035E  5B9C               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  2452  000360  0E00               	movlw	0
  2453  000362  5B9D               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  2454                           
  2455                           ;main.c: 156: 
  2456  000364  0E04               	movlw	4
  2457  000366  5D9D               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  2458  000368  A0D8               	btfss	status,0,c
  2459  00036A  EFB9  F001         	goto	u3231
  2460  00036E  EFBB  F001         	goto	u3230
  2461  000372                     u3231:
  2462  000372  EFCC  F001         	goto	l4042
  2463  000376                     u3230:
  2464  000376                     
  2465                           ; BSR set to: 0
  2466                           ;main.c: 157: 
  2467  000376  0EFC               	movlw	low STR_33
  2468  000378  6F7F               	movwf	printf@fmt& (0+255),b
  2469  00037A  0EFD               	movlw	high STR_33
  2470  00037C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2471  00037E  ECAE  F010         	call	_printf	;wreg free
  2472  000382                     
  2473                           ;main.c: 158:                 case 'w':
  2474  000382  0E00               	movlw	0
  2475  000384  0100               	movlb	0	; () banked
  2476  000386  6F9A               	movwf	main@sdCardAddress& (0+255),b
  2477  000388  0EFE               	movlw	254
  2478  00038A  6F9B               	movwf	(main@sdCardAddress+1)& (0+255),b
  2479  00038C  0EFF               	movlw	255
  2480  00038E  6F9C               	movwf	(main@sdCardAddress+2)& (0+255),b
  2481  000390  0E03               	movlw	3
  2482  000392  6F9D               	movwf	(main@sdCardAddress+3)& (0+255),b
  2483                           
  2484                           ;main.c: 159:                     for (i = 0; i < 512; i++) sdCardBuffer[i] = 255 - i;
  2485  000394  EFFC  F001         	goto	l209
  2486  000398                     l4042:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;main.c: 160:                     do { LATCbits.LATC4 = 1; } while(0);
  2490  000398  0E38               	movlw	low STR_34
  2491  00039A  6F7F               	movwf	printf@fmt& (0+255),b
  2492  00039C  0EFF               	movlw	high STR_34
  2493  00039E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2494  0003A0  ECAE  F010         	call	_printf	;wreg free
  2495  0003A4  EFFC  F001         	goto	l209
  2496  0003A8                     l4044:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 163:                     do { LATCbits.LATC4 = 0; } while(0);
  2500  0003A8  0E00               	movlw	0
  2501  0003AA  279A               	addwf	main@sdCardAddress& (0+255),f,b
  2502  0003AC  0E02               	movlw	2
  2503  0003AE  239B               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  2504  0003B0  0E00               	movlw	0
  2505  0003B2  239C               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  2506  0003B4  0E00               	movlw	0
  2507  0003B6  239D               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  2508                           
  2509                           ;main.c: 164: 
  2510  0003B8  0E04               	movlw	4
  2511  0003BA  5D9D               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  2512  0003BC  A0D8               	btfss	status,0,c
  2513  0003BE  EFE3  F001         	goto	u3241
  2514  0003C2  EFE5  F001         	goto	u3240
  2515  0003C6                     u3241:
  2516  0003C6  EFF6  F001         	goto	l4050
  2517  0003CA                     u3240:
  2518  0003CA                     
  2519                           ; BSR set to: 0
  2520                           ;main.c: 165:                     printf("Write block of decremented 8-bit values:\r\n")
      +                          ;
  2521  0003CA  0E70               	movlw	low STR_35
  2522  0003CC  6F7F               	movwf	printf@fmt& (0+255),b
  2523  0003CE  0EFE               	movlw	high STR_35
  2524  0003D0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2525  0003D2  ECAE  F010         	call	_printf	;wreg free
  2526  0003D6                     
  2527                           ;main.c: 166:                     printf("    Address:    ");
  2528  0003D6  0E00               	movlw	0
  2529  0003D8  0100               	movlb	0	; () banked
  2530  0003DA  6F9A               	movwf	main@sdCardAddress& (0+255),b
  2531  0003DC  0E00               	movlw	0
  2532  0003DE  6F9B               	movwf	(main@sdCardAddress+1)& (0+255),b
  2533  0003E0  0E00               	movlw	0
  2534  0003E2  6F9C               	movwf	(main@sdCardAddress+2)& (0+255),b
  2535  0003E4  0E00               	movlw	0
  2536  0003E6  6F9D               	movwf	(main@sdCardAddress+3)& (0+255),b
  2537                           
  2538                           ;main.c: 167:                     printf("%04x", sdCardAddress >> 16);
  2539  0003E8  EFFC  F001         	goto	l209
  2540  0003EC                     l4050:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;main.c: 168:                     printf(":");
  2544  0003EC  0E4C               	movlw	low STR_36
  2545  0003EE  6F7F               	movwf	printf@fmt& (0+255),b
  2546  0003F0  0EFF               	movlw	high STR_36
  2547  0003F2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2548  0003F4  ECAE  F010         	call	_printf	;wreg free
  2549  0003F8                     l209:
  2550                           
  2551                           ;main.c: 173: 
  2552  0003F8  0E60               	movlw	low STR_6
  2553  0003FA  0100               	movlb	0	; () banked
  2554  0003FC  6F7F               	movwf	printf@fmt& (0+255),b
  2555  0003FE  0EFF               	movlw	high STR_6
  2556  000400  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2557  000402  ECAE  F010         	call	_printf	;wreg free
  2558                           
  2559                           ;main.c: 174: 
  2560  000406  0EEE               	movlw	low STR_7
  2561  000408  0100               	movlb	0	; () banked
  2562  00040A  6F7F               	movwf	printf@fmt& (0+255),b
  2563  00040C  0EFF               	movlw	high STR_7
  2564  00040E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2565  000410  C09C  F081         	movff	main@sdCardAddress+2,?_printf+2
  2566  000414  C09D  F082         	movff	main@sdCardAddress+3,?_printf+3
  2567  000418  6B83               	clrf	(?_printf+4)& (0+255),b
  2568  00041A  6B84               	clrf	(?_printf+5)& (0+255),b
  2569  00041C  ECAE  F010         	call	_printf	;wreg free
  2570                           
  2571                           ;main.c: 175: 
  2572  000420  0EFC               	movlw	low STR_8
  2573  000422  0100               	movlb	0	; () banked
  2574  000424  6F7F               	movwf	printf@fmt& (0+255),b
  2575  000426  0EFF               	movlw	high STR_8
  2576  000428  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2577  00042A  ECAE  F010         	call	_printf	;wreg free
  2578                           
  2579                           ;main.c: 176: 
  2580  00042E  0EEE               	movlw	low STR_7
  2581  000430  0100               	movlb	0	; () banked
  2582  000432  6F7F               	movwf	printf@fmt& (0+255),b
  2583  000434  0EFF               	movlw	high STR_7
  2584  000436  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2585  000438  0EFF               	movlw	255
  2586  00043A  159A               	andwf	main@sdCardAddress& (0+255),w,b
  2587  00043C  6F81               	movwf	(?_printf+2)& (0+255),b
  2588  00043E  0EFF               	movlw	255
  2589  000440  159B               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2590  000442  6F82               	movwf	(?_printf+3)& (0+255),b
  2591  000444  0E00               	movlw	0
  2592  000446  159C               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2593  000448  6F83               	movwf	(?_printf+4)& (0+255),b
  2594  00044A  0E00               	movlw	0
  2595  00044C  159D               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2596  00044E  6F84               	movwf	(?_printf+5)& (0+255),b
  2597  000450  ECAE  F010         	call	_printf	;wreg free
  2598                           
  2599                           ;main.c: 177:                 case 'r':
  2600  000454  0EB3               	movlw	low (STR_49+12)
  2601  000456  0100               	movlb	0	; () banked
  2602  000458  6F7F               	movwf	printf@fmt& (0+255),b
  2603  00045A  0EFF               	movlw	high (STR_49+12)
  2604  00045C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2605  00045E  ECAE  F010         	call	_printf	;wreg free
  2606                           
  2607                           ;main.c: 178:                     do { LATCbits.LATC5 = 1; } while(0);
  2608  000462  EF66  F000         	goto	l3986
  2609  000466                     l4052:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 184:                     printf(":");
  2613  000466  0E00               	movlw	0
  2614  000468  6F99               	movwf	(main@i+1)& (0+255),b
  2615  00046A  0E00               	movlw	0
  2616  00046C  6F98               	movwf	main@i& (0+255),b
  2617  00046E                     l4058:
  2618                           
  2619                           ; BSR set to: 0
  2620  00046E  0ECB               	movlw	low _sdCardBuffer
  2621  000470  2598               	addwf	main@i& (0+255),w,b
  2622  000472  6ED9               	movwf	fsr2l,c
  2623  000474  0E00               	movlw	high _sdCardBuffer
  2624  000476  2199               	addwfc	(main@i+1)& (0+255),w,b
  2625  000478  6EDA               	movwf	fsr2h,c
  2626  00047A  5198               	movf	main@i& (0+255),w,b
  2627  00047C  0AFF               	xorlw	255
  2628  00047E  6EDF               	movwf	indf2,c
  2629  000480                     
  2630                           ; BSR set to: 0
  2631  000480  4B98               	infsnz	main@i& (0+255),f,b
  2632  000482  2B99               	incf	(main@i+1)& (0+255),f,b
  2633  000484                     
  2634                           ; BSR set to: 0
  2635  000484  0E02               	movlw	2
  2636  000486  5D99               	subwf	(main@i+1)& (0+255),w,b
  2637  000488  A0D8               	btfss	status,0,c
  2638  00048A  EF49  F002         	goto	u3251
  2639  00048E  EF4B  F002         	goto	u3250
  2640  000492                     u3251:
  2641  000492  EF37  F002         	goto	l4058
  2642  000496                     u3250:
  2643  000496                     
  2644                           ; BSR set to: 0
  2645  000496  888B               	bsf	139,4,c	;volatile
  2646  000498                     
  2647                           ; BSR set to: 0
  2648                           ;main.c: 186:                     printf("\r\n");
  2649  000498  C09A  F008         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  2650  00049C  C09B  F009         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  2651  0004A0  C09C  F00A         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  2652  0004A4  C09D  F00B         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  2653  0004A8  0ECB               	movlw	low _sdCardBuffer
  2654  0004AA  6E0C               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  2655  0004AC  0E00               	movlw	high _sdCardBuffer
  2656  0004AE  6E0D               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  2657  0004B0  EC39  F00E         	call	_SDCARD_WriteBlock	;wreg free
  2658  0004B4                     l4066:
  2659  0004B4  EC8A  F00F         	call	_SDCARD_PollWriteComplete	;wreg free
  2660  0004B8  0100               	movlb	0	; () banked
  2661  0004BA  6F95               	movwf	main@status& (0+255),b
  2662  0004BC  2995               	incf	main@status& (0+255),w,b
  2663  0004BE  B4D8               	btfsc	status,2,c
  2664  0004C0  EF64  F002         	goto	u3261
  2665  0004C4  EF66  F002         	goto	u3260
  2666  0004C8                     u3261:
  2667  0004C8  EF5A  F002         	goto	l4066
  2668  0004CC                     u3260:
  2669  0004CC                     
  2670                           ; BSR set to: 0
  2671  0004CC  988B               	bcf	139,4,c	;volatile
  2672  0004CE                     
  2673                           ; BSR set to: 0
  2674                           ;main.c: 190: 
  2675  0004CE  0E09               	movlw	low STR_42
  2676  0004D0  6F7F               	movwf	printf@fmt& (0+255),b
  2677  0004D2  0EFD               	movlw	high STR_42
  2678  0004D4  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2679  0004D6  ECAE  F010         	call	_printf	;wreg free
  2680                           
  2681                           ;main.c: 191: 
  2682  0004DA  0E96               	movlw	low STR_43
  2683  0004DC  0100               	movlb	0	; () banked
  2684  0004DE  6F7F               	movwf	printf@fmt& (0+255),b
  2685  0004E0  0EFF               	movlw	high STR_43
  2686  0004E2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2687  0004E4  ECAE  F010         	call	_printf	;wreg free
  2688                           
  2689                           ;main.c: 192: 
  2690  0004E8  0EEE               	movlw	low STR_7
  2691  0004EA  0100               	movlb	0	; () banked
  2692  0004EC  6F7F               	movwf	printf@fmt& (0+255),b
  2693  0004EE  0EFF               	movlw	high STR_7
  2694  0004F0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2695  0004F2  C09C  F081         	movff	main@sdCardAddress+2,?_printf+2
  2696  0004F6  C09D  F082         	movff	main@sdCardAddress+3,?_printf+3
  2697  0004FA  6B83               	clrf	(?_printf+4)& (0+255),b
  2698  0004FC  6B84               	clrf	(?_printf+5)& (0+255),b
  2699  0004FE  ECAE  F010         	call	_printf	;wreg free
  2700                           
  2701                           ;main.c: 193:                 default:
  2702  000502  0EFC               	movlw	low STR_8
  2703  000504  0100               	movlb	0	; () banked
  2704  000506  6F7F               	movwf	printf@fmt& (0+255),b
  2705  000508  0EFF               	movlw	high STR_8
  2706  00050A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2707  00050C  ECAE  F010         	call	_printf	;wreg free
  2708                           
  2709                           ;main.c: 194:                     printf("Unknown key %c\r\n", cmd);
  2710  000510  0EEE               	movlw	low STR_7
  2711  000512  0100               	movlb	0	; () banked
  2712  000514  6F7F               	movwf	printf@fmt& (0+255),b
  2713  000516  0EFF               	movlw	high STR_7
  2714  000518  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2715  00051A  0EFF               	movlw	255
  2716  00051C  159A               	andwf	main@sdCardAddress& (0+255),w,b
  2717  00051E  6F81               	movwf	(?_printf+2)& (0+255),b
  2718  000520  0EFF               	movlw	255
  2719  000522  159B               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2720  000524  6F82               	movwf	(?_printf+3)& (0+255),b
  2721  000526  0E00               	movlw	0
  2722  000528  159C               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2723  00052A  6F83               	movwf	(?_printf+4)& (0+255),b
  2724  00052C  0E00               	movlw	0
  2725  00052E  159D               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2726  000530  6F84               	movwf	(?_printf+5)& (0+255),b
  2727  000532  ECAE  F010         	call	_printf	;wreg free
  2728                           
  2729                           ;main.c: 195:                     break;
  2730  000536  0EB3               	movlw	low (STR_49+12)
  2731  000538  0100               	movlb	0	; () banked
  2732  00053A  6F7F               	movwf	printf@fmt& (0+255),b
  2733  00053C  0EFF               	movlw	high (STR_49+12)
  2734  00053E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2735  000540  ECAE  F010         	call	_printf	;wreg free
  2736                           
  2737                           ;main.c: 196:             }
  2738  000544  0E0C               	movlw	low STR_48
  2739  000546  0100               	movlb	0	; () banked
  2740  000548  6F7F               	movwf	printf@fmt& (0+255),b
  2741  00054A  0EFF               	movlw	high STR_48
  2742  00054C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2743  00054E  C095  F081         	movff	main@status,?_printf+2
  2744  000552  6B82               	clrf	(?_printf+3)& (0+255),b
  2745  000554  ECAE  F010         	call	_printf	;wreg free
  2746                           
  2747                           ;main.c: 197: 
  2748  000558  EF66  F000         	goto	l3986
  2749  00055C                     l223:
  2750                           
  2751                           ; BSR set to: 0
  2752  00055C  8A8B               	bsf	139,5,c	;volatile
  2753  00055E                     
  2754                           ; BSR set to: 0
  2755  00055E  C09A  F008         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  2756  000562  C09B  F009         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  2757  000566  C09C  F00A         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  2758  00056A  C09D  F00B         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  2759  00056E  0ECB               	movlw	low _sdCardBuffer
  2760  000570  6E0C               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  2761  000572  0E00               	movlw	high _sdCardBuffer
  2762  000574  6E0D               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  2763  000576  ECA1  F00D         	call	_SDCARD_ReadBlock	;wreg free
  2764  00057A  9A8B               	bcf	139,5,c	;volatile
  2765  00057C  0EA7               	movlw	low STR_49
  2766  00057E  0100               	movlb	0	; () banked
  2767  000580  6F7F               	movwf	printf@fmt& (0+255),b
  2768  000582  0EFF               	movlw	high STR_49
  2769  000584  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2770  000586  ECAE  F010         	call	_printf	;wreg free
  2771  00058A  0E96               	movlw	low STR_43
  2772  00058C  0100               	movlb	0	; () banked
  2773  00058E  6F7F               	movwf	printf@fmt& (0+255),b
  2774  000590  0EFF               	movlw	high STR_43
  2775  000592  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2776  000594  ECAE  F010         	call	_printf	;wreg free
  2777  000598  0EEE               	movlw	low STR_7
  2778  00059A  0100               	movlb	0	; () banked
  2779  00059C  6F7F               	movwf	printf@fmt& (0+255),b
  2780  00059E  0EFF               	movlw	high STR_7
  2781  0005A0  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2782  0005A2  C09C  F081         	movff	main@sdCardAddress+2,?_printf+2
  2783  0005A6  C09D  F082         	movff	main@sdCardAddress+3,?_printf+3
  2784  0005AA  6B83               	clrf	(?_printf+4)& (0+255),b
  2785  0005AC  6B84               	clrf	(?_printf+5)& (0+255),b
  2786  0005AE  ECAE  F010         	call	_printf	;wreg free
  2787  0005B2  0EFC               	movlw	low STR_8
  2788  0005B4  0100               	movlb	0	; () banked
  2789  0005B6  6F7F               	movwf	printf@fmt& (0+255),b
  2790  0005B8  0EFF               	movlw	high STR_8
  2791  0005BA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2792  0005BC  ECAE  F010         	call	_printf	;wreg free
  2793  0005C0  0EEE               	movlw	low STR_7
  2794  0005C2  0100               	movlb	0	; () banked
  2795  0005C4  6F7F               	movwf	printf@fmt& (0+255),b
  2796  0005C6  0EFF               	movlw	high STR_7
  2797  0005C8  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2798  0005CA  0EFF               	movlw	255
  2799  0005CC  159A               	andwf	main@sdCardAddress& (0+255),w,b
  2800  0005CE  6F81               	movwf	(?_printf+2)& (0+255),b
  2801  0005D0  0EFF               	movlw	255
  2802  0005D2  159B               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2803  0005D4  6F82               	movwf	(?_printf+3)& (0+255),b
  2804  0005D6  0E00               	movlw	0
  2805  0005D8  159C               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2806  0005DA  6F83               	movwf	(?_printf+4)& (0+255),b
  2807  0005DC  0E00               	movlw	0
  2808  0005DE  159D               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2809  0005E0  6F84               	movwf	(?_printf+5)& (0+255),b
  2810  0005E2  ECAE  F010         	call	_printf	;wreg free
  2811  0005E6  0EB3               	movlw	low (STR_49+12)
  2812  0005E8  0100               	movlb	0	; () banked
  2813  0005EA  6F7F               	movwf	printf@fmt& (0+255),b
  2814  0005EC  0EFF               	movlw	high (STR_49+12)
  2815  0005EE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2816  0005F0  ECAE  F010         	call	_printf	;wreg free
  2817  0005F4  0ECB               	movlw	low _sdCardBuffer
  2818  0005F6  0100               	movlb	0	; () banked
  2819  0005F8  6F89               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  2820  0005FA  0E00               	movlw	high _sdCardBuffer
  2821  0005FC  6F8A               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  2822  0005FE  EC8B  F008         	call	_hexDumpBuffer	;wreg free
  2823  000602  EF66  F000         	goto	l3986
  2824  000606                     l4088:
  2825                           
  2826                           ; BSR set to: 0
  2827  000606  0E85               	movlw	low STR_55
  2828  000608  6F7F               	movwf	printf@fmt& (0+255),b
  2829  00060A  0EFF               	movlw	high STR_55
  2830  00060C  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2831  00060E  C097  F081         	movff	main@cmd,?_printf+2
  2832  000612  6B82               	clrf	(?_printf+3)& (0+255),b
  2833  000614  ECAE  F010         	call	_printf	;wreg free
  2834  000618  EF66  F000         	goto	l3986
  2835  00061C                     l4092:
  2836                           
  2837                           ; BSR set to: 0
  2838  00061C  5197               	movf	main@cmd& (0+255),w,b
  2839  00061E  6F93               	movwf	??_main& (0+255),b
  2840  000620  6B94               	clrf	(??_main+1)& (0+255),b
  2841                           
  2842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 1, Range of values is 0 to 0
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte            4     3 (average)
  2848                           ;	Chosen strategy is simple_byte
  2849  000622  5194               	movf	(??_main+1)& (0+255),w,b
  2850  000624  0A00               	xorlw	0	; case 0
  2851  000626  B4D8               	btfsc	status,2,c
  2852  000628  EF18  F003         	goto	l4190
  2853  00062C  EF03  F003         	goto	l4088
  2854  000630                     l4190:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 10, Range of values is 63 to 122
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte           31    16 (average)
  2862                           ;	Chosen strategy is simple_byte
  2863  000630  5193               	movf	??_main& (0+255),w,b
  2864  000632  0A3F               	xorlw	63	; case 63
  2865  000634  B4D8               	btfsc	status,2,c
  2866  000636  EF76  F000         	goto	l3990
  2867  00063A  0A7E               	xorlw	126	; case 65
  2868  00063C  B4D8               	btfsc	status,2,c
  2869  00063E  EFA1  F001         	goto	l4034
  2870  000642  0A1B               	xorlw	27	; case 90
  2871  000644  B4D8               	btfsc	status,2,c
  2872  000646  EF1E  F001         	goto	l3994
  2873  00064A  0A3B               	xorlw	59	; case 97
  2874  00064C  B4D8               	btfsc	status,2,c
  2875  00064E  EFA1  F001         	goto	l4034
  2876  000652  0A08               	xorlw	8	; case 105
  2877  000654  B4D8               	btfsc	status,2,c
  2878  000656  EF97  F001         	goto	l4028
  2879  00065A  0A06               	xorlw	6	; case 111
  2880  00065C  B4D8               	btfsc	status,2,c
  2881  00065E  EF16  F001         	goto	l3992
  2882  000662  0A1D               	xorlw	29	; case 114
  2883  000664  B4D8               	btfsc	status,2,c
  2884  000666  EFAE  F002         	goto	l223
  2885  00066A  0A06               	xorlw	6	; case 116
  2886  00066C  B4D8               	btfsc	status,2,c
  2887  00066E  EF53  F001         	goto	l4018
  2888  000672  0A03               	xorlw	3	; case 119
  2889  000674  B4D8               	btfsc	status,2,c
  2890  000676  EF33  F002         	goto	l4052
  2891  00067A  0A0D               	xorlw	13	; case 122
  2892  00067C  B4D8               	btfsc	status,2,c
  2893  00067E  EF39  F001         	goto	l4006
  2894  000682  EF03  F003         	goto	l4088
  2895  000686  EF1F  F000         	goto	start
  2896  00068A                     __end_of_main:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function _hexDumpBuffer *****************
  2900 ;; Defined at:
  2901 ;;		line 179 in file "sdCard.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  sdCardBuffer    2   41[BANK0 ] PTR unsigned char 
  2904 ;;		 -> sdCardBuffer(512), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  j               2   45[BANK0 ] int 
  2907 ;;  j               2   47[BANK0 ] int 
  2908 ;;  i               2   49[BANK0 ] unsigned short 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;Total ram usage:       10 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:   13
  2925 ;; This function calls:
  2926 ;;		_printf
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text1
  2933  001116                     __ptext1:
  2934                           	callstack 0
  2935  001116                     _hexDumpBuffer:
  2936                           	callstack 17
  2937  001116                     
  2938                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  2939  001116  0EF3               	movlw	low STR_59
  2940  001118  0100               	movlb	0	; () banked
  2941  00111A  6F7F               	movwf	printf@fmt& (0+255),b
  2942  00111C  0EFF               	movlw	high STR_59
  2943  00111E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2944  001120  ECAE  F010         	call	_printf	;wreg free
  2945  001124                     
  2946                           ;sdCard.c: 185:                     printf(".");
  2947  001124  0E00               	movlw	0
  2948  001126  0100               	movlb	0	; () banked
  2949  001128  6F92               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  2950  00112A  0E00               	movlw	0
  2951  00112C  6F91               	movwf	hexDumpBuffer@i& (0+255),b
  2952  00112E                     l3912:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;sdCard.c: 186:                 } else {
  2956  00112E  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  2957  001130  1192               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2958  001132  B4D8               	btfsc	status,2,c
  2959  001134  EF9E  F008         	goto	u3081
  2960  001138  EFA0  F008         	goto	u3080
  2961  00113C                     u3081:
  2962  00113C  EFB5  F008         	goto	l3918
  2963  001140                     u3080:
  2964  001140                     
  2965                           ; BSR set to: 0
  2966  001140  0E07               	movlw	7
  2967  001142  1591               	andwf	hexDumpBuffer@i& (0+255),w,b
  2968  001144  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  2969  001146  0E00               	movlw	0
  2970  001148  1592               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2971  00114A  6F8C               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  2972  00114C  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  2973  00114E  118C               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  2974  001150  A4D8               	btfss	status,2,c
  2975  001152  EFAD  F008         	goto	u3091
  2976  001156  EFAF  F008         	goto	u3090
  2977  00115A                     u3091:
  2978  00115A  EFB5  F008         	goto	l3918
  2979  00115E                     u3090:
  2980  00115E                     
  2981                           ; BSR set to: 0
  2982  00115E  0EA5               	movlw	low (STR_43+15)
  2983  001160  6F7F               	movwf	printf@fmt& (0+255),b
  2984  001162  0EFF               	movlw	high (STR_43+15)
  2985  001164  6F80               	movwf	(printf@fmt+1)& (0+255),b
  2986  001166  ECAE  F010         	call	_printf	;wreg free
  2987  00116A                     l3918:
  2988                           
  2989                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  2990  00116A  0100               	movlb	0	; () banked
  2991  00116C  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  2992  00116E  1192               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2993  001170  B4D8               	btfsc	status,2,c
  2994  001172  EFBD  F008         	goto	u3101
  2995  001176  EFBF  F008         	goto	u3100
  2996  00117A                     u3101:
  2997  00117A  EF18  F009         	goto	l449
  2998  00117E                     u3100:
  2999  00117E                     
  3000                           ; BSR set to: 0
  3001  00117E  0E0F               	movlw	15
  3002  001180  1591               	andwf	hexDumpBuffer@i& (0+255),w,b
  3003  001182  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3004  001184  0E00               	movlw	0
  3005  001186  1592               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3006  001188  6F8C               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  3007  00118A  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3008  00118C  118C               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  3009  00118E  A4D8               	btfss	status,2,c
  3010  001190  EFCC  F008         	goto	u3111
  3011  001194  EFCE  F008         	goto	u3110
  3012  001198                     u3111:
  3013  001198  EF18  F009         	goto	l449
  3014  00119C                     u3110:
  3015  00119C                     
  3016                           ; BSR set to: 0
  3017                           ;sdCard.c: 188:                 }
  3018  00119C  0EA4               	movlw	low (STR_43+14)
  3019  00119E  6F7F               	movwf	printf@fmt& (0+255),b
  3020  0011A0  0EFF               	movlw	high (STR_43+14)
  3021  0011A2  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3022  0011A4  ECAE  F010         	call	_printf	;wreg free
  3023  0011A8                     
  3024                           ;sdCard.c: 189:             }
  3025  0011A8  0EF0               	movlw	240
  3026  0011AA  0100               	movlb	0	; () banked
  3027  0011AC  2591               	addwf	hexDumpBuffer@i& (0+255),w,b
  3028  0011AE  6F8D               	movwf	hexDumpBuffer@j& (0+255),b
  3029  0011B0  0EFF               	movlw	255
  3030  0011B2  2192               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  3031  0011B4  6F8E               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  3032  0011B6  EF07  F009         	goto	l3934
  3033  0011BA                     l3926:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;sdCard.c: 190:             printf("\r\n");
  3037  0011BA  518D               	movf	hexDumpBuffer@j& (0+255),w,b
  3038  0011BC  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3039  0011BE  6ED9               	movwf	fsr2l,c
  3040  0011C0  518E               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3041  0011C2  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3042  0011C4  6EDA               	movwf	fsr2h,c
  3043  0011C6  0E20               	movlw	32
  3044  0011C8  60DF               	cpfslt	indf2,c
  3045  0011CA  EFE9  F008         	goto	u3121
  3046  0011CE  EFEB  F008         	goto	u3120
  3047  0011D2                     u3121:
  3048  0011D2  EFF3  F008         	goto	l3930
  3049  0011D6                     u3120:
  3050  0011D6                     
  3051                           ; BSR set to: 0
  3052                           ;sdCard.c: 191:         }
  3053  0011D6  0EFA               	movlw	low STR_62
  3054  0011D8  6F7F               	movwf	printf@fmt& (0+255),b
  3055  0011DA  0EFF               	movlw	high STR_62
  3056  0011DC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3057  0011DE  ECAE  F010         	call	_printf	;wreg free
  3058                           
  3059                           ;sdCard.c: 192: 
  3060  0011E2  EF04  F009         	goto	l3932
  3061  0011E6                     l3930:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  3065  0011E6  0EF7               	movlw	low STR_63
  3066  0011E8  6F7F               	movwf	printf@fmt& (0+255),b
  3067  0011EA  0EFF               	movlw	high STR_63
  3068  0011EC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3069  0011EE  518D               	movf	hexDumpBuffer@j& (0+255),w,b
  3070  0011F0  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3071  0011F2  6ED9               	movwf	fsr2l,c
  3072  0011F4  518E               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3073  0011F6  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3074  0011F8  6EDA               	movwf	fsr2h,c
  3075  0011FA  50DF               	movf	indf2,w,c
  3076  0011FC  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3077  0011FE  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3078  001200  6F81               	movwf	(?_printf+2)& (0+255),b
  3079  001202  6B82               	clrf	(?_printf+3)& (0+255),b
  3080  001204  ECAE  F010         	call	_printf	;wreg free
  3081  001208                     l3932:
  3082                           
  3083                           ;sdCard.c: 195: 
  3084  001208  0100               	movlb	0	; () banked
  3085  00120A  4B8D               	infsnz	hexDumpBuffer@j& (0+255),f,b
  3086  00120C  2B8E               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  3087  00120E                     l3934:
  3088                           
  3089                           ; BSR set to: 0
  3090  00120E  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3091  001210  5D8D               	subwf	hexDumpBuffer@j& (0+255),w,b
  3092  001212  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3093  001214  598E               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  3094  001216  A0D8               	btfss	status,0,c
  3095  001218  EF10  F009         	goto	u3131
  3096  00121C  EF12  F009         	goto	u3130
  3097  001220                     u3131:
  3098  001220  EFDD  F008         	goto	l3926
  3099  001224                     u3130:
  3100  001224                     
  3101                           ; BSR set to: 0
  3102                           ;sdCard.c: 196:     printf("   ");
  3103  001224  0EB3               	movlw	low (STR_49+12)
  3104  001226  6F7F               	movwf	printf@fmt& (0+255),b
  3105  001228  0EFF               	movlw	high (STR_49+12)
  3106  00122A  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3107  00122C  ECAE  F010         	call	_printf	;wreg free
  3108  001230                     l449:
  3109                           
  3110                           ;sdCard.c: 199:             printf(".");
  3111  001230  0EE8               	movlw	low STR_65
  3112  001232  0100               	movlb	0	; () banked
  3113  001234  6F7F               	movwf	printf@fmt& (0+255),b
  3114  001236  0EFF               	movlw	high STR_65
  3115  001238  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3116  00123A  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3117  00123C  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3118  00123E  6ED9               	movwf	fsr2l,c
  3119  001240  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3120  001242  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3121  001244  6EDA               	movwf	fsr2h,c
  3122  001246  50DF               	movf	indf2,w,c
  3123  001248  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3124  00124A  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3125  00124C  6F81               	movwf	(?_printf+2)& (0+255),b
  3126  00124E  6B82               	clrf	(?_printf+3)& (0+255),b
  3127  001250  ECAE  F010         	call	_printf	;wreg free
  3128  001254                     
  3129                           ;sdCard.c: 200:         } else {
  3130  001254  0100               	movlb	0	; () banked
  3131  001256  4B91               	infsnz	hexDumpBuffer@i& (0+255),f,b
  3132  001258  2B92               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  3133  00125A                     
  3134                           ; BSR set to: 0
  3135  00125A  0E02               	movlw	2
  3136  00125C  5D92               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3137  00125E  A0D8               	btfss	status,0,c
  3138  001260  EF34  F009         	goto	u3141
  3139  001264  EF36  F009         	goto	u3140
  3140  001268                     u3141:
  3141  001268  EF97  F008         	goto	l3912
  3142  00126C                     u3140:
  3143  00126C                     
  3144                           ; BSR set to: 0
  3145                           ;sdCard.c: 202:         }
  3146  00126C  0EA3               	movlw	low (STR_43+13)
  3147  00126E  6F7F               	movwf	printf@fmt& (0+255),b
  3148  001270  0EFF               	movlw	high (STR_43+13)
  3149  001272  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3150  001274  ECAE  F010         	call	_printf	;wreg free
  3151  001278                     
  3152                           ;sdCard.c: 203:     }
  3153  001278  0EF0               	movlw	240
  3154  00127A  0100               	movlb	0	; () banked
  3155  00127C  2591               	addwf	hexDumpBuffer@i& (0+255),w,b
  3156  00127E  6F8F               	movwf	hexDumpBuffer@j_1158& (0+255),b
  3157  001280  0EFF               	movlw	255
  3158  001282  2192               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  3159  001284  6F90               	movwf	(hexDumpBuffer@j_1158+1)& (0+255),b
  3160  001286  EF6F  F009         	goto	l3954
  3161  00128A                     l3946:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;sdCard.c: 204:     printf("\r\n");
  3165  00128A  518F               	movf	hexDumpBuffer@j_1158& (0+255),w,b
  3166  00128C  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3167  00128E  6ED9               	movwf	fsr2l,c
  3168  001290  5190               	movf	(hexDumpBuffer@j_1158+1)& (0+255),w,b
  3169  001292  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3170  001294  6EDA               	movwf	fsr2h,c
  3171  001296  0E20               	movlw	32
  3172  001298  60DF               	cpfslt	indf2,c
  3173  00129A  EF51  F009         	goto	u3151
  3174  00129E  EF53  F009         	goto	u3150
  3175  0012A2                     u3151:
  3176  0012A2  EF5B  F009         	goto	l3950
  3177  0012A6                     u3150:
  3178  0012A6                     
  3179                           ; BSR set to: 0
  3180                           ;sdCard.c: 205: }
  3181  0012A6  0EFA               	movlw	low STR_62
  3182  0012A8  6F7F               	movwf	printf@fmt& (0+255),b
  3183  0012AA  0EFF               	movlw	high STR_62
  3184  0012AC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3185  0012AE  ECAE  F010         	call	_printf	;wreg free
  3186  0012B2  EF6C  F009         	goto	l3952
  3187  0012B6                     l3950:
  3188                           
  3189                           ; BSR set to: 0
  3190  0012B6  0EF7               	movlw	low STR_63
  3191  0012B8  6F7F               	movwf	printf@fmt& (0+255),b
  3192  0012BA  0EFF               	movlw	high STR_63
  3193  0012BC  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3194  0012BE  518F               	movf	hexDumpBuffer@j_1158& (0+255),w,b
  3195  0012C0  2589               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3196  0012C2  6ED9               	movwf	fsr2l,c
  3197  0012C4  5190               	movf	(hexDumpBuffer@j_1158+1)& (0+255),w,b
  3198  0012C6  218A               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3199  0012C8  6EDA               	movwf	fsr2h,c
  3200  0012CA  50DF               	movf	indf2,w,c
  3201  0012CC  6F8B               	movwf	??_hexDumpBuffer& (0+255),b
  3202  0012CE  518B               	movf	??_hexDumpBuffer& (0+255),w,b
  3203  0012D0  6F81               	movwf	(?_printf+2)& (0+255),b
  3204  0012D2  6B82               	clrf	(?_printf+3)& (0+255),b
  3205  0012D4  ECAE  F010         	call	_printf	;wreg free
  3206  0012D8                     l3952:
  3207  0012D8  0100               	movlb	0	; () banked
  3208  0012DA  4B8F               	infsnz	hexDumpBuffer@j_1158& (0+255),f,b
  3209  0012DC  2B90               	incf	(hexDumpBuffer@j_1158+1)& (0+255),f,b
  3210  0012DE                     l3954:
  3211                           
  3212                           ; BSR set to: 0
  3213  0012DE  5191               	movf	hexDumpBuffer@i& (0+255),w,b
  3214  0012E0  5D8F               	subwf	hexDumpBuffer@j_1158& (0+255),w,b
  3215  0012E2  5192               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3216  0012E4  5990               	subwfb	(hexDumpBuffer@j_1158+1)& (0+255),w,b
  3217  0012E6  A0D8               	btfss	status,0,c
  3218  0012E8  EF78  F009         	goto	u3161
  3219  0012EC  EF7A  F009         	goto	u3160
  3220  0012F0                     u3161:
  3221  0012F0  EF45  F009         	goto	l3946
  3222  0012F4                     u3160:
  3223  0012F4                     
  3224                           ; BSR set to: 0
  3225  0012F4  0EB3               	movlw	low (STR_49+12)
  3226  0012F6  6F7F               	movwf	printf@fmt& (0+255),b
  3227  0012F8  0EFF               	movlw	high (STR_49+12)
  3228  0012FA  6F80               	movwf	(printf@fmt+1)& (0+255),b
  3229  0012FC  ECAE  F010         	call	_printf	;wreg free
  3230  001300  0012               	return		;funcret
  3231  001302                     __end_of_hexDumpBuffer:
  3232                           	callstack 0
  3233                           
  3234 ;; *************** function _TMR0_WriteTimer *****************
  3235 ;; Defined at:
  3236 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  timerVal        2    6[COMRAM] unsigned short 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        2 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    4
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text2
  3265  002236                     __ptext2:
  3266                           	callstack 0
  3267  002236                     _TMR0_WriteTimer:
  3268                           	callstack 26
  3269  002236                     
  3270                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3271  002236  5008               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3272  002238  6ED7               	movwf	215,c	;volatile
  3273  00223A                     
  3274                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3275  00223A  C007  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3276  00223E  0012               	return		;funcret
  3277  002240                     __end_of_TMR0_WriteTimer:
  3278                           	callstack 0
  3279                           
  3280 ;; *************** function _SYSTEM_Initialize *****************
  3281 ;; Defined at:
  3282 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    6
  3303 ;; This function calls:
  3304 ;;		_EUSART1_Initialize
  3305 ;;		_INTERRUPT_Initialize
  3306 ;;		_OSCILLATOR_Initialize
  3307 ;;		_PIN_MANAGER_Initialize
  3308 ;;		_SPI2_Initialize
  3309 ;;		_TMR0_Initialize
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text3
  3316  0021C6                     __ptext3:
  3317                           	callstack 0
  3318  0021C6                     _SYSTEM_Initialize:
  3319                           	callstack 24
  3320  0021C6                     
  3321                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3322  0021C6  EC3E  F011         	call	_INTERRUPT_Initialize	;wreg free
  3323  0021CA                     
  3324                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  3325  0021CA  EC12  F011         	call	_SPI2_Initialize	;wreg free
  3326  0021CE                     
  3327                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3328  0021CE  EC82  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  3329  0021D2                     
  3330                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3331  0021D2  ECD5  F010         	call	_OSCILLATOR_Initialize	;wreg free
  3332  0021D6                     
  3333                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3334  0021D6  EC31  F010         	call	_TMR0_Initialize	;wreg free
  3335  0021DA                     
  3336                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3337  0021DA  EC2C  F00F         	call	_EUSART1_Initialize	;wreg free
  3338  0021DE  0012               	return		;funcret
  3339  0021E0                     __end_of_SYSTEM_Initialize:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _TMR0_Initialize *****************
  3343 ;; Defined at:
  3344 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    5
  3365 ;; This function calls:
  3366 ;;		_TMR0_SetInterruptHandler
  3367 ;; This function is called by:
  3368 ;;		_SYSTEM_Initialize
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text4
  3373  002062                     __ptext4:
  3374                           	callstack 0
  3375  002062                     _TMR0_Initialize:
  3376                           	callstack 24
  3377  002062                     
  3378                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3379  002062  9CD5               	bcf	213,6,c	;volatile
  3380  002064                     
  3381                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3382  002064  0E00               	movlw	0
  3383  002066  6ED7               	movwf	215,c	;volatile
  3384                           
  3385                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3386  002068  0E00               	movlw	0
  3387  00206A  6ED6               	movwf	214,c	;volatile
  3388  00206C                     
  3389                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3390  00206C  50D6               	movf	214,w,c	;volatile
  3391  00206E  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  3392  002072  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  3393  002074  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3394  002078  6A09               	clrf	??_TMR0_Initialize^0,c
  3395  00207A  1009               	iorwf	??_TMR0_Initialize^0,w,c
  3396  00207C  6E57               	movwf	_timer0ReloadVal^0,c	;volatile
  3397  00207E  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  3398  002080  6E58               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3399  002082                     
  3400                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3401  002082  94F2               	bcf	242,2,c	;volatile
  3402  002084                     
  3403                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3404  002084  8AF2               	bsf	242,5,c	;volatile
  3405  002086                     
  3406                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3407  002086  0E84               	movlw	low _TMR0_DefaultInterruptHandler
  3408  002088  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3409  00208A  0E22               	movlw	high _TMR0_DefaultInterruptHandler
  3410  00208C  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3411  00208E  EC20  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  3412  002092                     
  3413                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3414  002092  0E9F               	movlw	159
  3415  002094  6ED5               	movwf	213,c	;volatile
  3416  002096  0012               	return		;funcret
  3417  002098                     __end_of_TMR0_Initialize:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _TMR0_SetInterruptHandler *****************
  3421 ;; Defined at:
  3422 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  3425 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    4
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_TMR0_Initialize
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text5
  3453  002240                     __ptext5:
  3454                           	callstack 0
  3455  002240                     _TMR0_SetInterruptHandler:
  3456                           	callstack 26
  3457  002240                     
  3458                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3459  002240  C007  F0A8         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3460  002244  C008  F0A9         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3461  002248  0012               	return		;funcret
  3462  00224A                     __end_of_TMR0_SetInterruptHandler:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _SPI2_Initialize *****************
  3466 ;; Defined at:
  3467 ;;		line 62 in file "mcc_generated_files/spi2.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    4
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_SYSTEM_Initialize
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text6
  3496  002224                     __ptext6:
  3497                           	callstack 0
  3498  002224                     _SPI2_Initialize:
  3499                           	callstack 25
  3500  002224                     
  3501                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  3502  002224  0E40               	movlw	64
  3503  002226  6E6D               	movwf	109,c	;volatile
  3504                           
  3505                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  3506  002228  0E01               	movlw	1
  3507  00222A  6E6C               	movwf	108,c	;volatile
  3508                           
  3509                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  3510  00222C  0E01               	movlw	1
  3511  00222E  6E6E               	movwf	110,c	;volatile
  3512  002230                     
  3513                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  3514  002230  9293               	bcf	147,1,c	;volatile
  3515  002232                     
  3516                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  3517  002232  9A6C               	bcf	108,5,c	;volatile
  3518  002234  0012               	return		;funcret
  3519  002236                     __end_of_SPI2_Initialize:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _PIN_MANAGER_Initialize *****************
  3523 ;; Defined at:
  3524 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_SYSTEM_Initialize
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text7
  3553  002104                     __ptext7:
  3554                           	callstack 0
  3555  002104                     _PIN_MANAGER_Initialize:
  3556                           	callstack 25
  3557  002104                     
  3558                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3559  002104  0E00               	movlw	0
  3560  002106  6E89               	movwf	137,c	;volatile
  3561                           
  3562                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3563  002108  0E00               	movlw	0
  3564  00210A  6E8A               	movwf	138,c	;volatile
  3565                           
  3566                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3567  00210C  0E00               	movlw	0
  3568  00210E  6E8B               	movwf	139,c	;volatile
  3569                           
  3570                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  3571  002110  0EBF               	movlw	191
  3572  002112  6E92               	movwf	146,c	;volatile
  3573                           
  3574                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  3575  002114  0EE5               	movlw	229
  3576  002116  6E93               	movwf	147,c	;volatile
  3577                           
  3578                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  3579  002118  0E8F               	movlw	143
  3580  00211A  6E94               	movwf	148,c	;volatile
  3581                           
  3582                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0C;
  3583  00211C  0E0C               	movlw	12
  3584  00211E  010F               	movlb	15	; () banked
  3585  002120  6F3A               	movwf	58,b	;volatile
  3586                           
  3587                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  3588  002122  0E31               	movlw	49
  3589  002124  6F39               	movwf	57,b	;volatile
  3590                           
  3591                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3592  002126  0E2F               	movlw	47
  3593  002128  6F38               	movwf	56,b	;volatile
  3594                           
  3595                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3596  00212A  0E00               	movlw	0
  3597  00212C  6E61               	movwf	97,c	;volatile
  3598  00212E                     
  3599                           ; BSR set to: 15
  3600                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3601  00212E  8EF1               	bsf	241,7,c	;volatile
  3602  002130                     
  3603                           ; BSR set to: 15
  3604  002130  0012               	return		;funcret
  3605  002132                     __end_of_PIN_MANAGER_Initialize:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _OSCILLATOR_Initialize *****************
  3609 ;; Defined at:
  3610 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    4
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_SYSTEM_Initialize
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text8
  3639  0021AA                     __ptext8:
  3640                           	callstack 0
  3641  0021AA                     _OSCILLATOR_Initialize:
  3642                           	callstack 25
  3643  0021AA                     
  3644                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3645  0021AA  0E70               	movlw	112
  3646  0021AC  6ED3               	movwf	211,c	;volatile
  3647                           
  3648                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3649  0021AE  0E04               	movlw	4
  3650  0021B0  6ED2               	movwf	210,c	;volatile
  3651                           
  3652                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3653  0021B2  0E40               	movlw	64
  3654  0021B4  6E9B               	movwf	155,c	;volatile
  3655  0021B6                     l358:
  3656                           
  3657                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3658  0021B6  AED2               	btfss	4050,7,c	;volatile
  3659  0021B8  EFE0  F010         	goto	u2451
  3660  0021BC  EFE2  F010         	goto	u2450
  3661  0021C0                     u2451:
  3662  0021C0  EFDB  F010         	goto	l358
  3663  0021C4                     u2450:
  3664  0021C4  0012               	return		;funcret
  3665  0021C6                     __end_of_OSCILLATOR_Initialize:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _INTERRUPT_Initialize *****************
  3669 ;; Defined at:
  3670 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		None
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    4
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_SYSTEM_Initialize
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text9
  3699  00227C                     __ptext9:
  3700                           	callstack 0
  3701  00227C                     _INTERRUPT_Initialize:
  3702                           	callstack 25
  3703  00227C                     
  3704                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3705  00227C  9ED0               	bcf	208,7,c	;volatile
  3706  00227E  0012               	return		;funcret
  3707  002280                     __end_of_INTERRUPT_Initialize:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _EUSART1_Initialize *****************
  3711 ;; Defined at:
  3712 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;		None
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;Total ram usage:        0 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    5
  3733 ;; This function calls:
  3734 ;;		_EUSART1_SetErrorHandler
  3735 ;;		_EUSART1_SetFramingErrorHandler
  3736 ;;		_EUSART1_SetOverrunErrorHandler
  3737 ;; This function is called by:
  3738 ;;		_SYSTEM_Initialize
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text10
  3743  001E58                     __ptext10:
  3744                           	callstack 0
  3745  001E58                     _EUSART1_Initialize:
  3746                           	callstack 24
  3747  001E58                     
  3748                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3749  001E58  0E08               	movlw	8
  3750  001E5A  6EB8               	movwf	184,c	;volatile
  3751                           
  3752                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3753  001E5C  0E90               	movlw	144
  3754  001E5E  6EAB               	movwf	171,c	;volatile
  3755                           
  3756                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3757  001E60  0E24               	movlw	36
  3758  001E62  6EAC               	movwf	172,c	;volatile
  3759                           
  3760                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3761  001E64  0E82               	movlw	130
  3762  001E66  6EAF               	movwf	175,c	;volatile
  3763                           
  3764                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3765  001E68  0E06               	movlw	6
  3766  001E6A  6EB0               	movwf	176,c	;volatile
  3767  001E6C                     
  3768                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3769  001E6C  0E00               	movlw	0
  3770  001E6E  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3771  001E70  0E00               	movlw	0
  3772  001E72  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3773  001E74  EC2A  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3774  001E78                     
  3775                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3776  001E78  0E00               	movlw	0
  3777  001E7A  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3778  001E7C  0E00               	movlw	0
  3779  001E7E  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3780  001E80  EC25  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3781  001E84                     
  3782                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3783  001E84  0E00               	movlw	0
  3784  001E86  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3785  001E88  0E00               	movlw	0
  3786  001E8A  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3787  001E8C  EC2F  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  3788  001E90                     
  3789                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3790  001E90  0E00               	movlw	0
  3791  001E92  0100               	movlb	0	; () banked
  3792  001E94  6FAA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3793  001E96                     
  3794                           ; BSR set to: 0
  3795  001E96  0012               	return		;funcret
  3796  001E98                     __end_of_EUSART1_Initialize:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3800 ;; Defined at:
  3801 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3804 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    4
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_EUSART1_Initialize
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text11
  3831  00224A                     __ptext11:
  3832                           	callstack 0
  3833  00224A                     _EUSART1_SetOverrunErrorHandler:
  3834                           	callstack 24
  3835  00224A                     
  3836                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3837  00224A  C007  F0A4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3838  00224E  C008  F0A5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3839  002252  0012               	return		;funcret
  3840  002254                     __end_of_EUSART1_SetOverrunErrorHandler:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3844 ;; Defined at:
  3845 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3848 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;Total ram usage:        2 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    4
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_EUSART1_Initialize
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text12
  3875  002254                     __ptext12:
  3876                           	callstack 0
  3877  002254                     _EUSART1_SetFramingErrorHandler:
  3878                           	callstack 24
  3879  002254                     
  3880                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3881  002254  C007  F0A6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3882  002258  C008  F0A7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3883  00225C  0012               	return		;funcret
  3884  00225E                     __end_of_EUSART1_SetFramingErrorHandler:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _EUSART1_SetErrorHandler *****************
  3888 ;; Defined at:
  3889 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3892 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    4
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_EUSART1_Initialize
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text13
  3919  00225E                     __ptext13:
  3920                           	callstack 0
  3921  00225E                     _EUSART1_SetErrorHandler:
  3922                           	callstack 24
  3923  00225E                     
  3924                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3925  00225E  C007  F0A2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3926  002262  C008  F0A3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3927  002266  0012               	return		;funcret
  3928  002268                     __end_of_EUSART1_SetErrorHandler:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _SPI2_Open *****************
  3932 ;; Defined at:
  3933 ;;		line 72 in file "mcc_generated_files/spi2.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  spi2UniqueCo    1    wreg     enum E355
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  spi2UniqueCo    1    7[COMRAM] enum E355
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      _Bool 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    4
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text14
  3962  001A96                     __ptext14:
  3963                           	callstack 0
  3964  001A96                     _SPI2_Open:
  3965                           	callstack 26
  3966                           
  3967                           ;incstack = 0
  3968                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  3969  001A96  6E08               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  3970  001A98                     
  3971                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  3972  001A98  BA6C               	btfsc	108,5,c	;volatile
  3973  001A9A  EF51  F00D         	goto	u2461
  3974  001A9E  EF53  F00D         	goto	u2460
  3975  001AA2                     u2461:
  3976  001AA2  EFA0  F00D         	goto	l25
  3977  001AA6                     u2460:
  3978  001AA6                     
  3979                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  3980  001AA6  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  3981  001AA8  0D04               	mullw	4
  3982  001AAA  0E01               	movlw	1
  3983  001AAC  26F3               	addwf	243,f,c
  3984  001AAE  0E00               	movlw	0
  3985  001AB0  22F4               	addwfc	244,f,c
  3986  001AB2  0E95               	movlw	low _spi2_configuration
  3987  001AB4  24F3               	addwf	243,w,c
  3988  001AB6  6EF6               	movwf	tblptrl,c
  3989  001AB8  0EFB               	movlw	high _spi2_configuration
  3990  001ABA  20F4               	addwfc	244,w,c
  3991  001ABC  6EF7               	movwf	tblptrh,c
  3992  001ABE                     	if	1	;There are 3 active tblptr bytes
  3993  001ABE  6AF8               	clrf	tblptru,c
  3994  001AC0  0E00               	movlw	low (__mediumconst shr (0+16))
  3995  001AC2  22F8               	addwfc	tblptru,f,c
  3996  001AC4                     	endif
  3997  001AC4  0008               	tblrd		*
  3998  001AC6  CFF5 FF6D          	movff	tablat,3949	;volatile
  3999                           
  4000                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  4001  001ACA  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4002  001ACC  0D04               	mullw	4
  4003  001ACE  0E95               	movlw	low _spi2_configuration
  4004  001AD0  24F3               	addwf	243,w,c
  4005  001AD2  6EF6               	movwf	tblptrl,c
  4006  001AD4  0EFB               	movlw	high _spi2_configuration
  4007  001AD6  20F4               	addwfc	244,w,c
  4008  001AD8  6EF7               	movwf	tblptrh,c
  4009  001ADA                     	if	1	;There are 3 active tblptr bytes
  4010  001ADA  6AF8               	clrf	tblptru,c
  4011  001ADC  0E00               	movlw	low (__mediumconst shr (0+16))
  4012  001ADE  22F8               	addwfc	tblptru,f,c
  4013  001AE0                     	endif
  4014  001AE0  0008               	tblrd		*
  4015  001AE2  CFF5 FF6C          	movff	tablat,3948	;volatile
  4016  001AE6                     
  4017                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  4018  001AE6  0E00               	movlw	0
  4019  001AE8  6E6B               	movwf	107,c	;volatile
  4020  001AEA                     
  4021                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  4022  001AEA  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4023  001AEC  0D04               	mullw	4
  4024  001AEE  0E02               	movlw	2
  4025  001AF0  26F3               	addwf	243,f,c
  4026  001AF2  0E00               	movlw	0
  4027  001AF4  22F4               	addwfc	244,f,c
  4028  001AF6  0E95               	movlw	low _spi2_configuration
  4029  001AF8  24F3               	addwf	243,w,c
  4030  001AFA  6EF6               	movwf	tblptrl,c
  4031  001AFC  0EFB               	movlw	high _spi2_configuration
  4032  001AFE  20F4               	addwfc	244,w,c
  4033  001B00  6EF7               	movwf	tblptrh,c
  4034  001B02                     	if	1	;There are 3 active tblptr bytes
  4035  001B02  6AF8               	clrf	tblptru,c
  4036  001B04  0E00               	movlw	low (__mediumconst shr (0+16))
  4037  001B06  22F8               	addwfc	tblptru,f,c
  4038  001B08                     	endif
  4039  001B08  0008               	tblrd		*
  4040  001B0A  CFF5 FF6E          	movff	tablat,3950	;volatile
  4041  001B0E                     
  4042                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  4043  001B0E  5008               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  4044  001B10  0D04               	mullw	4
  4045  001B12  0E03               	movlw	3
  4046  001B14  26F3               	addwf	243,f,c
  4047  001B16  0E00               	movlw	0
  4048  001B18  22F4               	addwfc	244,f,c
  4049  001B1A  0E95               	movlw	low _spi2_configuration
  4050  001B1C  24F3               	addwf	243,w,c
  4051  001B1E  6EF6               	movwf	tblptrl,c
  4052  001B20  0EFB               	movlw	high _spi2_configuration
  4053  001B22  20F4               	addwfc	244,w,c
  4054  001B24  6EF7               	movwf	tblptrh,c
  4055  001B26                     	if	1	;There are 3 active tblptr bytes
  4056  001B26  6AF8               	clrf	tblptru,c
  4057  001B28  0E00               	movlw	low (__mediumconst shr (0+16))
  4058  001B2A  22F8               	addwfc	tblptru,f,c
  4059  001B2C                     	endif
  4060  001B2C  0008               	tblrd		*
  4061  001B2E  CFF5 F007          	movff	tablat,??_SPI2_Open
  4062  001B32  4607               	rlncf	??_SPI2_Open^0,f,c
  4063  001B34  5093               	movf	147,w,c	;volatile
  4064  001B36  1807               	xorwf	??_SPI2_Open^0,w,c
  4065  001B38  0BFD               	andlw	-3
  4066  001B3A  1807               	xorwf	??_SPI2_Open^0,w,c
  4067  001B3C  6E93               	movwf	147,c	;volatile
  4068  001B3E                     
  4069                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  4070  001B3E  8A6C               	bsf	108,5,c	;volatile
  4071  001B40                     l25:
  4072  001B40  0012               	return		;funcret
  4073  001B42                     __end_of_SPI2_Open:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _SPI2_Close *****************
  4077 ;; Defined at:
  4078 ;;		line 87 in file "mcc_generated_files/spi2.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		None
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    4
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text15
  4107  002280                     __ptext15:
  4108                           	callstack 0
  4109  002280                     _SPI2_Close:
  4110                           	callstack 26
  4111  002280                     
  4112                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  4113  002280  9A6C               	bcf	108,5,c	;volatile
  4114  002282  0012               	return		;funcret
  4115  002284                     __end_of_SPI2_Close:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _SDCARD_WriteBlock *****************
  4119 ;; Defined at:
  4120 ;;		line 48 in file "sdCard.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  addr            4    7[COMRAM] unsigned long 
  4123 ;;  sdCardBuffer    2   11[COMRAM] PTR unsigned char 
  4124 ;;		 -> sdCardBuffer(512), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  i               2   13[COMRAM] unsigned short 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        8 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    5
  4143 ;; This function calls:
  4144 ;;		_SPI2_ExchangeByte
  4145 ;; This function is called by:
  4146 ;;		_main
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text16
  4151  001C72                     __ptext16:
  4152                           	callstack 0
  4153  001C72                     _SDCARD_WriteBlock:
  4154                           	callstack 25
  4155  001C72  988A               	bcf	138,4,c	;volatile
  4156  001C74                     
  4157                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  4158  001C74  0EFF               	movlw	255
  4159  001C76  ECF0  F010         	call	_SPI2_ExchangeByte
  4160  001C7A                     
  4161                           ;sdCard.c: 55: 
  4162  001C7A  0E58               	movlw	88
  4163  001C7C  ECF0  F010         	call	_SPI2_ExchangeByte
  4164  001C80                     
  4165                           ;sdCard.c: 56: 
  4166  001C80  500B               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  4167  001C82  ECF0  F010         	call	_SPI2_ExchangeByte
  4168  001C86                     
  4169                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  4170  001C86  500A               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  4171  001C88  ECF0  F010         	call	_SPI2_ExchangeByte
  4172  001C8C                     
  4173                           ;sdCard.c: 58: 
  4174  001C8C  5009               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  4175  001C8E  ECF0  F010         	call	_SPI2_ExchangeByte
  4176  001C92                     
  4177                           ;sdCard.c: 59: 
  4178  001C92  5008               	movf	SDCARD_WriteBlock@addr^0,w,c
  4179  001C94  ECF0  F010         	call	_SPI2_ExchangeByte
  4180  001C98                     
  4181                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  4182  001C98  0EFF               	movlw	255
  4183  001C9A  ECF0  F010         	call	_SPI2_ExchangeByte
  4184  001C9E                     l3298:
  4185  001C9E  0EFF               	movlw	255
  4186  001CA0  ECF0  F010         	call	_SPI2_ExchangeByte
  4187  001CA4  0AFF               	xorlw	255
  4188  001CA6  B4D8               	btfsc	status,2,c
  4189  001CA8  EF58  F00E         	goto	u2581
  4190  001CAC  EF5A  F00E         	goto	u2580
  4191  001CB0                     u2581:
  4192  001CB0  EF4F  F00E         	goto	l3298
  4193  001CB4                     u2580:
  4194  001CB4                     
  4195                           ;sdCard.c: 66: 
  4196  001CB4  0EFF               	movlw	255
  4197  001CB6  ECF0  F010         	call	_SPI2_ExchangeByte
  4198                           
  4199                           ;sdCard.c: 67: 
  4200  001CBA  0EFF               	movlw	255
  4201  001CBC  ECF0  F010         	call	_SPI2_ExchangeByte
  4202                           
  4203                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  4204  001CC0  0EFF               	movlw	255
  4205  001CC2  ECF0  F010         	call	_SPI2_ExchangeByte
  4206                           
  4207                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  4208  001CC6  0EFE               	movlw	254
  4209  001CC8  ECF0  F010         	call	_SPI2_ExchangeByte
  4210  001CCC                     
  4211                           ;sdCard.c: 74: 
  4212  001CCC  0E00               	movlw	0
  4213  001CCE  6E0F               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  4214  001CD0  0E00               	movlw	0
  4215  001CD2  6E0E               	movwf	SDCARD_WriteBlock@i^0,c
  4216  001CD4                     l3308:
  4217                           
  4218                           ;sdCard.c: 75: 
  4219  001CD4  500E               	movf	SDCARD_WriteBlock@i^0,w,c
  4220  001CD6  240C               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  4221  001CD8  6ED9               	movwf	fsr2l,c
  4222  001CDA  500F               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  4223  001CDC  200D               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  4224  001CDE  6EDA               	movwf	fsr2h,c
  4225  001CE0  50DF               	movf	indf2,w,c
  4226  001CE2  ECF0  F010         	call	_SPI2_ExchangeByte
  4227  001CE6  4A0E               	infsnz	SDCARD_WriteBlock@i^0,f,c
  4228  001CE8  2A0F               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  4229  001CEA  0E02               	movlw	2
  4230  001CEC  5C0F               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  4231  001CEE  A0D8               	btfss	status,0,c
  4232  001CF0  EF7C  F00E         	goto	u2591
  4233  001CF4  EF7E  F00E         	goto	u2590
  4234  001CF8                     u2591:
  4235  001CF8  EF6A  F00E         	goto	l3308
  4236  001CFC                     u2590:
  4237  001CFC  888A               	bsf	138,4,c	;volatile
  4238  001CFE  0012               	return		;funcret
  4239  001D00                     __end_of_SDCARD_WriteBlock:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _SDCARD_ReadBlock *****************
  4243 ;; Defined at:
  4244 ;;		line 13 in file "sdCard.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  addr            4    7[COMRAM] unsigned long 
  4247 ;;  sdCardBuffer    2   11[COMRAM] PTR unsigned char 
  4248 ;;		 -> sdCardBuffer(512), 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  i               2   13[COMRAM] unsigned short 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        8 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    5
  4267 ;; This function calls:
  4268 ;;		_SPI2_ExchangeByte
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text17
  4275  001B42                     __ptext17:
  4276                           	callstack 0
  4277  001B42                     _SDCARD_ReadBlock:
  4278                           	callstack 25
  4279  001B42  988A               	bcf	138,4,c	;volatile
  4280  001B44                     
  4281                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  4282  001B44  0EFF               	movlw	255
  4283  001B46  ECF0  F010         	call	_SPI2_ExchangeByte
  4284  001B4A                     
  4285                           ;sdCard.c: 19: 
  4286  001B4A  0E51               	movlw	81
  4287  001B4C  ECF0  F010         	call	_SPI2_ExchangeByte
  4288  001B50                     
  4289                           ;sdCard.c: 20: 
  4290  001B50  500B               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  4291  001B52  ECF0  F010         	call	_SPI2_ExchangeByte
  4292  001B56                     
  4293                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  4294  001B56  500A               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  4295  001B58  ECF0  F010         	call	_SPI2_ExchangeByte
  4296  001B5C                     
  4297                           ;sdCard.c: 22: 
  4298  001B5C  5009               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  4299  001B5E  ECF0  F010         	call	_SPI2_ExchangeByte
  4300  001B62                     
  4301                           ;sdCard.c: 23: 
  4302  001B62  5008               	movf	SDCARD_ReadBlock@addr^0,w,c
  4303  001B64  ECF0  F010         	call	_SPI2_ExchangeByte
  4304  001B68                     
  4305                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  4306  001B68  0EFF               	movlw	255
  4307  001B6A  ECF0  F010         	call	_SPI2_ExchangeByte
  4308  001B6E                     l3350:
  4309  001B6E  0EFF               	movlw	255
  4310  001B70  ECF0  F010         	call	_SPI2_ExchangeByte
  4311  001B74  0AFF               	xorlw	255
  4312  001B76  B4D8               	btfsc	status,2,c
  4313  001B78  EFC0  F00D         	goto	u2611
  4314  001B7C  EFC2  F00D         	goto	u2610
  4315  001B80                     u2611:
  4316  001B80  EFB7  F00D         	goto	l3350
  4317  001B84                     u2610:
  4318  001B84                     l3352:
  4319  001B84  0EFF               	movlw	255
  4320  001B86  ECF0  F010         	call	_SPI2_ExchangeByte
  4321  001B8A  0AFF               	xorlw	255
  4322  001B8C  B4D8               	btfsc	status,2,c
  4323  001B8E  EFCB  F00D         	goto	u2621
  4324  001B92  EFCD  F00D         	goto	u2620
  4325  001B96                     u2621:
  4326  001B96  EFC2  F00D         	goto	l3352
  4327  001B9A                     u2620:
  4328  001B9A                     
  4329                           ;sdCard.c: 33: 
  4330  001B9A  0E00               	movlw	0
  4331  001B9C  6E0F               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  4332  001B9E  0E00               	movlw	0
  4333  001BA0  6E0E               	movwf	SDCARD_ReadBlock@i^0,c
  4334  001BA2                     l3360:
  4335                           
  4336                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  4337  001BA2  500E               	movf	SDCARD_ReadBlock@i^0,w,c
  4338  001BA4  240C               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  4339  001BA6  6ED9               	movwf	fsr2l,c
  4340  001BA8  500F               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  4341  001BAA  200D               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  4342  001BAC  6EDA               	movwf	fsr2h,c
  4343  001BAE  0EFF               	movlw	255
  4344  001BB0  ECF0  F010         	call	_SPI2_ExchangeByte
  4345  001BB4  6EDF               	movwf	indf2,c
  4346  001BB6  4A0E               	infsnz	SDCARD_ReadBlock@i^0,f,c
  4347  001BB8  2A0F               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  4348  001BBA  0E02               	movlw	2
  4349  001BBC  5C0F               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  4350  001BBE  A0D8               	btfss	status,0,c
  4351  001BC0  EFE4  F00D         	goto	u2631
  4352  001BC4  EFE6  F00D         	goto	u2630
  4353  001BC8                     u2631:
  4354  001BC8  EFD1  F00D         	goto	l3360
  4355  001BCC                     u2630:
  4356  001BCC                     
  4357                           ;sdCard.c: 37: 
  4358  001BCC  0EFF               	movlw	255
  4359  001BCE  ECF0  F010         	call	_SPI2_ExchangeByte
  4360                           
  4361                           ;sdCard.c: 38: 
  4362  001BD2  0EFF               	movlw	255
  4363  001BD4  ECF0  F010         	call	_SPI2_ExchangeByte
  4364  001BD8  888A               	bsf	138,4,c	;volatile
  4365  001BDA  0012               	return		;funcret
  4366  001BDC                     __end_of_SDCARD_ReadBlock:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _SDCARD_PollWriteComplete *****************
  4370 ;; Defined at:
  4371 ;;		line 86 in file "sdCard.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  status          1    7[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        1 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    5
  4392 ;; This function calls:
  4393 ;;		_SPI2_ExchangeByte
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text18
  4400  001F14                     __ptext18:
  4401                           	callstack 0
  4402  001F14                     _SDCARD_PollWriteComplete:
  4403                           	callstack 25
  4404  001F14  988A               	bcf	138,4,c	;volatile
  4405  001F16                     
  4406                           ;sdCard.c: 91: 
  4407  001F16  0E0D               	movlw	13
  4408  001F18  ECF0  F010         	call	_SPI2_ExchangeByte
  4409  001F1C  6E08               	movwf	SDCARD_PollWriteComplete@status^0,c
  4410  001F1E  888A               	bsf	138,4,c	;volatile
  4411  001F20                     
  4412                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  4413  001F20  2808               	incf	SDCARD_PollWriteComplete@status^0,w,c
  4414  001F22  A4D8               	btfss	status,2,c
  4415  001F24  EF96  F00F         	goto	u2601
  4416  001F28  EF98  F00F         	goto	u2600
  4417  001F2C                     u2601:
  4418  001F2C  EF9B  F00F         	goto	l3326
  4419  001F30                     u2600:
  4420  001F30                     
  4421                           ;sdCard.c: 95:         return (status);
  4422  001F30  0EFF               	movlw	255
  4423  001F32  EFA5  F00F         	goto	l418
  4424  001F36                     l3326:
  4425                           
  4426                           ;sdCard.c: 98: }
  4427  001F36  0EFF               	movlw	255
  4428  001F38  ECF0  F010         	call	_SPI2_ExchangeByte
  4429                           
  4430                           ;sdCard.c: 99: 
  4431  001F3C  0EFF               	movlw	255
  4432  001F3E  ECF0  F010         	call	_SPI2_ExchangeByte
  4433                           
  4434                           ;sdCard.c: 100: 
  4435  001F42  0EFF               	movlw	255
  4436  001F44  ECF0  F010         	call	_SPI2_ExchangeByte
  4437  001F48                     
  4438                           ;sdCard.c: 101: 
  4439  001F48  5008               	movf	SDCARD_PollWriteComplete@status^0,w,c
  4440  001F4A                     l418:
  4441  001F4A  0012               	return		;funcret
  4442  001F4C                     __end_of_SDCARD_PollWriteComplete:
  4443                           	callstack 0
  4444                           
  4445 ;; *************** function _SDCARD_Initialize *****************
  4446 ;; Defined at:
  4447 ;;		line 111 in file "sdCard.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  verbose         1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  verbose         1   43[BANK0 ] unsigned char 
  4452 ;;  i               2   41[BANK0 ] int 
  4453 ;;  response        1   44[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        4 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:   13
  4470 ;; This function calls:
  4471 ;;		_SPI2_ExchangeByte
  4472 ;;		_printf
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text19
  4479  001624                     __ptext19:
  4480                           	callstack 0
  4481  001624                     _SDCARD_Initialize:
  4482                           	callstack 17
  4483                           
  4484                           ;incstack = 0
  4485                           ;SDCARD_Initialize@verbose stored from wreg
  4486  001624  0100               	movlb	0	; () banked
  4487  001626  6F8B               	movwf	SDCARD_Initialize@verbose& (0+255),b
  4488  001628                     
  4489                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  4490  001628  0E00               	movlw	0
  4491  00162A  0100               	movlb	0	; () banked
  4492  00162C  6F8A               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  4493  00162E  0E00               	movlw	0
  4494  001630  6F89               	movwf	SDCARD_Initialize@i& (0+255),b
  4495  001632                     l3834:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  4499  001632  0EFF               	movlw	255
  4500  001634  ECF0  F010         	call	_SPI2_ExchangeByte
  4501  001638                     
  4502                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  4503  001638  0100               	movlb	0	; () banked
  4504  00163A  4B89               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  4505  00163C  2B8A               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  4506  00163E                     
  4507                           ; BSR set to: 0
  4508  00163E  BF8A               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  4509  001640  EF2B  F00B         	goto	u3021
  4510  001644  518A               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  4511  001646  E109               	bnz	u3020
  4512  001648  0E0A               	movlw	10
  4513  00164A  5D89               	subwf	SDCARD_Initialize@i& (0+255),w,b
  4514  00164C  A0D8               	btfss	status,0,c
  4515  00164E  EF2B  F00B         	goto	u3021
  4516  001652  EF2D  F00B         	goto	u3020
  4517  001656                     u3021:
  4518  001656  EF19  F00B         	goto	l3834
  4519  00165A                     u3020:
  4520  00165A                     
  4521                           ; BSR set to: 0
  4522  00165A  988A               	bcf	138,4,c	;volatile
  4523  00165C                     
  4524                           ; BSR set to: 0
  4525                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  4526  00165C  0EFF               	movlw	255
  4527  00165E  ECF0  F010         	call	_SPI2_ExchangeByte
  4528                           
  4529                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  4530  001662  0E40               	movlw	64
  4531  001664  ECF0  F010         	call	_SPI2_ExchangeByte
  4532                           
  4533                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  4534  001668  0E00               	movlw	0
  4535  00166A  ECF0  F010         	call	_SPI2_ExchangeByte
  4536                           
  4537                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  4538  00166E  0E00               	movlw	0
  4539  001670  ECF0  F010         	call	_SPI2_ExchangeByte
  4540                           
  4541                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  4542  001674  0E00               	movlw	0
  4543  001676  ECF0  F010         	call	_SPI2_ExchangeByte
  4544                           
  4545                           ;sdCard.c: 130: 
  4546  00167A  0E00               	movlw	0
  4547  00167C  ECF0  F010         	call	_SPI2_ExchangeByte
  4548                           
  4549                           ;sdCard.c: 131: 
  4550  001680  0E95               	movlw	149
  4551  001682  ECF0  F010         	call	_SPI2_ExchangeByte
  4552                           
  4553                           ;sdCard.c: 132: 
  4554  001686  0EFF               	movlw	255
  4555  001688  ECF0  F010         	call	_SPI2_ExchangeByte
  4556                           
  4557                           ;sdCard.c: 133:     do {
  4558  00168C  0EFF               	movlw	255
  4559  00168E  ECF0  F010         	call	_SPI2_ExchangeByte
  4560  001692  0100               	movlb	0	; () banked
  4561  001694  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  4562  001696                     
  4563                           ; BSR set to: 0
  4564  001696  888A               	bsf	138,4,c	;volatile
  4565  001698                     
  4566                           ; BSR set to: 0
  4567                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  4568  001698  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4569  00169A  A4D8               	btfss	status,2,c
  4570  00169C  EF52  F00B         	goto	u3031
  4571  0016A0  EF54  F00B         	goto	u3030
  4572  0016A4                     u3031:
  4573  0016A4  EF5D  F00B         	goto	l3848
  4574  0016A8                     u3030:
  4575  0016A8                     
  4576                           ; BSR set to: 0
  4577  0016A8  0E8C               	movlw	low STR_56
  4578  0016AA  6F7F               	movwf	printf@fmt& (0+255),b
  4579  0016AC  0EFE               	movlw	high STR_56
  4580  0016AE  6F80               	movwf	(printf@fmt+1)& (0+255),b
  4581  0016B0  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  4582  0016B4  6B82               	clrf	(?_printf+3)& (0+255),b
  4583  0016B6  ECAE  F010         	call	_printf	;wreg free
  4584  0016BA                     l3848:
  4585  0016BA  988A               	bcf	138,4,c	;volatile
  4586  0016BC                     
  4587                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  4588  0016BC  0EFF               	movlw	255
  4589  0016BE  ECF0  F010         	call	_SPI2_ExchangeByte
  4590  0016C2                     
  4591                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  4592  0016C2  0E41               	movlw	65
  4593  0016C4  ECF0  F010         	call	_SPI2_ExchangeByte
  4594  0016C8                     
  4595                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  4596  0016C8  0E00               	movlw	0
  4597  0016CA  ECF0  F010         	call	_SPI2_ExchangeByte
  4598  0016CE                     
  4599                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  4600  0016CE  0E00               	movlw	0
  4601  0016D0  ECF0  F010         	call	_SPI2_ExchangeByte
  4602  0016D4                     
  4603                           ;sdCard.c: 145:     } while (response != 0);
  4604  0016D4  0E00               	movlw	0
  4605  0016D6  ECF0  F010         	call	_SPI2_ExchangeByte
  4606  0016DA                     
  4607                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  4608  0016DA  0E00               	movlw	0
  4609  0016DC  ECF0  F010         	call	_SPI2_ExchangeByte
  4610  0016E0                     
  4611                           ;sdCard.c: 147: 
  4612  0016E0  0EFF               	movlw	255
  4613  0016E2  ECF0  F010         	call	_SPI2_ExchangeByte
  4614  0016E6                     
  4615                           ;sdCard.c: 148: 
  4616  0016E6  0EFF               	movlw	255
  4617  0016E8  ECF0  F010         	call	_SPI2_ExchangeByte
  4618  0016EC                     
  4619                           ;sdCard.c: 149: 
  4620  0016EC  0EFF               	movlw	255
  4621  0016EE  ECF0  F010         	call	_SPI2_ExchangeByte
  4622  0016F2  0100               	movlb	0	; () banked
  4623  0016F4  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  4624  0016F6                     
  4625                           ; BSR set to: 0
  4626  0016F6  888A               	bsf	138,4,c	;volatile
  4627  0016F8                     
  4628                           ; BSR set to: 0
  4629                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  4630  0016F8  518C               	movf	SDCARD_Initialize@response& (0+255),w,b
  4631  0016FA  A4D8               	btfss	status,2,c
  4632  0016FC  EF82  F00B         	goto	u3041
  4633  001700  EF84  F00B         	goto	u3040
  4634  001704                     u3041:
  4635  001704  EF5D  F00B         	goto	l3848
  4636  001708                     u3040:
  4637  001708                     
  4638                           ; BSR set to: 0
  4639                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  4640  001708  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4641  00170A  A4D8               	btfss	status,2,c
  4642  00170C  EF8A  F00B         	goto	u3051
  4643  001710  EF8C  F00B         	goto	u3050
  4644  001714                     u3051:
  4645  001714  EF95  F00B         	goto	l3876
  4646  001718                     u3050:
  4647  001718                     
  4648                           ; BSR set to: 0
  4649  001718  0EC2               	movlw	low STR_57
  4650  00171A  6F7F               	movwf	printf@fmt& (0+255),b
  4651  00171C  0EFE               	movlw	high STR_57
  4652  00171E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  4653  001720  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  4654  001724  6B82               	clrf	(?_printf+3)& (0+255),b
  4655  001726  ECAE  F010         	call	_printf	;wreg free
  4656  00172A                     l3876:
  4657  00172A  988A               	bcf	138,4,c	;volatile
  4658  00172C                     
  4659                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  4660  00172C  0EFF               	movlw	255
  4661  00172E  ECF0  F010         	call	_SPI2_ExchangeByte
  4662  001732                     
  4663                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  4664  001732  0E50               	movlw	80
  4665  001734  ECF0  F010         	call	_SPI2_ExchangeByte
  4666  001738                     
  4667                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  4668  001738  0E00               	movlw	0
  4669  00173A  ECF0  F010         	call	_SPI2_ExchangeByte
  4670  00173E                     
  4671                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  4672  00173E  0E00               	movlw	0
  4673  001740  ECF0  F010         	call	_SPI2_ExchangeByte
  4674  001744                     
  4675                           ;sdCard.c: 162:     } while (response == 0xFF);
  4676  001744  0E02               	movlw	2
  4677  001746  ECF0  F010         	call	_SPI2_ExchangeByte
  4678  00174A                     
  4679                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  4680  00174A  0E00               	movlw	0
  4681  00174C  ECF0  F010         	call	_SPI2_ExchangeByte
  4682  001750                     
  4683                           ;sdCard.c: 164: 
  4684  001750  0EFF               	movlw	255
  4685  001752  ECF0  F010         	call	_SPI2_ExchangeByte
  4686  001756                     
  4687                           ;sdCard.c: 165: }
  4688  001756  0EFF               	movlw	255
  4689  001758  ECF0  F010         	call	_SPI2_ExchangeByte
  4690  00175C                     
  4691                           ;sdCard.c: 166: 
  4692  00175C  0EFF               	movlw	255
  4693  00175E  ECF0  F010         	call	_SPI2_ExchangeByte
  4694  001762  0100               	movlb	0	; () banked
  4695  001764  6F8C               	movwf	SDCARD_Initialize@response& (0+255),b
  4696  001766                     
  4697                           ; BSR set to: 0
  4698  001766  888A               	bsf	138,4,c	;volatile
  4699  001768                     
  4700                           ; BSR set to: 0
  4701                           ;sdCard.c: 168: 
  4702  001768  298C               	incf	SDCARD_Initialize@response& (0+255),w,b
  4703  00176A  B4D8               	btfsc	status,2,c
  4704  00176C  EFBA  F00B         	goto	u3061
  4705  001770  EFBC  F00B         	goto	u3060
  4706  001774                     u3061:
  4707  001774  EF95  F00B         	goto	l3876
  4708  001778                     u3060:
  4709  001778                     
  4710                           ; BSR set to: 0
  4711                           ;sdCard.c: 169: 
  4712  001778  058B               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4713  00177A  A4D8               	btfss	status,2,c
  4714  00177C  EFC2  F00B         	goto	u3071
  4715  001780  EFC4  F00B         	goto	u3070
  4716  001784                     u3071:
  4717  001784  EFCD  F00B         	goto	l443
  4718  001788                     u3070:
  4719  001788                     
  4720                           ; BSR set to: 0
  4721  001788  0E54               	movlw	low STR_58
  4722  00178A  6F7F               	movwf	printf@fmt& (0+255),b
  4723  00178C  0EFE               	movlw	high STR_58
  4724  00178E  6F80               	movwf	(printf@fmt+1)& (0+255),b
  4725  001790  C08C  F081         	movff	SDCARD_Initialize@response,?_printf+2
  4726  001794  6B82               	clrf	(?_printf+3)& (0+255),b
  4727  001796  ECAE  F010         	call	_printf	;wreg free
  4728  00179A                     l443:
  4729  00179A  0012               	return		;funcret
  4730  00179C                     __end_of_SDCARD_Initialize:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _printf *****************
  4734 ;; Defined at:
  4735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  4738 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  4739 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  4740 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  4741 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(3), 
  4742 ;;		 -> STR_53(5), STR_52(2), STR_51(5), STR_50(17), 
  4743 ;;		 -> STR_49(15), STR_48(23), STR_47(3), STR_46(5), 
  4744 ;;		 -> STR_45(2), STR_44(5), STR_43(17), STR_42(43), 
  4745 ;;		 -> STR_41(3), STR_40(5), STR_39(2), STR_38(5), 
  4746 ;;		 -> STR_37(19), STR_36(20), STR_35(28), STR_34(20), 
  4747 ;;		 -> STR_33(30), STR_32(29), STR_31(29), STR_30(44), 
  4748 ;;		 -> STR_29(27), STR_28(83), STR_27(83), STR_26(2), 
  4749 ;;		 -> STR_25(2), STR_24(8), STR_23(52), STR_22(42), 
  4750 ;;		 -> STR_21(43), STR_20(37), STR_19(24), STR_18(52), 
  4751 ;;		 -> STR_17(36), STR_16(52), STR_15(24), STR_14(21), 
  4752 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  4753 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  4754 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  4755 ;;		 -> STR_1(11), 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  ap              2   39[BANK0 ] PTR void [1]
  4758 ;;		 -> ?_printf(2), 
  4759 ;;  ret             2    0        int 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2   31[BANK0 ] int 
  4762 ;; Registers used:
  4763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:       10 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   12
  4776 ;; This function calls:
  4777 ;;		_vfprintf
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;;		_SDCARD_Initialize
  4781 ;;		_hexDumpBuffer
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text20
  4786  00215C                     __ptext20:
  4787                           	callstack 0
  4788  00215C                     _printf:
  4789                           	callstack 18
  4790  00215C  0E81               	movlw	low (?_printf+2)
  4791  00215E  0100               	movlb	0	; () banked
  4792  002160  6F87               	movwf	printf@ap& (0+255),b
  4793  002162  0E00               	movlw	high (?_printf+2)
  4794  002164  6F88               	movwf	(printf@ap+1)& (0+255),b
  4795  002166                     
  4796                           ; BSR set to: 0
  4797  002166  0E00               	movlw	0
  4798  002168  6F79               	movwf	vfprintf@fp& (0+255),b
  4799  00216A  0E00               	movlw	0
  4800  00216C  6F7A               	movwf	(vfprintf@fp+1)& (0+255),b
  4801  00216E  C07F  F07B         	movff	printf@fmt,vfprintf@fmt
  4802  002172  C080  F07C         	movff	printf@fmt+1,vfprintf@fmt+1
  4803  002176  0E87               	movlw	low printf@ap
  4804  002178  6F7D               	movwf	vfprintf@ap& (0+255),b
  4805  00217A  0E00               	movlw	high printf@ap
  4806  00217C  6F7E               	movwf	(vfprintf@ap+1)& (0+255),b
  4807  00217E  EC80  F00E         	call	_vfprintf	;wreg free
  4808  002182  0012               	return		;funcret
  4809  002184                     __end_of_printf:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _vfprintf *****************
  4813 ;; Defined at:
  4814 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  4817 ;;		 -> NULL(0), 
  4818 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  4819 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  4820 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  4821 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  4822 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(3), 
  4823 ;;		 -> STR_53(5), STR_52(2), STR_51(5), STR_50(17), 
  4824 ;;		 -> STR_49(15), STR_48(23), STR_47(3), STR_46(5), 
  4825 ;;		 -> STR_45(2), STR_44(5), STR_43(17), STR_42(43), 
  4826 ;;		 -> STR_41(3), STR_40(5), STR_39(2), STR_38(5), 
  4827 ;;		 -> STR_37(19), STR_36(20), STR_35(28), STR_34(20), 
  4828 ;;		 -> STR_33(30), STR_32(29), STR_31(29), STR_30(44), 
  4829 ;;		 -> STR_29(27), STR_28(83), STR_27(83), STR_26(2), 
  4830 ;;		 -> STR_25(2), STR_24(8), STR_23(52), STR_22(42), 
  4831 ;;		 -> STR_21(43), STR_20(37), STR_19(24), STR_18(52), 
  4832 ;;		 -> STR_17(36), STR_16(52), STR_15(24), STR_14(21), 
  4833 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  4834 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  4835 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  4836 ;;		 -> STR_1(11), 
  4837 ;;  ap              2   29[BANK0 ] PTR PTR void 
  4838 ;;		 -> printf@ap(2), 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  cfmt            2   80[COMRAM] PTR unsigned char 
  4841 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  4842 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  4843 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  4844 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(3), 
  4845 ;;		 -> STR_53(5), STR_52(2), STR_51(5), STR_50(17), 
  4846 ;;		 -> STR_49(15), STR_48(23), STR_47(3), STR_46(5), 
  4847 ;;		 -> STR_45(2), STR_44(5), STR_43(17), STR_42(43), 
  4848 ;;		 -> STR_41(3), STR_40(5), STR_39(2), STR_38(5), 
  4849 ;;		 -> STR_37(19), STR_36(20), STR_35(28), STR_34(20), 
  4850 ;;		 -> STR_33(30), STR_32(29), STR_31(29), STR_30(44), 
  4851 ;;		 -> STR_29(27), STR_28(83), STR_27(83), STR_26(2), 
  4852 ;;		 -> STR_25(2), STR_24(8), STR_23(52), STR_22(42), 
  4853 ;;		 -> STR_21(43), STR_20(37), STR_19(24), STR_18(52), 
  4854 ;;		 -> STR_17(36), STR_16(52), STR_15(24), STR_14(21), 
  4855 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  4856 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  4857 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  4858 ;;		 -> STR_1(11), 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2   25[BANK0 ] int 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4868 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;Total ram usage:        8 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:   11
  4875 ;; This function calls:
  4876 ;;		_vfpfcnvrt
  4877 ;; This function is called by:
  4878 ;;		_printf
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text21
  4883  001D00                     __ptext21:
  4884                           	callstack 0
  4885  001D00                     _vfprintf:
  4886                           	callstack 18
  4887  001D00                     
  4888                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4889  001D00  C07B  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  4890  001D04  C07C  F052         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4891  001D08                     
  4892                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4893  001D08  0E00               	movlw	0
  4894  001D0A  0100               	movlb	0	; () banked
  4895  001D0C  6F9F               	movwf	(_nout+1)& (0+255),b
  4896  001D0E  0E00               	movlw	0
  4897  001D10  6F9E               	movwf	_nout& (0+255),b
  4898                           
  4899                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4900  001D12  EF9E  F00E         	goto	l3820
  4901  001D16                     l3818:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4905  001D16  C079  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  4906  001D1A  C07A  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4907  001D1E  0E51               	movlw	low vfprintf@cfmt
  4908  001D20  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  4909  001D22  0E00               	movlw	high vfprintf@cfmt
  4910  001D24  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4911  001D26  C07D  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  4912  001D2A  C07E  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4913  001D2E  EC45  F003         	call	_vfpfcnvrt	;wreg free
  4914  001D32  504B               	movf	?_vfpfcnvrt^0,w,c
  4915  001D34  0100               	movlb	0	; () banked
  4916  001D36  279E               	addwf	_nout& (0+255),f,b
  4917  001D38  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  4918  001D3A  239F               	addwfc	(_nout+1)& (0+255),f,b
  4919  001D3C                     l3820:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4923  001D3C  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  4924  001D40  C052  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4925  001D44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4926  001D44  6AF8               	clrf	tblptru,c
  4927  001D46                     	endif
  4928  001D46                     	if	0	;tblptru may be non-zero
  4929  001D46                     	endif
  4930  001D46  0008               	tblrd		*
  4931  001D48  50F5               	movf	tablat,w,c
  4932  001D4A  0900               	iorlw	0
  4933  001D4C  A4D8               	btfss	status,2,c
  4934  001D4E  EFAB  F00E         	goto	u3011
  4935  001D52  EFAD  F00E         	goto	u3010
  4936  001D56                     u3011:
  4937  001D56  EF8B  F00E         	goto	l3818
  4938  001D5A                     u3010:
  4939  001D5A                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4942  001D5A  C09E  F079         	movff	_nout,?_vfprintf
  4943  001D5E  C09F  F07A         	movff	_nout+1,?_vfprintf+1
  4944  001D62                     
  4945                           ; BSR set to: 0
  4946  001D62  0012               	return		;funcret
  4947  001D64                     __end_of_vfprintf:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _vfpfcnvrt *****************
  4951 ;; Defined at:
  4952 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  4955 ;;		 -> NULL(0), 
  4956 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  4957 ;;		 -> vfprintf@cfmt(2), 
  4958 ;;  ap              2   78[COMRAM] PTR PTR void 
  4959 ;;		 -> printf@ap(2), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  llu             8   12[BANK0 ] unsigned long long 
  4962 ;;  ll              8    4[BANK0 ] long long 
  4963 ;;  f               4    0        long long 
  4964 ;;  vp              3    0        PTR void 
  4965 ;;  ct              3    0        unsigned char [3]
  4966 ;;  cp              3    0        PTR unsigned char 
  4967 ;;  done            2   20[BANK0 ] int 
  4968 ;;  i               2    0        int 
  4969 ;;  c               1   24[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2   74[COMRAM] int 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         6      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:       31 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   10
  4986 ;; This function calls:
  4987 ;;		_atoi
  4988 ;;		_ctoa
  4989 ;;		_dtoa
  4990 ;;		_fputc
  4991 ;;		_isdigit
  4992 ;;		_xtoa
  4993 ;; This function is called by:
  4994 ;;		_vfprintf
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text22
  4999  00068A                     __ptext22:
  5000                           	callstack 0
  5001  00068A                     _vfpfcnvrt:
  5002                           	callstack 18
  5003  00068A                     
  5004                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5005  00068A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5006  00068E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5007  000692  CFDE FFF6          	movff	postinc2,tblptrl
  5008  000696  CFDD FFF7          	movff	postdec2,tblptrh
  5009  00069A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5010  00069A  6AF8               	clrf	tblptru,c
  5011  00069C                     	endif
  5012  00069C                     	if	0	;tblptru may be non-zero
  5013  00069C                     	endif
  5014  00069C  0008               	tblrd		*
  5015  00069E  50F5               	movf	tablat,w,c
  5016  0006A0  0A25               	xorlw	37
  5017  0006A2  A4D8               	btfss	status,2,c
  5018  0006A4  EF56  F003         	goto	u2871
  5019  0006A8  EF58  F003         	goto	u2870
  5020  0006AC                     u2871:
  5021  0006AC  EF95  F005         	goto	l3798
  5022  0006B0                     u2870:
  5023  0006B0                     
  5024                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5025  0006B0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5026  0006B4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5027  0006B8  2ADE               	incf	postinc2,f,c
  5028  0006BA  0E00               	movlw	0
  5029  0006BC  22DD               	addwfc	postdec2,f,c
  5030  0006BE                     
  5031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5032  0006BE  0E00               	movlw	0
  5033  0006C0  6E54               	movwf	(_width+1)^0,c
  5034  0006C2  0E00               	movlw	0
  5035  0006C4  6E53               	movwf	_width^0,c
  5036  0006C6  C053  F055         	movff	_width,_flags
  5037  0006CA  C054  F056         	movff	_width+1,_flags+1
  5038  0006CE                     
  5039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5040  0006CE  0100               	movlb	0	; () banked
  5041  0006D0  69A0               	setf	_prec& (0+255),b
  5042  0006D2  69A1               	setf	(_prec+1)& (0+255),b
  5043  0006D4                     
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5046  0006D4  0E00               	movlw	0
  5047  0006D6  6F75               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5048  0006D8  0E00               	movlw	0
  5049  0006DA  6F74               	movwf	vfpfcnvrt@done& (0+255),b
  5050                           
  5051                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5052  0006DC  EFB7  F003         	goto	l3728
  5053  0006E0                     l3702:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5057  0006E0  8055               	bsf	_flags^0,0,c
  5058  0006E2                     l3704:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5062  0006E2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5063  0006E6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5064  0006EA  2ADE               	incf	postinc2,f,c
  5065  0006EC  0E00               	movlw	0
  5066  0006EE  22DD               	addwfc	postdec2,f,c
  5067                           
  5068                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5069  0006F0  EFB7  F003         	goto	l3728
  5070  0006F4                     l3706:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5074  0006F4  8255               	bsf	_flags^0,1,c
  5075  0006F6  EF71  F003         	goto	l3704
  5076  0006FA                     l3710:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5080  0006FA  8455               	bsf	_flags^0,2,c
  5081  0006FC  EF71  F003         	goto	l3704
  5082  000700                     l3714:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5086  000700  8655               	bsf	_flags^0,3,c
  5087  000702  EF71  F003         	goto	l3704
  5088  000706                     l3718:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5092  000706  8855               	bsf	_flags^0,4,c
  5093  000708  EF71  F003         	goto	l3704
  5094  00070C                     l3722:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5098  00070C  0E00               	movlw	0
  5099  00070E  6F75               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5100  000710  0E01               	movlw	1
  5101  000712  6F74               	movwf	vfpfcnvrt@done& (0+255),b
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5104  000714  EFB7  F003         	goto	l3728
  5105  000718                     l3726:
  5106                           
  5107                           ; BSR set to: 0
  5108  000718  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5109  00071C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5110  000720  CFDE FFF6          	movff	postinc2,tblptrl
  5111  000724  CFDD FFF7          	movff	postdec2,tblptrh
  5112  000728                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5113  000728  6AF8               	clrf	tblptru,c
  5114  00072A                     	endif
  5115  00072A                     	if	0	;tblptru may be non-zero
  5116  00072A                     	endif
  5117  00072A  0008               	tblrd		*
  5118  00072C  50F5               	movf	tablat,w,c
  5119  00072E  6F60               	movwf	??_vfpfcnvrt& (0+255),b
  5120  000730  6B61               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5121                           
  5122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5123                           ; Switch size 1, requested type "simple"
  5124                           ; Number of cases is 1, Range of values is 0 to 0
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ;	Chosen strategy is simple_byte
  5129  000732  5161               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5130  000734  0A00               	xorlw	0	; case 0
  5131  000736  B4D8               	btfsc	status,2,c
  5132  000738  EFA0  F003         	goto	l4192
  5133  00073C  EF86  F003         	goto	l3722
  5134  000740                     l4192:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ; Switch size 1, requested type "simple"
  5138                           ; Number of cases is 5, Range of values is 32 to 48
  5139                           ; switch strategies available:
  5140                           ; Name         Instructions Cycles
  5141                           ; simple_byte           16     9 (average)
  5142                           ;	Chosen strategy is simple_byte
  5143  000740  5160               	movf	??_vfpfcnvrt& (0+255),w,b
  5144  000742  0A20               	xorlw	32	; case 32
  5145  000744  B4D8               	btfsc	status,2,c
  5146  000746  EF80  F003         	goto	l3714
  5147  00074A  0A03               	xorlw	3	; case 35
  5148  00074C  B4D8               	btfsc	status,2,c
  5149  00074E  EF83  F003         	goto	l3718
  5150  000752  0A08               	xorlw	8	; case 43
  5151  000754  B4D8               	btfsc	status,2,c
  5152  000756  EF7D  F003         	goto	l3710
  5153  00075A  0A06               	xorlw	6	; case 45
  5154  00075C  B4D8               	btfsc	status,2,c
  5155  00075E  EF70  F003         	goto	l3702
  5156  000762  0A1D               	xorlw	29	; case 48
  5157  000764  B4D8               	btfsc	status,2,c
  5158  000766  EF7A  F003         	goto	l3706
  5159  00076A  EF86  F003         	goto	l3722
  5160  00076E                     l3728:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5164  00076E  5174               	movf	vfpfcnvrt@done& (0+255),w,b
  5165  000770  1175               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5166  000772  B4D8               	btfsc	status,2,c
  5167  000774  EFBE  F003         	goto	u2881
  5168  000778  EFC0  F003         	goto	u2880
  5169  00077C                     u2881:
  5170  00077C  EF8C  F003         	goto	l3726
  5171  000780                     u2880:
  5172  000780                     
  5173                           ; BSR set to: 0
  5174                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5175  000780  A055               	btfss	_flags^0,0,c
  5176  000782  EFC5  F003         	goto	u2891
  5177  000786  EFC7  F003         	goto	u2890
  5178  00078A                     u2891:
  5179  00078A  EFC8  F003         	goto	l3732
  5180  00078E                     u2890:
  5181  00078E                     
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5184  00078E  9255               	bcf	_flags^0,1,c
  5185  000790                     l3732:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5189  000790  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5190  000794  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5191  000798  CFDE FFF6          	movff	postinc2,tblptrl
  5192  00079C  CFDD FFF7          	movff	postdec2,tblptrh
  5193  0007A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5194  0007A0  6AF8               	clrf	tblptru,c
  5195  0007A2                     	endif
  5196  0007A2                     	if	0	;tblptru may be non-zero
  5197  0007A2                     	endif
  5198  0007A2  0008               	tblrd		*
  5199  0007A4  50F5               	movf	tablat,w,c
  5200  0007A6  0A2A               	xorlw	42
  5201  0007A8  A4D8               	btfss	status,2,c
  5202  0007AA  EFD9  F003         	goto	u2901
  5203  0007AE  EFDB  F003         	goto	u2900
  5204  0007B2                     u2901:
  5205  0007B2  EF04  F004         	goto	l3740
  5206  0007B6                     u2900:
  5207  0007B6                     
  5208                           ; BSR set to: 0
  5209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5210  0007B6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5211  0007BA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5212  0007BE  2ADE               	incf	postinc2,f,c
  5213  0007C0  0E00               	movlw	0
  5214  0007C2  22DD               	addwfc	postdec2,f,c
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5217  0007C4  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5218  0007C8  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5219  0007CC  CFDF F060          	movff	indf2,??_vfpfcnvrt
  5220  0007D0  0E02               	movlw	2
  5221  0007D2  26DE               	addwf	postinc2,f,c
  5222  0007D4  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  5223  0007D8  0E00               	movlw	0
  5224  0007DA  22DD               	addwfc	postdec2,f,c
  5225  0007DC  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5226  0007E0  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5227  0007E4  CFDE F053          	movff	postinc2,_width
  5228  0007E8  CFDD F054          	movff	postdec2,_width+1
  5229  0007EC                     
  5230                           ; BSR set to: 0
  5231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5232  0007EC  BE54               	btfsc	(_width+1)^0,7,c
  5233  0007EE  EFFD  F003         	goto	u2910
  5234  0007F2  EFFB  F003         	goto	u2911
  5235  0007F6                     u2911:
  5236  0007F6  EF49  F004         	goto	l3750
  5237  0007FA                     u2910:
  5238  0007FA                     
  5239                           ; BSR set to: 0
  5240                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5241  0007FA  8055               	bsf	_flags^0,0,c
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5244  0007FC  6C53               	negf	_width^0,c
  5245  0007FE  1E54               	comf	(_width+1)^0,f,c
  5246  000800  B0D8               	btfsc	status,0,c
  5247  000802  2A54               	incf	(_width+1)^0,f,c
  5248  000804  EF49  F004         	goto	l3750
  5249  000808                     l3740:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5253  000808  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5254  00080C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5255  000810  CFDE F00E          	movff	postinc2,atoi@s
  5256  000814  CFDD F00F          	movff	postdec2,atoi@s+1
  5257  000818  EC81  F009         	call	_atoi	;wreg free
  5258  00081C  C00E  F053         	movff	?_atoi,_width
  5259  000820  C00F  F054         	movff	?_atoi+1,_width+1
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5262  000824  EF1B  F004         	goto	l3744
  5263  000828                     l3742:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5267  000828  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5268  00082C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5269  000830  2ADE               	incf	postinc2,f,c
  5270  000832  0E00               	movlw	0
  5271  000834  22DD               	addwfc	postdec2,f,c
  5272  000836                     l3744:
  5273  000836  0ED0               	movlw	208
  5274  000838  0100               	movlb	0	; () banked
  5275  00083A  6F60               	movwf	??_vfpfcnvrt& (0+255),b
  5276  00083C  0EFF               	movlw	255
  5277  00083E  6F61               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5278  000840  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5279  000844  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5280  000848  CFDE FFF6          	movff	postinc2,tblptrl
  5281  00084C  CFDD FFF7          	movff	postdec2,tblptrh
  5282  000850                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5283  000850  6AF8               	clrf	tblptru,c
  5284  000852                     	endif
  5285  000852                     	if	0	;tblptru may be non-zero
  5286  000852                     	endif
  5287  000852  0008               	tblrd		*
  5288  000854  50F5               	movf	tablat,w,c
  5289  000856  6F62               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5290  000858  6B63               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5291  00085A  5160               	movf	??_vfpfcnvrt& (0+255),w,b
  5292  00085C  2762               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5293  00085E  5161               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5294  000860  2363               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5295  000862  5163               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5296  000864  E10A               	bnz	u2920
  5297  000866  0E0A               	movlw	10
  5298  000868  5D62               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5299  00086A  A0D8               	btfss	status,0,c
  5300  00086C  EF3A  F004         	goto	u2921
  5301  000870  EF3D  F004         	goto	u2920
  5302  000874                     u2921:
  5303  000874  0E01               	movlw	1
  5304  000876  EF3E  F004         	goto	u2930
  5305  00087A                     u2920:
  5306  00087A  0E00               	movlw	0
  5307  00087C                     u2930:
  5308  00087C  6F76               	movwf	_vfpfcnvrt$1723& (0+255),b
  5309  00087E  6B77               	clrf	(_vfpfcnvrt$1723+1)& (0+255),b
  5310  000880                     
  5311                           ; BSR set to: 0
  5312  000880  5176               	movf	_vfpfcnvrt$1723& (0+255),w,b
  5313  000882  1177               	iorwf	(_vfpfcnvrt$1723+1)& (0+255),w,b
  5314  000884  A4D8               	btfss	status,2,c
  5315  000886  EF47  F004         	goto	u2941
  5316  00088A  EF49  F004         	goto	u2940
  5317  00088E                     u2941:
  5318  00088E  EF14  F004         	goto	l3742
  5319  000892                     u2940:
  5320  000892                     l3750:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  5324  000892  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5325  000896  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5326  00089A  CFDE FFF6          	movff	postinc2,tblptrl
  5327  00089E  CFDD FFF7          	movff	postdec2,tblptrh
  5328  0008A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5329  0008A2  6AF8               	clrf	tblptru,c
  5330  0008A4                     	endif
  5331  0008A4                     	if	0	;tblptru may be non-zero
  5332  0008A4                     	endif
  5333  0008A4  0008               	tblrd		*
  5334  0008A6  50F5               	movf	tablat,w,c
  5335  0008A8  0A63               	xorlw	99
  5336  0008AA  A4D8               	btfss	status,2,c
  5337  0008AC  EF5A  F004         	goto	u2951
  5338  0008B0  EF5C  F004         	goto	u2950
  5339  0008B4                     u2951:
  5340  0008B4  EF83  F004         	goto	l3758
  5341  0008B8                     u2950:
  5342  0008B8                     
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  5345  0008B8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5346  0008BC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5347  0008C0  2ADE               	incf	postinc2,f,c
  5348  0008C2  0E00               	movlw	0
  5349  0008C4  22DD               	addwfc	postdec2,f,c
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5352  0008C6  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5353  0008CA  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5354  0008CE  CFDF F060          	movff	indf2,??_vfpfcnvrt
  5355  0008D2  0E02               	movlw	2
  5356  0008D4  26DE               	addwf	postinc2,f,c
  5357  0008D6  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  5358  0008DA  0E00               	movlw	0
  5359  0008DC  22DD               	addwfc	postdec2,f,c
  5360  0008DE  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5361  0008E2  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5362  0008E6  50DF               	movf	indf2,w,c
  5363  0008E8  6F78               	movwf	vfpfcnvrt@c& (0+255),b
  5364  0008EA                     
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  5367  0008EA  C04B  F012         	movff	vfpfcnvrt@fp,ctoa@fp
  5368  0008EE  C04C  F013         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5369  0008F2  C078  F014         	movff	vfpfcnvrt@c,ctoa@c
  5370  0008F6  EC80  F00C         	call	_ctoa	;wreg free
  5371  0008FA  C012  F04B         	movff	?_ctoa,?_vfpfcnvrt
  5372  0008FE  C013  F04C         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5373  000902  EFB1  F005         	goto	l1282
  5374  000906                     l3758:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5378  000906  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5379  00090A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5380  00090E  CFDE FFF6          	movff	postinc2,tblptrl
  5381  000912  CFDD FFF7          	movff	postdec2,tblptrh
  5382  000916                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5383  000916  6AF8               	clrf	tblptru,c
  5384  000918                     	endif
  5385  000918                     	if	0	;tblptru may be non-zero
  5386  000918                     	endif
  5387  000918  0008               	tblrd		*
  5388  00091A  50F5               	movf	tablat,w,c
  5389  00091C  0A64               	xorlw	100
  5390  00091E  B4D8               	btfsc	status,2,c
  5391  000920  EF94  F004         	goto	u2961
  5392  000924  EF96  F004         	goto	u2960
  5393  000928                     u2961:
  5394  000928  EFA9  F004         	goto	l3762
  5395  00092C                     u2960:
  5396  00092C                     
  5397                           ; BSR set to: 0
  5398  00092C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5399  000930  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5400  000934  CFDE FFF6          	movff	postinc2,tblptrl
  5401  000938  CFDD FFF7          	movff	postdec2,tblptrh
  5402  00093C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5403  00093C  6AF8               	clrf	tblptru,c
  5404  00093E                     	endif
  5405  00093E                     	if	0	;tblptru may be non-zero
  5406  00093E                     	endif
  5407  00093E  0008               	tblrd		*
  5408  000940  50F5               	movf	tablat,w,c
  5409  000942  0A69               	xorlw	105
  5410  000944  A4D8               	btfss	status,2,c
  5411  000946  EFA7  F004         	goto	u2971
  5412  00094A  EFA9  F004         	goto	u2970
  5413  00094E                     u2971:
  5414  00094E  EFE9  F004         	goto	l3768
  5415  000952                     u2970:
  5416  000952                     l3762:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5420  000952  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5421  000956  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5422  00095A  2ADE               	incf	postinc2,f,c
  5423  00095C  0E00               	movlw	0
  5424  00095E  22DD               	addwfc	postdec2,f,c
  5425                           
  5426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5427  000960  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5428  000964  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5429  000968  CFDF F060          	movff	indf2,??_vfpfcnvrt
  5430  00096C  0E02               	movlw	2
  5431  00096E  26DE               	addwf	postinc2,f,c
  5432  000970  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  5433  000974  0E00               	movlw	0
  5434  000976  22DD               	addwfc	postdec2,f,c
  5435  000978  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5436  00097C  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5437  000980  CFDE F064          	movff	postinc2,vfpfcnvrt@ll
  5438  000984  CFDD F065          	movff	postdec2,vfpfcnvrt@ll+1
  5439  000988  0E00               	movlw	0
  5440  00098A  BF65               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5441  00098C  0EFF               	movlw	-1
  5442  00098E  6F66               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5443  000990  6F67               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5444  000992  6F68               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5445  000994  6F69               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5446  000996  6F6A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5447  000998  6F6B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5448  00099A                     
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5451  00099A  C04B  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  5452  00099E  C04C  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5453  0009A2  C064  F026         	movff	vfpfcnvrt@ll,dtoa@d
  5454  0009A6  C065  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5455  0009AA  C066  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5456  0009AE  C067  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5457  0009B2  C068  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5458  0009B6  C069  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5459  0009BA  C06A  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5460  0009BE  C06B  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5461  0009C2  ECB2  F005         	call	_dtoa	;wreg free
  5462  0009C6  C024  F04B         	movff	?_dtoa,?_vfpfcnvrt
  5463  0009CA  C025  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5464  0009CE  EFB1  F005         	goto	l1282
  5465  0009D2                     l3768:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5469  0009D2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5470  0009D6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5471  0009DA  CFDE FFF6          	movff	postinc2,tblptrl
  5472  0009DE  CFDD FFF7          	movff	postdec2,tblptrh
  5473  0009E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5474  0009E2  6AF8               	clrf	tblptru,c
  5475  0009E4                     	endif
  5476  0009E4                     	if	0	;tblptru may be non-zero
  5477  0009E4                     	endif
  5478  0009E4  0008               	tblrd		*
  5479  0009E6  50F5               	movf	tablat,w,c
  5480  0009E8  0A78               	xorlw	120
  5481  0009EA  B4D8               	btfsc	status,2,c
  5482  0009EC  EFFA  F004         	goto	u2981
  5483  0009F0  EFFC  F004         	goto	u2980
  5484  0009F4                     u2981:
  5485  0009F4  EF0F  F005         	goto	l3772
  5486  0009F8                     u2980:
  5487  0009F8                     
  5488                           ; BSR set to: 0
  5489  0009F8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5490  0009FC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5491  000A00  CFDE FFF6          	movff	postinc2,tblptrl
  5492  000A04  CFDD FFF7          	movff	postdec2,tblptrh
  5493  000A08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5494  000A08  6AF8               	clrf	tblptru,c
  5495  000A0A                     	endif
  5496  000A0A                     	if	0	;tblptru may be non-zero
  5497  000A0A                     	endif
  5498  000A0A  0008               	tblrd		*
  5499  000A0C  50F5               	movf	tablat,w,c
  5500  000A0E  0A58               	xorlw	88
  5501  000A10  A4D8               	btfss	status,2,c
  5502  000A12  EF0D  F005         	goto	u2991
  5503  000A16  EF0F  F005         	goto	u2990
  5504  000A1A                     u2991:
  5505  000A1A  EF5E  F005         	goto	l3782
  5506  000A1E                     u2990:
  5507  000A1E                     l3772:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5511  000A1E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5512  000A22  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5513  000A26  CFDE FFF6          	movff	postinc2,tblptrl
  5514  000A2A  CFDD FFF7          	movff	postdec2,tblptrh
  5515  000A2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5516  000A2E  6AF8               	clrf	tblptru,c
  5517  000A30                     	endif
  5518  000A30                     	if	0	;tblptru may be non-zero
  5519  000A30                     	endif
  5520  000A30  0008               	tblrd		*
  5521  000A32  CFF5 F078          	movff	tablat,vfpfcnvrt@c
  5522  000A36                     
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5525  000A36  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5526  000A3A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5527  000A3E  2ADE               	incf	postinc2,f,c
  5528  000A40  0E00               	movlw	0
  5529  000A42  22DD               	addwfc	postdec2,f,c
  5530  000A44                     
  5531                           ; BSR set to: 0
  5532                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5533  000A44  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5534  000A48  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5535  000A4C  CFDF F060          	movff	indf2,??_vfpfcnvrt
  5536  000A50  0E02               	movlw	2
  5537  000A52  26DE               	addwf	postinc2,f,c
  5538  000A54  CFDF F061          	movff	indf2,??_vfpfcnvrt+1
  5539  000A58  0E00               	movlw	0
  5540  000A5A  22DD               	addwfc	postdec2,f,c
  5541  000A5C  C060  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5542  000A60  C061  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5543  000A64  CFDE F062          	movff	postinc2,??_vfpfcnvrt+2
  5544  000A68  CFDD F063          	movff	postdec2,??_vfpfcnvrt+3
  5545  000A6C  C062  F06C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5546  000A70  C063  F06D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5547  000A74  6B6E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5548  000A76  6B6F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5549  000A78  6B70               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5550  000A7A  6B71               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5551  000A7C  6B72               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5552  000A7E  6B73               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5553  000A80                     
  5554                           ; BSR set to: 0
  5555                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5556  000A80  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
  5557  000A84  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5558  000A88  C06C  F026         	movff	vfpfcnvrt@llu,xtoa@d
  5559  000A8C  C06D  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5560  000A90  C06E  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5561  000A94  C06F  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5562  000A98  C070  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5563  000A9C  C071  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5564  000AA0  C072  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5565  000AA4  C073  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5566  000AA8  C078  F02E         	movff	vfpfcnvrt@c,xtoa@x
  5567  000AAC  EC21  F007         	call	_xtoa	;wreg free
  5568  000AB0  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
  5569  000AB4  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5570  000AB8  EFB1  F005         	goto	l1282
  5571  000ABC                     l3782:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5575  000ABC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5576  000AC0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5577  000AC4  CFDE FFF6          	movff	postinc2,tblptrl
  5578  000AC8  CFDD FFF7          	movff	postdec2,tblptrh
  5579  000ACC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5580  000ACC  6AF8               	clrf	tblptru,c
  5581  000ACE                     	endif
  5582  000ACE                     	if	0	;tblptru may be non-zero
  5583  000ACE                     	endif
  5584  000ACE  0008               	tblrd		*
  5585  000AD0  50F5               	movf	tablat,w,c
  5586  000AD2  0A25               	xorlw	37
  5587  000AD4  A4D8               	btfss	status,2,c
  5588  000AD6  EF6F  F005         	goto	u3001
  5589  000ADA  EF71  F005         	goto	u3000
  5590  000ADE                     u3001:
  5591  000ADE  EF88  F005         	goto	l3792
  5592  000AE2                     u3000:
  5593  000AE2                     
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5596  000AE2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5597  000AE6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5598  000AEA  2ADE               	incf	postinc2,f,c
  5599  000AEC  0E00               	movlw	0
  5600  000AEE  22DD               	addwfc	postdec2,f,c
  5601  000AF0                     
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5604  000AF0  0E00               	movlw	0
  5605  000AF2  6E0A               	movwf	(fputc@c+1)^0,c
  5606  000AF4  0E25               	movlw	37
  5607  000AF6  6E09               	movwf	fputc@c^0,c
  5608  000AF8  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  5609  000AFC  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5610  000B00  ECEE  F00D         	call	_fputc	;wreg free
  5611  000B04                     l3788:
  5612                           
  5613                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5614  000B04  0E00               	movlw	0
  5615  000B06  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  5616  000B08  0E01               	movlw	1
  5617  000B0A  6E4B               	movwf	?_vfpfcnvrt^0,c
  5618  000B0C  EFB1  F005         	goto	l1282
  5619  000B10                     l3792:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5623  000B10  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5624  000B14  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5625  000B18  2ADE               	incf	postinc2,f,c
  5626  000B1A  0E00               	movlw	0
  5627  000B1C  22DD               	addwfc	postdec2,f,c
  5628  000B1E                     
  5629                           ; BSR set to: 0
  5630                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5631  000B1E  0E00               	movlw	0
  5632  000B20  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  5633  000B22  0E00               	movlw	0
  5634  000B24  6E4B               	movwf	?_vfpfcnvrt^0,c
  5635  000B26  EFB1  F005         	goto	l1282
  5636  000B2A                     l3798:
  5637                           
  5638                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5639  000B2A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5640  000B2E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5641  000B32  CFDE FFF6          	movff	postinc2,tblptrl
  5642  000B36  CFDD FFF7          	movff	postdec2,tblptrh
  5643  000B3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5644  000B3A  6AF8               	clrf	tblptru,c
  5645  000B3C                     	endif
  5646  000B3C                     	if	0	;tblptru may be non-zero
  5647  000B3C                     	endif
  5648  000B3C  0008               	tblrd		*
  5649  000B3E  50F5               	movf	tablat,w,c
  5650  000B40  6E09               	movwf	fputc@c^0,c
  5651  000B42  6A0A               	clrf	(fputc@c+1)^0,c
  5652  000B44  C04B  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  5653  000B48  C04C  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5654  000B4C  ECEE  F00D         	call	_fputc	;wreg free
  5655  000B50                     
  5656                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5657  000B50  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5658  000B54  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5659  000B58  2ADE               	incf	postinc2,f,c
  5660  000B5A  0E00               	movlw	0
  5661  000B5C  22DD               	addwfc	postdec2,f,c
  5662  000B5E  EF82  F005         	goto	l3788
  5663  000B62                     l1282:
  5664  000B62  0012               	return		;funcret
  5665  000B64                     __end_of_vfpfcnvrt:
  5666                           	callstack 0
  5667                           
  5668 ;; *************** function _xtoa *****************
  5669 ;; Defined at:
  5670 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  5673 ;;		 -> NULL(0), 
  5674 ;;  d               8   37[COMRAM] unsigned long long 
  5675 ;;  x               1   45[COMRAM] unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  n               8   62[COMRAM] unsigned long long 
  5678 ;;  c               2   72[COMRAM] int 
  5679 ;;  i               2   70[COMRAM] int 
  5680 ;;  w               2   60[COMRAM] int 
  5681 ;;  p               2   58[COMRAM] int 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  2   35[COMRAM] int 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5691 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;Total ram usage:       39 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    9
  5698 ;; This function calls:
  5699 ;;		_isalpha
  5700 ;;		_isupper
  5701 ;;		_pad
  5702 ;;		_toupper
  5703 ;; This function is called by:
  5704 ;;		_vfpfcnvrt
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text23
  5709  000E42                     __ptext23:
  5710                           	callstack 0
  5711  000E42                     _xtoa:
  5712                           	callstack 18
  5713  000E42                     
  5714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5715  000E42  0100               	movlb	0	; () banked
  5716  000E44  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  5717  000E46  EF27  F007         	goto	u2041
  5718  000E4A  EF29  F007         	goto	u2040
  5719  000E4E                     u2041:
  5720  000E4E  EF2A  F007         	goto	l2836
  5721  000E52                     u2040:
  5722  000E52                     
  5723                           ; BSR set to: 0
  5724                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5725  000E52  9255               	bcf	_flags^0,1,c
  5726  000E54                     l2836:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5730  000E54  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  5731  000E56  EF37  F007         	goto	u2050
  5732  000E5A  51A1               	movf	(_prec+1)& (0+255),w,b
  5733  000E5C  E106               	bnz	u2051
  5734  000E5E  05A0               	decf	_prec& (0+255),w,b
  5735  000E60  B0D8               	btfsc	status,0,c
  5736  000E62  EF35  F007         	goto	u2051
  5737  000E66  EF37  F007         	goto	u2050
  5738  000E6A                     u2051:
  5739  000E6A  EF3D  F007         	goto	l1230
  5740  000E6E                     u2050:
  5741  000E6E                     
  5742                           ; BSR set to: 0
  5743  000E6E  0E00               	movlw	0
  5744  000E70  6E3C               	movwf	(xtoa@p+1)^0,c
  5745  000E72  0E01               	movlw	1
  5746  000E74  6E3B               	movwf	xtoa@p^0,c
  5747  000E76  EF41  F007         	goto	l1232
  5748  000E7A                     l1230:
  5749                           
  5750                           ; BSR set to: 0
  5751  000E7A  C0A0  F03B         	movff	_prec,xtoa@p
  5752  000E7E  C0A1  F03C         	movff	_prec+1,xtoa@p+1
  5753  000E82                     l1232:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5757  000E82  C053  F03D         	movff	_width,xtoa@w
  5758  000E86  C054  F03E         	movff	_width+1,xtoa@w+1
  5759                           
  5760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5761  000E8A  A855               	btfss	_flags^0,4,c
  5762  000E8C  EF4A  F007         	goto	u2061
  5763  000E90  EF4C  F007         	goto	u2060
  5764  000E94                     u2061:
  5765  000E94  EF50  F007         	goto	l2842
  5766  000E98                     u2060:
  5767  000E98                     
  5768                           ; BSR set to: 0
  5769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5770  000E98  0EFE               	movlw	254
  5771  000E9A  263D               	addwf	xtoa@w^0,f,c
  5772  000E9C  0EFF               	movlw	255
  5773  000E9E  223E               	addwfc	(xtoa@w+1)^0,f,c
  5774  000EA0                     l2842:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5778  000EA0  C026  F03F         	movff	xtoa@d,xtoa@n
  5779  000EA4  C027  F040         	movff	xtoa@d+1,xtoa@n+1
  5780  000EA8  C028  F041         	movff	xtoa@d+2,xtoa@n+2
  5781  000EAC  C029  F042         	movff	xtoa@d+3,xtoa@n+3
  5782  000EB0  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
  5783  000EB4  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
  5784  000EB8  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
  5785  000EBC  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
  5786  000EC0                     
  5787                           ; BSR set to: 0
  5788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5789  000EC0  0E00               	movlw	0
  5790  000EC2  6E48               	movwf	(xtoa@i+1)^0,c
  5791  000EC4  0E1F               	movlw	31
  5792  000EC6  6E47               	movwf	xtoa@i^0,c
  5793  000EC8                     
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5796  000EC8  0E00               	movlw	0
  5797  000ECA  6FCA               	movwf	(_dbuf+31)& (0+255),b
  5798                           
  5799                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5800  000ECC  EF1B  F008         	goto	l2878
  5801  000ED0                     l2848:
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  5804  000ED0  0647               	decf	xtoa@i^0,f,c
  5805  000ED2  A0D8               	btfss	status,0,c
  5806  000ED4  0648               	decf	(xtoa@i+1)^0,f,c
  5807  000ED6                     
  5808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5809  000ED6  0E0F               	movlw	15
  5810  000ED8  143F               	andwf	xtoa@n^0,w,c
  5811  000EDA  6E49               	movwf	xtoa@c^0,c
  5812  000EDC  6A4A               	clrf	(xtoa@c+1)^0,c
  5813  000EDE                     
  5814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5815  000EDE  BE4A               	btfsc	(xtoa@c+1)^0,7,c
  5816  000EE0  EF7B  F007         	goto	u2071
  5817  000EE4  504A               	movf	(xtoa@c+1)^0,w,c
  5818  000EE6  E109               	bnz	u2070
  5819  000EE8  0E0A               	movlw	10
  5820  000EEA  5C49               	subwf	xtoa@c^0,w,c
  5821  000EEC  A0D8               	btfss	status,0,c
  5822  000EEE  EF7B  F007         	goto	u2071
  5823  000EF2  EF7D  F007         	goto	u2070
  5824  000EF6                     u2071:
  5825  000EF6  EF85  F007         	goto	l2856
  5826  000EFA                     u2070:
  5827  000EFA  0E57               	movlw	87
  5828  000EFC  2449               	addwf	xtoa@c^0,w,c
  5829  000EFE  6E49               	movwf	xtoa@c^0,c
  5830  000F00  0E00               	movlw	0
  5831  000F02  204A               	addwfc	(xtoa@c+1)^0,w,c
  5832  000F04  6E4A               	movwf	(xtoa@c+1)^0,c
  5833  000F06  EF8B  F007         	goto	l1239
  5834  000F0A                     l2856:
  5835  000F0A  0E30               	movlw	48
  5836  000F0C  2449               	addwf	xtoa@c^0,w,c
  5837  000F0E  6E49               	movwf	xtoa@c^0,c
  5838  000F10  0E00               	movlw	0
  5839  000F12  204A               	addwfc	(xtoa@c+1)^0,w,c
  5840  000F14  6E4A               	movwf	(xtoa@c+1)^0,c
  5841  000F16                     l1239:
  5842  000F16  0EBF               	movlw	191
  5843  000F18  6E2F               	movwf	??_xtoa^0,c
  5844  000F1A  0EFF               	movlw	255
  5845  000F1C  6E30               	movwf	(??_xtoa+1)^0,c
  5846  000F1E  502E               	movf	xtoa@x^0,w,c
  5847  000F20  6E31               	movwf	(??_xtoa+2)^0,c
  5848  000F22  6A32               	clrf	(??_xtoa+3)^0,c
  5849  000F24  502F               	movf	??_xtoa^0,w,c
  5850  000F26  2631               	addwf	(??_xtoa+2)^0,f,c
  5851  000F28  5030               	movf	(??_xtoa+1)^0,w,c
  5852  000F2A  2232               	addwfc	(??_xtoa+3)^0,f,c
  5853  000F2C  5032               	movf	(??_xtoa+3)^0,w,c
  5854  000F2E  E10A               	bnz	u2080
  5855  000F30  0E1A               	movlw	26
  5856  000F32  5C31               	subwf	(??_xtoa+2)^0,w,c
  5857  000F34  A0D8               	btfss	status,0,c
  5858  000F36  EF9F  F007         	goto	u2081
  5859  000F3A  EFA2  F007         	goto	u2080
  5860  000F3E                     u2081:
  5861  000F3E  0E01               	movlw	1
  5862  000F40  EFA3  F007         	goto	u2090
  5863  000F44                     u2080:
  5864  000F44  0E00               	movlw	0
  5865  000F46                     u2090:
  5866  000F46  6E37               	movwf	_xtoa$1708^0,c
  5867  000F48  6A38               	clrf	(_xtoa$1708+1)^0,c
  5868  000F4A  5037               	movf	_xtoa$1708^0,w,c
  5869  000F4C  1038               	iorwf	(_xtoa$1708+1)^0,w,c
  5870  000F4E  B4D8               	btfsc	status,2,c
  5871  000F50  EFAC  F007         	goto	u2101
  5872  000F54  EFAE  F007         	goto	u2100
  5873  000F58                     u2101:
  5874  000F58  EFDE  F007         	goto	l2870
  5875  000F5C                     u2100:
  5876  000F5C  0E9F               	movlw	159
  5877  000F5E  6E2F               	movwf	??_xtoa^0,c
  5878  000F60  0EFF               	movlw	255
  5879  000F62  6E30               	movwf	(??_xtoa+1)^0,c
  5880  000F64  0E20               	movlw	32
  5881  000F66  1049               	iorwf	xtoa@c^0,w,c
  5882  000F68  6E31               	movwf	(??_xtoa+2)^0,c
  5883  000F6A  0E00               	movlw	0
  5884  000F6C  104A               	iorwf	(xtoa@c+1)^0,w,c
  5885  000F6E  6E32               	movwf	(??_xtoa+3)^0,c
  5886  000F70  502F               	movf	??_xtoa^0,w,c
  5887  000F72  2631               	addwf	(??_xtoa+2)^0,f,c
  5888  000F74  5030               	movf	(??_xtoa+1)^0,w,c
  5889  000F76  2232               	addwfc	(??_xtoa+3)^0,f,c
  5890  000F78  5032               	movf	(??_xtoa+3)^0,w,c
  5891  000F7A  E10A               	bnz	u2110
  5892  000F7C  0E1A               	movlw	26
  5893  000F7E  5C31               	subwf	(??_xtoa+2)^0,w,c
  5894  000F80  A0D8               	btfss	status,0,c
  5895  000F82  EFC5  F007         	goto	u2111
  5896  000F86  EFC8  F007         	goto	u2110
  5897  000F8A                     u2111:
  5898  000F8A  0E01               	movlw	1
  5899  000F8C  EFC9  F007         	goto	u2120
  5900  000F90                     u2110:
  5901  000F90  0E00               	movlw	0
  5902  000F92                     u2120:
  5903  000F92  6E39               	movwf	_xtoa$1709^0,c
  5904  000F94  6A3A               	clrf	(_xtoa$1709+1)^0,c
  5905  000F96  5039               	movf	_xtoa$1709^0,w,c
  5906  000F98  103A               	iorwf	(_xtoa$1709+1)^0,w,c
  5907  000F9A  B4D8               	btfsc	status,2,c
  5908  000F9C  EFD2  F007         	goto	u2131
  5909  000FA0  EFD4  F007         	goto	u2130
  5910  000FA4                     u2131:
  5911  000FA4  EFDE  F007         	goto	l2870
  5912  000FA8                     u2130:
  5913  000FA8                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5915  000FA8  C049  F00D         	movff	xtoa@c,toupper@c
  5916  000FAC  C04A  F00E         	movff	xtoa@c+1,toupper@c+1
  5917  000FB0  ECB2  F00E         	call	_toupper	;wreg free
  5918  000FB4  C00D  F049         	movff	?_toupper,xtoa@c
  5919  000FB8  C00E  F04A         	movff	?_toupper+1,xtoa@c+1
  5920  000FBC                     l2870:
  5921                           
  5922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5923  000FBC  0EAB               	movlw	low _dbuf
  5924  000FBE  2447               	addwf	xtoa@i^0,w,c
  5925  000FC0  6ED9               	movwf	fsr2l,c
  5926  000FC2  0E00               	movlw	high _dbuf
  5927  000FC4  2048               	addwfc	(xtoa@i+1)^0,w,c
  5928  000FC6  6EDA               	movwf	fsr2h,c
  5929  000FC8  C049  FFDF         	movff	xtoa@c,indf2
  5930  000FCC                     
  5931                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  5932  000FCC  063B               	decf	xtoa@p^0,f,c
  5933  000FCE  A0D8               	btfss	status,0,c
  5934  000FD0  063C               	decf	(xtoa@p+1)^0,f,c
  5935  000FD2                     
  5936                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  5937  000FD2  063D               	decf	xtoa@w^0,f,c
  5938  000FD4  A0D8               	btfss	status,0,c
  5939  000FD6  063E               	decf	(xtoa@w+1)^0,f,c
  5940  000FD8                     
  5941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5942  000FD8  C03F  F02F         	movff	xtoa@n,??_xtoa
  5943  000FDC  C040  F030         	movff	xtoa@n+1,??_xtoa+1
  5944  000FE0  C041  F031         	movff	xtoa@n+2,??_xtoa+2
  5945  000FE4  C042  F032         	movff	xtoa@n+3,??_xtoa+3
  5946  000FE8  C043  F033         	movff	xtoa@n+4,??_xtoa+4
  5947  000FEC  C044  F034         	movff	xtoa@n+5,??_xtoa+5
  5948  000FF0  C045  F035         	movff	xtoa@n+6,??_xtoa+6
  5949  000FF4  C046  F036         	movff	xtoa@n+7,??_xtoa+7
  5950  000FF8  0E05               	movlw	5
  5951  000FFA  EF08  F008         	goto	u2140
  5952  000FFE                     u2145:
  5953  000FFE  90D8               	bcf	status,0,c
  5954  001000  3236               	rrcf	(??_xtoa+7)^0,f,c
  5955  001002  3235               	rrcf	(??_xtoa+6)^0,f,c
  5956  001004  3234               	rrcf	(??_xtoa+5)^0,f,c
  5957  001006  3233               	rrcf	(??_xtoa+4)^0,f,c
  5958  001008  3232               	rrcf	(??_xtoa+3)^0,f,c
  5959  00100A  3231               	rrcf	(??_xtoa+2)^0,f,c
  5960  00100C  3230               	rrcf	(??_xtoa+1)^0,f,c
  5961  00100E  322F               	rrcf	??_xtoa^0,f,c
  5962  001010                     u2140:
  5963  001010  2EE8               	decfsz	wreg,f,c
  5964  001012  EFFF  F007         	goto	u2145
  5965  001016  C02F  F03F         	movff	??_xtoa,xtoa@n
  5966  00101A  C030  F040         	movff	??_xtoa+1,xtoa@n+1
  5967  00101E  C031  F041         	movff	??_xtoa+2,xtoa@n+2
  5968  001022  C032  F042         	movff	??_xtoa+3,xtoa@n+3
  5969  001026  C033  F043         	movff	??_xtoa+4,xtoa@n+4
  5970  00102A  C034  F044         	movff	??_xtoa+5,xtoa@n+5
  5971  00102E  C035  F045         	movff	??_xtoa+6,xtoa@n+6
  5972  001032  C036  F046         	movff	??_xtoa+7,xtoa@n+7
  5973  001036                     l2878:
  5974                           
  5975                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5976  001036  BE48               	btfsc	(xtoa@i+1)^0,7,c
  5977  001038  EF27  F008         	goto	u2151
  5978  00103C  5048               	movf	(xtoa@i+1)^0,w,c
  5979  00103E  E109               	bnz	u2150
  5980  001040  0E02               	movlw	2
  5981  001042  5C47               	subwf	xtoa@i^0,w,c
  5982  001044  A0D8               	btfss	status,0,c
  5983  001046  EF27  F008         	goto	u2151
  5984  00104A  EF29  F008         	goto	u2150
  5985  00104E                     u2151:
  5986  00104E  EF59  F008         	goto	l1253
  5987  001052                     u2150:
  5988  001052  503F               	movf	xtoa@n^0,w,c
  5989  001054  1040               	iorwf	(xtoa@n+1)^0,w,c
  5990  001056  1041               	iorwf	(xtoa@n+2)^0,w,c
  5991  001058  1042               	iorwf	(xtoa@n+3)^0,w,c
  5992  00105A  1043               	iorwf	(xtoa@n+4)^0,w,c
  5993  00105C  1044               	iorwf	(xtoa@n+5)^0,w,c
  5994  00105E  1045               	iorwf	(xtoa@n+6)^0,w,c
  5995  001060  1046               	iorwf	(xtoa@n+7)^0,w,c
  5996  001062  A4D8               	btfss	status,2,c
  5997  001064  EF36  F008         	goto	u2161
  5998  001068  EF38  F008         	goto	u2160
  5999  00106C                     u2161:
  6000  00106C  EF68  F007         	goto	l2848
  6001  001070                     u2160:
  6002  001070  BE3C               	btfsc	(xtoa@p+1)^0,7,c
  6003  001072  EF45  F008         	goto	u2170
  6004  001076  503C               	movf	(xtoa@p+1)^0,w,c
  6005  001078  E106               	bnz	u2171
  6006  00107A  043B               	decf	xtoa@p^0,w,c
  6007  00107C  B0D8               	btfsc	status,0,c
  6008  00107E  EF43  F008         	goto	u2171
  6009  001082  EF45  F008         	goto	u2170
  6010  001086                     u2171:
  6011  001086  EF68  F007         	goto	l2848
  6012  00108A                     u2170:
  6013  00108A  BE3E               	btfsc	(xtoa@w+1)^0,7,c
  6014  00108C  EF50  F008         	goto	u2181
  6015  001090  503E               	movf	(xtoa@w+1)^0,w,c
  6016  001092  E108               	bnz	u2180
  6017  001094  043D               	decf	xtoa@w^0,w,c
  6018  001096  A0D8               	btfss	status,0,c
  6019  001098  EF50  F008         	goto	u2181
  6020  00109C  EF52  F008         	goto	u2180
  6021  0010A0                     u2181:
  6022  0010A0  EF59  F008         	goto	l1253
  6023  0010A4                     u2180:
  6024  0010A4  B255               	btfsc	_flags^0,1,c
  6025  0010A6  EF57  F008         	goto	u2191
  6026  0010AA  EF59  F008         	goto	u2190
  6027  0010AE                     u2191:
  6028  0010AE  EF68  F007         	goto	l2848
  6029  0010B2                     u2190:
  6030  0010B2                     l1253:
  6031                           
  6032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  6033  0010B2  A855               	btfss	_flags^0,4,c
  6034  0010B4  EF5E  F008         	goto	u2201
  6035  0010B8  EF60  F008         	goto	u2200
  6036  0010BC                     u2201:
  6037  0010BC  EF76  F008         	goto	l2894
  6038  0010C0                     u2200:
  6039  0010C0                     
  6040                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  6041  0010C0  0647               	decf	xtoa@i^0,f,c
  6042  0010C2  A0D8               	btfss	status,0,c
  6043  0010C4  0648               	decf	(xtoa@i+1)^0,f,c
  6044  0010C6                     
  6045                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  6046  0010C6  0EAB               	movlw	low _dbuf
  6047  0010C8  2447               	addwf	xtoa@i^0,w,c
  6048  0010CA  6ED9               	movwf	fsr2l,c
  6049  0010CC  0E00               	movlw	high _dbuf
  6050  0010CE  2048               	addwfc	(xtoa@i+1)^0,w,c
  6051  0010D0  6EDA               	movwf	fsr2h,c
  6052  0010D2  C02E  FFDF         	movff	xtoa@x,indf2
  6053  0010D6                     
  6054                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  6055  0010D6  0647               	decf	xtoa@i^0,f,c
  6056  0010D8  A0D8               	btfss	status,0,c
  6057  0010DA  0648               	decf	(xtoa@i+1)^0,f,c
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  6060  0010DC  0EAB               	movlw	low _dbuf
  6061  0010DE  2447               	addwf	xtoa@i^0,w,c
  6062  0010E0  6ED9               	movwf	fsr2l,c
  6063  0010E2  0E00               	movlw	high _dbuf
  6064  0010E4  2048               	addwfc	(xtoa@i+1)^0,w,c
  6065  0010E6  6EDA               	movwf	fsr2h,c
  6066  0010E8  0E30               	movlw	48
  6067  0010EA  6EDF               	movwf	indf2,c
  6068  0010EC                     l2894:
  6069                           
  6070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  6071  0010EC  C024  F019         	movff	xtoa@fp,pad@fp
  6072  0010F0  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
  6073  0010F4  0EAB               	movlw	low _dbuf
  6074  0010F6  2447               	addwf	xtoa@i^0,w,c
  6075  0010F8  6E1B               	movwf	pad@buf^0,c
  6076  0010FA  0E00               	movlw	high _dbuf
  6077  0010FC  2048               	addwfc	(xtoa@i+1)^0,w,c
  6078  0010FE  6E1C               	movwf	(pad@buf+1)^0,c
  6079  001100  C03D  F01D         	movff	xtoa@w,pad@p
  6080  001104  C03E  F01E         	movff	xtoa@w+1,pad@p+1
  6081  001108  ECEA  F00C         	call	_pad	;wreg free
  6082  00110C  C019  F024         	movff	?_pad,?_xtoa
  6083  001110  C01A  F025         	movff	?_pad+1,?_xtoa+1
  6084  001114  0012               	return		;funcret
  6085  001116                     __end_of_xtoa:
  6086                           	callstack 0
  6087                           
  6088 ;; *************** function _toupper *****************
  6089 ;; Defined at:
  6090 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  c               2   12[COMRAM] int 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2   12[COMRAM] int 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;Total ram usage:        8 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    5
  6111 ;; This function calls:
  6112 ;;		_islower
  6113 ;; This function is called by:
  6114 ;;		_xtoa
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text24
  6119  001D64                     __ptext24:
  6120                           	callstack 0
  6121  001D64                     _toupper:
  6122                           	callstack 21
  6123  001D64  0E9F               	movlw	159
  6124  001D66  6E0F               	movwf	??_toupper^0,c
  6125  001D68  0EFF               	movlw	255
  6126  001D6A  6E10               	movwf	(??_toupper+1)^0,c
  6127  001D6C  C00D  F011         	movff	toupper@c,??_toupper+2
  6128  001D70  C00E  F012         	movff	toupper@c+1,??_toupper+3
  6129  001D74  500F               	movf	??_toupper^0,w,c
  6130  001D76  2611               	addwf	(??_toupper+2)^0,f,c
  6131  001D78  5010               	movf	(??_toupper+1)^0,w,c
  6132  001D7A  2212               	addwfc	(??_toupper+3)^0,f,c
  6133  001D7C  5012               	movf	(??_toupper+3)^0,w,c
  6134  001D7E  E10A               	bnz	u1770
  6135  001D80  0E1A               	movlw	26
  6136  001D82  5C11               	subwf	(??_toupper+2)^0,w,c
  6137  001D84  A0D8               	btfss	status,0,c
  6138  001D86  EFC7  F00E         	goto	u1771
  6139  001D8A  EFCA  F00E         	goto	u1770
  6140  001D8E                     u1771:
  6141  001D8E  0E01               	movlw	1
  6142  001D90  EFCB  F00E         	goto	u1780
  6143  001D94                     u1770:
  6144  001D94  0E00               	movlw	0
  6145  001D96                     u1780:
  6146  001D96  6E13               	movwf	_toupper$1821^0,c
  6147  001D98  6A14               	clrf	(_toupper$1821+1)^0,c
  6148  001D9A  5013               	movf	_toupper$1821^0,w,c
  6149  001D9C  1014               	iorwf	(_toupper$1821+1)^0,w,c
  6150  001D9E  B4D8               	btfsc	status,2,c
  6151  001DA0  EFD4  F00E         	goto	u1791
  6152  001DA4  EFD6  F00E         	goto	u1790
  6153  001DA8                     u1791:
  6154  001DA8  EFDC  F00E         	goto	l1390
  6155  001DAC                     u1790:
  6156  001DAC  0E5F               	movlw	95
  6157  001DAE  140D               	andwf	toupper@c^0,w,c
  6158  001DB0  6E0D               	movwf	?_toupper^0,c
  6159  001DB2  6A0E               	clrf	(?_toupper+1)^0,c
  6160  001DB4  EFE0  F00E         	goto	l1395
  6161  001DB8                     l1390:
  6162  001DB8  C00D  F00D         	movff	toupper@c,?_toupper
  6163  001DBC  C00E  F00E         	movff	toupper@c+1,?_toupper+1
  6164  001DC0                     l1395:
  6165  001DC0  0012               	return		;funcret
  6166  001DC2                     __end_of_toupper:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _islower *****************
  6170 ;; Defined at:
  6171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  c               2    6[COMRAM] int 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2    6[COMRAM] int 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;Total ram usage:        6 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    4
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_toupper
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text25
  6200  001F4C                     __ptext25:
  6201                           	callstack 0
  6202  001F4C                     _islower:
  6203                           	callstack 21
  6204  001F4C  0E9F               	movlw	159
  6205  001F4E  6E09               	movwf	??_islower^0,c
  6206  001F50  0EFF               	movlw	255
  6207  001F52  6E0A               	movwf	(??_islower+1)^0,c
  6208  001F54  C007  F00B         	movff	islower@c,??_islower+2
  6209  001F58  C008  F00C         	movff	islower@c+1,??_islower+3
  6210  001F5C  5009               	movf	??_islower^0,w,c
  6211  001F5E  260B               	addwf	(??_islower+2)^0,f,c
  6212  001F60  500A               	movf	(??_islower+1)^0,w,c
  6213  001F62  220C               	addwfc	(??_islower+3)^0,f,c
  6214  001F64  500C               	movf	(??_islower+3)^0,w,c
  6215  001F66  E10A               	bnz	u1530
  6216  001F68  0E1A               	movlw	26
  6217  001F6A  5C0B               	subwf	(??_islower+2)^0,w,c
  6218  001F6C  A0D8               	btfss	status,0,c
  6219  001F6E  EFBB  F00F         	goto	u1531
  6220  001F72  EFBE  F00F         	goto	u1530
  6221  001F76                     u1531:
  6222  001F76  0E01               	movlw	1
  6223  001F78  EFBF  F00F         	goto	u1540
  6224  001F7C                     u1530:
  6225  001F7C  0E00               	movlw	0
  6226  001F7E                     u1540:
  6227  001F7E  6E07               	movwf	?_islower^0,c
  6228  001F80  6A08               	clrf	(?_islower+1)^0,c
  6229  001F82  0012               	return		;funcret
  6230  001F84                     __end_of_islower:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _isupper *****************
  6234 ;; Defined at:
  6235 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  c               2    6[COMRAM] int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  2    6[COMRAM] int 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;Total ram usage:        6 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    4
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_xtoa
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text26
  6264  001F84                     __ptext26:
  6265                           	callstack 0
  6266  001F84                     _isupper:
  6267                           	callstack 22
  6268  001F84  0EBF               	movlw	191
  6269  001F86  6E09               	movwf	??_isupper^0,c
  6270  001F88  0EFF               	movlw	255
  6271  001F8A  6E0A               	movwf	(??_isupper+1)^0,c
  6272  001F8C  C007  F00B         	movff	isupper@c,??_isupper+2
  6273  001F90  C008  F00C         	movff	isupper@c+1,??_isupper+3
  6274  001F94  5009               	movf	??_isupper^0,w,c
  6275  001F96  260B               	addwf	(??_isupper+2)^0,f,c
  6276  001F98  500A               	movf	(??_isupper+1)^0,w,c
  6277  001F9A  220C               	addwfc	(??_isupper+3)^0,f,c
  6278  001F9C  500C               	movf	(??_isupper+3)^0,w,c
  6279  001F9E  E10A               	bnz	u1730
  6280  001FA0  0E1A               	movlw	26
  6281  001FA2  5C0B               	subwf	(??_isupper+2)^0,w,c
  6282  001FA4  A0D8               	btfss	status,0,c
  6283  001FA6  EFD7  F00F         	goto	u1731
  6284  001FAA  EFDA  F00F         	goto	u1730
  6285  001FAE                     u1731:
  6286  001FAE  0E01               	movlw	1
  6287  001FB0  EFDB  F00F         	goto	u1740
  6288  001FB4                     u1730:
  6289  001FB4  0E00               	movlw	0
  6290  001FB6                     u1740:
  6291  001FB6  6E07               	movwf	?_isupper^0,c
  6292  001FB8  6A08               	clrf	(?_isupper+1)^0,c
  6293  001FBA  0012               	return		;funcret
  6294  001FBC                     __end_of_isupper:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function _isalpha *****************
  6298 ;; Defined at:
  6299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  c               2    6[COMRAM] int 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  2    6[COMRAM] int 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;Total ram usage:        6 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    4
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_xtoa
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text27
  6328  001ED8                     __ptext27:
  6329                           	callstack 0
  6330  001ED8                     _isalpha:
  6331                           	callstack 22
  6332  001ED8  0E9F               	movlw	159
  6333  001EDA  6E09               	movwf	??_isalpha^0,c
  6334  001EDC  0EFF               	movlw	255
  6335  001EDE  6E0A               	movwf	(??_isalpha+1)^0,c
  6336  001EE0  0E20               	movlw	32
  6337  001EE2  1007               	iorwf	isalpha@c^0,w,c
  6338  001EE4  6E0B               	movwf	(??_isalpha+2)^0,c
  6339  001EE6  0E00               	movlw	0
  6340  001EE8  1008               	iorwf	(isalpha@c+1)^0,w,c
  6341  001EEA  6E0C               	movwf	(??_isalpha+3)^0,c
  6342  001EEC  5009               	movf	??_isalpha^0,w,c
  6343  001EEE  260B               	addwf	(??_isalpha+2)^0,f,c
  6344  001EF0  500A               	movf	(??_isalpha+1)^0,w,c
  6345  001EF2  220C               	addwfc	(??_isalpha+3)^0,f,c
  6346  001EF4  500C               	movf	(??_isalpha+3)^0,w,c
  6347  001EF6  E10A               	bnz	u1750
  6348  001EF8  0E1A               	movlw	26
  6349  001EFA  5C0B               	subwf	(??_isalpha+2)^0,w,c
  6350  001EFC  A0D8               	btfss	status,0,c
  6351  001EFE  EF83  F00F         	goto	u1751
  6352  001F02  EF86  F00F         	goto	u1750
  6353  001F06                     u1751:
  6354  001F06  0E01               	movlw	1
  6355  001F08  EF87  F00F         	goto	u1760
  6356  001F0C                     u1750:
  6357  001F0C  0E00               	movlw	0
  6358  001F0E                     u1760:
  6359  001F0E  6E07               	movwf	?_isalpha^0,c
  6360  001F10  6A08               	clrf	(?_isalpha+1)^0,c
  6361  001F12  0012               	return		;funcret
  6362  001F14                     __end_of_isalpha:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function _dtoa *****************
  6366 ;; Defined at:
  6367 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  6370 ;;		 -> NULL(0), 
  6371 ;;  d               8   37[COMRAM] long long 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  n               8   61[COMRAM] long long 
  6374 ;;  i               2   69[COMRAM] int 
  6375 ;;  s               2   59[COMRAM] int 
  6376 ;;  w               2   57[COMRAM] int 
  6377 ;;  p               2   55[COMRAM] int 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  2   35[COMRAM] int 
  6380 ;; Registers used:
  6381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6387 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;Total ram usage:       36 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    9
  6394 ;; This function calls:
  6395 ;;		___aodiv
  6396 ;;		___aomod
  6397 ;;		_abs
  6398 ;;		_pad
  6399 ;; This function is called by:
  6400 ;;		_vfpfcnvrt
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text28
  6405  000B64                     __ptext28:
  6406                           	callstack 0
  6407  000B64                     _dtoa:
  6408                           	callstack 18
  6409  000B64                     
  6410                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6411  000B64  C026  F03E         	movff	dtoa@d,dtoa@n
  6412  000B68  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  6413  000B6C  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  6414  000B70  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  6415  000B74  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  6416  000B78  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  6417  000B7C  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  6418  000B80  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  6419  000B84                     
  6420                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6421  000B84  BE45               	btfsc	(dtoa@n+7)^0,7,c
  6422  000B86  EFC7  F005         	goto	u1891
  6423  000B8A  EFCA  F005         	goto	u1890
  6424  000B8E                     u1891:
  6425  000B8E  0E01               	movlw	1
  6426  000B90  EFCB  F005         	goto	u1900
  6427  000B94                     u1890:
  6428  000B94  0E00               	movlw	0
  6429  000B96                     u1900:
  6430  000B96  6E3C               	movwf	dtoa@s^0,c
  6431  000B98  6A3D               	clrf	(dtoa@s+1)^0,c
  6432                           
  6433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6434  000B9A  503C               	movf	dtoa@s^0,w,c
  6435  000B9C  103D               	iorwf	(dtoa@s+1)^0,w,c
  6436  000B9E  B4D8               	btfsc	status,2,c
  6437  000BA0  EFD4  F005         	goto	u1911
  6438  000BA4  EFD6  F005         	goto	u1910
  6439  000BA8                     u1911:
  6440  000BA8  EFE6  F005         	goto	l2776
  6441  000BAC                     u1910:
  6442  000BAC                     
  6443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6444  000BAC  1E45               	comf	(dtoa@n+7)^0,f,c
  6445  000BAE  1E44               	comf	(dtoa@n+6)^0,f,c
  6446  000BB0  1E43               	comf	(dtoa@n+5)^0,f,c
  6447  000BB2  1E42               	comf	(dtoa@n+4)^0,f,c
  6448  000BB4  1E41               	comf	(dtoa@n+3)^0,f,c
  6449  000BB6  1E40               	comf	(dtoa@n+2)^0,f,c
  6450  000BB8  1E3F               	comf	(dtoa@n+1)^0,f,c
  6451  000BBA  6C3E               	negf	dtoa@n^0,c
  6452  000BBC  0E00               	movlw	0
  6453  000BBE  223F               	addwfc	(dtoa@n+1)^0,f,c
  6454  000BC0  2240               	addwfc	(dtoa@n+2)^0,f,c
  6455  000BC2  2241               	addwfc	(dtoa@n+3)^0,f,c
  6456  000BC4  2242               	addwfc	(dtoa@n+4)^0,f,c
  6457  000BC6  2243               	addwfc	(dtoa@n+5)^0,f,c
  6458  000BC8  2244               	addwfc	(dtoa@n+6)^0,f,c
  6459  000BCA  2245               	addwfc	(dtoa@n+7)^0,f,c
  6460  000BCC                     l2776:
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6463  000BCC  0100               	movlb	0	; () banked
  6464  000BCE  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  6465  000BD0  EFEC  F005         	goto	u1921
  6466  000BD4  EFEE  F005         	goto	u1920
  6467  000BD8                     u1921:
  6468  000BD8  EFEF  F005         	goto	l2780
  6469  000BDC                     u1920:
  6470  000BDC                     
  6471                           ; BSR set to: 0
  6472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6473  000BDC  9255               	bcf	_flags^0,1,c
  6474  000BDE                     l2780:
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6478  000BDE  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  6479  000BE0  EFFC  F005         	goto	u1930
  6480  000BE4  51A1               	movf	(_prec+1)& (0+255),w,b
  6481  000BE6  E106               	bnz	u1931
  6482  000BE8  05A0               	decf	_prec& (0+255),w,b
  6483  000BEA  B0D8               	btfsc	status,0,c
  6484  000BEC  EFFA  F005         	goto	u1931
  6485  000BF0  EFFC  F005         	goto	u1930
  6486  000BF4                     u1931:
  6487  000BF4  EF02  F006         	goto	l1205
  6488  000BF8                     u1930:
  6489  000BF8                     
  6490                           ; BSR set to: 0
  6491  000BF8  0E00               	movlw	0
  6492  000BFA  6E39               	movwf	(dtoa@p+1)^0,c
  6493  000BFC  0E01               	movlw	1
  6494  000BFE  6E38               	movwf	dtoa@p^0,c
  6495  000C00  EF06  F006         	goto	l1207
  6496  000C04                     l1205:
  6497                           
  6498                           ; BSR set to: 0
  6499  000C04  C0A0  F038         	movff	_prec,dtoa@p
  6500  000C08  C0A1  F039         	movff	_prec+1,dtoa@p+1
  6501  000C0C                     l1207:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6505  000C0C  C053  F03A         	movff	_width,dtoa@w
  6506  000C10  C054  F03B         	movff	_width+1,dtoa@w+1
  6507  000C14                     
  6508                           ; BSR set to: 0
  6509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6510  000C14  503C               	movf	dtoa@s^0,w,c
  6511  000C16  103D               	iorwf	(dtoa@s+1)^0,w,c
  6512  000C18  A4D8               	btfss	status,2,c
  6513  000C1A  EF11  F006         	goto	u1941
  6514  000C1E  EF13  F006         	goto	u1940
  6515  000C22                     u1941:
  6516  000C22  EF1A  F006         	goto	l2788
  6517  000C26                     u1940:
  6518  000C26                     
  6519                           ; BSR set to: 0
  6520  000C26  A455               	btfss	_flags^0,2,c
  6521  000C28  EF18  F006         	goto	u1951
  6522  000C2C  EF1A  F006         	goto	u1950
  6523  000C30                     u1951:
  6524  000C30  EF1D  F006         	goto	l2790
  6525  000C34                     u1950:
  6526  000C34                     l2788:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  6530  000C34  063A               	decf	dtoa@w^0,f,c
  6531  000C36  A0D8               	btfss	status,0,c
  6532  000C38  063B               	decf	(dtoa@w+1)^0,f,c
  6533  000C3A                     l2790:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6537  000C3A  0E00               	movlw	0
  6538  000C3C  6E47               	movwf	(dtoa@i+1)^0,c
  6539  000C3E  0E1F               	movlw	31
  6540  000C40  6E46               	movwf	dtoa@i^0,c
  6541  000C42                     
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6544  000C42  0E00               	movlw	0
  6545  000C44  6FCA               	movwf	(_dbuf+31)& (0+255),b
  6546                           
  6547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6548  000C46  EFA1  F006         	goto	l2804
  6549  000C4A                     l2794:
  6550                           
  6551                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  6552  000C4A  0646               	decf	dtoa@i^0,f,c
  6553  000C4C  A0D8               	btfss	status,0,c
  6554  000C4E  0647               	decf	(dtoa@i+1)^0,f,c
  6555  000C50                     
  6556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6557  000C50  0EAB               	movlw	low _dbuf
  6558  000C52  2446               	addwf	dtoa@i^0,w,c
  6559  000C54  6ED9               	movwf	fsr2l,c
  6560  000C56  0E00               	movlw	high _dbuf
  6561  000C58  2047               	addwfc	(dtoa@i+1)^0,w,c
  6562  000C5A  6EDA               	movwf	fsr2h,c
  6563  000C5C  C03E  F007         	movff	dtoa@n,___aomod@dividend
  6564  000C60  C03F  F008         	movff	dtoa@n+1,___aomod@dividend+1
  6565  000C64  C040  F009         	movff	dtoa@n+2,___aomod@dividend+2
  6566  000C68  C041  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  6567  000C6C  C042  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  6568  000C70  C043  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  6569  000C74  C044  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  6570  000C78  C045  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  6571  000C7C  0E0A               	movlw	10
  6572  000C7E  6E0F               	movwf	___aomod@divisor^0,c
  6573  000C80  0E00               	movlw	0
  6574  000C82  6E10               	movwf	(___aomod@divisor+1)^0,c
  6575  000C84  0E00               	movlw	0
  6576  000C86  6E11               	movwf	(___aomod@divisor+2)^0,c
  6577  000C88  0E00               	movlw	0
  6578  000C8A  6E12               	movwf	(___aomod@divisor+3)^0,c
  6579  000C8C  0E00               	movlw	0
  6580  000C8E  6E13               	movwf	(___aomod@divisor+4)^0,c
  6581  000C90  0E00               	movlw	0
  6582  000C92  6E14               	movwf	(___aomod@divisor+5)^0,c
  6583  000C94  0E00               	movlw	0
  6584  000C96  6E15               	movwf	(___aomod@divisor+6)^0,c
  6585  000C98  0E00               	movlw	0
  6586  000C9A  6E16               	movwf	(___aomod@divisor+7)^0,c
  6587  000C9C  ECCE  F00B         	call	___aomod	;wreg free
  6588  000CA0  C007  F02E         	movff	?___aomod,??_dtoa
  6589  000CA4  C008  F02F         	movff	?___aomod+1,??_dtoa+1
  6590  000CA8  C009  F030         	movff	?___aomod+2,??_dtoa+2
  6591  000CAC  C00A  F031         	movff	?___aomod+3,??_dtoa+3
  6592  000CB0  C00B  F032         	movff	?___aomod+4,??_dtoa+4
  6593  000CB4  C00C  F033         	movff	?___aomod+5,??_dtoa+5
  6594  000CB8  C00D  F034         	movff	?___aomod+6,??_dtoa+6
  6595  000CBC  C00E  F035         	movff	?___aomod+7,??_dtoa+7
  6596  000CC0  C02E  F019         	movff	??_dtoa,abs@a
  6597  000CC4  C030  F01A         	movff	??_dtoa+2,abs@a+1
  6598  000CC8  EC4C  F00F         	call	_abs	;wreg free
  6599  000CCC  5019               	movf	?_abs^0,w,c
  6600  000CCE  0F30               	addlw	48
  6601  000CD0  6EDF               	movwf	indf2,c
  6602  000CD2                     
  6603                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  6604  000CD2  0638               	decf	dtoa@p^0,f,c
  6605  000CD4  A0D8               	btfss	status,0,c
  6606  000CD6  0639               	decf	(dtoa@p+1)^0,f,c
  6607  000CD8                     
  6608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  6609  000CD8  063A               	decf	dtoa@w^0,f,c
  6610  000CDA  A0D8               	btfss	status,0,c
  6611  000CDC  063B               	decf	(dtoa@w+1)^0,f,c
  6612  000CDE                     
  6613                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6614  000CDE  C03E  F007         	movff	dtoa@n,___aodiv@dividend
  6615  000CE2  C03F  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  6616  000CE6  C040  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  6617  000CEA  C041  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  6618  000CEE  C042  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  6619  000CF2  C043  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  6620  000CF6  C044  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  6621  000CFA  C045  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  6622  000CFE  0E0A               	movlw	10
  6623  000D00  6E0F               	movwf	___aodiv@divisor^0,c
  6624  000D02  0E00               	movlw	0
  6625  000D04  6E10               	movwf	(___aodiv@divisor+1)^0,c
  6626  000D06  0E00               	movlw	0
  6627  000D08  6E11               	movwf	(___aodiv@divisor+2)^0,c
  6628  000D0A  0E00               	movlw	0
  6629  000D0C  6E12               	movwf	(___aodiv@divisor+3)^0,c
  6630  000D0E  0E00               	movlw	0
  6631  000D10  6E13               	movwf	(___aodiv@divisor+4)^0,c
  6632  000D12  0E00               	movlw	0
  6633  000D14  6E14               	movwf	(___aodiv@divisor+5)^0,c
  6634  000D16  0E00               	movlw	0
  6635  000D18  6E15               	movwf	(___aodiv@divisor+6)^0,c
  6636  000D1A  0E00               	movlw	0
  6637  000D1C  6E16               	movwf	(___aodiv@divisor+7)^0,c
  6638  000D1E  EC4E  F00A         	call	___aodiv	;wreg free
  6639  000D22  C007  F03E         	movff	?___aodiv,dtoa@n
  6640  000D26  C008  F03F         	movff	?___aodiv+1,dtoa@n+1
  6641  000D2A  C009  F040         	movff	?___aodiv+2,dtoa@n+2
  6642  000D2E  C00A  F041         	movff	?___aodiv+3,dtoa@n+3
  6643  000D32  C00B  F042         	movff	?___aodiv+4,dtoa@n+4
  6644  000D36  C00C  F043         	movff	?___aodiv+5,dtoa@n+5
  6645  000D3A  C00D  F044         	movff	?___aodiv+6,dtoa@n+6
  6646  000D3E  C00E  F045         	movff	?___aodiv+7,dtoa@n+7
  6647  000D42                     l2804:
  6648                           
  6649                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6650  000D42  BE47               	btfsc	(dtoa@i+1)^0,7,c
  6651  000D44  EFAC  F006         	goto	u1961
  6652  000D48  5047               	movf	(dtoa@i+1)^0,w,c
  6653  000D4A  E108               	bnz	u1960
  6654  000D4C  0446               	decf	dtoa@i^0,w,c
  6655  000D4E  A0D8               	btfss	status,0,c
  6656  000D50  EFAC  F006         	goto	u1961
  6657  000D54  EFAE  F006         	goto	u1960
  6658  000D58                     u1961:
  6659  000D58  EFDE  F006         	goto	l2814
  6660  000D5C                     u1960:
  6661  000D5C  503E               	movf	dtoa@n^0,w,c
  6662  000D5E  103F               	iorwf	(dtoa@n+1)^0,w,c
  6663  000D60  1040               	iorwf	(dtoa@n+2)^0,w,c
  6664  000D62  1041               	iorwf	(dtoa@n+3)^0,w,c
  6665  000D64  1042               	iorwf	(dtoa@n+4)^0,w,c
  6666  000D66  1043               	iorwf	(dtoa@n+5)^0,w,c
  6667  000D68  1044               	iorwf	(dtoa@n+6)^0,w,c
  6668  000D6A  1045               	iorwf	(dtoa@n+7)^0,w,c
  6669  000D6C  A4D8               	btfss	status,2,c
  6670  000D6E  EFBB  F006         	goto	u1971
  6671  000D72  EFBD  F006         	goto	u1970
  6672  000D76                     u1971:
  6673  000D76  EF25  F006         	goto	l2794
  6674  000D7A                     u1970:
  6675  000D7A  BE39               	btfsc	(dtoa@p+1)^0,7,c
  6676  000D7C  EFCA  F006         	goto	u1980
  6677  000D80  5039               	movf	(dtoa@p+1)^0,w,c
  6678  000D82  E106               	bnz	u1981
  6679  000D84  0438               	decf	dtoa@p^0,w,c
  6680  000D86  B0D8               	btfsc	status,0,c
  6681  000D88  EFC8  F006         	goto	u1981
  6682  000D8C  EFCA  F006         	goto	u1980
  6683  000D90                     u1981:
  6684  000D90  EF25  F006         	goto	l2794
  6685  000D94                     u1980:
  6686  000D94  BE3B               	btfsc	(dtoa@w+1)^0,7,c
  6687  000D96  EFD5  F006         	goto	u1991
  6688  000D9A  503B               	movf	(dtoa@w+1)^0,w,c
  6689  000D9C  E108               	bnz	u1990
  6690  000D9E  043A               	decf	dtoa@w^0,w,c
  6691  000DA0  A0D8               	btfss	status,0,c
  6692  000DA2  EFD5  F006         	goto	u1991
  6693  000DA6  EFD7  F006         	goto	u1990
  6694  000DAA                     u1991:
  6695  000DAA  EFDE  F006         	goto	l2814
  6696  000DAE                     u1990:
  6697  000DAE  B255               	btfsc	_flags^0,1,c
  6698  000DB0  EFDC  F006         	goto	u2001
  6699  000DB4  EFDE  F006         	goto	u2000
  6700  000DB8                     u2001:
  6701  000DB8  EF25  F006         	goto	l2794
  6702  000DBC                     u2000:
  6703  000DBC                     l2814:
  6704                           
  6705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6706  000DBC  503C               	movf	dtoa@s^0,w,c
  6707  000DBE  103D               	iorwf	(dtoa@s+1)^0,w,c
  6708  000DC0  A4D8               	btfss	status,2,c
  6709  000DC2  EFE5  F006         	goto	u2011
  6710  000DC6  EFE7  F006         	goto	u2010
  6711  000DCA                     u2011:
  6712  000DCA  EFEE  F006         	goto	l2818
  6713  000DCE                     u2010:
  6714  000DCE  A455               	btfss	_flags^0,2,c
  6715  000DD0  EFEC  F006         	goto	u2021
  6716  000DD4  EFEE  F006         	goto	u2020
  6717  000DD8                     u2021:
  6718  000DD8  EF0C  F007         	goto	l2828
  6719  000DDC                     u2020:
  6720  000DDC                     l2818:
  6721                           
  6722                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  6723  000DDC  0646               	decf	dtoa@i^0,f,c
  6724  000DDE  A0D8               	btfss	status,0,c
  6725  000DE0  0647               	decf	(dtoa@i+1)^0,f,c
  6726  000DE2                     
  6727                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6728  000DE2  503C               	movf	dtoa@s^0,w,c
  6729  000DE4  103D               	iorwf	(dtoa@s+1)^0,w,c
  6730  000DE6  A4D8               	btfss	status,2,c
  6731  000DE8  EFF8  F006         	goto	u2031
  6732  000DEC  EFFA  F006         	goto	u2030
  6733  000DF0                     u2031:
  6734  000DF0  EF00  F007         	goto	l2824
  6735  000DF4                     u2030:
  6736  000DF4  0E00               	movlw	0
  6737  000DF6  6E37               	movwf	(_dtoa$1697+1)^0,c
  6738  000DF8  0E2B               	movlw	43
  6739  000DFA  6E36               	movwf	_dtoa$1697^0,c
  6740  000DFC  EF04  F007         	goto	l2826
  6741  000E00                     l2824:
  6742  000E00  0E00               	movlw	0
  6743  000E02  6E37               	movwf	(_dtoa$1697+1)^0,c
  6744  000E04  0E2D               	movlw	45
  6745  000E06  6E36               	movwf	_dtoa$1697^0,c
  6746  000E08                     l2826:
  6747  000E08  0EAB               	movlw	low _dbuf
  6748  000E0A  2446               	addwf	dtoa@i^0,w,c
  6749  000E0C  6ED9               	movwf	fsr2l,c
  6750  000E0E  0E00               	movlw	high _dbuf
  6751  000E10  2047               	addwfc	(dtoa@i+1)^0,w,c
  6752  000E12  6EDA               	movwf	fsr2h,c
  6753  000E14  C036  FFDF         	movff	_dtoa$1697,indf2
  6754  000E18                     l2828:
  6755                           
  6756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6757  000E18  C024  F019         	movff	dtoa@fp,pad@fp
  6758  000E1C  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  6759  000E20  0EAB               	movlw	low _dbuf
  6760  000E22  2446               	addwf	dtoa@i^0,w,c
  6761  000E24  6E1B               	movwf	pad@buf^0,c
  6762  000E26  0E00               	movlw	high _dbuf
  6763  000E28  2047               	addwfc	(dtoa@i+1)^0,w,c
  6764  000E2A  6E1C               	movwf	(pad@buf+1)^0,c
  6765  000E2C  C03A  F01D         	movff	dtoa@w,pad@p
  6766  000E30  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  6767  000E34  ECEA  F00C         	call	_pad	;wreg free
  6768  000E38  C019  F024         	movff	?_pad,?_dtoa
  6769  000E3C  C01A  F025         	movff	?_pad+1,?_dtoa+1
  6770  000E40  0012               	return		;funcret
  6771  000E42                     __end_of_dtoa:
  6772                           	callstack 0
  6773                           
  6774 ;; *************** function _pad *****************
  6775 ;; Defined at:
  6776 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  6779 ;;		 -> NULL(0), 
  6780 ;;  buf             2   26[COMRAM] PTR unsigned char 
  6781 ;;		 -> dbuf(32), 
  6782 ;;  p               2   28[COMRAM] int 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  w               2   33[COMRAM] int 
  6785 ;;  i               2   31[COMRAM] int 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  2   24[COMRAM] int 
  6788 ;; Registers used:
  6789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6795 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;Total ram usage:       11 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    8
  6802 ;; This function calls:
  6803 ;;		_fputc
  6804 ;;		_fputs
  6805 ;;		_strlen
  6806 ;; This function is called by:
  6807 ;;		_dtoa
  6808 ;;		_xtoa
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text29
  6813  0019D4                     __ptext29:
  6814                           	callstack 0
  6815  0019D4                     _pad:
  6816                           	callstack 18
  6817  0019D4                     
  6818                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6819  0019D4  A055               	btfss	_flags^0,0,c
  6820  0019D6  EFEF  F00C         	goto	u1681
  6821  0019DA  EFF1  F00C         	goto	u1680
  6822  0019DE                     u1681:
  6823  0019DE  EFFB  F00C         	goto	l2686
  6824  0019E2                     u1680:
  6825  0019E2                     
  6826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6827  0019E2  C01B  F012         	movff	pad@buf,fputs@s
  6828  0019E6  C01C  F013         	movff	pad@buf+1,fputs@s+1
  6829  0019EA  C019  F014         	movff	pad@fp,fputs@fp
  6830  0019EE  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  6831  0019F2  EC0A  F00F         	call	_fputs	;wreg free
  6832  0019F6                     l2686:
  6833                           
  6834                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6835  0019F6  BE1E               	btfsc	(pad@p+1)^0,7,c
  6836  0019F8  EF00  F00D         	goto	u1691
  6837  0019FC  EF02  F00D         	goto	u1690
  6838  001A00                     u1691:
  6839  001A00  EF08  F00D         	goto	l2690
  6840  001A04                     u1690:
  6841  001A04  C01D  F022         	movff	pad@p,pad@w
  6842  001A08  C01E  F023         	movff	pad@p+1,pad@w+1
  6843  001A0C  EF0C  F00D         	goto	l1178
  6844  001A10                     l2690:
  6845  001A10  0E00               	movlw	0
  6846  001A12  6E23               	movwf	(pad@w+1)^0,c
  6847  001A14  0E00               	movlw	0
  6848  001A16  6E22               	movwf	pad@w^0,c
  6849  001A18                     l1178:
  6850                           
  6851                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6852  001A18  0E00               	movlw	0
  6853  001A1A  6E21               	movwf	(pad@i+1)^0,c
  6854  001A1C  0E00               	movlw	0
  6855  001A1E  6E20               	movwf	pad@i^0,c
  6856                           
  6857                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6858  001A20  EF1E  F00D         	goto	l2696
  6859  001A24                     l2692:
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6862  001A24  0E00               	movlw	0
  6863  001A26  6E0A               	movwf	(fputc@c+1)^0,c
  6864  001A28  0E20               	movlw	32
  6865  001A2A  6E09               	movwf	fputc@c^0,c
  6866  001A2C  C019  F00B         	movff	pad@fp,fputc@fp
  6867  001A30  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  6868  001A34  ECEE  F00D         	call	_fputc	;wreg free
  6869  001A38                     
  6870                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6871  001A38  4A20               	infsnz	pad@i^0,f,c
  6872  001A3A  2A21               	incf	(pad@i+1)^0,f,c
  6873  001A3C                     l2696:
  6874                           
  6875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6876  001A3C  5022               	movf	pad@w^0,w,c
  6877  001A3E  5C20               	subwf	pad@i^0,w,c
  6878  001A40  5021               	movf	(pad@i+1)^0,w,c
  6879  001A42  0A80               	xorlw	128
  6880  001A44  6E1F               	movwf	??_pad^0,c
  6881  001A46  5023               	movf	(pad@w+1)^0,w,c
  6882  001A48  0A80               	xorlw	128
  6883  001A4A  581F               	subwfb	??_pad^0,w,c
  6884  001A4C  A0D8               	btfss	status,0,c
  6885  001A4E  EF2B  F00D         	goto	u1701
  6886  001A52  EF2D  F00D         	goto	u1700
  6887  001A56                     u1701:
  6888  001A56  EF12  F00D         	goto	l2692
  6889  001A5A                     u1700:
  6890  001A5A                     
  6891                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6892  001A5A  B055               	btfsc	_flags^0,0,c
  6893  001A5C  EF32  F00D         	goto	u1711
  6894  001A60  EF34  F00D         	goto	u1710
  6895  001A64                     u1711:
  6896  001A64  EF3E  F00D         	goto	l2700
  6897  001A68                     u1710:
  6898  001A68                     
  6899                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6900  001A68  C01B  F012         	movff	pad@buf,fputs@s
  6901  001A6C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  6902  001A70  C019  F014         	movff	pad@fp,fputs@fp
  6903  001A74  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  6904  001A78  EC0A  F00F         	call	_fputs	;wreg free
  6905  001A7C                     l2700:
  6906                           
  6907                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6908  001A7C  C01B  F007         	movff	pad@buf,strlen@s
  6909  001A80  C01C  F008         	movff	pad@buf+1,strlen@s+1
  6910  001A84  EC4C  F010         	call	_strlen	;wreg free
  6911  001A88  5022               	movf	pad@w^0,w,c
  6912  001A8A  2407               	addwf	?_strlen^0,w,c
  6913  001A8C  6E19               	movwf	?_pad^0,c
  6914  001A8E  5023               	movf	(pad@w+1)^0,w,c
  6915  001A90  2008               	addwfc	(?_strlen+1)^0,w,c
  6916  001A92  6E1A               	movwf	(?_pad+1)^0,c
  6917  001A94  0012               	return		;funcret
  6918  001A96                     __end_of_pad:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _strlen *****************
  6922 ;; Defined at:
  6923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6926 ;;		 -> dbuf(32), 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  a               2    8[COMRAM] PTR const unsigned char 
  6929 ;;		 -> dbuf(32), 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  2    6[COMRAM] unsigned int 
  6932 ;; Registers used:
  6933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;Total ram usage:        4 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    4
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_pad
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text30
  6954  002098                     __ptext30:
  6955                           	callstack 0
  6956  002098                     _strlen:
  6957                           	callstack 21
  6958  002098  C007  F009         	movff	strlen@s,strlen@a
  6959  00209C  C008  F00A         	movff	strlen@s+1,strlen@a+1
  6960  0020A0  EF54  F010         	goto	l2586
  6961  0020A4                     l2584:
  6962  0020A4  4A07               	infsnz	strlen@s^0,f,c
  6963  0020A6  2A08               	incf	(strlen@s+1)^0,f,c
  6964  0020A8                     l2586:
  6965  0020A8  C007  FFD9         	movff	strlen@s,fsr2l
  6966  0020AC  C008  FFDA         	movff	strlen@s+1,fsr2h
  6967  0020B0  50DF               	movf	indf2,w,c
  6968  0020B2  A4D8               	btfss	status,2,c
  6969  0020B4  EF5E  F010         	goto	u1521
  6970  0020B8  EF60  F010         	goto	u1520
  6971  0020BC                     u1521:
  6972  0020BC  EF52  F010         	goto	l2584
  6973  0020C0                     u1520:
  6974  0020C0  5009               	movf	strlen@a^0,w,c
  6975  0020C2  5C07               	subwf	strlen@s^0,w,c
  6976  0020C4  6E07               	movwf	?_strlen^0,c
  6977  0020C6  500A               	movf	(strlen@a+1)^0,w,c
  6978  0020C8  5808               	subwfb	(strlen@s+1)^0,w,c
  6979  0020CA  6E08               	movwf	(?_strlen+1)^0,c
  6980  0020CC  0012               	return		;funcret
  6981  0020CE                     __end_of_strlen:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _fputs *****************
  6985 ;; Defined at:
  6986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  s               2   17[COMRAM] PTR const unsigned char 
  6989 ;;		 -> dbuf(32), 
  6990 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  6991 ;;		 -> NULL(0), 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  i               2   22[COMRAM] int 
  6994 ;;  c               1   21[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  2   17[COMRAM] int 
  6997 ;; Registers used:
  6998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7005 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;Total ram usage:        7 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    7
  7011 ;; This function calls:
  7012 ;;		_fputc
  7013 ;; This function is called by:
  7014 ;;		_pad
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text31
  7019  001E14                     __ptext31:
  7020                           	callstack 0
  7021  001E14                     _fputs:
  7022                           	callstack 18
  7023  001E14  0E00               	movlw	0
  7024  001E16  6E18               	movwf	(fputs@i+1)^0,c
  7025  001E18  0E00               	movlw	0
  7026  001E1A  6E17               	movwf	fputs@i^0,c
  7027  001E1C  EF1B  F00F         	goto	l2580
  7028  001E20                     l2576:
  7029  001E20  C016  F009         	movff	fputs@c,fputc@c
  7030  001E24  6A0A               	clrf	(fputc@c+1)^0,c
  7031  001E26  C014  F00B         	movff	fputs@fp,fputc@fp
  7032  001E2A  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  7033  001E2E  ECEE  F00D         	call	_fputc	;wreg free
  7034  001E32  4A17               	infsnz	fputs@i^0,f,c
  7035  001E34  2A18               	incf	(fputs@i+1)^0,f,c
  7036  001E36                     l2580:
  7037  001E36  5017               	movf	fputs@i^0,w,c
  7038  001E38  2412               	addwf	fputs@s^0,w,c
  7039  001E3A  6ED9               	movwf	fsr2l,c
  7040  001E3C  5018               	movf	(fputs@i+1)^0,w,c
  7041  001E3E  2013               	addwfc	(fputs@s+1)^0,w,c
  7042  001E40  6EDA               	movwf	fsr2h,c
  7043  001E42  50DF               	movf	indf2,w,c
  7044  001E44  6E16               	movwf	fputs@c^0,c
  7045  001E46  5016               	movf	fputs@c^0,w,c
  7046  001E48  A4D8               	btfss	status,2,c
  7047  001E4A  EF29  F00F         	goto	u1511
  7048  001E4E  EF2B  F00F         	goto	u1510
  7049  001E52                     u1511:
  7050  001E52  EF10  F00F         	goto	l2576
  7051  001E56                     u1510:
  7052  001E56  0012               	return		;funcret
  7053  001E58                     __end_of_fputs:
  7054                           	callstack 0
  7055                           
  7056 ;; *************** function _abs *****************
  7057 ;; Defined at:
  7058 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  a               2   24[COMRAM] int 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  2   24[COMRAM] int 
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;Total ram usage:        4 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    4
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_dtoa
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text32
  7087  001E98                     __ptext32:
  7088                           	callstack 0
  7089  001E98                     _abs:
  7090                           	callstack 22
  7091  001E98  BE1A               	btfsc	(abs@a+1)^0,7,c
  7092  001E9A  EF59  F00F         	goto	u1720
  7093  001E9E  501A               	movf	(abs@a+1)^0,w,c
  7094  001EA0  E106               	bnz	u1721
  7095  001EA2  0419               	decf	abs@a^0,w,c
  7096  001EA4  B0D8               	btfsc	status,0,c
  7097  001EA6  EF57  F00F         	goto	u1721
  7098  001EAA  EF59  F00F         	goto	u1720
  7099  001EAE                     u1721:
  7100  001EAE  EF67  F00F         	goto	l1299
  7101  001EB2                     u1720:
  7102  001EB2  C019  F01B         	movff	abs@a,??_abs
  7103  001EB6  C01A  F01C         	movff	abs@a+1,??_abs+1
  7104  001EBA  1E1B               	comf	??_abs^0,f,c
  7105  001EBC  1E1C               	comf	(??_abs+1)^0,f,c
  7106  001EBE  4A1B               	infsnz	??_abs^0,f,c
  7107  001EC0  2A1C               	incf	(??_abs+1)^0,f,c
  7108  001EC2  C01B  F019         	movff	??_abs,?_abs
  7109  001EC6  C01C  F01A         	movff	??_abs+1,?_abs+1
  7110  001ECA  EF6B  F00F         	goto	l1302
  7111  001ECE                     l1299:
  7112  001ECE  C019  F019         	movff	abs@a,?_abs
  7113  001ED2  C01A  F01A         	movff	abs@a+1,?_abs+1
  7114  001ED6                     l1302:
  7115  001ED6  0012               	return		;funcret
  7116  001ED8                     __end_of_abs:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function ___aomod *****************
  7120 ;; Defined at:
  7121 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  dividend        8    6[COMRAM] long long 
  7124 ;;  divisor         8   14[COMRAM] long long 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  sign            1   23[COMRAM] unsigned char 
  7127 ;;  counter         1   22[COMRAM] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  8    6[COMRAM] long long 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7137 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;Total ram usage:       18 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    4
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_dtoa
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text33
  7152  00179C                     __ptext33:
  7153                           	callstack 0
  7154  00179C                     ___aomod:
  7155                           	callstack 22
  7156  00179C  0E00               	movlw	0
  7157  00179E  6E18               	movwf	___aomod@sign^0,c
  7158  0017A0  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  7159  0017A2  EFD7  F00B         	goto	u1620
  7160  0017A6  EFD5  F00B         	goto	u1621
  7161  0017AA                     u1621:
  7162  0017AA  EFE9  F00B         	goto	l2654
  7163  0017AE                     u1620:
  7164  0017AE  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  7165  0017B0  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  7166  0017B2  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  7167  0017B4  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  7168  0017B6  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  7169  0017B8  1E09               	comf	(___aomod@dividend+2)^0,f,c
  7170  0017BA  1E08               	comf	(___aomod@dividend+1)^0,f,c
  7171  0017BC  6C07               	negf	___aomod@dividend^0,c
  7172  0017BE  0E00               	movlw	0
  7173  0017C0  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  7174  0017C2  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  7175  0017C4  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  7176  0017C6  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  7177  0017C8  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  7178  0017CA  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  7179  0017CC  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  7180  0017CE  0E01               	movlw	1
  7181  0017D0  6E18               	movwf	___aomod@sign^0,c
  7182  0017D2                     l2654:
  7183  0017D2  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  7184  0017D4  EFF0  F00B         	goto	u1630
  7185  0017D8  EFEE  F00B         	goto	u1631
  7186  0017DC                     u1631:
  7187  0017DC  EF00  F00C         	goto	l2658
  7188  0017E0                     u1630:
  7189  0017E0  1E16               	comf	(___aomod@divisor+7)^0,f,c
  7190  0017E2  1E15               	comf	(___aomod@divisor+6)^0,f,c
  7191  0017E4  1E14               	comf	(___aomod@divisor+5)^0,f,c
  7192  0017E6  1E13               	comf	(___aomod@divisor+4)^0,f,c
  7193  0017E8  1E12               	comf	(___aomod@divisor+3)^0,f,c
  7194  0017EA  1E11               	comf	(___aomod@divisor+2)^0,f,c
  7195  0017EC  1E10               	comf	(___aomod@divisor+1)^0,f,c
  7196  0017EE  6C0F               	negf	___aomod@divisor^0,c
  7197  0017F0  0E00               	movlw	0
  7198  0017F2  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  7199  0017F4  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  7200  0017F6  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  7201  0017F8  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  7202  0017FA  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  7203  0017FC  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  7204  0017FE  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  7205  001800                     l2658:
  7206  001800  500F               	movf	___aomod@divisor^0,w,c
  7207  001802  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  7208  001804  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  7209  001806  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  7210  001808  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  7211  00180A  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  7212  00180C  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  7213  00180E  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  7214  001810  B4D8               	btfsc	status,2,c
  7215  001812  EF0D  F00C         	goto	u1641
  7216  001816  EF0F  F00C         	goto	u1640
  7217  00181A                     u1641:
  7218  00181A  EF57  F00C         	goto	l2674
  7219  00181E                     u1640:
  7220  00181E  0E01               	movlw	1
  7221  001820  6E17               	movwf	___aomod@counter^0,c
  7222  001822  EF1D  F00C         	goto	l2664
  7223  001826                     l2662:
  7224  001826  90D8               	bcf	status,0,c
  7225  001828  360F               	rlcf	___aomod@divisor^0,f,c
  7226  00182A  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  7227  00182C  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  7228  00182E  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  7229  001830  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  7230  001832  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  7231  001834  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  7232  001836  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  7233  001838  2A17               	incf	___aomod@counter^0,f,c
  7234  00183A                     l2664:
  7235  00183A  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  7236  00183C  EF22  F00C         	goto	u1651
  7237  001840  EF24  F00C         	goto	u1650
  7238  001844                     u1651:
  7239  001844  EF13  F00C         	goto	l2662
  7240  001848                     u1650:
  7241  001848                     l2666:
  7242  001848  500F               	movf	___aomod@divisor^0,w,c
  7243  00184A  5C07               	subwf	___aomod@dividend^0,w,c
  7244  00184C  5010               	movf	(___aomod@divisor+1)^0,w,c
  7245  00184E  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  7246  001850  5011               	movf	(___aomod@divisor+2)^0,w,c
  7247  001852  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  7248  001854  5012               	movf	(___aomod@divisor+3)^0,w,c
  7249  001856  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  7250  001858  5013               	movf	(___aomod@divisor+4)^0,w,c
  7251  00185A  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  7252  00185C  5014               	movf	(___aomod@divisor+5)^0,w,c
  7253  00185E  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  7254  001860  5015               	movf	(___aomod@divisor+6)^0,w,c
  7255  001862  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  7256  001864  5016               	movf	(___aomod@divisor+7)^0,w,c
  7257  001866  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  7258  001868  A0D8               	btfss	status,0,c
  7259  00186A  EF39  F00C         	goto	u1661
  7260  00186E  EF3B  F00C         	goto	u1660
  7261  001872                     u1661:
  7262  001872  EF4B  F00C         	goto	l2670
  7263  001876                     u1660:
  7264  001876  500F               	movf	___aomod@divisor^0,w,c
  7265  001878  5E07               	subwf	___aomod@dividend^0,f,c
  7266  00187A  5010               	movf	(___aomod@divisor+1)^0,w,c
  7267  00187C  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  7268  00187E  5011               	movf	(___aomod@divisor+2)^0,w,c
  7269  001880  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  7270  001882  5012               	movf	(___aomod@divisor+3)^0,w,c
  7271  001884  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  7272  001886  5013               	movf	(___aomod@divisor+4)^0,w,c
  7273  001888  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  7274  00188A  5014               	movf	(___aomod@divisor+5)^0,w,c
  7275  00188C  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  7276  00188E  5015               	movf	(___aomod@divisor+6)^0,w,c
  7277  001890  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  7278  001892  5016               	movf	(___aomod@divisor+7)^0,w,c
  7279  001894  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  7280  001896                     l2670:
  7281  001896  90D8               	bcf	status,0,c
  7282  001898  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  7283  00189A  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  7284  00189C  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  7285  00189E  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  7286  0018A0  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  7287  0018A2  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  7288  0018A4  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  7289  0018A6  320F               	rrcf	___aomod@divisor^0,f,c
  7290  0018A8  2E17               	decfsz	___aomod@counter^0,f,c
  7291  0018AA  EF24  F00C         	goto	l2666
  7292  0018AE                     l2674:
  7293  0018AE  5018               	movf	___aomod@sign^0,w,c
  7294  0018B0  B4D8               	btfsc	status,2,c
  7295  0018B2  EF5D  F00C         	goto	u1671
  7296  0018B6  EF5F  F00C         	goto	u1670
  7297  0018BA                     u1671:
  7298  0018BA  EF6F  F00C         	goto	l2678
  7299  0018BE                     u1670:
  7300  0018BE  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  7301  0018C0  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  7302  0018C2  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  7303  0018C4  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  7304  0018C6  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  7305  0018C8  1E09               	comf	(___aomod@dividend+2)^0,f,c
  7306  0018CA  1E08               	comf	(___aomod@dividend+1)^0,f,c
  7307  0018CC  6C07               	negf	___aomod@dividend^0,c
  7308  0018CE  0E00               	movlw	0
  7309  0018D0  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  7310  0018D2  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  7311  0018D4  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  7312  0018D6  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  7313  0018D8  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  7314  0018DA  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  7315  0018DC  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  7316  0018DE                     l2678:
  7317  0018DE  C007  F007         	movff	___aomod@dividend,?___aomod
  7318  0018E2  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  7319  0018E6  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  7320  0018EA  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  7321  0018EE  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  7322  0018F2  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  7323  0018F6  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  7324  0018FA  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  7325  0018FE  0012               	return		;funcret
  7326  001900                     __end_of___aomod:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function ___aodiv *****************
  7330 ;; Defined at:
  7331 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  dividend        8    6[COMRAM] long long 
  7334 ;;  divisor         8   14[COMRAM] long long 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  quotient        8   24[COMRAM] long long 
  7337 ;;  sign            1   23[COMRAM] unsigned char 
  7338 ;;  counter         1   22[COMRAM] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  8    6[COMRAM] long long 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7348 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;Total ram usage:       26 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    4
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_dtoa
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text34
  7363  00149C                     __ptext34:
  7364                           	callstack 0
  7365  00149C                     ___aodiv:
  7366                           	callstack 22
  7367  00149C  0E00               	movlw	0
  7368  00149E  6E18               	movwf	___aodiv@sign^0,c
  7369  0014A0  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  7370  0014A2  EF57  F00A         	goto	u1550
  7371  0014A6  EF55  F00A         	goto	u1551
  7372  0014AA                     u1551:
  7373  0014AA  EF69  F00A         	goto	l2610
  7374  0014AE                     u1550:
  7375  0014AE  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  7376  0014B0  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  7377  0014B2  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  7378  0014B4  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  7379  0014B6  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  7380  0014B8  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  7381  0014BA  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  7382  0014BC  6C0F               	negf	___aodiv@divisor^0,c
  7383  0014BE  0E00               	movlw	0
  7384  0014C0  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  7385  0014C2  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  7386  0014C4  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  7387  0014C6  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  7388  0014C8  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  7389  0014CA  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  7390  0014CC  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  7391  0014CE  0E01               	movlw	1
  7392  0014D0  6E18               	movwf	___aodiv@sign^0,c
  7393  0014D2                     l2610:
  7394  0014D2  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  7395  0014D4  EF70  F00A         	goto	u1560
  7396  0014D8  EF6E  F00A         	goto	u1561
  7397  0014DC                     u1561:
  7398  0014DC  EF82  F00A         	goto	l2616
  7399  0014E0                     u1560:
  7400  0014E0  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  7401  0014E2  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  7402  0014E4  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  7403  0014E6  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  7404  0014E8  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  7405  0014EA  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  7406  0014EC  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  7407  0014EE  6C07               	negf	___aodiv@dividend^0,c
  7408  0014F0  0E00               	movlw	0
  7409  0014F2  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  7410  0014F4  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  7411  0014F6  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  7412  0014F8  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  7413  0014FA  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  7414  0014FC  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  7415  0014FE  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  7416  001500  0E01               	movlw	1
  7417  001502  1A18               	xorwf	___aodiv@sign^0,f,c
  7418  001504                     l2616:
  7419  001504  EE20  F019         	lfsr	2,___aodiv@quotient
  7420  001508  0E07               	movlw	7
  7421  00150A                     u1571:
  7422  00150A  6ADE               	clrf	postinc2,c
  7423  00150C  06E8               	decf	wreg,f,c
  7424  00150E  E2FD               	bc	u1571
  7425  001510  500F               	movf	___aodiv@divisor^0,w,c
  7426  001512  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  7427  001514  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  7428  001516  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  7429  001518  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  7430  00151A  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  7431  00151C  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  7432  00151E  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  7433  001520  B4D8               	btfsc	status,2,c
  7434  001522  EF95  F00A         	goto	u1581
  7435  001526  EF97  F00A         	goto	u1580
  7436  00152A                     u1581:
  7437  00152A  EFE9  F00A         	goto	l2638
  7438  00152E                     u1580:
  7439  00152E  0E01               	movlw	1
  7440  001530  6E17               	movwf	___aodiv@counter^0,c
  7441  001532  EFA5  F00A         	goto	l2624
  7442  001536                     l2622:
  7443  001536  90D8               	bcf	status,0,c
  7444  001538  360F               	rlcf	___aodiv@divisor^0,f,c
  7445  00153A  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  7446  00153C  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  7447  00153E  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  7448  001540  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  7449  001542  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  7450  001544  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  7451  001546  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  7452  001548  2A17               	incf	___aodiv@counter^0,f,c
  7453  00154A                     l2624:
  7454  00154A  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  7455  00154C  EFAA  F00A         	goto	u1591
  7456  001550  EFAC  F00A         	goto	u1590
  7457  001554                     u1591:
  7458  001554  EF9B  F00A         	goto	l2622
  7459  001558                     u1590:
  7460  001558                     l2626:
  7461  001558  90D8               	bcf	status,0,c
  7462  00155A  3619               	rlcf	___aodiv@quotient^0,f,c
  7463  00155C  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  7464  00155E  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  7465  001560  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  7466  001562  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  7467  001564  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  7468  001566  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  7469  001568  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  7470  00156A  500F               	movf	___aodiv@divisor^0,w,c
  7471  00156C  5C07               	subwf	___aodiv@dividend^0,w,c
  7472  00156E  5010               	movf	(___aodiv@divisor+1)^0,w,c
  7473  001570  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  7474  001572  5011               	movf	(___aodiv@divisor+2)^0,w,c
  7475  001574  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  7476  001576  5012               	movf	(___aodiv@divisor+3)^0,w,c
  7477  001578  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  7478  00157A  5013               	movf	(___aodiv@divisor+4)^0,w,c
  7479  00157C  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  7480  00157E  5014               	movf	(___aodiv@divisor+5)^0,w,c
  7481  001580  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  7482  001582  5015               	movf	(___aodiv@divisor+6)^0,w,c
  7483  001584  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  7484  001586  5016               	movf	(___aodiv@divisor+7)^0,w,c
  7485  001588  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  7486  00158A  A0D8               	btfss	status,0,c
  7487  00158C  EFCA  F00A         	goto	u1601
  7488  001590  EFCC  F00A         	goto	u1600
  7489  001594                     u1601:
  7490  001594  EFDD  F00A         	goto	l2634
  7491  001598                     u1600:
  7492  001598  500F               	movf	___aodiv@divisor^0,w,c
  7493  00159A  5E07               	subwf	___aodiv@dividend^0,f,c
  7494  00159C  5010               	movf	(___aodiv@divisor+1)^0,w,c
  7495  00159E  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  7496  0015A0  5011               	movf	(___aodiv@divisor+2)^0,w,c
  7497  0015A2  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  7498  0015A4  5012               	movf	(___aodiv@divisor+3)^0,w,c
  7499  0015A6  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  7500  0015A8  5013               	movf	(___aodiv@divisor+4)^0,w,c
  7501  0015AA  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  7502  0015AC  5014               	movf	(___aodiv@divisor+5)^0,w,c
  7503  0015AE  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  7504  0015B0  5015               	movf	(___aodiv@divisor+6)^0,w,c
  7505  0015B2  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  7506  0015B4  5016               	movf	(___aodiv@divisor+7)^0,w,c
  7507  0015B6  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  7508  0015B8  8019               	bsf	___aodiv@quotient^0,0,c
  7509  0015BA                     l2634:
  7510  0015BA  90D8               	bcf	status,0,c
  7511  0015BC  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  7512  0015BE  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  7513  0015C0  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  7514  0015C2  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  7515  0015C4  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  7516  0015C6  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  7517  0015C8  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  7518  0015CA  320F               	rrcf	___aodiv@divisor^0,f,c
  7519  0015CC  2E17               	decfsz	___aodiv@counter^0,f,c
  7520  0015CE  EFAC  F00A         	goto	l2626
  7521  0015D2                     l2638:
  7522  0015D2  5018               	movf	___aodiv@sign^0,w,c
  7523  0015D4  B4D8               	btfsc	status,2,c
  7524  0015D6  EFEF  F00A         	goto	u1611
  7525  0015DA  EFF1  F00A         	goto	u1610
  7526  0015DE                     u1611:
  7527  0015DE  EF01  F00B         	goto	l2642
  7528  0015E2                     u1610:
  7529  0015E2  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  7530  0015E4  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  7531  0015E6  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  7532  0015E8  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  7533  0015EA  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  7534  0015EC  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  7535  0015EE  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  7536  0015F0  6C19               	negf	___aodiv@quotient^0,c
  7537  0015F2  0E00               	movlw	0
  7538  0015F4  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  7539  0015F6  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  7540  0015F8  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  7541  0015FA  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  7542  0015FC  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  7543  0015FE  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  7544  001600  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  7545  001602                     l2642:
  7546  001602  C019  F007         	movff	___aodiv@quotient,?___aodiv
  7547  001606  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  7548  00160A  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  7549  00160E  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  7550  001612  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  7551  001616  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  7552  00161A  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  7553  00161E  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  7554  001622  0012               	return		;funcret
  7555  001624                     __end_of___aodiv:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _ctoa *****************
  7559 ;; Defined at:
  7560 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7563 ;;		 -> NULL(0), 
  7564 ;;  c               1   19[COMRAM] unsigned char 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  w               2   23[COMRAM] int 
  7567 ;;  l               2   21[COMRAM] int 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2   17[COMRAM] int 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:        8 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    7
  7584 ;; This function calls:
  7585 ;;		_fputc
  7586 ;; This function is called by:
  7587 ;;		_vfpfcnvrt
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text35
  7592  001900                     __ptext35:
  7593                           	callstack 0
  7594  001900                     _ctoa:
  7595                           	callstack 20
  7596  001900                     
  7597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7598  001900  5053               	movf	_width^0,w,c
  7599  001902  1054               	iorwf	(_width+1)^0,w,c
  7600  001904  A4D8               	btfss	status,2,c
  7601  001906  EF87  F00C         	goto	u1841
  7602  00190A  EF89  F00C         	goto	u1840
  7603  00190E                     u1841:
  7604  00190E  EF8F  F00C         	goto	l2746
  7605  001912                     u1840:
  7606  001912  C053  F018         	movff	_width,ctoa@w
  7607  001916  C054  F019         	movff	_width+1,ctoa@w+1
  7608  00191A  EF95  F00C         	goto	l2748
  7609  00191E                     l2746:
  7610  00191E  0EFF               	movlw	255
  7611  001920  2453               	addwf	_width^0,w,c
  7612  001922  6E18               	movwf	ctoa@w^0,c
  7613  001924  0EFF               	movlw	255
  7614  001926  2054               	addwfc	(_width+1)^0,w,c
  7615  001928  6E19               	movwf	(ctoa@w+1)^0,c
  7616  00192A                     l2748:
  7617                           
  7618                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  7619  00192A  A055               	btfss	_flags^0,0,c
  7620  00192C  EF9A  F00C         	goto	u1851
  7621  001930  EF9C  F00C         	goto	u1850
  7622  001934                     u1851:
  7623  001934  EFA5  F00C         	goto	l2752
  7624  001938                     u1850:
  7625  001938                     
  7626                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  7627  001938  C014  F009         	movff	ctoa@c,fputc@c
  7628  00193C  6A0A               	clrf	(fputc@c+1)^0,c
  7629  00193E  C012  F00B         	movff	ctoa@fp,fputc@fp
  7630  001942  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  7631  001946  ECEE  F00D         	call	_fputc	;wreg free
  7632  00194A                     l2752:
  7633                           
  7634                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  7635  00194A  BE19               	btfsc	(ctoa@w+1)^0,7,c
  7636  00194C  EFAA  F00C         	goto	u1861
  7637  001950  EFAC  F00C         	goto	u1860
  7638  001954                     u1861:
  7639  001954  EFAE  F00C         	goto	l2756
  7640  001958                     u1860:
  7641  001958  EFB2  F00C         	goto	l1194
  7642  00195C                     l2756:
  7643  00195C  0E00               	movlw	0
  7644  00195E  6E19               	movwf	(ctoa@w+1)^0,c
  7645  001960  0E00               	movlw	0
  7646  001962  6E18               	movwf	ctoa@w^0,c
  7647  001964                     l1194:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  7650  001964  0E00               	movlw	0
  7651  001966  6E17               	movwf	(ctoa@l+1)^0,c
  7652  001968  0E00               	movlw	0
  7653  00196A  6E16               	movwf	ctoa@l^0,c
  7654                           
  7655                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7656  00196C  EFC4  F00C         	goto	l2762
  7657  001970                     l2758:
  7658                           
  7659                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  7660  001970  0E00               	movlw	0
  7661  001972  6E0A               	movwf	(fputc@c+1)^0,c
  7662  001974  0E20               	movlw	32
  7663  001976  6E09               	movwf	fputc@c^0,c
  7664  001978  C012  F00B         	movff	ctoa@fp,fputc@fp
  7665  00197C  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  7666  001980  ECEE  F00D         	call	_fputc	;wreg free
  7667  001984                     
  7668                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  7669  001984  4A16               	infsnz	ctoa@l^0,f,c
  7670  001986  2A17               	incf	(ctoa@l+1)^0,f,c
  7671  001988                     l2762:
  7672                           
  7673                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  7674  001988  5018               	movf	ctoa@w^0,w,c
  7675  00198A  5C16               	subwf	ctoa@l^0,w,c
  7676  00198C  5017               	movf	(ctoa@l+1)^0,w,c
  7677  00198E  0A80               	xorlw	128
  7678  001990  6E15               	movwf	??_ctoa^0,c
  7679  001992  5019               	movf	(ctoa@w+1)^0,w,c
  7680  001994  0A80               	xorlw	128
  7681  001996  5815               	subwfb	??_ctoa^0,w,c
  7682  001998  A0D8               	btfss	status,0,c
  7683  00199A  EFD1  F00C         	goto	u1871
  7684  00199E  EFD3  F00C         	goto	u1870
  7685  0019A2                     u1871:
  7686  0019A2  EFB8  F00C         	goto	l2758
  7687  0019A6                     u1870:
  7688  0019A6                     
  7689                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  7690  0019A6  B055               	btfsc	_flags^0,0,c
  7691  0019A8  EFD8  F00C         	goto	u1881
  7692  0019AC  EFDA  F00C         	goto	u1880
  7693  0019B0                     u1881:
  7694  0019B0  EFE3  F00C         	goto	l2766
  7695  0019B4                     u1880:
  7696  0019B4                     
  7697                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  7698  0019B4  C014  F009         	movff	ctoa@c,fputc@c
  7699  0019B8  6A0A               	clrf	(fputc@c+1)^0,c
  7700  0019BA  C012  F00B         	movff	ctoa@fp,fputc@fp
  7701  0019BE  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  7702  0019C2  ECEE  F00D         	call	_fputc	;wreg free
  7703  0019C6                     l2766:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  7706  0019C6  0E01               	movlw	1
  7707  0019C8  2416               	addwf	ctoa@l^0,w,c
  7708  0019CA  6E12               	movwf	?_ctoa^0,c
  7709  0019CC  0E00               	movlw	0
  7710  0019CE  2017               	addwfc	(ctoa@l+1)^0,w,c
  7711  0019D0  6E13               	movwf	(?_ctoa+1)^0,c
  7712  0019D2  0012               	return		;funcret
  7713  0019D4                     __end_of_ctoa:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function _fputc *****************
  7717 ;; Defined at:
  7718 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  c               2    8[COMRAM] int 
  7721 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  7722 ;;		 -> NULL(0), 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  2    8[COMRAM] int 
  7727 ;; Registers used:
  7728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;Total ram usage:        9 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    6
  7741 ;; This function calls:
  7742 ;;		_putch
  7743 ;; This function is called by:
  7744 ;;		_pad
  7745 ;;		_ctoa
  7746 ;;		_vfpfcnvrt
  7747 ;;		_fputs
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text36
  7752  001BDC                     __ptext36:
  7753                           	callstack 0
  7754  001BDC                     _fputc:
  7755                           	callstack 18
  7756  001BDC  500B               	movf	fputc@fp^0,w,c
  7757  001BDE  100C               	iorwf	(fputc@fp+1)^0,w,c
  7758  001BE0  B4D8               	btfsc	status,2,c
  7759  001BE2  EFF5  F00D         	goto	u1471
  7760  001BE6  EFF7  F00D         	goto	u1470
  7761  001BEA                     u1471:
  7762  001BEA  EF00  F00E         	goto	l2564
  7763  001BEE                     u1470:
  7764  001BEE  500B               	movf	fputc@fp^0,w,c
  7765  001BF0  100C               	iorwf	(fputc@fp+1)^0,w,c
  7766  001BF2  A4D8               	btfss	status,2,c
  7767  001BF4  EFFE  F00D         	goto	u1481
  7768  001BF8  EF00  F00E         	goto	u1480
  7769  001BFC                     u1481:
  7770  001BFC  EF05  F00E         	goto	l2566
  7771  001C00                     u1480:
  7772  001C00                     l2564:
  7773  001C00  5009               	movf	fputc@c^0,w,c
  7774  001C02  EC34  F011         	call	_putch
  7775  001C06  EF38  F00E         	goto	l1371
  7776  001C0A                     l2566:
  7777  001C0A  EE20 F004          	lfsr	2,4
  7778  001C0E  500B               	movf	fputc@fp^0,w,c
  7779  001C10  26D9               	addwf	fsr2l,f,c
  7780  001C12  500C               	movf	(fputc@fp+1)^0,w,c
  7781  001C14  22DA               	addwfc	fsr2h,f,c
  7782  001C16  50DE               	movf	postinc2,w,c
  7783  001C18  10DE               	iorwf	postinc2,w,c
  7784  001C1A  B4D8               	btfsc	status,2,c
  7785  001C1C  EF12  F00E         	goto	u1491
  7786  001C20  EF14  F00E         	goto	u1490
  7787  001C24                     u1491:
  7788  001C24  EF2F  F00E         	goto	l2570
  7789  001C28                     u1490:
  7790  001C28  EE20 F004          	lfsr	2,4
  7791  001C2C  500B               	movf	fputc@fp^0,w,c
  7792  001C2E  26D9               	addwf	fsr2l,f,c
  7793  001C30  500C               	movf	(fputc@fp+1)^0,w,c
  7794  001C32  22DA               	addwfc	fsr2h,f,c
  7795  001C34  EE10 F002          	lfsr	1,2
  7796  001C38  500B               	movf	fputc@fp^0,w,c
  7797  001C3A  26E1               	addwf	fsr1l,f,c
  7798  001C3C  500C               	movf	(fputc@fp+1)^0,w,c
  7799  001C3E  22E2               	addwfc	fsr1h,f,c
  7800  001C40  50DE               	movf	postinc2,w,c
  7801  001C42  5CE6               	subwf	postinc1,w,c
  7802  001C44  50E6               	movf	postinc1,w,c
  7803  001C46  0A80               	xorlw	128
  7804  001C48  6E11               	movwf	(??_fputc+4)^0,c
  7805  001C4A  50DE               	movf	postinc2,w,c
  7806  001C4C  0A80               	xorlw	128
  7807  001C4E  5811               	subwfb	(??_fputc+4)^0,w,c
  7808  001C50  B0D8               	btfsc	status,0,c
  7809  001C52  EF2D  F00E         	goto	u1501
  7810  001C56  EF2F  F00E         	goto	u1500
  7811  001C5A                     u1501:
  7812  001C5A  EF38  F00E         	goto	l1371
  7813  001C5E                     u1500:
  7814  001C5E                     l2570:
  7815  001C5E  EE20 F002          	lfsr	2,2
  7816  001C62  500B               	movf	fputc@fp^0,w,c
  7817  001C64  26D9               	addwf	fsr2l,f,c
  7818  001C66  500C               	movf	(fputc@fp+1)^0,w,c
  7819  001C68  22DA               	addwfc	fsr2h,f,c
  7820  001C6A  2ADE               	incf	postinc2,f,c
  7821  001C6C  0E00               	movlw	0
  7822  001C6E  22DD               	addwfc	postdec2,f,c
  7823  001C70                     l1371:
  7824  001C70  0012               	return		;funcret
  7825  001C72                     __end_of_fputc:
  7826                           	callstack 0
  7827                           
  7828 ;; *************** function _putch *****************
  7829 ;; Defined at:
  7830 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  txData          1    wreg     unsigned char 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  txData          1    7[COMRAM] unsigned char 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;Total ram usage:        1 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    5
  7851 ;; This function calls:
  7852 ;;		_EUSART1_Write
  7853 ;; This function is called by:
  7854 ;;		_fputc
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text37
  7859  002268                     __ptext37:
  7860                           	callstack 0
  7861  002268                     _putch:
  7862                           	callstack 18
  7863                           
  7864                           ;incstack = 0
  7865                           ;putch@txData stored from wreg
  7866  002268  6E08               	movwf	putch@txData^0,c
  7867  00226A                     
  7868                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  7869  00226A  5008               	movf	putch@txData^0,w,c
  7870  00226C  ECFD  F010         	call	_EUSART1_Write
  7871  002270  0012               	return		;funcret
  7872  002272                     __end_of_putch:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function _EUSART1_Write *****************
  7876 ;; Defined at:
  7877 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  txData          1    wreg     unsigned char 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  txData          1    6[COMRAM] unsigned char 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      void 
  7884 ;; Registers used:
  7885 ;;		wreg
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;Total ram usage:        1 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    4
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_putch
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text38
  7906  0021FA                     __ptext38:
  7907                           	callstack 0
  7908  0021FA                     _EUSART1_Write:
  7909                           	callstack 18
  7910                           
  7911                           ;incstack = 0
  7912                           ;EUSART1_Write@txData stored from wreg
  7913  0021FA  6E07               	movwf	EUSART1_Write@txData^0,c
  7914  0021FC                     l305:
  7915                           
  7916                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  7917  0021FC  A89E               	btfss	158,4,c	;volatile
  7918  0021FE  EF03  F011         	goto	u1461
  7919  002202  EF05  F011         	goto	u1460
  7920  002206                     u1461:
  7921  002206  EFFE  F010         	goto	l305
  7922  00220A                     u1460:
  7923  00220A                     
  7924                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  7925  00220A  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  7926  00220E  0012               	return		;funcret
  7927  002210                     __end_of_EUSART1_Write:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function _atoi *****************
  7931 ;; Defined at:
  7932 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7935 ;;		 -> STR_69(3), STR_68(3), STR_67(2), STR_66(4), 
  7936 ;;		 -> STR_65(6), STR_64(3), STR_63(3), STR_62(2), 
  7937 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(28), 
  7938 ;;		 -> STR_57(26), STR_56(27), STR_55(17), STR_54(3), 
  7939 ;;		 -> STR_53(5), STR_52(2), STR_51(5), STR_50(17), 
  7940 ;;		 -> STR_49(15), STR_48(23), STR_47(3), STR_46(5), 
  7941 ;;		 -> STR_45(2), STR_44(5), STR_43(17), STR_42(43), 
  7942 ;;		 -> STR_41(3), STR_40(5), STR_39(2), STR_38(5), 
  7943 ;;		 -> STR_37(19), STR_36(20), STR_35(28), STR_34(20), 
  7944 ;;		 -> STR_33(30), STR_32(29), STR_31(29), STR_30(44), 
  7945 ;;		 -> STR_29(27), STR_28(83), STR_27(83), STR_26(2), 
  7946 ;;		 -> STR_25(2), STR_24(8), STR_23(52), STR_22(42), 
  7947 ;;		 -> STR_21(43), STR_20(37), STR_19(24), STR_18(52), 
  7948 ;;		 -> STR_17(36), STR_16(52), STR_15(24), STR_14(21), 
  7949 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  7950 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  7951 ;;		 -> STR_5(54), STR_4(42), STR_3(9), STR_2(18), 
  7952 ;;		 -> STR_1(11), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  n               2   26[COMRAM] int 
  7955 ;;  neg             2   19[COMRAM] int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2   13[COMRAM] int 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;Total ram usage:       15 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    5
  7972 ;; This function calls:
  7973 ;;		___wmul
  7974 ;;		_isdigit
  7975 ;;		_isspace
  7976 ;; This function is called by:
  7977 ;;		_vfpfcnvrt
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text39
  7982  001302                     __ptext39:
  7983                           	callstack 0
  7984  001302                     _atoi:
  7985                           	callstack 22
  7986  001302  0E00               	movlw	0
  7987  001304  6E1C               	movwf	(atoi@n+1)^0,c
  7988  001306  0E00               	movlw	0
  7989  001308  6E1B               	movwf	atoi@n^0,c
  7990  00130A  0E00               	movlw	0
  7991  00130C  6E15               	movwf	(atoi@neg+1)^0,c
  7992  00130E  0E00               	movlw	0
  7993  001310  6E14               	movwf	atoi@neg^0,c
  7994  001312  EF8D  F009         	goto	l2902
  7995  001316                     l2900:
  7996  001316  4A0E               	infsnz	atoi@s^0,f,c
  7997  001318  2A0F               	incf	(atoi@s+1)^0,f,c
  7998  00131A                     l2902:
  7999  00131A  0E01               	movlw	1
  8000  00131C  6E1A               	movwf	_atoi$1746^0,c
  8001  00131E  C00E  FFF6         	movff	atoi@s,tblptrl
  8002  001322  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8003  001326                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8004  001326  6AF8               	clrf	tblptru,c
  8005  001328                     	endif
  8006  001328                     	if	0	;tblptru may be non-zero
  8007  001328                     	endif
  8008  001328  0008               	tblrd		*
  8009  00132A  50F5               	movf	tablat,w,c
  8010  00132C  0A20               	xorlw	32
  8011  00132E  B4D8               	btfsc	status,2,c
  8012  001330  EF9C  F009         	goto	u2211
  8013  001334  EF9E  F009         	goto	u2210
  8014  001338                     u2211:
  8015  001338  EFBC  F009         	goto	l2910
  8016  00133C                     u2210:
  8017  00133C  0EF7               	movlw	247
  8018  00133E  6E10               	movwf	??_atoi^0,c
  8019  001340  0EFF               	movlw	255
  8020  001342  6E11               	movwf	(??_atoi+1)^0,c
  8021  001344  C00E  FFF6         	movff	atoi@s,tblptrl
  8022  001348  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8023  00134C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8024  00134C  6AF8               	clrf	tblptru,c
  8025  00134E                     	endif
  8026  00134E                     	if	0	;tblptru may be non-zero
  8027  00134E                     	endif
  8028  00134E  0008               	tblrd		*
  8029  001350  50F5               	movf	tablat,w,c
  8030  001352  6E12               	movwf	(??_atoi+2)^0,c
  8031  001354  6A13               	clrf	(??_atoi+3)^0,c
  8032  001356  5010               	movf	??_atoi^0,w,c
  8033  001358  2612               	addwf	(??_atoi+2)^0,f,c
  8034  00135A  5011               	movf	(??_atoi+1)^0,w,c
  8035  00135C  2213               	addwfc	(??_atoi+3)^0,f,c
  8036  00135E  5013               	movf	(??_atoi+3)^0,w,c
  8037  001360  E109               	bnz	u2220
  8038  001362  0E05               	movlw	5
  8039  001364  5C12               	subwf	(??_atoi+2)^0,w,c
  8040  001366  A0D8               	btfss	status,0,c
  8041  001368  EFB8  F009         	goto	u2221
  8042  00136C  EFBA  F009         	goto	u2220
  8043  001370                     u2221:
  8044  001370  EFBC  F009         	goto	l2910
  8045  001374                     u2220:
  8046  001374  0E00               	movlw	0
  8047  001376  6E1A               	movwf	_atoi$1746^0,c
  8048  001378                     l2910:
  8049  001378  C01A  F016         	movff	_atoi$1746,_atoi$1745
  8050  00137C  6A17               	clrf	(_atoi$1745+1)^0,c
  8051  00137E  5016               	movf	_atoi$1745^0,w,c
  8052  001380  1017               	iorwf	(_atoi$1745+1)^0,w,c
  8053  001382  A4D8               	btfss	status,2,c
  8054  001384  EFC6  F009         	goto	u2231
  8055  001388  EFC8  F009         	goto	u2230
  8056  00138C                     u2231:
  8057  00138C  EF8B  F009         	goto	l2900
  8058  001390                     u2230:
  8059  001390  EFD2  F009         	goto	l2920
  8060  001394                     l2916:
  8061  001394  0E00               	movlw	0
  8062  001396  6E15               	movwf	(atoi@neg+1)^0,c
  8063  001398  0E01               	movlw	1
  8064  00139A  6E14               	movwf	atoi@neg^0,c
  8065  00139C                     l2918:
  8066  00139C  4A0E               	infsnz	atoi@s^0,f,c
  8067  00139E  2A0F               	incf	(atoi@s+1)^0,f,c
  8068  0013A0  EF09  F00A         	goto	l2926
  8069  0013A4                     l2920:
  8070  0013A4  C00E  FFF6         	movff	atoi@s,tblptrl
  8071  0013A8  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8072  0013AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8073  0013AC  6AF8               	clrf	tblptru,c
  8074  0013AE                     	endif
  8075  0013AE                     	if	0	;tblptru may be non-zero
  8076  0013AE                     	endif
  8077  0013AE  0008               	tblrd		*
  8078  0013B0  50F5               	movf	tablat,w,c
  8079  0013B2  6E10               	movwf	??_atoi^0,c
  8080  0013B4  6A11               	clrf	(??_atoi+1)^0,c
  8081                           
  8082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8083                           ; Switch size 1, requested type "simple"
  8084                           ; Number of cases is 1, Range of values is 0 to 0
  8085                           ; switch strategies available:
  8086                           ; Name         Instructions Cycles
  8087                           ; simple_byte            4     3 (average)
  8088                           ;	Chosen strategy is simple_byte
  8089  0013B6  5011               	movf	(??_atoi+1)^0,w,c
  8090  0013B8  0A00               	xorlw	0	; case 0
  8091  0013BA  B4D8               	btfsc	status,2,c
  8092  0013BC  EFE2  F009         	goto	l4194
  8093  0013C0  EF09  F00A         	goto	l2926
  8094  0013C4                     l4194:
  8095                           
  8096                           ; Switch size 1, requested type "simple"
  8097                           ; Number of cases is 2, Range of values is 43 to 45
  8098                           ; switch strategies available:
  8099                           ; Name         Instructions Cycles
  8100                           ; simple_byte            7     4 (average)
  8101                           ;	Chosen strategy is simple_byte
  8102  0013C4  5010               	movf	??_atoi^0,w,c
  8103  0013C6  0A2B               	xorlw	43	; case 43
  8104  0013C8  B4D8               	btfsc	status,2,c
  8105  0013CA  EFCE  F009         	goto	l2918
  8106  0013CE  0A06               	xorlw	6	; case 45
  8107  0013D0  B4D8               	btfsc	status,2,c
  8108  0013D2  EFCA  F009         	goto	l2916
  8109  0013D6  EF09  F00A         	goto	l2926
  8110  0013DA                     l2922:
  8111  0013DA  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8112  0013DE  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8113  0013E2  0E00               	movlw	0
  8114  0013E4  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8115  0013E6  0E0A               	movlw	10
  8116  0013E8  6E09               	movwf	___wmul@multiplicand^0,c
  8117  0013EA  ECC2  F010         	call	___wmul	;wreg free
  8118  0013EE  C00E  FFF6         	movff	atoi@s,tblptrl
  8119  0013F2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8120  0013F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8121  0013F6  6AF8               	clrf	tblptru,c
  8122  0013F8                     	endif
  8123  0013F8                     	if	0	;tblptru may be non-zero
  8124  0013F8                     	endif
  8125  0013F8  0008               	tblrd		*
  8126  0013FA  50F5               	movf	tablat,w,c
  8127  0013FC  5E07               	subwf	?___wmul^0,f,c
  8128  0013FE  0E00               	movlw	0
  8129  001400  5A08               	subwfb	(?___wmul+1)^0,f,c
  8130  001402  0E30               	movlw	48
  8131  001404  2407               	addwf	?___wmul^0,w,c
  8132  001406  6E1B               	movwf	atoi@n^0,c
  8133  001408  0E00               	movlw	0
  8134  00140A  2008               	addwfc	(?___wmul+1)^0,w,c
  8135  00140C  6E1C               	movwf	(atoi@n+1)^0,c
  8136  00140E  EFCE  F009         	goto	l2918
  8137  001412                     l2926:
  8138  001412  0ED0               	movlw	208
  8139  001414  6E10               	movwf	??_atoi^0,c
  8140  001416  0EFF               	movlw	255
  8141  001418  6E11               	movwf	(??_atoi+1)^0,c
  8142  00141A  C00E  FFF6         	movff	atoi@s,tblptrl
  8143  00141E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8144  001422                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8145  001422  6AF8               	clrf	tblptru,c
  8146  001424                     	endif
  8147  001424                     	if	0	;tblptru may be non-zero
  8148  001424                     	endif
  8149  001424  0008               	tblrd		*
  8150  001426  50F5               	movf	tablat,w,c
  8151  001428  6E12               	movwf	(??_atoi+2)^0,c
  8152  00142A  6A13               	clrf	(??_atoi+3)^0,c
  8153  00142C  5010               	movf	??_atoi^0,w,c
  8154  00142E  2612               	addwf	(??_atoi+2)^0,f,c
  8155  001430  5011               	movf	(??_atoi+1)^0,w,c
  8156  001432  2213               	addwfc	(??_atoi+3)^0,f,c
  8157  001434  5013               	movf	(??_atoi+3)^0,w,c
  8158  001436  E10A               	bnz	u2240
  8159  001438  0E0A               	movlw	10
  8160  00143A  5C12               	subwf	(??_atoi+2)^0,w,c
  8161  00143C  A0D8               	btfss	status,0,c
  8162  00143E  EF23  F00A         	goto	u2241
  8163  001442  EF26  F00A         	goto	u2240
  8164  001446                     u2241:
  8165  001446  0E01               	movlw	1
  8166  001448  EF27  F00A         	goto	u2250
  8167  00144C                     u2240:
  8168  00144C  0E00               	movlw	0
  8169  00144E                     u2250:
  8170  00144E  6E18               	movwf	_atoi$1747^0,c
  8171  001450  6A19               	clrf	(_atoi$1747+1)^0,c
  8172  001452  5018               	movf	_atoi$1747^0,w,c
  8173  001454  1019               	iorwf	(_atoi$1747+1)^0,w,c
  8174  001456  A4D8               	btfss	status,2,c
  8175  001458  EF30  F00A         	goto	u2261
  8176  00145C  EF32  F00A         	goto	u2260
  8177  001460                     u2261:
  8178  001460  EFED  F009         	goto	l2922
  8179  001464                     u2260:
  8180  001464  5014               	movf	atoi@neg^0,w,c
  8181  001466  1015               	iorwf	(atoi@neg+1)^0,w,c
  8182  001468  A4D8               	btfss	status,2,c
  8183  00146A  EF39  F00A         	goto	u2271
  8184  00146E  EF3B  F00A         	goto	u2270
  8185  001472                     u2271:
  8186  001472  EF49  F00A         	goto	l1330
  8187  001476                     u2270:
  8188  001476  C01B  F010         	movff	atoi@n,??_atoi
  8189  00147A  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8190  00147E  1E10               	comf	??_atoi^0,f,c
  8191  001480  1E11               	comf	(??_atoi+1)^0,f,c
  8192  001482  4A10               	infsnz	??_atoi^0,f,c
  8193  001484  2A11               	incf	(??_atoi+1)^0,f,c
  8194  001486  C010  F00E         	movff	??_atoi,?_atoi
  8195  00148A  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8196  00148E  EF4D  F00A         	goto	l1333
  8197  001492                     l1330:
  8198  001492  C01B  F00E         	movff	atoi@n,?_atoi
  8199  001496  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8200  00149A                     l1333:
  8201  00149A  0012               	return		;funcret
  8202  00149C                     __end_of_atoi:
  8203                           	callstack 0
  8204                           
  8205 ;; *************** function _isspace *****************
  8206 ;; Defined at:
  8207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  c               2    6[COMRAM] int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2    6[COMRAM] int 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2, status,0
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;Total ram usage:        7 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:    4
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_atoi
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text40
  8236  001DC2                     __ptext40:
  8237                           	callstack 0
  8238  001DC2                     _isspace:
  8239                           	callstack 22
  8240  001DC2  0E01               	movlw	1
  8241  001DC4  6E0D               	movwf	_isspace$1772^0,c
  8242  001DC6  0E20               	movlw	32
  8243  001DC8  1807               	xorwf	isspace@c^0,w,c
  8244  001DCA  1008               	iorwf	(isspace@c+1)^0,w,c
  8245  001DCC  B4D8               	btfsc	status,2,c
  8246  001DCE  EFEB  F00E         	goto	u1821
  8247  001DD2  EFED  F00E         	goto	u1820
  8248  001DD6                     u1821:
  8249  001DD6  EF06  F00F         	goto	l2738
  8250  001DDA                     u1820:
  8251  001DDA  0EF7               	movlw	247
  8252  001DDC  6E09               	movwf	??_isspace^0,c
  8253  001DDE  0EFF               	movlw	255
  8254  001DE0  6E0A               	movwf	(??_isspace+1)^0,c
  8255  001DE2  C007  F00B         	movff	isspace@c,??_isspace+2
  8256  001DE6  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8257  001DEA  5009               	movf	??_isspace^0,w,c
  8258  001DEC  260B               	addwf	(??_isspace+2)^0,f,c
  8259  001DEE  500A               	movf	(??_isspace+1)^0,w,c
  8260  001DF0  220C               	addwfc	(??_isspace+3)^0,f,c
  8261  001DF2  500C               	movf	(??_isspace+3)^0,w,c
  8262  001DF4  E109               	bnz	u1830
  8263  001DF6  0E05               	movlw	5
  8264  001DF8  5C0B               	subwf	(??_isspace+2)^0,w,c
  8265  001DFA  A0D8               	btfss	status,0,c
  8266  001DFC  EF02  F00F         	goto	u1831
  8267  001E00  EF04  F00F         	goto	u1830
  8268  001E04                     u1831:
  8269  001E04  EF06  F00F         	goto	l2738
  8270  001E08                     u1830:
  8271  001E08  0E00               	movlw	0
  8272  001E0A  6E0D               	movwf	_isspace$1772^0,c
  8273  001E0C                     l2738:
  8274  001E0C  C00D  F007         	movff	_isspace$1772,?_isspace
  8275  001E10  6A08               	clrf	(?_isspace+1)^0,c
  8276  001E12  0012               	return		;funcret
  8277  001E14                     __end_of_isspace:
  8278                           	callstack 0
  8279                           
  8280 ;; *************** function _isdigit *****************
  8281 ;; Defined at:
  8282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  c               2    6[COMRAM] int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;		None
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  2    6[COMRAM] int 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;Total ram usage:        6 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    4
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_vfpfcnvrt
  8307 ;;		_atoi
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text41
  8312  001FBC                     __ptext41:
  8313                           	callstack 0
  8314  001FBC                     _isdigit:
  8315                           	callstack 23
  8316  001FBC  0ED0               	movlw	208
  8317  001FBE  6E09               	movwf	??_isdigit^0,c
  8318  001FC0  0EFF               	movlw	255
  8319  001FC2  6E0A               	movwf	(??_isdigit+1)^0,c
  8320  001FC4  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8321  001FC8  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8322  001FCC  5009               	movf	??_isdigit^0,w,c
  8323  001FCE  260B               	addwf	(??_isdigit+2)^0,f,c
  8324  001FD0  500A               	movf	(??_isdigit+1)^0,w,c
  8325  001FD2  220C               	addwfc	(??_isdigit+3)^0,f,c
  8326  001FD4  500C               	movf	(??_isdigit+3)^0,w,c
  8327  001FD6  E10A               	bnz	u1800
  8328  001FD8  0E0A               	movlw	10
  8329  001FDA  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8330  001FDC  A0D8               	btfss	status,0,c
  8331  001FDE  EFF3  F00F         	goto	u1801
  8332  001FE2  EFF6  F00F         	goto	u1800
  8333  001FE6                     u1801:
  8334  001FE6  0E01               	movlw	1
  8335  001FE8  EFF7  F00F         	goto	u1810
  8336  001FEC                     u1800:
  8337  001FEC  0E00               	movlw	0
  8338  001FEE                     u1810:
  8339  001FEE  6E07               	movwf	?_isdigit^0,c
  8340  001FF0  6A08               	clrf	(?_isdigit+1)^0,c
  8341  001FF2  0012               	return		;funcret
  8342  001FF4                     __end_of_isdigit:
  8343                           	callstack 0
  8344                           
  8345 ;; *************** function ___wmul *****************
  8346 ;; Defined at:
  8347 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  multiplier      2    6[COMRAM] unsigned int 
  8350 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  product         2   10[COMRAM] unsigned int 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  2    6[COMRAM] unsigned int 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, prodl, prodh
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;Total ram usage:        6 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    4
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_atoi
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text42
  8377  002184                     __ptext42:
  8378                           	callstack 0
  8379  002184                     ___wmul:
  8380                           	callstack 22
  8381  002184  5007               	movf	___wmul@multiplier^0,w,c
  8382  002186  0209               	mulwf	___wmul@multiplicand^0,c
  8383  002188  CFF3 F00B          	movff	prodl,___wmul@product
  8384  00218C  CFF4 F00C          	movff	prodh,___wmul@product+1
  8385  002190  5007               	movf	___wmul@multiplier^0,w,c
  8386  002192  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  8387  002194  50F3               	movf	243,w,c
  8388  002196  260C               	addwf	(___wmul@product+1)^0,f,c
  8389  002198  5008               	movf	(___wmul@multiplier+1)^0,w,c
  8390  00219A  0209               	mulwf	___wmul@multiplicand^0,c
  8391  00219C  50F3               	movf	243,w,c
  8392  00219E  260C               	addwf	(___wmul@product+1)^0,f,c
  8393  0021A0  C00B  F007         	movff	___wmul@product,?___wmul
  8394  0021A4  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  8395  0021A8  0012               	return		;funcret
  8396  0021AA                     __end_of___wmul:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function _SPI2_ExchangeByte *****************
  8400 ;; Defined at:
  8401 ;;		line 92 in file "mcc_generated_files/spi2.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  data            1    wreg     unsigned char 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  data            1    6[COMRAM] unsigned char 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      unsigned char 
  8408 ;; Registers used:
  8409 ;;		wreg, status,2
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;Total ram usage:        1 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:    4
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		_main
  8426 ;;		_SDCARD_ReadBlock
  8427 ;;		_SDCARD_WriteBlock
  8428 ;;		_SDCARD_PollWriteComplete
  8429 ;;		_SDCARD_Initialize
  8430 ;;		_SPI2_WriteBlock
  8431 ;;		_SPI2_ReadBlock
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text43
  8436  0021E0                     __ptext43:
  8437                           	callstack 0
  8438  0021E0                     _SPI2_ExchangeByte:
  8439                           	callstack 26
  8440                           
  8441                           ;incstack = 0
  8442                           ;SPI2_ExchangeByte@data stored from wreg
  8443  0021E0  6E07               	movwf	SPI2_ExchangeByte@data^0,c
  8444  0021E2                     
  8445                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
  8446  0021E2  C007  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  8447  0021E6                     l31:
  8448  0021E6  AEA4               	btfss	164,7,c	;volatile
  8449  0021E8  EFF8  F010         	goto	u2431
  8450  0021EC  EFFA  F010         	goto	u2430
  8451  0021F0                     u2431:
  8452  0021F0  EFF3  F010         	goto	l31
  8453  0021F4                     u2430:
  8454  0021F4                     
  8455                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
  8456  0021F4  9EA4               	bcf	164,7,c	;volatile
  8457                           
  8458                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
  8459  0021F6  506F               	movf	111,w,c	;volatile
  8460  0021F8  0012               	return		;funcret
  8461  0021FA                     __end_of_SPI2_ExchangeByte:
  8462                           	callstack 0
  8463                           
  8464 ;; *************** function _EUSART1_is_rx_ready *****************
  8465 ;; Defined at:
  8466 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  1    wreg      _Bool 
  8473 ;; Registers used:
  8474 ;;		wreg
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;Total ram usage:        0 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    4
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text44
  8495  002210                     __ptext44:
  8496                           	callstack 0
  8497  002210                     _EUSART1_is_rx_ready:
  8498                           	callstack 26
  8499  002210                     
  8500                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  8501  002210  BA9E               	btfsc	158,5,c	;volatile
  8502  002212  EF0D  F011         	goto	u2491
  8503  002216  EF10  F011         	goto	u2490
  8504  00221A                     u2491:
  8505  00221A  0E01               	movlw	1
  8506  00221C  EF11  F011         	goto	u2496
  8507  002220                     u2490:
  8508  002220  0E00               	movlw	0
  8509  002222                     u2496:
  8510  002222  0012               	return		;funcret
  8511  002224                     __end_of_EUSART1_is_rx_ready:
  8512                           	callstack 0
  8513                           
  8514 ;; *************** function _EUSART1_Read *****************
  8515 ;; Defined at:
  8516 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;		None
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      unsigned char 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;Total ram usage:        0 bytes
  8535 ;; Hardware stack levels used:    1
  8536 ;; Hardware stack levels required when called:    4
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		_main
  8541 ;;		_getch
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text45
  8546  002132                     __ptext45:
  8547                           	callstack 0
  8548  002132                     _EUSART1_Read:
  8549                           	callstack 26
  8550  002132                     l298:
  8551                           
  8552                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  8553  002132  AA9E               	btfss	158,5,c	;volatile
  8554  002134  EF9E  F010         	goto	u2501
  8555  002138  EFA0  F010         	goto	u2500
  8556  00213C                     u2501:
  8557  00213C  EF99  F010         	goto	l298
  8558  002140                     u2500:
  8559  002140                     
  8560                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  8561  002140  0E00               	movlw	0
  8562  002142  0100               	movlb	0	; () banked
  8563  002144  6FAA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8564  002146                     
  8565                           ; BSR set to: 0
  8566                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  8567  002146  A2AB               	btfss	171,1,c	;volatile
  8568  002148  EFA8  F010         	goto	u2511
  8569  00214C  EFAA  F010         	goto	u2510
  8570  002150                     u2511:
  8571  002150  EFAC  F010         	goto	l3200
  8572  002154                     u2510:
  8573  002154                     
  8574                           ; BSR set to: 0
  8575                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  8576  002154  98AB               	bcf	171,4,c	;volatile
  8577                           
  8578                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  8579  002156  88AB               	bsf	171,4,c	;volatile
  8580  002158                     l3200:
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  8584  002158  50AE               	movf	174,w,c	;volatile
  8585  00215A                     
  8586                           ; BSR set to: 0
  8587  00215A  0012               	return		;funcret
  8588  00215C                     __end_of_EUSART1_Read:
  8589                           	callstack 0
  8590                           
  8591 ;; *************** function _INTERRUPT_InterruptManager *****************
  8592 ;; Defined at:
  8593 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;		None
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;Total ram usage:        2 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    3
  8614 ;; This function calls:
  8615 ;;		_TMR0_ISR
  8616 ;; This function is called by:
  8617 ;;		Interrupt level 2
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	intcode
  8622  000008                     __pintcode:
  8623                           	callstack 0
  8624  000008                     _INTERRUPT_InterruptManager:
  8625                           	callstack 17
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;incstack = 0
  8629  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8630  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  8631  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8632  000012                     
  8633                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8634  000012  AAF2               	btfss	242,5,c	;volatile
  8635  000014  EF0E  F000         	goto	i2u285_41
  8636  000018  EF10  F000         	goto	i2u285_40
  8637  00001C                     i2u285_41:
  8638  00001C  EF19  F000         	goto	i2l377
  8639  000020                     i2u285_40:
  8640  000020  A4F2               	btfss	242,2,c	;volatile
  8641  000022  EF15  F000         	goto	i2u286_41
  8642  000026  EF17  F000         	goto	i2u286_40
  8643  00002A                     i2u286_41:
  8644  00002A  EF19  F000         	goto	i2l377
  8645  00002E                     i2u286_40:
  8646  00002E                     
  8647                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  8648  00002E  ECFA  F00F         	call	_TMR0_ISR	;wreg free
  8649  000032                     i2l377:
  8650  000032  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8651  000036  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8652  00003A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8653  00003C  0011               	retfie		f
  8654  00003E                     __end_of_INTERRUPT_InterruptManager:
  8655                           	callstack 0
  8656                           
  8657 ;; *************** function _TMR0_ISR *****************
  8658 ;; Defined at:
  8659 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;Total ram usage:        0 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    2
  8680 ;; This function calls:
  8681 ;;		Absolute function
  8682 ;;		_TMR0_DefaultInterruptHandler
  8683 ;;		_myTMR0ISR
  8684 ;; This function is called by:
  8685 ;;		_INTERRUPT_InterruptManager
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text47
  8690  001FF4                     __ptext47:
  8691                           	callstack 0
  8692  001FF4                     _TMR0_ISR:
  8693                           	callstack 17
  8694  001FF4                     
  8695                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  8696  001FF4  94F2               	bcf	242,2,c	;volatile
  8697  001FF6                     
  8698                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  8699  001FF6  5058               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  8700  001FF8  6ED7               	movwf	215,c	;volatile
  8701  001FFA                     
  8702                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  8703  001FFA  C057  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  8704  001FFE                     
  8705                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  8706  001FFE  0100               	movlb	0	; () banked
  8707  002000  51A8               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8708  002002  11A9               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8709  002004  B4D8               	btfsc	status,2,c
  8710  002006  EF07  F010         	goto	i2u247_41
  8711  00200A  EF09  F010         	goto	i2u247_40
  8712  00200E                     i2u247_41:
  8713  00200E  EF15  F010         	goto	i2l131
  8714  002012                     i2u247_40:
  8715  002012                     
  8716                           ; BSR set to: 0
  8717                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  8718  002012  D802               	call	i2u248_48
  8719  002014  EF15  F010         	goto	i2u248_49
  8720  002018                     i2u248_48:
  8721  002018  0005               	push	
  8722  00201A  6EFA               	movwf	pclath,c
  8723  00201C  51A8               	movf	_TMR0_InterruptHandler& (0+255),w,b
  8724  00201E  6EFD               	movwf	tosl,c
  8725  002020  51A9               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  8726  002022  6EFE               	movwf	tosh,c
  8727  002024  6AFF               	clrf	tosu,c
  8728  002026  50FA               	movf	pclath,w,c
  8729  002028  0012               	return		;indir
  8730  00202A                     i2u248_49:
  8731  00202A                     i2l131:
  8732  00202A  0012               	return		;funcret
  8733  00202C                     __end_of_TMR0_ISR:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8737 ;; Defined at:
  8738 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		None
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;Total ram usage:        0 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_TMR0_Initialize
  8762 ;;		_TMR0_ISR
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text48
  8767  002284                     __ptext48:
  8768                           	callstack 0
  8769  002284                     _TMR0_DefaultInterruptHandler:
  8770                           	callstack 18
  8771  002284  0012               	return		;funcret
  8772  002286                     __end_of_TMR0_DefaultInterruptHandler:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function _myTMR0ISR *****************
  8776 ;; Defined at:
  8777 ;;		line 242 in file "main.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  bigOleWasteO    2    2[COMRAM] unsigned short 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;Total ram usage:        2 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    1
  8798 ;; This function calls:
  8799 ;;		i2_TMR0_WriteTimer
  8800 ;; This function is called by:
  8801 ;;		_main
  8802 ;;		_TMR0_ISR
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text49
  8807  0020CE                     __ptext49:
  8808                           	callstack 0
  8809  0020CE                     _myTMR0ISR:
  8810                           	callstack 17
  8811  0020CE  8C89               	bsf	137,6,c	;volatile
  8812  0020D0                     
  8813                           ;main.c: 247:     for (bigOleWasteOfTime = 0; bigOleWasteOfTime < 40; bigOleWasteOfTime+
      +                          +);
  8814  0020D0  0E00               	movlw	0
  8815  0020D2  6E04               	movwf	(myTMR0ISR@bigOleWasteOfTime+1)^0,c
  8816  0020D4  0E00               	movlw	0
  8817  0020D6  6E03               	movwf	myTMR0ISR@bigOleWasteOfTime^0,c
  8818  0020D8                     i2l3122:
  8819  0020D8  4A03               	infsnz	myTMR0ISR@bigOleWasteOfTime^0,f,c
  8820  0020DA  2A04               	incf	(myTMR0ISR@bigOleWasteOfTime+1)^0,f,c
  8821  0020DC  5004               	movf	(myTMR0ISR@bigOleWasteOfTime+1)^0,w,c
  8822  0020DE  E109               	bnz	i2u244_40
  8823  0020E0  0E28               	movlw	40
  8824  0020E2  5C03               	subwf	myTMR0ISR@bigOleWasteOfTime^0,w,c
  8825  0020E4  A0D8               	btfss	status,0,c
  8826  0020E6  EF77  F010         	goto	i2u244_41
  8827  0020EA  EF79  F010         	goto	i2u244_40
  8828  0020EE                     i2u244_41:
  8829  0020EE  EF6C  F010         	goto	i2l3122
  8830  0020F2                     i2u244_40:
  8831  0020F2                     
  8832                           ;main.c: 248:     TMR0_WriteTimer(0x10000 - 1600);
  8833  0020F2  0EF9               	movlw	249
  8834  0020F4  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  8835  0020F6  0EC0               	movlw	192
  8836  0020F8  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  8837  0020FA  EC39  F011         	call	i2_TMR0_WriteTimer	;wreg free
  8838  0020FE                     
  8839                           ;main.c: 251:     INTCONbits.TMR0IF = 0;
  8840  0020FE  94F2               	bcf	242,2,c	;volatile
  8841  002100  9C89               	bcf	137,6,c	;volatile
  8842  002102  0012               	return		;funcret
  8843  002104                     __end_of_myTMR0ISR:
  8844                           	callstack 0
  8845                           
  8846 ;; *************** function i2_TMR0_WriteTimer *****************
  8847 ;; Defined at:
  8848 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  timerVal        2    0[COMRAM] unsigned short 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_myTMR0ISR
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text50
  8876  002272                     __ptext50:
  8877                           	callstack 0
  8878  002272                     i2_TMR0_WriteTimer:
  8879                           	callstack 17
  8880  002272                     
  8881                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  8882  002272  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  8883  002274  6ED7               	movwf	215,c	;volatile
  8884  002276                     
  8885                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  8886  002276  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  8887  00227A  0012               	return		;funcret
  8888  00227C                     __end_ofi2_TMR0_WriteTimer:
  8889                           	callstack 0
  8890                           
  8891                           	psect	text51
  8892  000000                     __ptext51:
  8893                           	callstack 0
  8894  000000                     
  8895                           	psect	rparam
  8896  0000                     
  8897                           	psect	temp
  8898  000059                     btemp:
  8899                           	callstack 0
  8900  000059                     	ds	1
  8901  0000                     int$flags	set	btemp
  8902  0000                     wtemp8	set	btemp+1
  8903  0000                     ttemp5	set	btemp+1
  8904  0000                     ttemp6	set	btemp+4
  8905  0000                     ttemp7	set	btemp+8
  8906                           
  8907                           	psect	idloc
  8908                           
  8909                           ;Config register IDLOC0 @ 0x200000
  8910                           ;	unspecified, using default values
  8911  200000                     	org	2097152
  8912  200000  FF                 	db	255
  8913                           
  8914                           ;Config register IDLOC1 @ 0x200001
  8915                           ;	unspecified, using default values
  8916  200001                     	org	2097153
  8917  200001  FF                 	db	255
  8918                           
  8919                           ;Config register IDLOC2 @ 0x200002
  8920                           ;	unspecified, using default values
  8921  200002                     	org	2097154
  8922  200002  FF                 	db	255
  8923                           
  8924                           ;Config register IDLOC3 @ 0x200003
  8925                           ;	unspecified, using default values
  8926  200003                     	org	2097155
  8927  200003  FF                 	db	255
  8928                           
  8929                           ;Config register IDLOC4 @ 0x200004
  8930                           ;	unspecified, using default values
  8931  200004                     	org	2097156
  8932  200004  FF                 	db	255
  8933                           
  8934                           ;Config register IDLOC5 @ 0x200005
  8935                           ;	unspecified, using default values
  8936  200005                     	org	2097157
  8937  200005  FF                 	db	255
  8938                           
  8939                           ;Config register IDLOC6 @ 0x200006
  8940                           ;	unspecified, using default values
  8941  200006                     	org	2097158
  8942  200006  FF                 	db	255
  8943                           
  8944                           ;Config register IDLOC7 @ 0x200007
  8945                           ;	unspecified, using default values
  8946  200007                     	org	2097159
  8947  200007  FF                 	db	255
  8948                           
  8949                           	psect	config
  8950                           
  8951                           ; Padding undefined space
  8952  300000                     	org	3145728
  8953  300000  FF                 	db	255
  8954                           
  8955                           ;Config register CONFIG1H @ 0x300001
  8956                           ;	Oscillator Selection bits
  8957                           ;	FOSC = INTIO67, Internal oscillator block
  8958                           ;	4X PLL Enable
  8959                           ;	PLLCFG = OFF, Oscillator used directly
  8960                           ;	Primary clock enable bit
  8961                           ;	PRICLKEN = ON, Primary clock enabled
  8962                           ;	Fail-Safe Clock Monitor Enable bit
  8963                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8964                           ;	Internal/External Oscillator Switchover bit
  8965                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8966  300001                     	org	3145729
  8967  300001  28                 	db	40
  8968                           
  8969                           ;Config register CONFIG2L @ 0x300002
  8970                           ;	Power-up Timer Enable bit
  8971                           ;	PWRTEN = OFF, Power up timer disabled
  8972                           ;	Brown-out Reset Enable bits
  8973                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8974                           ;	Brown Out Reset Voltage bits
  8975                           ;	BORV = 190, VBOR set to 1.90 V nominal
  8976  300002                     	org	3145730
  8977  300002  1F                 	db	31
  8978                           
  8979                           ;Config register CONFIG2H @ 0x300003
  8980                           ;	Watchdog Timer Enable bits
  8981                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8982                           ;	Watchdog Timer Postscale Select bits
  8983                           ;	WDTPS = 32768, 1:32768
  8984  300003                     	org	3145731
  8985  300003  3C                 	db	60
  8986                           
  8987                           ; Padding undefined space
  8988  300004                     	org	3145732
  8989  300004  FF                 	db	255
  8990                           
  8991                           ;Config register CONFIG3H @ 0x300005
  8992                           ;	CCP2 MUX bit
  8993                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  8994                           ;	PORTB A/D Enable bit
  8995                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8996                           ;	P3A/CCP3 Mux bit
  8997                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  8998                           ;	HFINTOSC Fast Start-up
  8999                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  9000                           ;	Timer3 Clock input mux bit
  9001                           ;	T3CMX = PORTC0, T3CKI is on RC0
  9002                           ;	ECCP2 B output mux bit
  9003                           ;	P2BMX = PORTB5, P2B is on RB5
  9004                           ;	MCLR Pin Enable bit
  9005                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  9006  300005                     	org	3145733
  9007  300005  BF                 	db	191
  9008                           
  9009                           ;Config register CONFIG4L @ 0x300006
  9010                           ;	Stack Full/Underflow Reset Enable bit
  9011                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9012                           ;	Single-Supply ICSP Enable bit
  9013                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  9014                           ;	Extended Instruction Set Enable bit
  9015                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9016                           ;	Background Debug
  9017                           ;	DEBUG = OFF, Disabled
  9018  300006                     	org	3145734
  9019  300006  85                 	db	133
  9020                           
  9021                           ; Padding undefined space
  9022  300007                     	org	3145735
  9023  300007  FF                 	db	255
  9024                           
  9025                           ;Config register CONFIG5L @ 0x300008
  9026                           ;	Code Protection Block 0
  9027                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9028                           ;	Code Protection Block 1
  9029                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9030                           ;	Code Protection Block 2
  9031                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9032                           ;	Code Protection Block 3
  9033                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9034  300008                     	org	3145736
  9035  300008  0F                 	db	15
  9036                           
  9037                           ;Config register CONFIG5H @ 0x300009
  9038                           ;	Boot Block Code Protection bit
  9039                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9040                           ;	Data EEPROM Code Protection bit
  9041                           ;	CPD = OFF, Data EEPROM not code-protected
  9042  300009                     	org	3145737
  9043  300009  C0                 	db	192
  9044                           
  9045                           ;Config register CONFIG6L @ 0x30000A
  9046                           ;	Write Protection Block 0
  9047                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9048                           ;	Write Protection Block 1
  9049                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9050                           ;	Write Protection Block 2
  9051                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9052                           ;	Write Protection Block 3
  9053                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9054  30000A                     	org	3145738
  9055  30000A  0F                 	db	15
  9056                           
  9057                           ;Config register CONFIG6H @ 0x30000B
  9058                           ;	Configuration Register Write Protection bit
  9059                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9060                           ;	Boot Block Write Protection bit
  9061                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9062                           ;	Data EEPROM Write Protection bit
  9063                           ;	WRTD = OFF, Data EEPROM not write-protected
  9064  30000B                     	org	3145739
  9065  30000B  E0                 	db	224
  9066                           
  9067                           ;Config register CONFIG7L @ 0x30000C
  9068                           ;	Table Read Protection Block 0
  9069                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9070                           ;	Table Read Protection Block 1
  9071                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9072                           ;	Table Read Protection Block 2
  9073                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9074                           ;	Table Read Protection Block 3
  9075                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9076  30000C                     	org	3145740
  9077  30000C  0F                 	db	15
  9078                           
  9079                           ;Config register CONFIG7H @ 0x30000D
  9080                           ;	Boot Block Table Read Protection bit
  9081                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9082  30000D                     	org	3145741
  9083  30000D  40                 	db	64
  9084                           tosu	equ	0xFFF
  9085                           tosh	equ	0xFFE
  9086                           tosl	equ	0xFFD
  9087                           stkptr	equ	0xFFC
  9088                           pclatu	equ	0xFFB
  9089                           pclath	equ	0xFFA
  9090                           pcl	equ	0xFF9
  9091                           tblptru	equ	0xFF8
  9092                           tblptrh	equ	0xFF7
  9093                           tblptrl	equ	0xFF6
  9094                           tablat	equ	0xFF5
  9095                           prodh	equ	0xFF4
  9096                           prodl	equ	0xFF3
  9097                           indf0	equ	0xFEF
  9098                           postinc0	equ	0xFEE
  9099                           postdec0	equ	0xFED
  9100                           preinc0	equ	0xFEC
  9101                           plusw0	equ	0xFEB
  9102                           fsr0h	equ	0xFEA
  9103                           fsr0l	equ	0xFE9
  9104                           wreg	equ	0xFE8
  9105                           indf1	equ	0xFE7
  9106                           postinc1	equ	0xFE6
  9107                           postdec1	equ	0xFE5
  9108                           preinc1	equ	0xFE4
  9109                           plusw1	equ	0xFE3
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           bsr	equ	0xFE0
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           preinc2	equ	0xFDC
  9117                           plusw2	equ	0xFDB
  9118                           fsr2h	equ	0xFDA
  9119                           fsr2l	equ	0xFD9
  9120                           status	equ	0xFD8

Data Sizes:
    Strings     1125
    Constant    4
    Data        0
    BSS         563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     62     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1603_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[3]), 
		 -> STR_53(CODE[5]), STR_52(CODE[2]), STR_51(CODE[5]), STR_50(CODE[17]), 
		 -> STR_49(CODE[15]), STR_48(CODE[23]), STR_47(CODE[3]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[17]), STR_42(CODE[43]), 
		 -> STR_41(CODE[3]), STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), 
		 -> STR_37(CODE[19]), STR_36(CODE[20]), STR_35(CODE[28]), STR_34(CODE[20]), 
		 -> STR_33(CODE[30]), STR_32(CODE[29]), STR_31(CODE[29]), STR_30(CODE[44]), 
		 -> STR_29(CODE[27]), STR_28(CODE[83]), STR_27(CODE[83]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[42]), 
		 -> STR_21(CODE[43]), STR_20(CODE[37]), STR_19(CODE[24]), STR_18(CODE[52]), 
		 -> STR_17(CODE[36]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[3]), 
		 -> STR_53(CODE[5]), STR_52(CODE[2]), STR_51(CODE[5]), STR_50(CODE[17]), 
		 -> STR_49(CODE[15]), STR_48(CODE[23]), STR_47(CODE[3]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[17]), STR_42(CODE[43]), 
		 -> STR_41(CODE[3]), STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), 
		 -> STR_37(CODE[19]), STR_36(CODE[20]), STR_35(CODE[28]), STR_34(CODE[20]), 
		 -> STR_33(CODE[30]), STR_32(CODE[29]), STR_31(CODE[29]), STR_30(CODE[44]), 
		 -> STR_29(CODE[27]), STR_28(CODE[83]), STR_27(CODE[83]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[42]), 
		 -> STR_21(CODE[43]), STR_20(CODE[37]), STR_19(CODE[24]), STR_18(CODE[52]), 
		 -> STR_17(CODE[36]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 83
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[3]), 
		 -> STR_53(CODE[5]), STR_52(CODE[2]), STR_51(CODE[5]), STR_50(CODE[17]), 
		 -> STR_49(CODE[15]), STR_48(CODE[23]), STR_47(CODE[3]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[17]), STR_42(CODE[43]), 
		 -> STR_41(CODE[3]), STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), 
		 -> STR_37(CODE[19]), STR_36(CODE[20]), STR_35(CODE[28]), STR_34(CODE[20]), 
		 -> STR_33(CODE[30]), STR_32(CODE[29]), STR_31(CODE[29]), STR_30(CODE[44]), 
		 -> STR_29(CODE[27]), STR_28(CODE[83]), STR_27(CODE[83]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[42]), 
		 -> STR_21(CODE[43]), STR_20(CODE[37]), STR_19(CODE[24]), STR_18(CODE[52]), 
		 -> STR_17(CODE[36]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), STR_66(CODE[4]), 
		 -> STR_65(CODE[6]), STR_64(CODE[3]), STR_63(CODE[3]), STR_62(CODE[2]), 
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[28]), 
		 -> STR_57(CODE[26]), STR_56(CODE[27]), STR_55(CODE[17]), STR_54(CODE[3]), 
		 -> STR_53(CODE[5]), STR_52(CODE[2]), STR_51(CODE[5]), STR_50(CODE[17]), 
		 -> STR_49(CODE[15]), STR_48(CODE[23]), STR_47(CODE[3]), STR_46(CODE[5]), 
		 -> STR_45(CODE[2]), STR_44(CODE[5]), STR_43(CODE[17]), STR_42(CODE[43]), 
		 -> STR_41(CODE[3]), STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), 
		 -> STR_37(CODE[19]), STR_36(CODE[20]), STR_35(CODE[28]), STR_34(CODE[20]), 
		 -> STR_33(CODE[30]), STR_32(CODE[29]), STR_31(CODE[29]), STR_30(CODE[44]), 
		 -> STR_29(CODE[27]), STR_28(CODE[83]), STR_27(CODE[83]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[8]), STR_23(CODE[52]), STR_22(CODE[42]), 
		 -> STR_21(CODE[43]), STR_20(CODE[37]), STR_19(CODE[24]), STR_18(CODE[52]), 
		 -> STR_17(CODE[36]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), STR_2(CODE[18]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   75122
                                             51 BANK0     11    11      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                  _SPI2_ExchangeByte
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   24603
                                             41 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     353
                                              7 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     353
                                              7 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                              7 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   24160
                                             41 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   23813
                                             31 BANK0     10     4      6
                  _SPI2_ExchangeByte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17504
                                             80 COMRAM     2     2      0
                                             25 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   16950
                                             74 COMRAM     6     0      6
                                              0 BANK0     25    25      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5359
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             12 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5454
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3805
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1623
                                             17 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1268
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPI2_ExchangeByte                                    1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0     116
                                              4 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     116
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           2     2      0     116
                                              2 COMRAM     2     2      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_ExchangeByte
   _SPI2_Open
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _SPI2_ExchangeByte (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     200      37       13.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      6B       5       66.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C3      12        0.0%
DATA                 0      0     2C3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 25 15:54:02 2020

                                            l21 2234                                              l31 21E6  
                                            l33 21F4                                              l25 1B40  
                                            l34 21F8                                              l28 2282  
                                            l88 2130                            SDCARD_ReadBlock@addr 0008  
                           ___wmul@multiplicand 0009                                 _timer0ReloadVal 0057  
                                hexDumpBuffer@i 0091                                  hexDumpBuffer@j 008D  
                                           l112 2096                                             l124 223E  
                                           l220 04CC                                             l302 215A  
                                           l134 2248                                             l223 055C  
                                           l215 0496                                             l305 21FC  
                                           l209 03F8                                             l314 2270  
                                           l410 1CFE                                             l308 220E  
                                           l332 2266                                             l413 1F14  
                                           l326 225C                                             l424 165A  
                                           l408 1CFC                                             l184 006C  
                                           l329 2252                                             l281 1E96  
                                           l361 21C4                                             l418 1F4A  
                                           l370 227E                                             l443 179A  
                                           l355 21DE                                             l195 026C  
                                           l460 1300                                             l358 21B6  
                                           l463 21A8                                             l289 2222  
                                           l449 1230                                             l298 2132  
                                           l590 18FE                                             l398 1BDA  
                                           l577 1622                                             _abs 1E98  
                                           _pad 19D4                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0019                                            l1205 0C04  
                                          l1141 2182                                            l1302 1ED6  
                                          l1230 0E7A                                            l1207 0C0C  
                                          l1232 0E82                                            l1225 0E40  
                                          l1401 1F82                                            l1330 1492  
                                          l3100 206C                                            l1333 149A  
                                          l1181 1A5A                                            l1253 10B2  
                                          l1342 1FF2                                            l1350 1E12  
                                          l3102 2082                                            l1183 1A94  
                                          l1255 1114                                            l1239 0F16  
                                          l3200 2158                                            l1336 1F12  
                                          l3104 2084                                            l4000 0244  
                                          l1194 1964                                            l1178 1A18  
                                          l1282 0B62                                            l3106 2086  
                                          l4002 0250                                            l1371 1C70  
                                          l1356 1FBA                                            l3300 1CB4  
                                          l3140 1E90                                            l3132 1E58  
                                          l3108 2092                                            l4020 02EA  
                                          l4012 027A                                            l4004 0256  
                                          l1197 19A6                                            l1269 0780  
                                          l1390 1DB8                                            l1294 1D5A  
                                          l3310 1CE6                                            l3302 1CCC  
                                          l3150 1AE6                                            l3070 225E  
                                          l3134 1E6C                                            l3142 227C  
                                          l4030 0332                                            l4022 02FE  
                                          l4014 0286                                            l4006 0272  
                                          l1199 19D2                                            l1295 1D62  
                                          l3320 1F30                                            l3312 1CEA  
                                          l3160 2280                                            l3152 1AEA  
                                          l3136 1E78                                            l3144 21AA  
                                          l3064 2240                                            l4040 0382  
                                          l4032 0338                                            l4024 0302  
                                          l4016 028C                                            l1385 20CC  
                                          l3090 21E2                                            l2610 14D2  
                                          l2602 149C                                            l3314 1F16  
                                          l3154 1B0E                                            l3146 1A98  
                                          l3066 2254                                            l3138 1E84  
                                          l3162 2236                                            l4050 03EC  
                                          l4042 0398                                            l4034 0342  
                                          l4026 0326                                            l4018 02A6  
                                          l1299 1ECE                                            l1379 1E56  
                                          l1395 1DC0                                            l2620 152E  
                                          l2612 14E0                                            l2604 14A0  
                                          l2700 1A7C                                            l3316 1F1E  
                                          l3340 1B50                                            l3332 1B42  
                                          l3308 1CD4                                            l3156 1B3E  
                                          l3148 1AA6                                            l3068 224A  
                                          l3092 2104                                            l3084 2224  
                                          l3180 21CE                                            l3164 223A  
                                          l4060 0480                                            l4052 0466  
                                          l4036 0354                                            l4044 03A8  
                                          l4028 032E                                            l2630 1598  
                                          l2622 1536                                            l2614 1500  
                                          l2606 14AE                                            l3326 1F36  
                                          l3318 1F20                                            l3350 1B6E  
                                          l3342 1B56                                            l3334 1B42  
                                          l3094 212E                                            l3086 2230  
                                          l3182 21D2                                            l4070 055E  
                                          l4062 0484                                            l4046 03CA  
                                          l4038 0376                                            l3192 2132  
                                          l2560 1BDC                                            l2640 15E2  
                                          l2632 15B8                                            l2624 154A  
                                          l2616 1504                                            l2608 14CE  
                                          l2704 1E98                                            l2800 0CD8  
                                          l2712 1ED8                                            l2720 1D9A  
                                          l3328 1F48                                            l3360 1BA2  
                                          l3352 1B84                                            l3344 1B5C  
                                          l3336 1B44                                            l3280 1C72  
                                          l3088 2232                                            l3096 2062  
                                          l3184 21D6                                            l3176 21C6  
                                          l4080 05B2                                            l4072 057A  
                                          l4064 0498                                            l4048 03D6  
                                          l3194 2140                                            l2730 1DC2  
                                          l2554 21FC                                            l2570 1C5E  
                                          l2562 1BEE                                            l2642 1602  
                                          l2634 15BA                                            l2626 1558  
                                          l2618 1510                                            l2650 17AE  
                                          l2706 1EB2                                            l2810 0D94  
                                          l2802 0CDE                                            l2722 1DAC  
                                          l3362 1BB6                                            l3354 1B9A  
                                          l3346 1B62                                            l3338 1B4A  
                                          l3290 1C86                                            l3282 1C72  
                                          l3098 2064                                            l3186 21DA  
                                          l3178 21CA                                            l4082 05C0  
                                          l4074 057C                                            l4066 04B4  
                                          l4058 046E                                            l3196 2146  
                                          l3188 2210                                            l2732 1DC6  
                                          l2900 1316                                            l2556 220A  
                                          l2564 1C00                                            l2636 15CC  
                                          l2628 156A                                            l2660 181E  
                                          l2652 17CE                                            l2580 1E36  
                                          l2820 0DE2                                            l2812 0DAE  
                                          l2804 0D42                                            l2708 1F84  
                                          l2716 1D64                                            l3700 06D4  
                                          l3364 1BBA                                            l3348 1B68  
                                          l3292 1C8C                                            l3284 1C74  
                                          l4084 05E6                                            l4076 058A  
                                          l4068 04CE                                            l4092 061C  
                                          l3198 2154                                            l2726 1FBC  
                                          l2734 1DDA                                            l2910 1378  
                                          l2902 131A                                            l2558 226A  
                                          l2566 1C0A                                            l2750 1938  
                                          l2742 1900                                            l2638 15D2  
                                          l2670 1896                                            l2662 1826  
                                          l2654 17D2                                            l2646 179C  
                                          l2574 1E14                                            l2582 2098  
                                          l2822 0DF4                                            l2806 0D5C  
                                          l2814 0DBC                                            l3710 06FA  
                                          l3702 06E0                                            l3366 1BCC  
                                          l3294 1C92                                            l3286 1C7A  
                                          l4190 0630                                            l4086 05F4  
                                          l4078 0598                                            l2736 1E08  
                                          l2920 13A4                                            l2904 131E  
                                          l2568 1C28                                            l2760 1984  
                                          l2752 194A                                            l2744 1912  
                                          l2672 18A8                                            l2664 183A  
                                          l2656 17E0                                            l2648 17A0  
                                          l2576 1E20                                            l2584 20A4  
                                          l2824 0E00                                            l2816 0DCE  
                                          l2808 0D7A                                            l2592 1F4C  
                                          l2840 0E98                                            l2832 0E42  
                                          l3800 0B50                                            l4192 0740  
                                          l3704 06E2                                            l3368 1BD8  
                                          l3296 1C98                                            l3288 1C80  
                                          l4088 0606                                            l2738 1E0C  
                                          l2930 1452                                            l2922 13DA  
                                          l4194 13C4                                            l2914 137E  
                                          l2906 133C                                            l2762 1988  
                                          l2746 191E                                            l2666 1848  
                                          l2674 18AE                                            l2658 1800  
                                          l2578 1E32                                            l2586 20A8  
                                          l2690 1A10                                            l2682 19D4  
                                          l2826 0E08                                            l2818 0DDC  
                                          l2770 0B64                                            l2850 0ED6  
                                          l2842 0EA0                                            l2834 0E52  
                                          l3730 078E                                            l3722 070C  
                                          l3714 0700                                            l3706 06F4  
                                          l3298 1C9E                                            l2596 2184  
                                          l2932 1464                                            l2916 1394  
                                          l2908 1374                                            l2764 19B4  
                                          l2756 195C                                            l2748 192A  
                                          l2676 18BE                                            l2668 1876  
                                          l2588 20C0                                            l2692 1A24  
                                          l2684 19E2                                            l2828 0E18  
                                          l2780 0BDE                                            l2772 0B84  
                                          l2860 0F4A                                            l2852 0EDE  
                                          l2844 0EC0                                            l2836 0E54  
                                          l3740 0808                                            l3732 0790  
                                          l3820 1D3C                                            l3900 1778  
                                          l2598 21A0                                            l2934 1476  
                                          l2926 1412                                            l2918 139C  
                                          l2766 19C6                                            l2758 1970  
                                          l2678 18DE                                            l2694 1A38  
                                          l2686 19F6                                            l2790 0C3A  
                                          l2782 0BF8                                            l2774 0BAC  
                                          l2862 0F5C                                            l2870 0FBC  
                                          l2854 0EFA                                            l2846 0EC8  
                                          l2838 0E6E                                            l3742 0828  
                                          l3750 0892                                            l3734 07B6  
                                          l3726 0718                                            l3718 0706  
                                          l3814 1D00                                            l3822 215C  
                                          l3902 1788                                            ?_pad 0019  
                                          l2696 1A3C                                            l2688 1A04  
                                          l2792 0C42                                            l2784 0C14  
                                          l2776 0BCC                                            l2880 1052  
                                          l2872 0FCC                                            l2856 0F0A  
                                          l2848 0ED0                                            l3760 092C  
                                          l3752 08B8                                            l3744 0836  
                                          l3736 07EC                                            l3728 076E  
                                          l3816 1D08                                            l3824 2166  
                                          l3840 165C                                            l3920 117E  
                                          l3912 112E                                            l3904 1116  
                                          l2698 1A68                                            l2794 0C4A  
                                          l2786 0C26                                            l2778 0BDC  
                                          l2890 10C6                                            l2882 1070  
                                          l2874 0FD2                                            l2866 0F96  
                                          l3770 09F8                                            l3762 0952  
                                          l3754 08EA                                            l3738 07FA  
                                          l3818 1D16                                            l3850 16BC  
                                          l3842 1696                                            l3834 1632  
                                          l3930 11E6                                            l3922 119C  
                                          l3914 1140                                            l3906 1124  
                                          l2796 0C50                                            l2788 0C34  
                                          l2892 10D6                                            l2884 108A  
                                          l2876 0FD8                                            l2868 0FA8  
                                          l3772 0A1E                                            l3764 099A  
                                          l3748 0880                                            l3692 068A  
                                          l3860 16DA                                            l3852 16C2  
                                          l3844 1698                                            l3836 1638  
                                          l3828 1628                                            l3940 125A  
                                          l3932 1208                                            l3924 11A8  
                                          l3916 115E                                            l2798 0CD2  
                                          l2894 10EC                                            l2886 10A4  
                                          l2878 1036                                            l3774 0A36  
                                          l3782 0ABC                                            l3758 0906  
                                          l3694 06B0                                            l3870 16F8  
                                          l3862 16E0                                            l3854 16C8  
                                          l3846 16A8                                            l3838 163E  
                                          l3950 12B6                                            l3942 126C  
                                          l3926 11BA                                            l3934 120E  
                                          l3918 116A                                            l2888 10C0  
                                          l3784 0AE2                                            l3792 0B10  
                                          l3776 0A44                                            l3768 09D2  
                                          l3696 06BE                                            l3880 1732  
                                          l3872 1708                                            l3864 16E6  
                                          l3856 16CE                                            l3848 16BA  
                                          l3952 12D8                                            l3944 1278  
                                          l3936 1224                                            l3928 11D6  
                                          l3960 0058                                            l2898 1302  
                                          l3794 0B1E                                            l3786 0AF0  
                                          l3778 0A80                                            l3698 06CE  
                                          l3890 1750                                            l3882 1738  
                                          l3874 1718                                            l3866 16EC  
                                          l3858 16D4                                            l3946 128A  
                                          l3954 12DE                                            l3938 1254  
                                          l3970 0086                                            l3962 005C  
                                          l3788 0B04                                            l3892 1756  
                                          l3884 173E                                            l3876 172A  
                                          l3868 16F6                                            l3956 12F4  
                                          l3948 12A6                                            l3980 00B4  
                                          l3972 0088                                            l3964 005E  
                                          l3798 0B2A                                            l3894 175C  
                                          l3886 1744                                            l3878 172C  
                                          l3990 00EC                                            l3982 00C2  
                                          l3974 008A                                            l3966 006A  
                                          l3958 0042                                            l3896 1766  
                                          l3888 174A                                            l3992 022C  
                                          l3984 00C6                                            l3976 0098  
                                          l3968 007A                                            l3898 1768  
                                          l3994 023C                                            l3986 00CC  
                                          l3978 00A6                                            l3988 00E0  
                                          STR_1 FFC5                                            STR_2 FF73  
                                          STR_3 FFD0                                            STR_4 FD89  
                                          STR_5 FC3F                                            STR_6 FF60  
                                          STR_7 FFEE                                            STR_8 FFFC  
                                          STR_9 FFEE                                            u2000 0DBC  
                                          u2001 0DB8                                            u2010 0DCE  
                                          u2011 0DCA                                            u2020 0DDC  
                                          u2100 0F5C                                            u2021 0DD8  
                                          u2101 0F58                                            u2030 0DF4  
                                          u2110 0F90                                            u2031 0DF0  
                                          u2111 0F8A                                            u2200 10C0  
                                          u2120 0F92                                            u2040 0E52  
                                          u3000 0AE2                                            u2201 10BC  
                                          u2041 0E4E                                            u3001 0ADE  
                                          u2210 133C                                            u2130 0FA8  
                                          u2050 0E6E                                            u3010 1D5A  
                                          u2211 1338                                            u2131 0FA4  
                                          u2051 0E6A                                            u3011 1D56  
                                          u2220 1374                                            u1500 1C5E  
                                          u2140 1010                                            u2060 0E98  
                                          u3020 165A                                            u3100 117E  
                                          u2221 1370                                            u1501 1C5A  
                                          u2061 0E94                                            u3021 1656  
                                          u3101 117A                                            _LATA 000F89  
                                          u2230 1390                                            u1510 1E56  
                                          u2150 1052                                            u2070 0EFA  
                                          u3030 16A8                                            u3110 119C  
                                          _LATB 000F8A                                            u2231 138C  
                                          u1511 1E52                                            u2151 104E  
                                          u2071 0EF6                                            u3031 16A4  
                                          u3111 1198                                            _LATC 000F8B  
                                          u2240 144C                                            u1600 1598  
                                          u1520 20C0                                            u2160 1070  
                                          u2080 0F44                                            u3040 1708  
                                          u3120 11D6                                            u3200 02A2  
                                          u2241 1446                                            u1601 1594  
                                          u1521 20BC                                            u2161 106C  
                                          u2145 0FFE                                            u2081 0F3E  
                                          u3041 1704                                            u3121 11D2  
                                          u3201 029E                                            u2250 144E  
                                          u1610 15E2                                            u1530 1F7C  
                                          u2170 108A                                            u2090 0F46  
                                          u3050 1718                                            u3130 1224  
                                          u3210 02FE                                            u1611 15DE  
                                          u1531 1F76                                            u2171 1086  
                                          u3051 1714                                            u3131 1220  
                                          u3211 02FA                                            u2500 2140  
                                          u2260 1464                                            u1460 220A  
                                          u1620 17AE                                            u1700 1A5A  
                                          u1540 1F7E                                            u2180 10A4  
                                          u3060 1778                                            u3140 126C  
                                          u3220 0354                                            u2501 213C  
                                          u2261 1460                                            u1461 2206  
                                          u1621 17AA                                            u1701 1A56  
                                          u2181 10A0                                            u3061 1774  
                                          u3141 1268                                            u3221 0350  
                                          u2510 2154                                            u2430 21F4  
                                          u2270 1476                                            u1470 1BEE  
                                          u1550 14AE                                            u1630 17E0  
                                          u1710 1A68                                            u2190 10B2  
                                          u3070 1788                                            u3150 12A6  
                                          u3230 0376                                            u2511 2150  
                                          u2431 21F0                                            u2271 1472  
                                          u1471 1BEA                                            u1551 14AA  
                                          u1631 17DC                                            u1711 1A64  
                                          u2191 10AE                                            u3071 1784  
                                          u3151 12A2                                            u3231 0372  
                                          u1800 1FEC                                            u1480 1C00  
                                          u1560 14E0                                            u1640 181E  
                                          u1720 1EB2                                            u2600 1F30  
                                          u3160 12F4                                            u3080 1140  
                                          u3240 03CA                                            u1801 1FE6  
                                          u1481 1BFC                                            u1561 14DC  
                                          u1641 181A                                            u1721 1EAE  
                                          u2601 1F2C                                            u3161 12F0  
                                          u3081 113C                                            u3241 03C6  
                                          u1810 1FEE                                            u1490 1C28  
                                          u1650 1848                                            u1730 1FB4  
                                          u2610 1B84                                            u2450 21C4  
                                          u3090 115E                                            u3250 0496  
                                          u3170 007A                                            u1491 1C24  
                                          u1571 150A                                            u1651 1844  
                                          u1731 1FAE                                            u2611 1B80  
                                          u2451 21C0                                            u3091 115A  
                                          u3251 0492                                            u3171 0076  
                                          u1820 1DDA                                            u1580 152E  
                                          u1660 1876                                            u1900 0B96  
                                          u1740 1FB6                                            u2620 1B9A  
                                          u2460 1AA6                                            u3260 04CC  
                                          u3180 00E0                                            u1821 1DD6  
                                          u1581 152A                                            u1661 1872  
                                          u2621 1B96                                            u2461 1AA2  
                                          u3261 04C8                                            u3181 00DC  
                                          u1830 1E08                                            u1590 1558  
                                          u1670 18BE                                            u1910 0BAC  
                                          u1750 1F0C                                            u2630 1BCC  
                                          u3190 026C                                            u1831 1E04  
                                          u1591 1554                                            u1671 18BA  
                                          u1911 0BA8                                            u1751 1F06  
                                          u2631 1BC8                                            u3191 0268  
                                          u1840 1912                                            u1680 19E2  
                                          u1920 0BDC                                            u1760 1F0E  
                                          u1841 190E                                            u1681 19DE  
                                          u1921 0BD8                                            u2490 2220  
                                          u1850 1938                                            u1690 1A04  
                                          u1930 0BF8                                            u1770 1D94  
                                          u2491 221A                                            u1851 1934  
                                          u1691 1A00                                            u1931 0BF4  
                                          u1771 1D8E                                            u1860 1958  
                                          u1940 0C26                                            u1780 1D96  
                                          u2900 07B6                                            u2580 1CB4  
                                          u1861 1954                                            u1941 0C22  
                                          u2901 07B2                                            u2581 1CB0  
                                          u1870 19A6                                            u1950 0C34  
                                          u1790 1DAC                                            u2910 07FA  
                                          u2590 1CFC                                            u1871 19A2  
                                          u1951 0C30                                            u1791 1DA8  
                                          u2911 07F6                                            u2591 1CF8  
                                          u2496 2222                                            u1880 19B4  
                                          u1960 0D5C                                            u2920 087A  
                                          u1881 19B0                                            u1961 0D58  
                                          u2921 0874                                            u1970 0D7A  
                                          u1890 0B94                                            u2930 087C  
                                          u1971 0D76                                            u1891 0B8E  
                                          u1980 0D94                                            u2940 0892  
                                          u1981 0D90                                            u2941 088E  
                                          u1990 0DAE                                            u2950 08B8  
                                          u2870 06B0                                            u1991 0DAA  
                                          u2951 08B4                                            u2871 06AC  
                                          u2960 092C                                            u2880 0780  
                                          u2961 0928                                            u2881 077C  
                                          u2970 0952                                            u2890 078E  
                                          u2971 094E                                            u2891 078A  
                                          u2980 09F8                                            u2981 09F4  
                                          u2990 0A1E                                            u2991 0A1A  
                                          _WPUB 000F61                                   _EUSART1_Write 21FA  
                                          abs@a 0019                                            _dbuf 00AB  
                                          _atoi 1302                                            _ctoa 1900  
                                          _main 0042                                            _dtoa 0B64  
                                 ?_EUSART1_Read 0001                                            _prec 00A0  
                                          _nout 009E                                            pad@i 0020  
                                          pad@p 001D                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0022  
                                          fsr2l 000FD9                                            btemp 0059  
                                          _xtoa 0E42                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 008B  
                                          start 003E                       __size_of_SDCARD_ReadBlock 009A  
                                  ___param_bank 000000                                           ??_abs 001B  
                                         ??_pad 001F                         __end_of_TMR0_Initialize 2098  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 21C6                                 __end_of___aodiv 1624  
                                         ?_atoi 000E                                     ?_SPI2_Close 0001  
                                         ?_ctoa 0012                                           ?_main 0001  
                                         ?_dtoa 0024                                 __end_of___aomod 1900  
                                         STR_10 FFB3                                           STR_11 FC41  
                                         STR_12 FFB6                                           STR_20 FDB3  
                                         STR_13 FFE1                                           STR_21 FD34  
                                         STR_14 FF23                                           STR_22 FD5F  
                                         STR_30 FCDD                                           STR_23 FC41  
                                         STR_15 FEF4                                           STR_31 FE37  
                                         STR_40 FFEE                                           STR_24 FFD9  
                                         STR_32 FE1A                                           STR_16 FC75  
                                         STR_25 FFF5                                           STR_41 FFB3  
                                         STR_33 FDFC                                           STR_17 FDD8  
                                         STR_26 FFF5                                           STR_50 FF96  
                                         STR_34 FF38                                           STR_42 FD09  
                                         STR_18 FCA9                                           STR_51 FFEE  
                                         STR_43 FF96                                           STR_19 FEDC  
                                         STR_35 FE70                                           STR_27 FB99  
                                         STR_60 FFA5                                           STR_52 FFFC  
                                         STR_44 FFEE                                           STR_36 FF4C  
                                         STR_28 FBEC                                           STR_61 FFA4  
                                         STR_37 FF60                                           STR_45 FFFC  
                                         STR_53 FFEE                                           STR_29 FEA7  
                                         STR_54 FFB3                                           STR_46 FFEE  
                                         STR_38 FFEE                                           STR_62 FFFA  
                                         STR_47 FFB3                                           STR_39 FFFC  
                                         STR_63 FFF7                                           STR_55 FF85  
                                         STR_64 FFB3                                           STR_48 FF0C  
                                         STR_56 FE8C                                           STR_65 FFE8  
                                         STR_49 FFA7                                           STR_57 FEC2  
                                         STR_66 FFA3                                           STR_58 FE54  
                                         STR_67 FFFA                                           STR_59 FFF3  
                                         STR_68 FFF7                                           STR_69 FFB3  
                                         _T0CON 000FD5                                           ?_xtoa 0024  
                                         i2l131 202A                                           i2l124 227A  
                                         i2l232 20CE                                           i2l137 2284  
                               _TMR0_WriteTimer 2236                                           i2l238 2102  
                                         i2l377 0032                                    vfpfcnvrt@fmt 004D  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 006C  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0007                                __end_of_TMR0_ISR 202C  
                                         _flags 0055                                           _fputc 1BDC  
                               __end_of_isalpha 1F14                                           _fputs 1E14  
                               __end_of_isdigit 1FF4                                           atoi@n 001B  
                                         pad@fp 0019                                           atoi@s 000E  
                                         _width 0053                                           ctoa@c 0014  
                                         _putch 2268                                           ctoa@l 0016  
                                         ctoa@w 0018                                           main@i 0098  
                                         dtoa@d 0026                                           dtoa@i 0046  
                                         dtoa@n 003E                                           dtoa@p 0038  
                                         dtoa@s 003C                                           dtoa@w 003A  
                               __end_of_islower 1F84                                 __end_of_isspace 1E14  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 1FBC  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0007                                           ttemp5 005A  
                                         ttemp6 005D                                           ttemp7 0061  
                                         status 000FD8                                           wtemp8 005A  
                                         xtoa@c 0049                                           xtoa@d 0026  
                                         xtoa@i 0047                                           xtoa@n 003F  
                                         xtoa@p 003B                                           xtoa@w 003D  
                                         xtoa@x 002E                                 __end_of_toupper 1DC2  
            _EUSART1_DefaultFramingErrorHandler 000000                                    _toupper$1821 0013  
                               __initialization 202C                    SDCARD_ReadBlock@sdCardBuffer 000C  
                                  __end_of_atoi 149C                                    __end_of_ctoa 19D4  
                    __end_of_EUSART1_Initialize 1E98                                    __end_of_main 068A  
                                  __end_of_dtoa 0E42                               _SPI2_ExchangeByte 21E0  
                                  __end_of_xtoa 1116               __size_of_SDCARD_PollWriteComplete 0038  
                     ?_SDCARD_PollWriteComplete 0001                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 0010  
                                        ??_ctoa 0015                                          ??_main 0093  
                                        ??_dtoa 002E                                          ??_xtoa 002F  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                           ??_SPI2_ExchangeByte 0007                                          ?_fputc 0009  
                                        ?_fputs 0012                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l3130 2100                                          i2l3122 20D8  
                                        i2l3124 20DC                                          i2l3116 20D0  
                                        i2l3126 20F2                                          i2l3080 2272  
                                        i2l3128 20FE                                          i2l3082 2276  
                                        i2l3170 1FFA                                          i2l3172 1FFE  
                                        i2l3174 2012                                          i2l3166 1FF4  
                                        i2l3168 1FF6                                          i2l3590 002E  
                                        i2l3586 0012                                          i2l3588 0020  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0074                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                               __end_of_SPI2_Open 1B42  
                     __end_of_SPI2_ExchangeByte 21FA                                    vfprintf@cfmt 0051  
                                     ??___aodiv 0017                                       ??___aomod 0017  
                                        ___wmul 2184                         __end_of_TMR0_WriteTimer 2240  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 0007  
                              ?_TMR0_Initialize 0001                                          clear_0 2034  
                                        clear_1 2046                                          _printf 215C  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          ctoa@fp 0012  
                                        dtoa@fp 0024                                          _strlen 2098  
                                        fputc@c 0009                                          fputs@c 0016  
                                        fputs@i 0017                                          fputs@s 0012  
                                     ??_isalpha 0009                                       ??_isdigit 0009  
                                     ??_islower 0009                                    __mediumconst FB94  
                                     ??_isspace 0009                                          tblptrh 000FF7  
                                     ??_isupper 0009                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1D64  
                               ??_EUSART1_Write 0007        TMR0_SetInterruptHandler@InterruptHandler 0007  
                                        xtoa@fp 0024                                       ??_toupper 000F  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 21C6  
                                    __accesstop 0060                         __end_of__initialization 2058  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 1B42                      __end_of_spi2_configuration FB99  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 1C72  
                                 __end_of_fputs 1E58                                   __end_of_putch 2272  
                          __end_of_EUSART1_Read 215C                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 21E0                                         ??_fputs 0016  
                            __size_of_myTMR0ISR 0036                                         ??_putch 0008  
                            SDCARD_WriteBlock@i 000E                               ??_SPI2_Initialize 0007  
                                    __pbssBANK0 009E                      __size_of_SPI2_ExchangeByte 001A  
               __end_of_EUSART1_SetErrorHandler 2268                __end_of_TMR0_SetInterruptHandler 224A  
                                       ?___wmul 0007                                      ??_TMR0_ISR 0005  
                              ?_TMR0_WriteTimer 0007                                         ?_printf 007F  
                                  ??_SPI2_Close 0007                                         ?_strlen 0007  
        __end_of_EUSART1_SetFramingErrorHandler 225E         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2254                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 04DA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                               SDCARD_ReadBlock@i 000E  
              __end_of_SDCARD_PollWriteComplete 1F4C                              __end_of_SPI2_Close 2284  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 1302                       SDCARD_Initialize@response 008C  
                                       ___aodiv 149C                                         ___aomod 179C  
                               __size_of___wmul 0026                               __end_of_myTMR0ISR 2104  
                                     ?_vfprintf 0079                             _EUSART1_is_rx_ready 2210  
                                       __pcinit 202C                                         __ramtop 1000  
                                       __ptext0 0042                                         __ptext1 1116  
                                       __ptext2 2236                                         __ptext3 21C6  
                                       __ptext4 2062                                         __ptext5 2240  
                                       __ptext6 2224                                         __ptext7 2104  
                                       __ptext8 21AA                                         __ptext9 227C  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 21AA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 1ED8                                         _isdigit 1FBC  
                            _EUSART1_Initialize 1E58                                         _islower 1F4C  
                      ??_PIN_MANAGER_Initialize 0007                                         _isspace 1DC2  
                                       _isupper 1F84                                    _sdCardBuffer 00CB  
                                       atoi@neg 0014                                         main@cmd 0097  
                    __size_of_SYSTEM_Initialize 001A                                         _toupper 1D64  
                          end_of_initialization 2058                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 000B  
                   _EUSART1_OverrunErrorHandler 00A4                                         fputs@fp 0014  
                 SDCARD_WriteBlock@sdCardBuffer 000C                               __end_of_vfpfcnvrt 0B64  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                                    ??_vfprintf 0051                                       _SPI2_Open 1A96  
                          ??_EUSART1_Initialize 0009                           SDCARD_WriteBlock@addr 0008  
                                       strlen@a 0009                                         strlen@s 0007  
                    myTMR0ISR@bigOleWasteOfTime 0003                        _TMR0_SetInterruptHandler 2240  
                      __end_of_SDCARD_ReadBlock 1BDC                                       _TRISBbits 000F93  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0008  
                           EUSART1_Write@txData 0007                           ??_EUSART1_is_rx_ready 0007  
                                  _EUSART1_Read 2132                                      main@letter 0096  
                                    main@status 0095                        _SDCARD_PollWriteComplete 1F14  
                  __end_of_INTERRUPT_Initialize 2280                               _SDCARD_Initialize 1624  
                                    ?_SPI2_Open 0001                                     vfpfcnvrt@ap 004F  
                                   vfpfcnvrt@fp 004B                                     vfpfcnvrt@ll 0064  
                                __end_of___wmul 21AA                               __size_of_TMR0_ISR 0038  
                            ?_SDCARD_Initialize 0001                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 2224                                  __end_of_printf 2184  
                                __end_of_strlen 20CE                              _spi2_configuration FB95  
                           start_initialization 202C                             ??_SDCARD_Initialize 0053  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_abs 1ED8                                     __end_of_pad 1A96  
                                   putch@txData 0008                           __end_of_EUSART1_Write 2210  
                             main@sdCardAddress 009A                       __end_of_SDCARD_Initialize 179C  
                                   vfprintf@fmt 007B                                        ??___wmul 000B  
                                      ??_printf 0053                           SPI2_ExchangeByte@data 0007  
                                      ??_strlen 0009                                     __pbssBIGRAM 00CB  
                                   __pbssCOMRAM 0053                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1158 008F                                ___aodiv@dividend 0007  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
                                     _atoi$1745 0016                                       _atoi$1746 001A  
                                     _atoi$1747 0018                           _TMR0_InterruptHandler 00A8  
                        _PIN_MANAGER_Initialize 2104                                       _dtoa$1697 0036  
                             _SDCARD_WriteBlock 1C72                                       __pintcode 0008  
                                 __pmediumconst FB94                         __end_of_SPI2_Initialize 2236  
                                      ?___aodiv 0007                                        ?___aomod 0007  
                              ___aodiv@quotient 0019                              ?_SDCARD_WriteBlock 0008  
                                   ??_SPI2_Open 0007                SPI2_Open@spi2UniqueConfiguration 0008  
                  ??_INTERRUPT_InterruptManager 0005                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 20CE                             ??_SDCARD_WriteBlock 000E  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0007                                        ?_isdigit 0007  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00A2  
                                      ?_islower 0007                                        ?_isspace 0007  
                                      ?_isupper 0007                         _EUSART1_SetErrorHandler 225E  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000D                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 227C                               ??_TMR0_Initialize 0009  
                                ___wmul@product 000B                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 0007                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                       __end_of_SDCARD_WriteBlock 1D00  
           __size_of_INTERRUPT_InterruptManager 0036                                        i2u244_40 20F2  
                                      i2u244_41 20EE                      ??_TMR0_SetInterruptHandler 0009  
                                      i2u247_40 2012                                        i2u247_41 200E  
                                      i2u248_48 2018                                        i2u248_49 202A  
                                      _PIR1bits 000F9E                                        i2u285_40 0020  
                                      i2u285_41 001C                                        _PIR3bits 000FA4  
                                      i2u286_40 002E                                        i2u286_41 002A  
                    __size_of_SDCARD_Initialize 0178                                        _RCONbits 000FD0  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                                      _TMR0_ISR 1FF4                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 068A                                       _xtoa$1708 0037  
                                     _xtoa$1709 0039                               ___wmul@multiplier 0007  
                                    ?_myTMR0ISR 0001                               i2_TMR0_WriteTimer 2272  
                             ?_SDCARD_ReadBlock 0008                                    _isspace$1772 000D  
                        __size_of_hexDumpBuffer 01EC                                      vfpfcnvrt@c 0078  
                            ?i2_TMR0_WriteTimer 0001                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 000E  
                    ??_SDCARD_PollWriteComplete 0008                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 007D  
                                      __Lrparam 0000                                      vfprintf@fp 0079  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 0007  
                              __size_of___aodiv 0188                              SDCARD_Initialize@i 0089  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 004B                                 ___aodiv@divisor 000F  
                               ___aodiv@counter 0017                       __end_ofi2_TMR0_WriteTimer 227C  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2224                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 1E58  
                                      __ptext11 224A                                        __ptext20 215C  
                                      __ptext12 2254                                        __ptext21 1D00  
                                      __ptext13 225E                                        __ptext30 2098  
                                      __ptext22 068A                                        __ptext14 1A96  
                                      __ptext31 1E14                                        __ptext23 0E42  
                                      __ptext15 2280                                        __ptext40 1DC2  
                                      __ptext32 1E98                                        __ptext24 1D64  
                                      __ptext16 1C72                                        __ptext41 1FBC  
                                      __ptext33 179C                                        __ptext25 1F4C  
                                      __ptext17 1B42                                        __ptext50 2272  
                                      __ptext42 2184                                        __ptext34 149C  
                                      __ptext26 1F84                                        __ptext18 1F14  
                                      __ptext51 0000                                        __ptext43 21E0  
                                      __ptext35 1900                                        __ptext27 1ED8  
                                      __ptext19 1624                                        __ptext44 2210  
                                      __ptext36 1BDC                                        __ptext28 0B64  
                                      __ptext45 2132                                        __ptext37 2268  
                                      __ptext29 19D4                                        __ptext38 21FA  
                                      __ptext47 1FF4                                        __ptext39 1302  
                                      __ptext48 2284                                        __ptext49 20CE  
                              __size_of_isupper 0038                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0007                               ??_TMR0_WriteTimer 0009  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 00D4                                   __size_of_main 0648  
                                 __size_of_dtoa 02DE                                   __size_of_xtoa 02D4  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 2286  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 2284  
EUSART1_SetOverrunErrorHandler@interruptHandler 0007                                   _hexDumpBuffer 1116  
                                      int$flags 0059                                        _vfprintf 1D00  
            __end_of_INTERRUPT_InterruptManager 003E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 007F                     _EUSART1_FramingErrorHandler 00A6  
                              ___aomod@dividend 0007                                     ??_myTMR0ISR 0003  
                                _vfpfcnvrt$1723 0076                                      _INTCONbits 000FF2  
                                      isalpha@c 0007                                        isdigit@c 0007  
                        ??_INTERRUPT_Initialize 0007                        SDCARD_Initialize@verbose 008B  
                                      intlevel2 0000                                        islower@c 0007  
                                      isspace@c 0007                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2254         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 224A                                      _RCSTA1bits 000FAB  
                                      isupper@c 0007                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 0089  
                                      printf@ap 0087  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
                               ___aomod@divisor 000F                                     ??_vfpfcnvrt 0060  
                               ___aomod@counter 0017                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 00AA                                      _SPI2_Close 2280  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 2062  
                                      toupper@c 000D                                    ___aodiv@sign 0018  
                __end_of_PIN_MANAGER_Initialize 2132                       hexDumpBuffer@sdCardBuffer 0089  
                                  ___aomod@sign 0018                                    fp__myTMR0ISR 0000  
