

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 27 14:05:09 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 05/05/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F26K22 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   113  0000                     
   114 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   115  0000                     
   116 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   117  0000                     
   118                           	psect	idataBANK0
   119  002C22                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _sampleRate
   123  002C22  0640               	dw	1600
   124                           
   125                           	psect	mediumconst
   126  00F93C                     __pmediumconst:
   127                           	callstack 0
   128  00F93C  00                 	db	0
   129  00F93D                     _sin:
   130                           	callstack 0
   131  00F93D  80                 	db	128
   132  00F93E  9F                 	db	159
   133  00F93F  BB                 	db	187
   134  00F940  D5                 	db	213
   135  00F941  E9                 	db	233
   136  00F942  F8                 	db	248
   137  00F943  FF                 	db	255
   138  00F944  FF                 	db	255
   139  00F945  F8                 	db	248
   140  00F946  E9                 	db	233
   141  00F947  D5                 	db	213
   142  00F948  BB                 	db	187
   143  00F949  9F                 	db	159
   144  00F94A  80                 	db	128
   145  00F94B  61                 	db	97
   146  00F94C  45                 	db	69
   147  00F94D  2B                 	db	43
   148  00F94E  17                 	db	23
   149  00F94F  08                 	db	8
   150  00F950  01                 	db	1
   151  00F951  01                 	db	1
   152  00F952  08                 	db	8
   153  00F953  17                 	db	23
   154  00F954  2B                 	db	43
   155  00F955  45                 	db	69
   156  00F956  61                 	db	97
   157  00F957                     __end_of_sin:
   158                           	callstack 0
   159  00F957                     _spi2_configuration:
   160                           	callstack 0
   161  00F957  01                 	db	1
   162  00F958  40                 	db	64
   163  00F959  01                 	db	1
   164  00F95A  00                 	db	0
   165  00F95B                     __end_of_spi2_configuration:
   166                           	callstack 0
   167  0000                     _ANSELA	set	3896
   168  0000                     _ANSELB	set	3897
   169  0000                     _ANSELC	set	3898
   170  0000                     _RCONbits	set	4048
   171  0000                     _OSCTUNE	set	3995
   172  0000                     _OSCCON2	set	4050
   173  0000                     _OSCCON	set	4051
   174  0000                     _TXREG1	set	4013
   175  0000                     _RCREG1	set	4014
   176  0000                     _RCSTA1bits	set	4011
   177  0000                     _TXSTA1bits	set	4012
   178  0000                     _PIR1bits	set	3998
   179  0000                     _SPBRGH1	set	4016
   180  0000                     _SPBRG1	set	4015
   181  0000                     _TXSTA1	set	4012
   182  0000                     _RCSTA1	set	4011
   183  0000                     _BAUDCON1	set	4024
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADRESH	set	4036
   186  0000                     _LATCbits	set	3979
   187  0000                     _LATBbits	set	3978
   188  0000                     _T0CON	set	4053
   189  0000                     _TMR0L	set	4054
   190  0000                     _TMR0H	set	4055
   191  0000                     _T0CONbits	set	4053
   192  0000                     _INTCONbits	set	4082
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _WPUB	set	3937
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _LATC	set	3979
   199  0000                     _LATB	set	3978
   200  0000                     _LATA	set	3977
   201  0000                     _PIR3bits	set	4004
   202  0000                     _SSP2BUF	set	3951
   203  0000                     _SSP2CON2	set	3947
   204  0000                     _SSP2CON1bits	set	3948
   205  0000                     _TRISBbits	set	3987
   206  0000                     _SSP2ADD	set	3950
   207  0000                     _SSP2CON1	set	3948
   208  0000                     _SSP2STAT	set	3949
   209  0000                     _PLLRDY	set	32407
   210  00F95B                     STR_57:
   211  00F95B  0D                 	db	13
   212  00F95C  0A                 	db	10
   213  00F95D  59                 	db	89	;'Y'
   214  00F95E  6F                 	db	111	;'o'
   215  00F95F  75                 	db	117	;'u'
   216  00F960  20                 	db	32
   217  00F961  6D                 	db	109	;'m'
   218  00F962  61                 	db	97	;'a'
   219  00F963  79                 	db	121	;'y'
   220  00F964  20                 	db	32
   221  00F965  74                 	db	116	;'t'
   222  00F966  65                 	db	101	;'e'
   223  00F967  72                 	db	114	;'r'
   224  00F968  6D                 	db	109	;'m'
   225  00F969  69                 	db	105	;'i'
   226  00F96A  6E                 	db	110	;'n'
   227  00F96B  61                 	db	97	;'a'
   228  00F96C  74                 	db	116	;'t'
   229  00F96D  65                 	db	101	;'e'
   230  00F96E  20                 	db	32
   231  00F96F  73                 	db	115	;'s'
   232  00F970  70                 	db	112	;'p'
   233  00F971  6F                 	db	111	;'o'
   234  00F972  6F                 	db	111	;'o'
   235  00F973  6C                 	db	108	;'l'
   236  00F974  69                 	db	105	;'i'
   237  00F975  6E                 	db	110	;'n'
   238  00F976  67                 	db	103	;'g'
   239  00F977  20                 	db	32
   240  00F978  61                 	db	97	;'a'
   241  00F979  74                 	db	116	;'t'
   242  00F97A  20                 	db	32
   243  00F97B  61                 	db	97	;'a'
   244  00F97C  6E                 	db	110	;'n'
   245  00F97D  79                 	db	121	;'y'
   246  00F97E  74                 	db	116	;'t'
   247  00F97F  69                 	db	105	;'i'
   248  00F980  6D                 	db	109	;'m'
   249  00F981  65                 	db	101	;'e'
   250  00F982  20                 	db	32
   251  00F983  77                 	db	119	;'w'
   252  00F984  69                 	db	105	;'i'
   253  00F985  74                 	db	116	;'t'
   254  00F986  68                 	db	104	;'h'
   255  00F987  20                 	db	32
   256  00F988  61                 	db	97	;'a'
   257  00F989  20                 	db	32
   258  00F98A  6B                 	db	107	;'k'
   259  00F98B  65                 	db	101	;'e'
   260  00F98C  79                 	db	121	;'y'
   261  00F98D  70                 	db	112	;'p'
   262  00F98E  72                 	db	114	;'r'
   263  00F98F  65                 	db	101	;'e'
   264  00F990  73                 	db	115	;'s'
   265  00F991  73                 	db	115	;'s'
   266  00F992  2E                 	db	46
   267  00F993  0D                 	db	13
   268  00F994  0A                 	db	10
   269  00F995  54                 	db	84	;'T'
   270  00F996  6F                 	db	111	;'o'
   271  00F997  20                 	db	32
   272  00F998  73                 	db	115	;'s'
   273  00F999  70                 	db	112	;'p'
   274  00F99A  6F                 	db	111	;'o'
   275  00F99B  6F                 	db	111	;'o'
   276  00F99C  6C                 	db	108	;'l'
   277  00F99D  20                 	db	32
   278  00F99E  74                 	db	116	;'t'
   279  00F99F  65                 	db	101	;'e'
   280  00F9A0  72                 	db	114	;'r'
   281  00F9A1  6D                 	db	109	;'m'
   282  00F9A2  69                 	db	105	;'i'
   283  00F9A3  6E                 	db	110	;'n'
   284  00F9A4  61                 	db	97	;'a'
   285  00F9A5  6C                 	db	108	;'l'
   286  00F9A6  20                 	db	32
   287  00F9A7  63                 	db	99	;'c'
   288  00F9A8  6F                 	db	111	;'o'
   289  00F9A9  6E                 	db	110	;'n'
   290  00F9AA  74                 	db	116	;'t'
   291  00F9AB  65                 	db	101	;'e'
   292  00F9AC  6E                 	db	110	;'n'
   293  00F9AD  74                 	db	116	;'t'
   294  00F9AE  73                 	db	115	;'s'
   295  00F9AF  20                 	db	32
   296  00F9B0  69                 	db	105	;'i'
   297  00F9B1  6E                 	db	110	;'n'
   298  00F9B2  74                 	db	116	;'t'
   299  00F9B3  6F                 	db	111	;'o'
   300  00F9B4  20                 	db	32
   301  00F9B5  61                 	db	97	;'a'
   302  00F9B6  20                 	db	32
   303  00F9B7  66                 	db	102	;'f'
   304  00F9B8  69                 	db	105	;'i'
   305  00F9B9  6C                 	db	108	;'l'
   306  00F9BA  65                 	db	101	;'e'
   307  00F9BB  20                 	db	32
   308  00F9BC  66                 	db	102	;'f'
   309  00F9BD  6F                 	db	111	;'o'
   310  00F9BE  6C                 	db	108	;'l'
   311  00F9BF  6C                 	db	108	;'l'
   312  00F9C0  6F                 	db	111	;'o'
   313  00F9C1  77                 	db	119	;'w'
   314  00F9C2  20                 	db	32
   315  00F9C3  74                 	db	116	;'t'
   316  00F9C4  68                 	db	104	;'h'
   317  00F9C5  65                 	db	101	;'e'
   318  00F9C6  73                 	db	115	;'s'
   319  00F9C7  65                 	db	101	;'e'
   320  00F9C8  20                 	db	32
   321  00F9C9  69                 	db	105	;'i'
   322  00F9CA  6E                 	db	110	;'n'
   323  00F9CB  73                 	db	115	;'s'
   324  00F9CC  74                 	db	116	;'t'
   325  00F9CD  72                 	db	114	;'r'
   326  00F9CE  75                 	db	117	;'u'
   327  00F9CF  63                 	db	99	;'c'
   328  00F9D0  74                 	db	116	;'t'
   329  00F9D1  69                 	db	105	;'i'
   330  00F9D2  6F                 	db	111	;'o'
   331  00F9D3  6E                 	db	110	;'n'
   332  00F9D4  73                 	db	115	;'s'
   333  00F9D5  3A                 	db	58	;':'
   334  00F9D6  0D                 	db	13
   335  00F9D7  0A                 	db	10
   336  00F9D8  0D                 	db	13
   337  00F9D9  0A                 	db	10
   338  00F9DA  52                 	db	82	;'R'
   339  00F9DB  69                 	db	105	;'i'
   340  00F9DC  67                 	db	103	;'g'
   341  00F9DD  68                 	db	104	;'h'
   342  00F9DE  74                 	db	116	;'t'
   343  00F9DF  20                 	db	32
   344  00F9E0  6D                 	db	109	;'m'
   345  00F9E1  6F                 	db	111	;'o'
   346  00F9E2  75                 	db	117	;'u'
   347  00F9E3  73                 	db	115	;'s'
   348  00F9E4  65                 	db	101	;'e'
   349  00F9E5  20                 	db	32
   350  00F9E6  63                 	db	99	;'c'
   351  00F9E7  6C                 	db	108	;'l'
   352  00F9E8  69                 	db	105	;'i'
   353  00F9E9  63                 	db	99	;'c'
   354  00F9EA  6B                 	db	107	;'k'
   355  00F9EB  20                 	db	32
   356  00F9EC  6F                 	db	111	;'o'
   357  00F9ED  6E                 	db	110	;'n'
   358  00F9EE  20                 	db	32
   359  00F9EF  74                 	db	116	;'t'
   360  00F9F0  68                 	db	104	;'h'
   361  00F9F1  65                 	db	101	;'e'
   362  00F9F2  20                 	db	32
   363  00F9F3  75                 	db	117	;'u'
   364  00F9F4  70                 	db	112	;'p'
   365  00F9F5  70                 	db	112	;'p'
   366  00F9F6  65                 	db	101	;'e'
   367  00F9F7  72                 	db	114	;'r'
   368  00F9F8  20                 	db	32
   369  00F9F9  6C                 	db	108	;'l'
   370  00F9FA  65                 	db	101	;'e'
   371  00F9FB  66                 	db	102	;'f'
   372  00F9FC  74                 	db	116	;'t'
   373  00F9FD  20                 	db	32
   374  00F9FE  6F                 	db	111	;'o'
   375  00F9FF  66                 	db	102	;'f'
   376  00FA00  20                 	db	32
   377  00FA01  74                 	db	116	;'t'
   378  00FA02  68                 	db	104	;'h'
   379  00FA03  65                 	db	101	;'e'
   380  00FA04  20                 	db	32
   381  00FA05  50                 	db	80	;'P'
   382  00FA06  75                 	db	117	;'u'
   383  00FA07  54                 	db	84	;'T'
   384  00FA08  54                 	db	84	;'T'
   385  00FA09  59                 	db	89	;'Y'
   386  00FA0A  20                 	db	32
   387  00FA0B  77                 	db	119	;'w'
   388  00FA0C  69                 	db	105	;'i'
   389  00FA0D  6E                 	db	110	;'n'
   390  00FA0E  64                 	db	100	;'d'
   391  00FA0F  6F                 	db	111	;'o'
   392  00FA10  77                 	db	119	;'w'
   393  00FA11  0D                 	db	13
   394  00FA12  0A                 	db	10
   395  00FA13  53                 	db	83	;'S'
   396  00FA14  65                 	db	101	;'e'
   397  00FA15  6C                 	db	108	;'l'
   398  00FA16  65                 	db	101	;'e'
   399  00FA17  63                 	db	99	;'c'
   400  00FA18  74                 	db	116	;'t'
   401  00FA19  3A                 	db	58	;':'
   402  00FA1A  20                 	db	32
   403  00FA1B  20                 	db	32
   404  00FA1C  20                 	db	32
   405  00FA1D  20                 	db	32
   406  00FA1E  20                 	db	32
   407  00FA1F  43                 	db	67	;'C'
   408  00FA20  68                 	db	104	;'h'
   409  00FA21  61                 	db	97	;'a'
   410  00FA22  6E                 	db	110	;'n'
   411  00FA23  67                 	db	103	;'g'
   412  00FA24  65                 	db	101	;'e'
   413  00FA25  20                 	db	32
   414  00FA26  73                 	db	115	;'s'
   415  00FA27  65                 	db	101	;'e'
   416  00FA28  74                 	db	116	;'t'
   417  00FA29  74                 	db	116	;'t'
   418  00FA2A  69                 	db	105	;'i'
   419  00FA2B  6E                 	db	110	;'n'
   420  00FA2C  67                 	db	103	;'g'
   421  00FA2D  73                 	db	115	;'s'
   422  00FA2E  2E                 	db	46
   423  00FA2F  2E                 	db	46
   424  00FA30  2E                 	db	46
   425  00FA31  0D                 	db	13
   426  00FA32  0A                 	db	10
   427  00FA33  53                 	db	83	;'S'
   428  00FA34  65                 	db	101	;'e'
   429  00FA35  6C                 	db	108	;'l'
   430  00FA36  65                 	db	101	;'e'
   431  00FA37  63                 	db	99	;'c'
   432  00FA38  74                 	db	116	;'t'
   433  00FA39  3A                 	db	58	;':'
   434  00FA3A  20                 	db	32
   435  00FA3B  20                 	db	32
   436  00FA3C  20                 	db	32
   437  00FA3D  20                 	db	32
   438  00FA3E  20                 	db	32
   439  00FA3F  4C                 	db	76	;'L'
   440  00FA40  6F                 	db	111	;'o'
   441  00FA41  67                 	db	103	;'g'
   442  00FA42  67                 	db	103	;'g'
   443  00FA43  69                 	db	105	;'i'
   444  00FA44  6E                 	db	110	;'n'
   445  00FA45  67                 	db	103	;'g'
   446  00FA46  0D                 	db	13
   447  00FA47  0A                 	db	10
   448  00FA48  53                 	db	83	;'S'
   449  00FA49  65                 	db	101	;'e'
   450  00FA4A  6C                 	db	108	;'l'
   451  00FA4B  65                 	db	101	;'e'
   452  00FA4C  63                 	db	99	;'c'
   453  00FA4D  74                 	db	116	;'t'
   454  00FA4E  3A                 	db	58	;':'
   455  00FA4F  20                 	db	32
   456  00FA50  20                 	db	32
   457  00FA51  20                 	db	32
   458  00FA52  20                 	db	32
   459  00FA53  20                 	db	32
   460  00FA54  53                 	db	83	;'S'
   461  00FA55  65                 	db	101	;'e'
   462  00FA56  73                 	db	115	;'s'
   463  00FA57  73                 	db	115	;'s'
   464  00FA58  69                 	db	105	;'i'
   465  00FA59  6F                 	db	111	;'o'
   466  00FA5A  6E                 	db	110	;'n'
   467  00FA5B  20                 	db	32
   468  00FA5C  6C                 	db	108	;'l'
   469  00FA5D  6F                 	db	111	;'o'
   470  00FA5E  67                 	db	103	;'g'
   471  00FA5F  67                 	db	103	;'g'
   472  00FA60  69                 	db	105	;'i'
   473  00FA61  6E                 	db	110	;'n'
   474  00FA62  67                 	db	103	;'g'
   475  00FA63  3A                 	db	58	;':'
   476  00FA64  20                 	db	32
   477  00FA65  41                 	db	65	;'A'
   478  00FA66  6C                 	db	108	;'l'
   479  00FA67  6C                 	db	108	;'l'
   480  00FA68  20                 	db	32
   481  00FA69  73                 	db	115	;'s'
   482  00FA6A  65                 	db	101	;'e'
   483  00FA6B  73                 	db	115	;'s'
   484  00FA6C  73                 	db	115	;'s'
   485  00FA6D  69                 	db	105	;'i'
   486  00FA6E  6F                 	db	111	;'o'
   487  00FA6F  6E                 	db	110	;'n'
   488  00FA70  20                 	db	32
   489  00FA71  6F                 	db	111	;'o'
   490  00FA72  75                 	db	117	;'u'
   491  00FA73  74                 	db	116	;'t'
   492  00FA74  70                 	db	112	;'p'
   493  00FA75  75                 	db	117	;'u'
   494  00FA76  74                 	db	116	;'t'
   495  00FA77  0D                 	db	13
   496  00FA78  0A                 	db	10
   497  00FA79  4C                 	db	76	;'L'
   498  00FA7A  6F                 	db	111	;'o'
   499  00FA7B  67                 	db	103	;'g'
   500  00FA7C  20                 	db	32
   501  00FA7D  66                 	db	102	;'f'
   502  00FA7E  69                 	db	105	;'i'
   503  00FA7F  6C                 	db	108	;'l'
   504  00FA80  65                 	db	101	;'e'
   505  00FA81  20                 	db	32
   506  00FA82  6E                 	db	110	;'n'
   507  00FA83  61                 	db	97	;'a'
   508  00FA84  6D                 	db	109	;'m'
   509  00FA85  65                 	db	101	;'e'
   510  00FA86  3A                 	db	58	;':'
   511  00FA87  20                 	db	32
   512  00FA88  20                 	db	32
   513  00FA89  42                 	db	66	;'B'
   514  00FA8A  72                 	db	114	;'r'
   515  00FA8B  6F                 	db	111	;'o'
   516  00FA8C  77                 	db	119	;'w'
   517  00FA8D  73                 	db	115	;'s'
   518  00FA8E  65                 	db	101	;'e'
   519  00FA8F  20                 	db	32
   520  00FA90  61                 	db	97	;'a'
   521  00FA91  6E                 	db	110	;'n'
   522  00FA92  64                 	db	100	;'d'
   523  00FA93  20                 	db	32
   524  00FA94  70                 	db	112	;'p'
   525  00FA95  72                 	db	114	;'r'
   526  00FA96  6F                 	db	111	;'o'
   527  00FA97  76                 	db	118	;'v'
   528  00FA98  69                 	db	105	;'i'
   529  00FA99  64                 	db	100	;'d'
   530  00FA9A  65                 	db	101	;'e'
   531  00FA9B  20                 	db	32
   532  00FA9C  61                 	db	97	;'a'
   533  00FA9D  20                 	db	32
   534  00FA9E  2E                 	db	46
   535  00FA9F  63                 	db	99	;'c'
   536  00FAA0  73                 	db	115	;'s'
   537  00FAA1  76                 	db	118	;'v'
   538  00FAA2  20                 	db	32
   539  00FAA3  65                 	db	101	;'e'
   540  00FAA4  78                 	db	120	;'x'
   541  00FAA5  74                 	db	116	;'t'
   542  00FAA6  65                 	db	101	;'e'
   543  00FAA7  6E                 	db	110	;'n'
   544  00FAA8  73                 	db	115	;'s'
   545  00FAA9  69                 	db	105	;'i'
   546  00FAAA  6F                 	db	111	;'o'
   547  00FAAB  6E                 	db	110	;'n'
   548  00FAAC  20                 	db	32
   549  00FAAD  74                 	db	116	;'t'
   550  00FAAE  6F                 	db	111	;'o'
   551  00FAAF  20                 	db	32
   552  00FAB0  79                 	db	121	;'y'
   553  00FAB1  6F                 	db	111	;'o'
   554  00FAB2  75                 	db	117	;'u'
   555  00FAB3  72                 	db	114	;'r'
   556  00FAB4  20                 	db	32
   557  00FAB5  66                 	db	102	;'f'
   558  00FAB6  69                 	db	105	;'i'
   559  00FAB7  6C                 	db	108	;'l'
   560  00FAB8  65                 	db	101	;'e'
   561  00FAB9  20                 	db	32
   562  00FABA  6E                 	db	110	;'n'
   563  00FABB  61                 	db	97	;'a'
   564  00FABC  6D                 	db	109	;'m'
   565  00FABD  65                 	db	101	;'e'
   566  00FABE  0D                 	db	13
   567  00FABF  0A                 	db	10
   568  00FAC0  53                 	db	83	;'S'
   569  00FAC1  65                 	db	101	;'e'
   570  00FAC2  6C                 	db	108	;'l'
   571  00FAC3  65                 	db	101	;'e'
   572  00FAC4  63                 	db	99	;'c'
   573  00FAC5  74                 	db	116	;'t'
   574  00FAC6  3A                 	db	58	;':'
   575  00FAC7  20                 	db	32
   576  00FAC8  20                 	db	32
   577  00FAC9  20                 	db	32
   578  00FACA  20                 	db	32
   579  00FACB  20                 	db	32
   580  00FACC  41                 	db	65	;'A'
   581  00FACD  70                 	db	112	;'p'
   582  00FACE  70                 	db	112	;'p'
   583  00FACF  6C                 	db	108	;'l'
   584  00FAD0  79                 	db	121	;'y'
   585  00FAD1  0D                 	db	13
   586  00FAD2  0A                 	db	10
   587  00FAD3  50                 	db	80	;'P'
   588  00FAD4  72                 	db	114	;'r'
   589  00FAD5  65                 	db	101	;'e'
   590  00FAD6  73                 	db	115	;'s'
   591  00FAD7  73                 	db	115	;'s'
   592  00FAD8  20                 	db	32
   593  00FAD9  61                 	db	97	;'a'
   594  00FADA  6E                 	db	110	;'n'
   595  00FADB  79                 	db	121	;'y'
   596  00FADC  20                 	db	32
   597  00FADD  6B                 	db	107	;'k'
   598  00FADE  65                 	db	101	;'e'
   599  00FADF  79                 	db	121	;'y'
   600  00FAE0  20                 	db	32
   601  00FAE1  74                 	db	116	;'t'
   602  00FAE2  6F                 	db	111	;'o'
   603  00FAE3  20                 	db	32
   604  00FAE4  73                 	db	115	;'s'
   605  00FAE5  74                 	db	116	;'t'
   606  00FAE6  61                 	db	97	;'a'
   607  00FAE7  72                 	db	114	;'r'
   608  00FAE8  74                 	db	116	;'t'
   609  00FAE9  00                 	db	0
   610  00FAEA                     STR_59:
   611  00FAEA  53                 	db	83	;'S'
   612  00FAEB  70                 	db	112	;'p'
   613  00FAEC  6F                 	db	111	;'o'
   614  00FAED  6F                 	db	111	;'o'
   615  00FAEE  6C                 	db	108	;'l'
   616  00FAEF  65                 	db	101	;'e'
   617  00FAF0  64                 	db	100	;'d'
   618  00FAF1  20                 	db	32
   619  00FAF2  35                 	db	53	;'5'
   620  00FAF3  31                 	db	49	;'1'
   621  00FAF4  32                 	db	50	;'2'
   622  00FAF5  20                 	db	32
   623  00FAF6  6F                 	db	111	;'o'
   624  00FAF7  75                 	db	117	;'u'
   625  00FAF8  74                 	db	116	;'t'
   626  00FAF9  20                 	db	32
   627  00FAFA  6F                 	db	111	;'o'
   628  00FAFB  66                 	db	102	;'f'
   629  00FAFC  20                 	db	32
   630  00FAFD  74                 	db	116	;'t'
   631  00FAFE  68                 	db	104	;'h'
   632  00FAFF  65                 	db	101	;'e'
   633  00FB00  20                 	db	32
   634  00FB01  35                 	db	53	;'5'
   635  00FB02  31                 	db	49	;'1'
   636  00FB03  32                 	db	50	;'2'
   637  00FB04  20                 	db	32
   638  00FB05  62                 	db	98	;'b'
   639  00FB06  6C                 	db	108	;'l'
   640  00FB07  6F                 	db	111	;'o'
   641  00FB08  63                 	db	99	;'c'
   642  00FB09  6B                 	db	107	;'k'
   643  00FB0A  73                 	db	115	;'s'
   644  00FB0B  2E                 	db	46
   645  00FB0C  20                 	db	32
   646  00FB0D  0D                 	db	13
   647  00FB0E  0A                 	db	10
   648  00FB0F  54                 	db	84	;'T'
   649  00FB10  6F                 	db	111	;'o'
   650  00FB11  20                 	db	32
   651  00FB12  63                 	db	99	;'c'
   652  00FB13  6C                 	db	108	;'l'
   653  00FB14  6F                 	db	111	;'o'
   654  00FB15  73                 	db	115	;'s'
   655  00FB16  65                 	db	101	;'e'
   656  00FB17  20                 	db	32
   657  00FB18  74                 	db	116	;'t'
   658  00FB19  68                 	db	104	;'h'
   659  00FB1A  65                 	db	101	;'e'
   660  00FB1B  20                 	db	32
   661  00FB1C  66                 	db	102	;'f'
   662  00FB1D  69                 	db	105	;'i'
   663  00FB1E  6C                 	db	108	;'l'
   664  00FB1F  65                 	db	101	;'e'
   665  00FB20  20                 	db	32
   666  00FB21  66                 	db	102	;'f'
   667  00FB22  6F                 	db	111	;'o'
   668  00FB23  6C                 	db	108	;'l'
   669  00FB24  6C                 	db	108	;'l'
   670  00FB25  6F                 	db	111	;'o'
   671  00FB26  77                 	db	119	;'w'
   672  00FB27  20                 	db	32
   673  00FB28  74                 	db	116	;'t'
   674  00FB29  68                 	db	104	;'h'
   675  00FB2A  65                 	db	101	;'e'
   676  00FB2B  73                 	db	115	;'s'
   677  00FB2C  65                 	db	101	;'e'
   678  00FB2D  20                 	db	32
   679  00FB2E  69                 	db	105	;'i'
   680  00FB2F  6E                 	db	110	;'n'
   681  00FB30  73                 	db	115	;'s'
   682  00FB31  74                 	db	116	;'t'
   683  00FB32  72                 	db	114	;'r'
   684  00FB33  75                 	db	117	;'u'
   685  00FB34  63                 	db	99	;'c'
   686  00FB35  74                 	db	116	;'t'
   687  00FB36  69                 	db	105	;'i'
   688  00FB37  6F                 	db	111	;'o'
   689  00FB38  6E                 	db	110	;'n'
   690  00FB39  73                 	db	115	;'s'
   691  00FB3A  3A                 	db	58	;':'
   692  00FB3B  20                 	db	32
   693  00FB3C  0D                 	db	13
   694  00FB3D  0A                 	db	10
   695  00FB3E  20                 	db	32
   696  00FB3F  0D                 	db	13
   697  00FB40  0A                 	db	10
   698  00FB41  52                 	db	82	;'R'
   699  00FB42  69                 	db	105	;'i'
   700  00FB43  67                 	db	103	;'g'
   701  00FB44  68                 	db	104	;'h'
   702  00FB45  74                 	db	116	;'t'
   703  00FB46  20                 	db	32
   704  00FB47  6D                 	db	109	;'m'
   705  00FB48  6F                 	db	111	;'o'
   706  00FB49  75                 	db	117	;'u'
   707  00FB4A  73                 	db	115	;'s'
   708  00FB4B  65                 	db	101	;'e'
   709  00FB4C  20                 	db	32
   710  00FB4D  63                 	db	99	;'c'
   711  00FB4E  6C                 	db	108	;'l'
   712  00FB4F  69                 	db	105	;'i'
   713  00FB50  63                 	db	99	;'c'
   714  00FB51  6B                 	db	107	;'k'
   715  00FB52  20                 	db	32
   716  00FB53  6F                 	db	111	;'o'
   717  00FB54  6E                 	db	110	;'n'
   718  00FB55  20                 	db	32
   719  00FB56  74                 	db	116	;'t'
   720  00FB57  68                 	db	104	;'h'
   721  00FB58  65                 	db	101	;'e'
   722  00FB59  20                 	db	32
   723  00FB5A  75                 	db	117	;'u'
   724  00FB5B  70                 	db	112	;'p'
   725  00FB5C  70                 	db	112	;'p'
   726  00FB5D  65                 	db	101	;'e'
   727  00FB5E  72                 	db	114	;'r'
   728  00FB5F  20                 	db	32
   729  00FB60  6C                 	db	108	;'l'
   730  00FB61  65                 	db	101	;'e'
   731  00FB62  66                 	db	102	;'f'
   732  00FB63  74                 	db	116	;'t'
   733  00FB64  20                 	db	32
   734  00FB65  6F                 	db	111	;'o'
   735  00FB66  66                 	db	102	;'f'
   736  00FB67  20                 	db	32
   737  00FB68  74                 	db	116	;'t'
   738  00FB69  68                 	db	104	;'h'
   739  00FB6A  65                 	db	101	;'e'
   740  00FB6B  20                 	db	32
   741  00FB6C  50                 	db	80	;'P'
   742  00FB6D  75                 	db	117	;'u'
   743  00FB6E  54                 	db	84	;'T'
   744  00FB6F  54                 	db	84	;'T'
   745  00FB70  59                 	db	89	;'Y'
   746  00FB71  20                 	db	32
   747  00FB72  77                 	db	119	;'w'
   748  00FB73  69                 	db	105	;'i'
   749  00FB74  6E                 	db	110	;'n'
   750  00FB75  64                 	db	100	;'d'
   751  00FB76  6F                 	db	111	;'o'
   752  00FB77  77                 	db	119	;'w'
   753  00FB78  20                 	db	32
   754  00FB79  0D                 	db	13
   755  00FB7A  0A                 	db	10
   756  00FB7B  53                 	db	83	;'S'
   757  00FB7C  65                 	db	101	;'e'
   758  00FB7D  6C                 	db	108	;'l'
   759  00FB7E  65                 	db	101	;'e'
   760  00FB7F  63                 	db	99	;'c'
   761  00FB80  74                 	db	116	;'t'
   762  00FB81  3A                 	db	58	;':'
   763  00FB82  20                 	db	32
   764  00FB83  20                 	db	32
   765  00FB84  20                 	db	32
   766  00FB85  20                 	db	32
   767  00FB86  20                 	db	32
   768  00FB87  43                 	db	67	;'C'
   769  00FB88  68                 	db	104	;'h'
   770  00FB89  61                 	db	97	;'a'
   771  00FB8A  6E                 	db	110	;'n'
   772  00FB8B  67                 	db	103	;'g'
   773  00FB8C  65                 	db	101	;'e'
   774  00FB8D  20                 	db	32
   775  00FB8E  73                 	db	115	;'s'
   776  00FB8F  65                 	db	101	;'e'
   777  00FB90  74                 	db	116	;'t'
   778  00FB91  74                 	db	116	;'t'
   779  00FB92  69                 	db	105	;'i'
   780  00FB93  6E                 	db	110	;'n'
   781  00FB94  67                 	db	103	;'g'
   782  00FB95  73                 	db	115	;'s'
   783  00FB96  2E                 	db	46
   784  00FB97  2E                 	db	46
   785  00FB98  2E                 	db	46
   786  00FB99  20                 	db	32
   787  00FB9A  0D                 	db	13
   788  00FB9B  0A                 	db	10
   789  00FB9C  53                 	db	83	;'S'
   790  00FB9D  65                 	db	101	;'e'
   791  00FB9E  6C                 	db	108	;'l'
   792  00FB9F  65                 	db	101	;'e'
   793  00FBA0  63                 	db	99	;'c'
   794  00FBA1  74                 	db	116	;'t'
   795  00FBA2  3A                 	db	58	;':'
   796  00FBA3  20                 	db	32
   797  00FBA4  20                 	db	32
   798  00FBA5  20                 	db	32
   799  00FBA6  20                 	db	32
   800  00FBA7  20                 	db	32
   801  00FBA8  4C                 	db	76	;'L'
   802  00FBA9  6F                 	db	111	;'o'
   803  00FBAA  67                 	db	103	;'g'
   804  00FBAB  67                 	db	103	;'g'
   805  00FBAC  69                 	db	105	;'i'
   806  00FBAD  6E                 	db	110	;'n'
   807  00FBAE  67                 	db	103	;'g'
   808  00FBAF  20                 	db	32
   809  00FBB0  0D                 	db	13
   810  00FBB1  0A                 	db	10
   811  00FBB2  53                 	db	83	;'S'
   812  00FBB3  65                 	db	101	;'e'
   813  00FBB4  6C                 	db	108	;'l'
   814  00FBB5  65                 	db	101	;'e'
   815  00FBB6  63                 	db	99	;'c'
   816  00FBB7  74                 	db	116	;'t'
   817  00FBB8  3A                 	db	58	;':'
   818  00FBB9  20                 	db	32
   819  00FBBA  20                 	db	32
   820  00FBBB  20                 	db	32
   821  00FBBC  20                 	db	32
   822  00FBBD  20                 	db	32
   823  00FBBE  53                 	db	83	;'S'
   824  00FBBF  65                 	db	101	;'e'
   825  00FBC0  73                 	db	115	;'s'
   826  00FBC1  73                 	db	115	;'s'
   827  00FBC2  69                 	db	105	;'i'
   828  00FBC3  6F                 	db	111	;'o'
   829  00FBC4  6E                 	db	110	;'n'
   830  00FBC5  20                 	db	32
   831  00FBC6  20                 	db	32
   832  00FBC7  6C                 	db	108	;'l'
   833  00FBC8  6F                 	db	111	;'o'
   834  00FBC9  67                 	db	103	;'g'
   835  00FBCA  67                 	db	103	;'g'
   836  00FBCB  69                 	db	105	;'i'
   837  00FBCC  6E                 	db	110	;'n'
   838  00FBCD  67                 	db	103	;'g'
   839  00FBCE  3A                 	db	58	;':'
   840  00FBCF  20                 	db	32
   841  00FBD0  4E                 	db	78	;'N'
   842  00FBD1  6F                 	db	111	;'o'
   843  00FBD2  6E                 	db	110	;'n'
   844  00FBD3  65                 	db	101	;'e'
   845  00FBD4  20                 	db	32
   846  00FBD5  0D                 	db	13
   847  00FBD6  0A                 	db	10
   848  00FBD7  53                 	db	83	;'S'
   849  00FBD8  65                 	db	101	;'e'
   850  00FBD9  6C                 	db	108	;'l'
   851  00FBDA  65                 	db	101	;'e'
   852  00FBDB  63                 	db	99	;'c'
   853  00FBDC  74                 	db	116	;'t'
   854  00FBDD  3A                 	db	58	;':'
   855  00FBDE  20                 	db	32
   856  00FBDF  20                 	db	32
   857  00FBE0  20                 	db	32
   858  00FBE1  20                 	db	32
   859  00FBE2  20                 	db	32
   860  00FBE3  41                 	db	65	;'A'
   861  00FBE4  70                 	db	112	;'p'
   862  00FBE5  70                 	db	112	;'p'
   863  00FBE6  6C                 	db	108	;'l'
   864  00FBE7  79                 	db	121	;'y'
   865  00FBE8  00                 	db	0
   866  00FBE9                     STR_52:
   867  00FBE9  57                 	db	87	;'W'
   868  00FBEA  72                 	db	114	;'r'
   869  00FBEB  69                 	db	105	;'i'
   870  00FBEC  74                 	db	116	;'t'
   871  00FBED  69                 	db	105	;'i'
   872  00FBEE  6E                 	db	110	;'n'
   873  00FBEF  67                 	db	103	;'g'
   874  00FBF0  20                 	db	32
   875  00FBF1  73                 	db	115	;'s'
   876  00FBF2  69                 	db	105	;'i'
   877  00FBF3  6E                 	db	110	;'n'
   878  00FBF4  65                 	db	101	;'e'
   879  00FBF5  20                 	db	32
   880  00FBF6  77                 	db	119	;'w'
   881  00FBF7  61                 	db	97	;'a'
   882  00FBF8  76                 	db	118	;'v'
   883  00FBF9  65                 	db	101	;'e'
   884  00FBFA  20                 	db	32
   885  00FBFB  74                 	db	116	;'t'
   886  00FBFC  6F                 	db	111	;'o'
   887  00FBFD  20                 	db	32
   888  00FBFE  6D                 	db	109	;'m'
   889  00FBFF  65                 	db	101	;'e'
   890  00FC00  6D                 	db	109	;'m'
   891  00FC01  6F                 	db	111	;'o'
   892  00FC02  72                 	db	114	;'r'
   893  00FC03  79                 	db	121	;'y'
   894  00FC04  2C                 	db	44
   895  00FC05  20                 	db	32
   896  00FC06  73                 	db	115	;'s'
   897  00FC07  74                 	db	116	;'t'
   898  00FC08  61                 	db	97	;'a'
   899  00FC09  72                 	db	114	;'r'
   900  00FC0A  74                 	db	116	;'t'
   901  00FC0B  69                 	db	105	;'i'
   902  00FC0C  6E                 	db	110	;'n'
   903  00FC0D  67                 	db	103	;'g'
   904  00FC0E  20                 	db	32
   905  00FC0F  77                 	db	119	;'w'
   906  00FC10  69                 	db	105	;'i'
   907  00FC11  74                 	db	116	;'t'
   908  00FC12  68                 	db	104	;'h'
   909  00FC13  20                 	db	32
   910  00FC14  74                 	db	116	;'t'
   911  00FC15  68                 	db	104	;'h'
   912  00FC16  65                 	db	101	;'e'
   913  00FC17  20                 	db	32
   914  00FC18  63                 	db	99	;'c'
   915  00FC19  75                 	db	117	;'u'
   916  00FC1A  72                 	db	114	;'r'
   917  00FC1B  72                 	db	114	;'r'
   918  00FC1C  65                 	db	101	;'e'
   919  00FC1D  6E                 	db	110	;'n'
   920  00FC1E  74                 	db	116	;'t'
   921  00FC1F  20                 	db	32
   922  00FC20  61                 	db	97	;'a'
   923  00FC21  64                 	db	100	;'d'
   924  00FC22  64                 	db	100	;'d'
   925  00FC23  72                 	db	114	;'r'
   926  00FC24  65                 	db	101	;'e'
   927  00FC25  73                 	db	115	;'s'
   928  00FC26  73                 	db	115	;'s'
   929  00FC27  2E                 	db	46
   930  00FC28  20                 	db	32
   931  00FC29  50                 	db	80	;'P'
   932  00FC2A  72                 	db	114	;'r'
   933  00FC2B  65                 	db	101	;'e'
   934  00FC2C  73                 	db	115	;'s'
   935  00FC2D  73                 	db	115	;'s'
   936  00FC2E  20                 	db	32
   937  00FC2F  61                 	db	97	;'a'
   938  00FC30  6E                 	db	110	;'n'
   939  00FC31  79                 	db	121	;'y'
   940  00FC32  20                 	db	32
   941  00FC33  6B                 	db	107	;'k'
   942  00FC34  65                 	db	101	;'e'
   943  00FC35  79                 	db	121	;'y'
   944  00FC36  20                 	db	32
   945  00FC37  74                 	db	116	;'t'
   946  00FC38  6F                 	db	111	;'o'
   947  00FC39  20                 	db	32
   948  00FC3A  73                 	db	115	;'s'
   949  00FC3B  74                 	db	116	;'t'
   950  00FC3C  6F                 	db	111	;'o'
   951  00FC3D  70                 	db	112	;'p'
   952  00FC3E  2E                 	db	46
   953  00FC3F  0D                 	db	13
   954  00FC40  0A                 	db	10
   955  00FC41  00                 	db	0
   956  00FC42                     STR_56:
   957  00FC42  50                 	db	80	;'P'
   958  00FC43  72                 	db	114	;'r'
   959  00FC44  65                 	db	101	;'e'
   960  00FC45  73                 	db	115	;'s'
   961  00FC46  73                 	db	115	;'s'
   962  00FC47  20                 	db	32
   963  00FC48  61                 	db	97	;'a'
   964  00FC49  6E                 	db	110	;'n'
   965  00FC4A  79                 	db	121	;'y'
   966  00FC4B  20                 	db	32
   967  00FC4C  6B                 	db	107	;'k'
   968  00FC4D  65                 	db	101	;'e'
   969  00FC4E  79                 	db	121	;'y'
   970  00FC4F  20                 	db	32
   971  00FC50  74                 	db	116	;'t'
   972  00FC51  6F                 	db	111	;'o'
   973  00FC52  20                 	db	32
   974  00FC53  73                 	db	115	;'s'
   975  00FC54  74                 	db	116	;'t'
   976  00FC55  61                 	db	97	;'a'
   977  00FC56  72                 	db	114	;'r'
   978  00FC57  74                 	db	116	;'t'
   979  00FC58  20                 	db	32
   980  00FC59  72                 	db	114	;'r'
   981  00FC5A  65                 	db	101	;'e'
   982  00FC5B  63                 	db	99	;'c'
   983  00FC5C  6F                 	db	111	;'o'
   984  00FC5D  72                 	db	114	;'r'
   985  00FC5E  64                 	db	100	;'d'
   986  00FC5F  69                 	db	105	;'i'
   987  00FC60  6E                 	db	110	;'n'
   988  00FC61  67                 	db	103	;'g'
   989  00FC62  20                 	db	32
   990  00FC63  61                 	db	97	;'a'
   991  00FC64  75                 	db	117	;'u'
   992  00FC65  64                 	db	100	;'d'
   993  00FC66  69                 	db	105	;'i'
   994  00FC67  6F                 	db	111	;'o'
   995  00FC68  20                 	db	32
   996  00FC69  61                 	db	97	;'a'
   997  00FC6A  6E                 	db	110	;'n'
   998  00FC6B  64                 	db	100	;'d'
   999  00FC6C  20                 	db	32
  1000  00FC6D  70                 	db	112	;'p'
  1001  00FC6E  72                 	db	114	;'r'
  1002  00FC6F  65                 	db	101	;'e'
  1003  00FC70  73                 	db	115	;'s'
  1004  00FC71  73                 	db	115	;'s'
  1005  00FC72  20                 	db	32
  1006  00FC73  61                 	db	97	;'a'
  1007  00FC74  6E                 	db	110	;'n'
  1008  00FC75  79                 	db	121	;'y'
  1009  00FC76  20                 	db	32
  1010  00FC77  6B                 	db	107	;'k'
  1011  00FC78  65                 	db	101	;'e'
  1012  00FC79  79                 	db	121	;'y'
  1013  00FC7A  20                 	db	32
  1014  00FC7B  74                 	db	116	;'t'
  1015  00FC7C  6F                 	db	111	;'o'
  1016  00FC7D  20                 	db	32
  1017  00FC7E  73                 	db	115	;'s'
  1018  00FC7F  74                 	db	116	;'t'
  1019  00FC80  6F                 	db	111	;'o'
  1020  00FC81  70                 	db	112	;'p'
  1021  00FC82  20                 	db	32
  1022  00FC83  72                 	db	114	;'r'
  1023  00FC84  65                 	db	101	;'e'
  1024  00FC85  63                 	db	99	;'c'
  1025  00FC86  6F                 	db	111	;'o'
  1026  00FC87  72                 	db	114	;'r'
  1027  00FC88  64                 	db	100	;'d'
  1028  00FC89  69                 	db	105	;'i'
  1029  00FC8A  6E                 	db	110	;'n'
  1030  00FC8B  67                 	db	103	;'g'
  1031  00FC8C  0D                 	db	13
  1032  00FC8D  0A                 	db	10
  1033  00FC8E  00                 	db	0
  1034  00FC8F                     STR_21:
  1035  00FC8F  31                 	db	49	;'1'
  1036  00FC90  3A                 	db	58	;':'
  1037  00FC91  20                 	db	32
  1038  00FC92  77                 	db	119	;'w'
  1039  00FC93  72                 	db	114	;'r'
  1040  00FC94  69                 	db	105	;'i'
  1041  00FC95  74                 	db	116	;'t'
  1042  00FC96  65                 	db	101	;'e'
  1043  00FC97  20                 	db	32
  1044  00FC98  61                 	db	97	;'a'
  1045  00FC99  20                 	db	32
  1046  00FC9A  70                 	db	112	;'p'
  1047  00FC9B  65                 	db	101	;'e'
  1048  00FC9C  72                 	db	114	;'r'
  1049  00FC9D  66                 	db	102	;'f'
  1050  00FC9E  65                 	db	101	;'e'
  1051  00FC9F  63                 	db	99	;'c'
  1052  00FCA0  74                 	db	116	;'t'
  1053  00FCA1  20                 	db	32
  1054  00FCA2  32                 	db	50	;'2'
  1055  00FCA3  36                 	db	54	;'6'
  1056  00FCA4  20                 	db	32
  1057  00FCA5  76                 	db	118	;'v'
  1058  00FCA6  61                 	db	97	;'a'
  1059  00FCA7  6C                 	db	108	;'l'
  1060  00FCA8  75                 	db	117	;'u'
  1061  00FCA9  65                 	db	101	;'e'
  1062  00FCAA  20                 	db	32
  1063  00FCAB  73                 	db	115	;'s'
  1064  00FCAC  69                 	db	105	;'i'
  1065  00FCAD  6E                 	db	110	;'n'
  1066  00FCAE  65                 	db	101	;'e'
  1067  00FCAF  20                 	db	32
  1068  00FCB0  77                 	db	119	;'w'
  1069  00FCB1  61                 	db	97	;'a'
  1070  00FCB2  76                 	db	118	;'v'
  1071  00FCB3  65                 	db	101	;'e'
  1072  00FCB4  20                 	db	32
  1073  00FCB5  74                 	db	116	;'t'
  1074  00FCB6  6F                 	db	111	;'o'
  1075  00FCB7  20                 	db	32
  1076  00FCB8  74                 	db	116	;'t'
  1077  00FCB9  68                 	db	104	;'h'
  1078  00FCBA  65                 	db	101	;'e'
  1079  00FCBB  20                 	db	32
  1080  00FCBC  53                 	db	83	;'S'
  1081  00FCBD  44                 	db	68	;'D'
  1082  00FCBE  20                 	db	32
  1083  00FCBF  63                 	db	99	;'c'
  1084  00FCC0  61                 	db	97	;'a'
  1085  00FCC1  72                 	db	114	;'r'
  1086  00FCC2  64                 	db	100	;'d'
  1087  00FCC3  0D                 	db	13
  1088  00FCC4  0A                 	db	10
  1089  00FCC5  00                 	db	0
  1090  00FCC6                     STR_5:
  1091  00FCC6  0D                 	db	13
  1092  00FCC7  0A                 	db	10
  1093  00FCC8  2D                 	db	45
  1094  00FCC9  2D                 	db	45
  1095  00FCCA  2D                 	db	45
  1096  00FCCB  2D                 	db	45
  1097  00FCCC  2D                 	db	45
  1098  00FCCD  2D                 	db	45
  1099  00FCCE  2D                 	db	45
  1100  00FCCF  2D                 	db	45
  1101  00FCD0  2D                 	db	45
  1102  00FCD1  2D                 	db	45
  1103  00FCD2  2D                 	db	45
  1104  00FCD3  2D                 	db	45
  1105  00FCD4  2D                 	db	45
  1106  00FCD5  2D                 	db	45
  1107  00FCD6  2D                 	db	45
  1108  00FCD7  2D                 	db	45
  1109  00FCD8  2D                 	db	45
  1110  00FCD9  2D                 	db	45
  1111  00FCDA  2D                 	db	45
  1112  00FCDB  2D                 	db	45
  1113  00FCDC  2D                 	db	45
  1114  00FCDD  2D                 	db	45
  1115  00FCDE  2D                 	db	45
  1116  00FCDF  2D                 	db	45
  1117  00FCE0  2D                 	db	45
  1118  00FCE1  2D                 	db	45
  1119  00FCE2  2D                 	db	45
  1120  00FCE3  2D                 	db	45
  1121  00FCE4  2D                 	db	45
  1122  00FCE5  2D                 	db	45
  1123  00FCE6  2D                 	db	45
  1124  00FCE7  2D                 	db	45
  1125  00FCE8  2D                 	db	45
  1126  00FCE9  2D                 	db	45
  1127  00FCEA  2D                 	db	45
  1128  00FCEB  2D                 	db	45
  1129  00FCEC  2D                 	db	45
  1130  00FCED  2D                 	db	45
  1131  00FCEE  2D                 	db	45
  1132  00FCEF  2D                 	db	45
  1133  00FCF0  2D                 	db	45
  1134  00FCF1  2D                 	db	45
  1135  00FCF2  2D                 	db	45
  1136  00FCF3  2D                 	db	45
  1137  00FCF4  2D                 	db	45
  1138  00FCF5  2D                 	db	45
  1139  00FCF6  2D                 	db	45
  1140  00FCF7  2D                 	db	45
  1141  00FCF8  2D                 	db	45
  1142  00FCF9  0D                 	db	13
  1143  00FCFA  0A                 	db	10
  1144  00FCFB  00                 	db	0
  1145  00FCFC                     STR_23:
  1146  00FCFC  2B                 	db	43
  1147  00FCFD  2F                 	db	47
  1148  00FCFE  2D                 	db	45
  1149  00FCFF  3A                 	db	58	;':'
  1150  00FD00  20                 	db	32
  1151  00FD01  49                 	db	73	;'I'
  1152  00FD02  6E                 	db	110	;'n'
  1153  00FD03  63                 	db	99	;'c'
  1154  00FD04  72                 	db	114	;'r'
  1155  00FD05  65                 	db	101	;'e'
  1156  00FD06  61                 	db	97	;'a'
  1157  00FD07  73                 	db	115	;'s'
  1158  00FD08  65                 	db	101	;'e'
  1159  00FD09  2F                 	db	47
  1160  00FD0A  44                 	db	68	;'D'
  1161  00FD0B  65                 	db	101	;'e'
  1162  00FD0C  63                 	db	99	;'c'
  1163  00FD0D  72                 	db	114	;'r'
  1164  00FD0E  65                 	db	101	;'e'
  1165  00FD0F  61                 	db	97	;'a'
  1166  00FD10  73                 	db	115	;'s'
  1167  00FD11  65                 	db	101	;'e'
  1168  00FD12  20                 	db	32
  1169  00FD13  74                 	db	116	;'t'
  1170  00FD14  68                 	db	104	;'h'
  1171  00FD15  65                 	db	101	;'e'
  1172  00FD16  20                 	db	32
  1173  00FD17  73                 	db	115	;'s'
  1174  00FD18  61                 	db	97	;'a'
  1175  00FD19  6D                 	db	109	;'m'
  1176  00FD1A  70                 	db	112	;'p'
  1177  00FD1B  6C                 	db	108	;'l'
  1178  00FD1C  65                 	db	101	;'e'
  1179  00FD1D  20                 	db	32
  1180  00FD1E  72                 	db	114	;'r'
  1181  00FD1F  61                 	db	97	;'a'
  1182  00FD20  74                 	db	116	;'t'
  1183  00FD21  65                 	db	101	;'e'
  1184  00FD22  20                 	db	32
  1185  00FD23  62                 	db	98	;'b'
  1186  00FD24  79                 	db	121	;'y'
  1187  00FD25  20                 	db	32
  1188  00FD26  31                 	db	49	;'1'
  1189  00FD27  30                 	db	48	;'0'
  1190  00FD28  20                 	db	32
  1191  00FD29  75                 	db	117	;'u'
  1192  00FD2A  73                 	db	115	;'s'
  1193  00FD2B  0D                 	db	13
  1194  00FD2C  0A                 	db	10
  1195  00FD2D  00                 	db	0
  1196  00FD2E                     STR_24:
  1197  00FD2E  57                 	db	87	;'W'
  1198  00FD2F  3A                 	db	58	;':'
  1199  00FD30  20                 	db	32
  1200  00FD31  57                 	db	87	;'W'
  1201  00FD32  72                 	db	114	;'r'
  1202  00FD33  69                 	db	105	;'i'
  1203  00FD34  74                 	db	116	;'t'
  1204  00FD35  65                 	db	101	;'e'
  1205  00FD36  20                 	db	32
  1206  00FD37  6D                 	db	109	;'m'
  1207  00FD38  69                 	db	105	;'i'
  1208  00FD39  63                 	db	99	;'c'
  1209  00FD3A  72                 	db	114	;'r'
  1210  00FD3B  6F                 	db	111	;'o'
  1211  00FD3C  70                 	db	112	;'p'
  1212  00FD3D  68                 	db	104	;'h'
  1213  00FD3E  6F                 	db	111	;'o'
  1214  00FD3F  6E                 	db	110	;'n'
  1215  00FD40  65                 	db	101	;'e'
  1216  00FD41  20                 	db	32
  1217  00FD42  3D                 	db	61	;'='
  1218  00FD43  3E                 	db	62	;'>'
  1219  00FD44  20                 	db	32
  1220  00FD45  53                 	db	83	;'S'
  1221  00FD46  44                 	db	68	;'D'
  1222  00FD47  20                 	db	32
  1223  00FD48  63                 	db	99	;'c'
  1224  00FD49  61                 	db	97	;'a'
  1225  00FD4A  72                 	db	114	;'r'
  1226  00FD4B  64                 	db	100	;'d'
  1227  00FD4C  20                 	db	32
  1228  00FD4D  61                 	db	97	;'a'
  1229  00FD4E  74                 	db	116	;'t'
  1230  00FD4F  20                 	db	32
  1231  00FD50  31                 	db	49	;'1'
  1232  00FD51  36                 	db	54	;'6'
  1233  00FD52  30                 	db	48	;'0'
  1234  00FD53  30                 	db	48	;'0'
  1235  00FD54  20                 	db	32
  1236  00FD55  75                 	db	117	;'u'
  1237  00FD56  73                 	db	115	;'s'
  1238  00FD57  0D                 	db	13
  1239  00FD58  0A                 	db	10
  1240  00FD59  00                 	db	0
  1241  00FD5A                     STR_39:
  1242  00FD5A  57                 	db	87	;'W'
  1243  00FD5B  72                 	db	114	;'r'
  1244  00FD5C  69                 	db	105	;'i'
  1245  00FD5D  74                 	db	116	;'t'
  1246  00FD5E  65                 	db	101	;'e'
  1247  00FD5F  20                 	db	32
  1248  00FD60  62                 	db	98	;'b'
  1249  00FD61  6C                 	db	108	;'l'
  1250  00FD62  6F                 	db	111	;'o'
  1251  00FD63  63                 	db	99	;'c'
  1252  00FD64  6B                 	db	107	;'k'
  1253  00FD65  20                 	db	32
  1254  00FD66  6F                 	db	111	;'o'
  1255  00FD67  66                 	db	102	;'f'
  1256  00FD68  20                 	db	32
  1257  00FD69  64                 	db	100	;'d'
  1258  00FD6A  65                 	db	101	;'e'
  1259  00FD6B  63                 	db	99	;'c'
  1260  00FD6C  72                 	db	114	;'r'
  1261  00FD6D  65                 	db	101	;'e'
  1262  00FD6E  6D                 	db	109	;'m'
  1263  00FD6F  65                 	db	101	;'e'
  1264  00FD70  6E                 	db	110	;'n'
  1265  00FD71  74                 	db	116	;'t'
  1266  00FD72  65                 	db	101	;'e'
  1267  00FD73  64                 	db	100	;'d'
  1268  00FD74  20                 	db	32
  1269  00FD75  38                 	db	56	;'8'
  1270  00FD76  2D                 	db	45
  1271  00FD77  62                 	db	98	;'b'
  1272  00FD78  69                 	db	105	;'i'
  1273  00FD79  74                 	db	116	;'t'
  1274  00FD7A  20                 	db	32
  1275  00FD7B  76                 	db	118	;'v'
  1276  00FD7C  61                 	db	97	;'a'
  1277  00FD7D  6C                 	db	108	;'l'
  1278  00FD7E  75                 	db	117	;'u'
  1279  00FD7F  65                 	db	101	;'e'
  1280  00FD80  73                 	db	115	;'s'
  1281  00FD81  3A                 	db	58	;':'
  1282  00FD82  0D                 	db	13
  1283  00FD83  0A                 	db	10
  1284  00FD84  00                 	db	0
  1285  00FD85                     STR_20:
  1286  00FD85  72                 	db	114	;'r'
  1287  00FD86  3A                 	db	58	;':'
  1288  00FD87  20                 	db	32
  1289  00FD88  72                 	db	114	;'r'
  1290  00FD89  65                 	db	101	;'e'
  1291  00FD8A  61                 	db	97	;'a'
  1292  00FD8B  64                 	db	100	;'d'
  1293  00FD8C  20                 	db	32
  1294  00FD8D  61                 	db	97	;'a'
  1295  00FD8E  20                 	db	32
  1296  00FD8F  62                 	db	98	;'b'
  1297  00FD90  6C                 	db	108	;'l'
  1298  00FD91  6F                 	db	111	;'o'
  1299  00FD92  63                 	db	99	;'c'
  1300  00FD93  6B                 	db	107	;'k'
  1301  00FD94  20                 	db	32
  1302  00FD95  6F                 	db	111	;'o'
  1303  00FD96  66                 	db	102	;'f'
  1304  00FD97  20                 	db	32
  1305  00FD98  25                 	db	37
  1306  00FD99  64                 	db	100	;'d'
  1307  00FD9A  20                 	db	32
  1308  00FD9B  62                 	db	98	;'b'
  1309  00FD9C  79                 	db	121	;'y'
  1310  00FD9D  74                 	db	116	;'t'
  1311  00FD9E  65                 	db	101	;'e'
  1312  00FD9F  73                 	db	115	;'s'
  1313  00FDA0  20                 	db	32
  1314  00FDA1  66                 	db	102	;'f'
  1315  00FDA2  72                 	db	114	;'r'
  1316  00FDA3  6F                 	db	111	;'o'
  1317  00FDA4  6D                 	db	109	;'m'
  1318  00FDA5  20                 	db	32
  1319  00FDA6  53                 	db	83	;'S'
  1320  00FDA7  44                 	db	68	;'D'
  1321  00FDA8  20                 	db	32
  1322  00FDA9  63                 	db	99	;'c'
  1323  00FDAA  61                 	db	97	;'a'
  1324  00FDAB  72                 	db	114	;'r'
  1325  00FDAC  64                 	db	100	;'d'
  1326  00FDAD  0D                 	db	13
  1327  00FDAE  0A                 	db	10
  1328  00FDAF  00                 	db	0
  1329  00FDB0                     STR_4:
  1330  00FDB0  4E                 	db	78	;'N'
  1331  00FDB1  6F                 	db	111	;'o'
  1332  00FDB2  20                 	db	32
  1333  00FDB3  63                 	db	99	;'c'
  1334  00FDB4  6F                 	db	111	;'o'
  1335  00FDB5  6E                 	db	110	;'n'
  1336  00FDB6  66                 	db	102	;'f'
  1337  00FDB7  69                 	db	105	;'i'
  1338  00FDB8  67                 	db	103	;'g'
  1339  00FDB9  75                 	db	117	;'u'
  1340  00FDBA  72                 	db	114	;'r'
  1341  00FDBB  61                 	db	97	;'a'
  1342  00FDBC  74                 	db	116	;'t'
  1343  00FDBD  69                 	db	105	;'i'
  1344  00FDBE  6F                 	db	111	;'o'
  1345  00FDBF  6E                 	db	110	;'n'
  1346  00FDC0  20                 	db	32
  1347  00FDC1  6F                 	db	111	;'o'
  1348  00FDC2  66                 	db	102	;'f'
  1349  00FDC3  20                 	db	32
  1350  00FDC4  64                 	db	100	;'d'
  1351  00FDC5  65                 	db	101	;'e'
  1352  00FDC6  76                 	db	118	;'v'
  1353  00FDC7  65                 	db	101	;'e'
  1354  00FDC8  6C                 	db	108	;'l'
  1355  00FDC9  6F                 	db	111	;'o'
  1356  00FDCA  70                 	db	112	;'p'
  1357  00FDCB  6D                 	db	109	;'m'
  1358  00FDCC  65                 	db	101	;'e'
  1359  00FDCD  6E                 	db	110	;'n'
  1360  00FDCE  74                 	db	116	;'t'
  1361  00FDCF  20                 	db	32
  1362  00FDD0  62                 	db	98	;'b'
  1363  00FDD1  6F                 	db	111	;'o'
  1364  00FDD2  61                 	db	97	;'a'
  1365  00FDD3  72                 	db	114	;'r'
  1366  00FDD4  64                 	db	100	;'d'
  1367  00FDD5  0D                 	db	13
  1368  00FDD6  0A                 	db	10
  1369  00FDD7  3E                 	db	62	;'>'
  1370  00FDD8  20                 	db	32
  1371  00FDD9  00                 	db	0
  1372  00FDDA                     STR_19:
  1373  00FDDA  61                 	db	97	;'a'
  1374  00FDDB  2F                 	db	47
  1375  00FDDC  41                 	db	65	;'A'
  1376  00FDDD  20                 	db	32
  1377  00FDDE  64                 	db	100	;'d'
  1378  00FDDF  65                 	db	101	;'e'
  1379  00FDE0  63                 	db	99	;'c'
  1380  00FDE1  72                 	db	114	;'r'
  1381  00FDE2  65                 	db	101	;'e'
  1382  00FDE3  61                 	db	97	;'a'
  1383  00FDE4  73                 	db	115	;'s'
  1384  00FDE5  65                 	db	101	;'e'
  1385  00FDE6  2F                 	db	47
  1386  00FDE7  69                 	db	105	;'i'
  1387  00FDE8  6E                 	db	110	;'n'
  1388  00FDE9  63                 	db	99	;'c'
  1389  00FDEA  72                 	db	114	;'r'
  1390  00FDEB  65                 	db	101	;'e'
  1391  00FDEC  61                 	db	97	;'a'
  1392  00FDED  73                 	db	115	;'s'
  1393  00FDEE  65                 	db	101	;'e'
  1394  00FDEF  20                 	db	32
  1395  00FDF0  72                 	db	114	;'r'
  1396  00FDF1  65                 	db	101	;'e'
  1397  00FDF2  61                 	db	97	;'a'
  1398  00FDF3  64                 	db	100	;'d'
  1399  00FDF4  20                 	db	32
  1400  00FDF5  61                 	db	97	;'a'
  1401  00FDF6  64                 	db	100	;'d'
  1402  00FDF7  64                 	db	100	;'d'
  1403  00FDF8  72                 	db	114	;'r'
  1404  00FDF9  65                 	db	101	;'e'
  1405  00FDFA  73                 	db	115	;'s'
  1406  00FDFB  73                 	db	115	;'s'
  1407  00FDFC  0D                 	db	13
  1408  00FDFD  0A                 	db	10
  1409  00FDFE  00                 	db	0
  1410  00FDFF                     STR_25:
  1411  00FDFF  73                 	db	115	;'s'
  1412  00FE00  3A                 	db	58	;':'
  1413  00FE01  20                 	db	32
  1414  00FE02  73                 	db	115	;'s'
  1415  00FE03  70                 	db	112	;'p'
  1416  00FE04  6F                 	db	111	;'o'
  1417  00FE05  6F                 	db	111	;'o'
  1418  00FE06  6C                 	db	108	;'l'
  1419  00FE07  20                 	db	32
  1420  00FE08  6D                 	db	109	;'m'
  1421  00FE09  65                 	db	101	;'e'
  1422  00FE0A  6D                 	db	109	;'m'
  1423  00FE0B  6F                 	db	111	;'o'
  1424  00FE0C  72                 	db	114	;'r'
  1425  00FE0D  79                 	db	121	;'y'
  1426  00FE0E  20                 	db	32
  1427  00FE0F  74                 	db	116	;'t'
  1428  00FE10  6F                 	db	111	;'o'
  1429  00FE11  20                 	db	32
  1430  00FE12  61                 	db	97	;'a'
  1431  00FE13  20                 	db	32
  1432  00FE14  63                 	db	99	;'c'
  1433  00FE15  73                 	db	115	;'s'
  1434  00FE16  76                 	db	118	;'v'
  1435  00FE17  20                 	db	32
  1436  00FE18  66                 	db	102	;'f'
  1437  00FE19  69                 	db	105	;'i'
  1438  00FE1A  6C                 	db	108	;'l'
  1439  00FE1B  65                 	db	101	;'e'
  1440  00FE1C  0D                 	db	13
  1441  00FE1D  0A                 	db	10
  1442  00FE1E  00                 	db	0
  1443  00FE1F                     STR_30:
  1444  00FE1F  55                 	db	85	;'U'
  1445  00FE20  6E                 	db	110	;'n'
  1446  00FE21  64                 	db	100	;'d'
  1447  00FE22  65                 	db	101	;'e'
  1448  00FE23  72                 	db	114	;'r'
  1449  00FE24  66                 	db	102	;'f'
  1450  00FE25  6C                 	db	108	;'l'
  1451  00FE26  6F                 	db	111	;'o'
  1452  00FE27  77                 	db	119	;'w'
  1453  00FE28  65                 	db	101	;'e'
  1454  00FE29  64                 	db	100	;'d'
  1455  00FE2A  20                 	db	32
  1456  00FE2B  74                 	db	116	;'t'
  1457  00FE2C  6F                 	db	111	;'o'
  1458  00FE2D  20                 	db	32
  1459  00FE2E  68                 	db	104	;'h'
  1460  00FE2F  69                 	db	105	;'i'
  1461  00FE30  67                 	db	103	;'g'
  1462  00FE31  68                 	db	104	;'h'
  1463  00FE32  20                 	db	32
  1464  00FE33  61                 	db	97	;'a'
  1465  00FE34  64                 	db	100	;'d'
  1466  00FE35  64                 	db	100	;'d'
  1467  00FE36  72                 	db	114	;'r'
  1468  00FE37  65                 	db	101	;'e'
  1469  00FE38  73                 	db	115	;'s'
  1470  00FE39  73                 	db	115	;'s'
  1471  00FE3A  0D                 	db	13
  1472  00FE3B  0A                 	db	10
  1473  00FE3C  00                 	db	0
  1474  00FE3D                     STR_54:
  1475  00FE3D  54                 	db	84	;'T'
  1476  00FE3E  68                 	db	104	;'h'
  1477  00FE3F  65                 	db	101	;'e'
  1478  00FE40  20                 	db	32
  1479  00FE41  73                 	db	115	;'s'
  1480  00FE42  61                 	db	97	;'a'
  1481  00FE43  6D                 	db	109	;'m'
  1482  00FE44  70                 	db	112	;'p'
  1483  00FE45  6C                 	db	108	;'l'
  1484  00FE46  69                 	db	105	;'i'
  1485  00FE47  6E                 	db	110	;'n'
  1486  00FE48  67                 	db	103	;'g'
  1487  00FE49  20                 	db	32
  1488  00FE4A  72                 	db	114	;'r'
  1489  00FE4B  61                 	db	97	;'a'
  1490  00FE4C  74                 	db	116	;'t'
  1491  00FE4D  65                 	db	101	;'e'
  1492  00FE4E  20                 	db	32
  1493  00FE4F  69                 	db	105	;'i'
  1494  00FE50  73                 	db	115	;'s'
  1495  00FE51  20                 	db	32
  1496  00FE52  25                 	db	37
  1497  00FE53  75                 	db	117	;'u'
  1498  00FE54  20                 	db	32
  1499  00FE55  75                 	db	117	;'u'
  1500  00FE56  73                 	db	115	;'s'
  1501  00FE57  0D                 	db	13
  1502  00FE58  0A                 	db	10
  1503  00FE59  00                 	db	0
  1504  00FE5A                     STR_63:
  1505  00FE5A  42                 	db	66	;'B'
  1506  00FE5B  6C                 	db	108	;'l'
  1507  00FE5C  6F                 	db	111	;'o'
  1508  00FE5D  63                 	db	99	;'c'
  1509  00FE5E  6B                 	db	107	;'k'
  1510  00FE5F  20                 	db	32
  1511  00FE60  4C                 	db	76	;'L'
  1512  00FE61  65                 	db	101	;'e'
  1513  00FE62  6E                 	db	110	;'n'
  1514  00FE63  67                 	db	103	;'g'
  1515  00FE64  74                 	db	116	;'t'
  1516  00FE65  68                 	db	104	;'h'
  1517  00FE66  20                 	db	32
  1518  00FE67  52                 	db	82	;'R'
  1519  00FE68  65                 	db	101	;'e'
  1520  00FE69  73                 	db	115	;'s'
  1521  00FE6A  70                 	db	112	;'p'
  1522  00FE6B  6F                 	db	111	;'o'
  1523  00FE6C  6E                 	db	110	;'n'
  1524  00FE6D  73                 	db	115	;'s'
  1525  00FE6E  65                 	db	101	;'e'
  1526  00FE6F  3A                 	db	58	;':'
  1527  00FE70  20                 	db	32
  1528  00FE71  25                 	db	37
  1529  00FE72  78                 	db	120	;'x'
  1530  00FE73  0D                 	db	13
  1531  00FE74  0A                 	db	10
  1532  00FE75  00                 	db	0
  1533  00FE76                     STR_32:
  1534  00FE76  4F                 	db	79	;'O'
  1535  00FE77  76                 	db	118	;'v'
  1536  00FE78  65                 	db	101	;'e'
  1537  00FE79  72                 	db	114	;'r'
  1538  00FE7A  66                 	db	102	;'f'
  1539  00FE7B  6C                 	db	108	;'l'
  1540  00FE7C  6F                 	db	111	;'o'
  1541  00FE7D  77                 	db	119	;'w'
  1542  00FE7E  65                 	db	101	;'e'
  1543  00FE7F  64                 	db	100	;'d'
  1544  00FE80  20                 	db	32
  1545  00FE81  74                 	db	116	;'t'
  1546  00FE82  6F                 	db	111	;'o'
  1547  00FE83  20                 	db	32
  1548  00FE84  6C                 	db	108	;'l'
  1549  00FE85  6F                 	db	111	;'o'
  1550  00FE86  77                 	db	119	;'w'
  1551  00FE87  20                 	db	32
  1552  00FE88  61                 	db	97	;'a'
  1553  00FE89  64                 	db	100	;'d'
  1554  00FE8A  64                 	db	100	;'d'
  1555  00FE8B  72                 	db	114	;'r'
  1556  00FE8C  65                 	db	101	;'e'
  1557  00FE8D  73                 	db	115	;'s'
  1558  00FE8E  73                 	db	115	;'s'
  1559  00FE8F  0D                 	db	13
  1560  00FE90  0A                 	db	10
  1561  00FE91  00                 	db	0
  1562  00FE92                     STR_61:
  1563  00FE92  43                 	db	67	;'C'
  1564  00FE93  4D                 	db	77	;'M'
  1565  00FE94  44                 	db	68	;'D'
  1566  00FE95  30                 	db	48	;'0'
  1567  00FE96  2C                 	db	44
  1568  00FE97  20                 	db	32
  1569  00FE98  52                 	db	82	;'R'
  1570  00FE99  65                 	db	101	;'e'
  1571  00FE9A  73                 	db	115	;'s'
  1572  00FE9B  65                 	db	101	;'e'
  1573  00FE9C  74                 	db	116	;'t'
  1574  00FE9D  20                 	db	32
  1575  00FE9E  52                 	db	82	;'R'
  1576  00FE9F  65                 	db	101	;'e'
  1577  00FEA0  73                 	db	115	;'s'
  1578  00FEA1  70                 	db	112	;'p'
  1579  00FEA2  6F                 	db	111	;'o'
  1580  00FEA3  6E                 	db	110	;'n'
  1581  00FEA4  73                 	db	115	;'s'
  1582  00FEA5  65                 	db	101	;'e'
  1583  00FEA6  3A                 	db	58	;':'
  1584  00FEA7  20                 	db	32
  1585  00FEA8  25                 	db	37
  1586  00FEA9  78                 	db	120	;'x'
  1587  00FEAA  0D                 	db	13
  1588  00FEAB  0A                 	db	10
  1589  00FEAC  00                 	db	0
  1590  00FEAD                     STR_62:
  1591  00FEAD  43                 	db	67	;'C'
  1592  00FEAE  4D                 	db	77	;'M'
  1593  00FEAF  44                 	db	68	;'D'
  1594  00FEB0  31                 	db	49	;'1'
  1595  00FEB1  2C                 	db	44
  1596  00FEB2  20                 	db	32
  1597  00FEB3  49                 	db	73	;'I'
  1598  00FEB4  6E                 	db	110	;'n'
  1599  00FEB5  69                 	db	105	;'i'
  1600  00FEB6  74                 	db	116	;'t'
  1601  00FEB7  20                 	db	32
  1602  00FEB8  52                 	db	82	;'R'
  1603  00FEB9  65                 	db	101	;'e'
  1604  00FEBA  73                 	db	115	;'s'
  1605  00FEBB  70                 	db	112	;'p'
  1606  00FEBC  6F                 	db	111	;'o'
  1607  00FEBD  6E                 	db	110	;'n'
  1608  00FEBE  73                 	db	115	;'s'
  1609  00FEBF  65                 	db	101	;'e'
  1610  00FEC0  3A                 	db	58	;':'
  1611  00FEC1  20                 	db	32
  1612  00FEC2  25                 	db	37
  1613  00FEC3  78                 	db	120	;'x'
  1614  00FEC4  0D                 	db	13
  1615  00FEC5  0A                 	db	10
  1616  00FEC6  00                 	db	0
  1617  00FEC7                     STR_17:
  1618  00FEC7  69                 	db	105	;'i'
  1619  00FEC8  3A                 	db	58	;':'
  1620  00FEC9  20                 	db	32
  1621  00FECA  49                 	db	73	;'I'
  1622  00FECB  6E                 	db	110	;'n'
  1623  00FECC  69                 	db	105	;'i'
  1624  00FECD  74                 	db	116	;'t'
  1625  00FECE  69                 	db	105	;'i'
  1626  00FECF  61                 	db	97	;'a'
  1627  00FED0  6C                 	db	108	;'l'
  1628  00FED1  69                 	db	105	;'i'
  1629  00FED2  7A                 	db	122	;'z'
  1630  00FED3  65                 	db	101	;'e'
  1631  00FED4  20                 	db	32
  1632  00FED5  53                 	db	83	;'S'
  1633  00FED6  44                 	db	68	;'D'
  1634  00FED7  20                 	db	32
  1635  00FED8  63                 	db	99	;'c'
  1636  00FED9  61                 	db	97	;'a'
  1637  00FEDA  72                 	db	114	;'r'
  1638  00FEDB  64                 	db	100	;'d'
  1639  00FEDC  0D                 	db	13
  1640  00FEDD  0A                 	db	10
  1641  00FEDE  00                 	db	0
  1642  00FEDF                     STR_15:
  1643  00FEDF  7A                 	db	122	;'z'
  1644  00FEE0  3A                 	db	58	;':'
  1645  00FEE1  20                 	db	32
  1646  00FEE2  43                 	db	67	;'C'
  1647  00FEE3  6C                 	db	108	;'l'
  1648  00FEE4  65                 	db	101	;'e'
  1649  00FEE5  61                 	db	97	;'a'
  1650  00FEE6  72                 	db	114	;'r'
  1651  00FEE7  20                 	db	32
  1652  00FEE8  74                 	db	116	;'t'
  1653  00FEE9  68                 	db	104	;'h'
  1654  00FEEA  65                 	db	101	;'e'
  1655  00FEEB  20                 	db	32
  1656  00FEEC  74                 	db	116	;'t'
  1657  00FEED  65                 	db	101	;'e'
  1658  00FEEE  72                 	db	114	;'r'
  1659  00FEEF  6D                 	db	109	;'m'
  1660  00FEF0  69                 	db	105	;'i'
  1661  00FEF1  6E                 	db	110	;'n'
  1662  00FEF2  61                 	db	97	;'a'
  1663  00FEF3  6C                 	db	108	;'l'
  1664  00FEF4  0D                 	db	13
  1665  00FEF5  0A                 	db	10
  1666  00FEF6  00                 	db	0
  1667  00FEF7                     STR_45:
  1668  00FEF7  20                 	db	32
  1669  00FEF8  20                 	db	32
  1670  00FEF9  20                 	db	32
  1671  00FEFA  20                 	db	32
  1672  00FEFB  53                 	db	83	;'S'
  1673  00FEFC  74                 	db	116	;'t'
  1674  00FEFD  61                 	db	97	;'a'
  1675  00FEFE  74                 	db	116	;'t'
  1676  00FEFF  75                 	db	117	;'u'
  1677  00FF00  73                 	db	115	;'s'
  1678  00FF01  3A                 	db	58	;':'
  1679  00FF02  20                 	db	32
  1680  00FF03  20                 	db	32
  1681  00FF04  20                 	db	32
  1682  00FF05  20                 	db	32
  1683  00FF06  20                 	db	32
  1684  00FF07  25                 	db	37
  1685  00FF08  30                 	db	48	;'0'
  1686  00FF09  32                 	db	50	;'2'
  1687  00FF0A  78                 	db	120	;'x'
  1688  00FF0B  0D                 	db	13
  1689  00FF0C  0A                 	db	10
  1690  00FF0D  00                 	db	0
  1691  00FF0E                     STR_14:
  1692  00FF0E  5A                 	db	90	;'Z'
  1693  00FF0F  3A                 	db	58	;':'
  1694  00FF10  20                 	db	32
  1695  00FF11  52                 	db	82	;'R'
  1696  00FF12  65                 	db	101	;'e'
  1697  00FF13  73                 	db	115	;'s'
  1698  00FF14  65                 	db	101	;'e'
  1699  00FF15  74                 	db	116	;'t'
  1700  00FF16  20                 	db	32
  1701  00FF17  70                 	db	112	;'p'
  1702  00FF18  72                 	db	114	;'r'
  1703  00FF19  6F                 	db	111	;'o'
  1704  00FF1A  63                 	db	99	;'c'
  1705  00FF1B  65                 	db	101	;'e'
  1706  00FF1C  73                 	db	115	;'s'
  1707  00FF1D  73                 	db	115	;'s'
  1708  00FF1E  6F                 	db	111	;'o'
  1709  00FF1F  72                 	db	114	;'r'
  1710  00FF20  0D                 	db	13
  1711  00FF21  0A                 	db	10
  1712  00FF22  00                 	db	0
  1713  00FF23                     STR_31:
  1714  00FF23  44                 	db	68	;'D'
  1715  00FF24  65                 	db	101	;'e'
  1716  00FF25  63                 	db	99	;'c'
  1717  00FF26  72                 	db	114	;'r'
  1718  00FF27  65                 	db	101	;'e'
  1719  00FF28  61                 	db	97	;'a'
  1720  00FF29  73                 	db	115	;'s'
  1721  00FF2A  65                 	db	101	;'e'
  1722  00FF2B  64                 	db	100	;'d'
  1723  00FF2C  20                 	db	32
  1724  00FF2D  61                 	db	97	;'a'
  1725  00FF2E  64                 	db	100	;'d'
  1726  00FF2F  64                 	db	100	;'d'
  1727  00FF30  72                 	db	114	;'r'
  1728  00FF31  65                 	db	101	;'e'
  1729  00FF32  73                 	db	115	;'s'
  1730  00FF33  73                 	db	115	;'s'
  1731  00FF34  0D                 	db	13
  1732  00FF35  0A                 	db	10
  1733  00FF36  00                 	db	0
  1734  00FF37                     STR_33:
  1735  00FF37  49                 	db	73	;'I'
  1736  00FF38  6E                 	db	110	;'n'
  1737  00FF39  63                 	db	99	;'c'
  1738  00FF3A  72                 	db	114	;'r'
  1739  00FF3B  65                 	db	101	;'e'
  1740  00FF3C  61                 	db	97	;'a'
  1741  00FF3D  73                 	db	115	;'s'
  1742  00FF3E  65                 	db	101	;'e'
  1743  00FF3F  64                 	db	100	;'d'
  1744  00FF40  20                 	db	32
  1745  00FF41  61                 	db	97	;'a'
  1746  00FF42  64                 	db	100	;'d'
  1747  00FF43  64                 	db	100	;'d'
  1748  00FF44  72                 	db	114	;'r'
  1749  00FF45  65                 	db	101	;'e'
  1750  00FF46  73                 	db	115	;'s'
  1751  00FF47  73                 	db	115	;'s'
  1752  00FF48  0D                 	db	13
  1753  00FF49  0A                 	db	10
  1754  00FF4A  00                 	db	0
  1755  00FF4B                     STR_6:
  1756  00FF4B  53                 	db	83	;'S'
  1757  00FF4C  44                 	db	68	;'D'
  1758  00FF4D  20                 	db	32
  1759  00FF4E  63                 	db	99	;'c'
  1760  00FF4F  61                 	db	97	;'a'
  1761  00FF50  72                 	db	114	;'r'
  1762  00FF51  64                 	db	100	;'d'
  1763  00FF52  20                 	db	32
  1764  00FF53  61                 	db	97	;'a'
  1765  00FF54  64                 	db	100	;'d'
  1766  00FF55  64                 	db	100	;'d'
  1767  00FF56  72                 	db	114	;'r'
  1768  00FF57  65                 	db	101	;'e'
  1769  00FF58  73                 	db	115	;'s'
  1770  00FF59  73                 	db	115	;'s'
  1771  00FF5A  3A                 	db	58	;':'
  1772  00FF5B  20                 	db	32
  1773  00FF5C  20                 	db	32
  1774  00FF5D  00                 	db	0
  1775  00FF5E                     STR_2:
  1776  00FF5E  53                 	db	83	;'S'
  1777  00FF5F  44                 	db	68	;'D'
  1778  00FF60  20                 	db	32
  1779  00FF61  63                 	db	99	;'c'
  1780  00FF62  61                 	db	97	;'a'
  1781  00FF63  72                 	db	114	;'r'
  1782  00FF64  64                 	db	100	;'d'
  1783  00FF65  20                 	db	32
  1784  00FF66  74                 	db	116	;'t'
  1785  00FF67  65                 	db	101	;'e'
  1786  00FF68  73                 	db	115	;'s'
  1787  00FF69  74                 	db	116	;'t'
  1788  00FF6A  69                 	db	105	;'i'
  1789  00FF6B  6E                 	db	110	;'n'
  1790  00FF6C  67                 	db	103	;'g'
  1791  00FF6D  0D                 	db	13
  1792  00FF6E  0A                 	db	10
  1793  00FF6F  00                 	db	0
  1794  00FF70                     STR_60:
  1795  00FF70  55                 	db	85	;'U'
  1796  00FF71  6E                 	db	110	;'n'
  1797  00FF72  6B                 	db	107	;'k'
  1798  00FF73  6E                 	db	110	;'n'
  1799  00FF74  6F                 	db	111	;'o'
  1800  00FF75  77                 	db	119	;'w'
  1801  00FF76  6E                 	db	110	;'n'
  1802  00FF77  20                 	db	32
  1803  00FF78  6B                 	db	107	;'k'
  1804  00FF79  65                 	db	101	;'e'
  1805  00FF7A  79                 	db	121	;'y'
  1806  00FF7B  20                 	db	32
  1807  00FF7C  25                 	db	37
  1808  00FF7D  63                 	db	99	;'c'
  1809  00FF7E  0D                 	db	13
  1810  00FF7F  0A                 	db	10
  1811  00FF80  00                 	db	0
  1812  00FF81                     STR_40:
  1813  00FF81  20                 	db	32
  1814  00FF82  20                 	db	32
  1815  00FF83  20                 	db	32
  1816  00FF84  20                 	db	32
  1817  00FF85  41                 	db	65	;'A'
  1818  00FF86  64                 	db	100	;'d'
  1819  00FF87  64                 	db	100	;'d'
  1820  00FF88  72                 	db	114	;'r'
  1821  00FF89  65                 	db	101	;'e'
  1822  00FF8A  73                 	db	115	;'s'
  1823  00FF8B  73                 	db	115	;'s'
  1824  00FF8C  3A                 	db	58	;':'
  1825  00FF8D  20                 	db	32
  1826  00FF8E  20                 	db	32
  1827  00FF8F  20                 	db	32
  1828  00FF90  20                 	db	32
  1829  00FF91  00                 	db	0
  1830  00FF92                     STR_53:
  1831  00FF92  57                 	db	87	;'W'
  1832  00FF93  72                 	db	114	;'r'
  1833  00FF94  69                 	db	105	;'i'
  1834  00FF95  74                 	db	116	;'t'
  1835  00FF96  65                 	db	101	;'e'
  1836  00FF97  20                 	db	32
  1837  00FF98  73                 	db	115	;'s'
  1838  00FF99  74                 	db	116	;'t'
  1839  00FF9A  6F                 	db	111	;'o'
  1840  00FF9B  70                 	db	112	;'p'
  1841  00FF9C  70                 	db	112	;'p'
  1842  00FF9D  65                 	db	101	;'e'
  1843  00FF9E  64                 	db	100	;'d'
  1844  00FF9F  0D                 	db	13
  1845  00FFA0  0A                 	db	10
  1846  00FFA1  00                 	db	0
  1847  00FFA2                     STR_46:
  1848  00FFA2  52                 	db	82	;'R'
  1849  00FFA3  65                 	db	101	;'e'
  1850  00FFA4  61                 	db	97	;'a'
  1851  00FFA5  64                 	db	100	;'d'
  1852  00FFA6  20                 	db	32
  1853  00FFA7  62                 	db	98	;'b'
  1854  00FFA8  6C                 	db	108	;'l'
  1855  00FFA9  6F                 	db	111	;'o'
  1856  00FFAA  63                 	db	99	;'c'
  1857  00FFAB  6B                 	db	107	;'k'
  1858  00FFAC  3A                 	db	58	;':'
  1859  00FFAD  20                 	db	32
  1860  00FFAE  0D                 	db	13
  1861  00FFAF  0A                 	db	10
  1862  00FFB0  00                 	db	0
  1863  00FFB1                     STR_12:
  1864  00FFB1  3F                 	db	63	;'?'
  1865  00FFB2  3A                 	db	58	;':'
  1866  00FFB3  20                 	db	32
  1867  00FFB4  68                 	db	104	;'h'
  1868  00FFB5  65                 	db	101	;'e'
  1869  00FFB6  6C                 	db	108	;'l'
  1870  00FFB7  70                 	db	112	;'p'
  1871  00FFB8  20                 	db	32
  1872  00FFB9  6D                 	db	109	;'m'
  1873  00FFBA  65                 	db	101	;'e'
  1874  00FFBB  6E                 	db	110	;'n'
  1875  00FFBC  75                 	db	117	;'u'
  1876  00FFBD  0D                 	db	13
  1877  00FFBE  0A                 	db	10
  1878  00FFBF  00                 	db	0
  1879  00FFC0                     STR_1:
  1880  00FFC0  69                 	db	105	;'i'
  1881  00FFC1  6E                 	db	110	;'n'
  1882  00FFC2  4C                 	db	76	;'L'
  1883  00FFC3  61                 	db	97	;'a'
  1884  00FFC4  62                 	db	98	;'b'
  1885  00FFC5  20                 	db	32
  1886  00FFC6  30                 	db	48	;'0'
  1887  00FFC7  39                 	db	57	;'9'
  1888  00FFC8  0D                 	db	13
  1889  00FFC9  0A                 	db	10
  1890  00FFCA  00                 	db	0
  1891  00FFCB                     STR_3:
  1892  00FFCB  44                 	db	68	;'D'
  1893  00FFCC  65                 	db	101	;'e'
  1894  00FFCD  76                 	db	118	;'v'
  1895  00FFCE  27                 	db	39
  1896  00FFCF  32                 	db	50	;'2'
  1897  00FFD0  31                 	db	49	;'1'
  1898  00FFD1  0D                 	db	13
  1899  00FFD2  0A                 	db	10
  1900  00FFD3  00                 	db	0
  1901  00FFD4                     STR_27:
  1902  00FFD4  6F                 	db	111	;'o'
  1903  00FFD5  3A                 	db	58	;':'
  1904  00FFD6  09                 	db	9
  1905  00FFD7  6F                 	db	111	;'o'
  1906  00FFD8  6B                 	db	107	;'k'
  1907  00FFD9  0D                 	db	13
  1908  00FFDA  0A                 	db	10
  1909  00FFDB  00                 	db	0
  1910  00FFDC                     STR_13:
  1911  00FFDC  6F                 	db	111	;'o'
  1912  00FFDD  3A                 	db	58	;':'
  1913  00FFDE  20                 	db	32
  1914  00FFDF  6B                 	db	107	;'k'
  1915  00FFE0  0D                 	db	13
  1916  00FFE1  0A                 	db	10
  1917  00FFE2  00                 	db	0
  1918  00FFE3                     STR_70:
  1919  00FFE3  25                 	db	37
  1920  00FFE4  30                 	db	48	;'0'
  1921  00FFE5  32                 	db	50	;'2'
  1922  00FFE6  78                 	db	120	;'x'
  1923  00FFE7  20                 	db	32
  1924  00FFE8  00                 	db	0
  1925  00FFE9                     STR_58:
  1926  00FFE9  25                 	db	37
  1927  00FFEA  64                 	db	100	;'d'
  1928  00FFEB  0D                 	db	13
  1929  00FFEC  0A                 	db	10
  1930  00FFED  00                 	db	0
  1931  00FFEE                     STR_7:
  1932  00FFEE  25                 	db	37
  1933  00FFEF  30                 	db	48	;'0'
  1934  00FFF0  34                 	db	52	;'4'
  1935  00FFF1  78                 	db	120	;'x'
  1936  00FFF2  00                 	db	0
  1937  00FFF3                     STR_64:
  1938  00FFF3  0D                 	db	13
  1939  00FFF4  0A                 	db	10
  1940  00FFF5  0A                 	db	10
  1941  00FFF6  00                 	db	0
  1942  00FFF7                     STR_68:
  1943  00FFF7  25                 	db	37
  1944  00FFF8  63                 	db	99	;'c'
  1945  00FFF9  00                 	db	0
  1946  00FFFA                     STR_67:
  1947  00FFFA  2E                 	db	46
  1948  00FFFB  00                 	db	0
  1949  00FFFC                     STR_8:
  1950  00FFFC  3A                 	db	58	;':'
  1951  00FFFD  00                 	db	0
  1952  00FFFE  00                 	db	0	; dummy byte at the end
  1953  0000                     
  1954                           ; #config settings
  1955                           
  1956                           	psect	cinit
  1957  0027B8                     __pcinit:
  1958                           	callstack 0
  1959  0027B8                     start_initialization:
  1960                           	callstack 0
  1961  0027B8                     __initialization:
  1962                           	callstack 0
  1963                           
  1964                           ; Initialize objects allocated to BANK0 (2 bytes)
  1965                           ; load TBLPTR registers with __pidataBANK0
  1966  0027B8  0E22               	movlw	low __pidataBANK0
  1967  0027BA  6EF6               	movwf	tblptrl,c
  1968  0027BC  0E2C               	movlw	high __pidataBANK0
  1969  0027BE  6EF7               	movwf	tblptrh,c
  1970  0027C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1971  0027C2  6EF8               	movwf	tblptru,c
  1972  0027C4  0009               	tblrd		*+	;fetch initializer
  1973  0027C6  CFF5 F0F2          	movff	tablat,__pdataBANK0
  1974  0027CA  0009               	tblrd		*+	;fetch initializer
  1975  0027CC  CFF5 F0F3          	movff	tablat,__pdataBANK0+1
  1976                           
  1977                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1978  0027D0  EE00  F0F4         	lfsr	0,__pbssBIGRAM
  1979  0027D4  EE14 F000          	lfsr	1,1024
  1980  0027D8                     clear_0:
  1981  0027D8  6AEE               	clrf	postinc0,c
  1982  0027DA  50E5               	movf	postdec1,w,c
  1983  0027DC  50E1               	movf	fsr1l,w,c
  1984  0027DE  E1FC               	bnz	clear_0
  1985  0027E0  50E2               	movf	fsr1h,w,c
  1986  0027E2  E1FA               	bnz	clear_0
  1987                           
  1988                           ; Clear objects allocated to BANK0 (40 bytes)
  1989  0027E4  EE00  F0CA         	lfsr	0,__pbssBANK0
  1990  0027E8  0E28               	movlw	40
  1991  0027EA                     clear_1:
  1992  0027EA  6AEE               	clrf	postinc0,c
  1993  0027EC  06E8               	decf	wreg,f,c
  1994  0027EE  E1FD               	bnz	clear_1
  1995                           
  1996                           ; Clear objects allocated to COMRAM (17 bytes)
  1997  0027F0  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1998  0027F4  0E11               	movlw	17
  1999  0027F6                     clear_2:
  2000  0027F6  6AEE               	clrf	postinc0,c
  2001  0027F8  06E8               	decf	wreg,f,c
  2002  0027FA  E1FD               	bnz	clear_2
  2003  0027FC                     end_of_initialization:
  2004                           	callstack 0
  2005  0027FC                     __end_of__initialization:
  2006                           	callstack 0
  2007  0027FC  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2008  0027FE  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2009  002800  0100               	movlb	0
  2010  002802  EF29  F000         	goto	_main	;jump to C main() function
  2011                           
  2012                           	psect	bssCOMRAM
  2013  00003C                     __pbssCOMRAM:
  2014                           	callstack 0
  2015  00003C                     _width:
  2016                           	callstack 0
  2017  00003C                     	ds	2
  2018  00003E                     _prec:
  2019                           	callstack 0
  2020  00003E                     	ds	2
  2021  000040                     _flags:
  2022                           	callstack 0
  2023  000040                     	ds	2
  2024  000042                     _EUSART1_FramingErrorHandler:
  2025                           	callstack 0
  2026  000042                     	ds	2
  2027  000044                     _bufferIdx:
  2028                           	callstack 0
  2029  000044                     	ds	2
  2030  000046                     _timer0ReloadVal:
  2031                           	callstack 0
  2032  000046                     	ds	2
  2033  000048                     _TMR0_InterruptHandler:
  2034                           	callstack 0
  2035  000048                     	ds	2
  2036  00004A                     _eusart1RxLastError:
  2037                           	callstack 0
  2038  00004A                     	ds	1
  2039  00004B                     _timerState:
  2040                           	callstack 0
  2041  00004B                     	ds	1
  2042  00004C                     _beginSampling:
  2043                           	callstack 0
  2044  00004C                     	ds	1
  2045                           
  2046                           	psect	bssBANK0
  2047  0000CA                     __pbssBANK0:
  2048                           	callstack 0
  2049  0000CA                     _nout:
  2050                           	callstack 0
  2051  0000CA                     	ds	2
  2052  0000CC                     _EUSART1_ErrorHandler:
  2053                           	callstack 0
  2054  0000CC                     	ds	2
  2055  0000CE                     _EUSART1_OverrunErrorHandler:
  2056                           	callstack 0
  2057  0000CE                     	ds	2
  2058  0000D0                     _redFull:
  2059                           	callstack 0
  2060  0000D0                     	ds	1
  2061  0000D1                     _blueFull:
  2062                           	callstack 0
  2063  0000D1                     	ds	1
  2064  0000D2                     _dbuf:
  2065                           	callstack 0
  2066  0000D2                     	ds	32
  2067                           
  2068                           	psect	dataBANK0
  2069  0000F2                     __pdataBANK0:
  2070                           	callstack 0
  2071  0000F2                     _sampleRate:
  2072                           	callstack 0
  2073  0000F2                     	ds	2
  2074                           
  2075                           	psect	bssBIGRAM
  2076  0000F4                     __pbssBIGRAM:
  2077                           	callstack 0
  2078  0000F4                     _redBuffer:
  2079                           	callstack 0
  2080  0000F4                     	ds	512
  2081  0002F4                     _blueBuffer:
  2082                           	callstack 0
  2083  0002F4                     	ds	512
  2084                           
  2085                           	psect	cstackBANK0
  2086  000060                     __pcstackBANK0:
  2087                           	callstack 0
  2088  000060                     ??_dtoa:
  2089  000060                     ??_utoa:
  2090  000060                     ??_xtoa:
  2091                           
  2092                           ; 1 bytes @ 0x0
  2093  000060                     	ds	8
  2094  000068                     _dtoa$1744:
  2095                           	callstack 0
  2096  000068                     utoa@p:
  2097                           	callstack 0
  2098  000068                     _xtoa$1762:
  2099                           	callstack 0
  2100                           
  2101                           ; 2 bytes @ 0x8
  2102  000068                     	ds	2
  2103  00006A                     dtoa@p:
  2104                           	callstack 0
  2105  00006A                     utoa@w:
  2106                           	callstack 0
  2107  00006A                     _xtoa$1763:
  2108                           	callstack 0
  2109                           
  2110                           ; 2 bytes @ 0xA
  2111  00006A                     	ds	2
  2112  00006C                     dtoa@w:
  2113                           	callstack 0
  2114  00006C                     xtoa@p:
  2115                           	callstack 0
  2116  00006C                     utoa@n:
  2117                           	callstack 0
  2118                           
  2119                           ; 8 bytes @ 0xC
  2120  00006C                     	ds	2
  2121  00006E                     dtoa@s:
  2122                           	callstack 0
  2123  00006E                     xtoa@w:
  2124                           	callstack 0
  2125                           
  2126                           ; 2 bytes @ 0xE
  2127  00006E                     	ds	2
  2128  000070                     dtoa@n:
  2129                           	callstack 0
  2130  000070                     xtoa@n:
  2131                           	callstack 0
  2132                           
  2133                           ; 8 bytes @ 0x10
  2134  000070                     	ds	4
  2135  000074                     utoa@i:
  2136                           	callstack 0
  2137                           
  2138                           ; 2 bytes @ 0x14
  2139  000074                     	ds	4
  2140  000078                     dtoa@i:
  2141                           	callstack 0
  2142  000078                     xtoa@i:
  2143                           	callstack 0
  2144                           
  2145                           ; 2 bytes @ 0x18
  2146  000078                     	ds	2
  2147  00007A                     xtoa@c:
  2148                           	callstack 0
  2149                           
  2150                           ; 2 bytes @ 0x1A
  2151  00007A                     	ds	2
  2152  00007C                     ?_vfpfcnvrt:
  2153                           	callstack 0
  2154  00007C                     vfpfcnvrt@fp:
  2155                           	callstack 0
  2156                           
  2157                           ; 2 bytes @ 0x1C
  2158  00007C                     	ds	2
  2159  00007E                     vfpfcnvrt@fmt:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x1E
  2163  00007E                     	ds	2
  2164  000080                     vfpfcnvrt@ap:
  2165                           	callstack 0
  2166                           
  2167                           ; 2 bytes @ 0x20
  2168  000080                     	ds	2
  2169  000082                     ??_vfpfcnvrt:
  2170                           
  2171                           ; 1 bytes @ 0x22
  2172  000082                     	ds	4
  2173  000086                     vfpfcnvrt@ll:
  2174                           	callstack 0
  2175                           
  2176                           ; 8 bytes @ 0x26
  2177  000086                     	ds	8
  2178  00008E                     vfpfcnvrt@done:
  2179                           	callstack 0
  2180                           
  2181                           ; 2 bytes @ 0x2E
  2182  00008E                     	ds	2
  2183  000090                     _vfpfcnvrt$1777:
  2184                           	callstack 0
  2185                           
  2186                           ; 2 bytes @ 0x30
  2187  000090                     	ds	2
  2188  000092                     vfpfcnvrt@llu:
  2189                           	callstack 0
  2190                           
  2191                           ; 8 bytes @ 0x32
  2192  000092                     	ds	8
  2193  00009A                     vfpfcnvrt@c:
  2194                           	callstack 0
  2195                           
  2196                           ; 1 bytes @ 0x3A
  2197  00009A                     	ds	1
  2198  00009B                     ?_vfprintf:
  2199                           	callstack 0
  2200  00009B                     vfprintf@fp:
  2201                           	callstack 0
  2202                           
  2203                           ; 2 bytes @ 0x3B
  2204  00009B                     	ds	2
  2205  00009D                     vfprintf@fmt:
  2206                           	callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x3D
  2209  00009D                     	ds	2
  2210  00009F                     vfprintf@ap:
  2211                           	callstack 0
  2212                           
  2213                           ; 2 bytes @ 0x3F
  2214  00009F                     	ds	2
  2215  0000A1                     ?_printf:
  2216                           	callstack 0
  2217  0000A1                     printf@fmt:
  2218                           	callstack 0
  2219                           
  2220                           ; 2 bytes @ 0x41
  2221  0000A1                     	ds	8
  2222  0000A9                     printf@ap:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x49
  2226  0000A9                     	ds	2
  2227  0000AB                     SDCARD_Initialize@i:
  2228                           	callstack 0
  2229  0000AB                     hexDumpBuffer@sdCardBuffer:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x4B
  2233  0000AB                     	ds	2
  2234  0000AD                     ??_hexDumpBuffer:
  2235  0000AD                     SDCARD_Initialize@verbose:
  2236                           	callstack 0
  2237                           
  2238                           ; 1 bytes @ 0x4D
  2239  0000AD                     	ds	1
  2240  0000AE                     SDCARD_Initialize@response:
  2241                           	callstack 0
  2242                           
  2243                           ; 1 bytes @ 0x4E
  2244  0000AE                     	ds	1
  2245  0000AF                     hexDumpBuffer@j:
  2246                           	callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x4F
  2249  0000AF                     	ds	2
  2250  0000B1                     hexDumpBuffer@j_1205:
  2251                           	callstack 0
  2252                           
  2253                           ; 2 bytes @ 0x51
  2254  0000B1                     	ds	2
  2255  0000B3                     hexDumpBuffer@i:
  2256                           	callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x53
  2259  0000B3                     	ds	2
  2260  0000B5                     ??_main:
  2261                           
  2262                           ; 1 bytes @ 0x55
  2263  0000B5                     	ds	3
  2264  0000B8                     main@letter:
  2265                           	callstack 0
  2266                           
  2267                           ; 1 bytes @ 0x58
  2268  0000B8                     	ds	1
  2269  0000B9                     main@status:
  2270                           	callstack 0
  2271                           
  2272                           ; 1 bytes @ 0x59
  2273  0000B9                     	ds	1
  2274  0000BA                     main@waveIdx:
  2275                           	callstack 0
  2276                           
  2277                           ; 1 bytes @ 0x5A
  2278  0000BA                     	ds	1
  2279  0000BB                     main@cmd:
  2280                           	callstack 0
  2281                           
  2282                           ; 1 bytes @ 0x5B
  2283  0000BB                     	ds	1
  2284  0000BC                     main@i_751:
  2285                           	callstack 0
  2286                           
  2287                           ; 2 bytes @ 0x5C
  2288  0000BC                     	ds	2
  2289  0000BE                     main@bufIdx:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x5E
  2293  0000BE                     	ds	2
  2294  0000C0                     main@localAddress:
  2295                           	callstack 0
  2296                           
  2297                           ; 4 bytes @ 0x60
  2298  0000C0                     	ds	4
  2299  0000C4                     main@i:
  2300                           	callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x64
  2303  0000C4                     	ds	2
  2304  0000C6                     main@sdCardAddress:
  2305                           	callstack 0
  2306                           
  2307                           ; 4 bytes @ 0x66
  2308  0000C6                     	ds	4
  2309                           
  2310                           	psect	cstackCOMRAM
  2311  000001                     __pcstackCOMRAM:
  2312                           	callstack 0
  2313  000001                     ?_TMR0_ReadTimer:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x0
  2317  000001                     	ds	2
  2318  000003                     ??_TMR0_ReadTimer:
  2319                           
  2320                           ; 1 bytes @ 0x2
  2321  000003                     	ds	2
  2322  000005                     TMR0_ReadTimer@readVal:
  2323                           	callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x4
  2326  000005                     	ds	2
  2327  000007                     TMR0_ReadTimer@readValLow:
  2328                           	callstack 0
  2329                           
  2330                           ; 1 bytes @ 0x6
  2331  000007                     	ds	1
  2332  000008                     TMR0_ReadTimer@readValHigh:
  2333                           	callstack 0
  2334                           
  2335                           ; 1 bytes @ 0x7
  2336  000008                     	ds	1
  2337  000009                     i2TMR0_WriteTimer@timerVal:
  2338                           	callstack 0
  2339                           
  2340                           ; 2 bytes @ 0x8
  2341  000009                     	ds	2
  2342  00000B                     ??_myTMR0ISR:
  2343  00000B                     
  2344                           ; 1 bytes @ 0xA
  2345  00000B                     	ds	2
  2346  00000D                     myTMR0ISR@micReading:
  2347                           	callstack 0
  2348                           
  2349                           ; 1 bytes @ 0xC
  2350  00000D                     	ds	1
  2351  00000E                     ??_INTERRUPT_InterruptManager:
  2352                           
  2353                           ; 1 bytes @ 0xD
  2354  00000E                     	ds	4
  2355  000012                     ??_SPI2_Open:
  2356  000012                     ?_strlen:
  2357                           	callstack 0
  2358  000012                     ?_isupper:
  2359                           	callstack 0
  2360  000012                     ?_isalpha:
  2361                           	callstack 0
  2362  000012                     ?_isdigit:
  2363                           	callstack 0
  2364  000012                     ?_isspace:
  2365                           	callstack 0
  2366  000012                     ?_islower:
  2367                           	callstack 0
  2368  000012                     ?___wmul:
  2369                           	callstack 0
  2370  000012                     ?___awmod:
  2371                           	callstack 0
  2372  000012                     ?___aodiv:
  2373                           	callstack 0
  2374  000012                     ?___aomod:
  2375                           	callstack 0
  2376  000012                     ?___lodiv:
  2377                           	callstack 0
  2378  000012                     ?___lomod:
  2379                           	callstack 0
  2380  000012                     SPI2_ExchangeByte@data:
  2381                           	callstack 0
  2382  000012                     EUSART1_Write@txData:
  2383                           	callstack 0
  2384  000012                     TMR0_WriteTimer@timerVal:
  2385                           	callstack 0
  2386  000012                     TMR0_SetInterruptHandler@InterruptHandler:
  2387                           	callstack 0
  2388  000012                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2389                           	callstack 0
  2390  000012                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2391                           	callstack 0
  2392  000012                     EUSART1_SetErrorHandler@interruptHandler:
  2393                           	callstack 0
  2394  000012                     ___wmul@multiplier:
  2395                           	callstack 0
  2396  000012                     ___awmod@dividend:
  2397                           	callstack 0
  2398  000012                     isalpha@c:
  2399                           	callstack 0
  2400  000012                     isdigit@c:
  2401                           	callstack 0
  2402  000012                     isspace@c:
  2403                           	callstack 0
  2404  000012                     isupper@c:
  2405                           	callstack 0
  2406  000012                     strlen@s:
  2407                           	callstack 0
  2408  000012                     islower@c:
  2409                           	callstack 0
  2410  000012                     ___aodiv@dividend:
  2411                           	callstack 0
  2412  000012                     ___aomod@dividend:
  2413                           	callstack 0
  2414  000012                     ___lodiv@dividend:
  2415                           	callstack 0
  2416  000012                     ___lomod@dividend:
  2417                           	callstack 0
  2418                           
  2419                           ; 8 bytes @ 0x11
  2420  000012                     	ds	1
  2421  000013                     SPI2_Open@spi2UniqueConfiguration:
  2422                           	callstack 0
  2423  000013                     putch@txData:
  2424                           	callstack 0
  2425  000013                     SDCARD_PollWriteComplete@status:
  2426                           	callstack 0
  2427  000013                     SDCARD_ReadBlock@addr:
  2428                           	callstack 0
  2429  000013                     SDCARD_WriteBlock@addr:
  2430                           	callstack 0
  2431                           
  2432                           ; 4 bytes @ 0x12
  2433  000013                     	ds	1
  2434  000014                     ??_isupper:
  2435  000014                     ??_isalpha:
  2436  000014                     ??_isdigit:
  2437  000014                     ??_isspace:
  2438  000014                     ??_islower:
  2439  000014                     ??_TMR0_Initialize:
  2440  000014                     ___wmul@multiplicand:
  2441                           	callstack 0
  2442  000014                     ___awmod@divisor:
  2443                           	callstack 0
  2444  000014                     fputc@c:
  2445                           	callstack 0
  2446  000014                     strlen@a:
  2447                           	callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x13
  2450  000014                     	ds	2
  2451  000016                     ___awmod@counter:
  2452                           	callstack 0
  2453  000016                     ___wmul@product:
  2454                           	callstack 0
  2455  000016                     fputc@fp:
  2456                           	callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x15
  2459  000016                     	ds	1
  2460  000017                     ___awmod@sign:
  2461                           	callstack 0
  2462  000017                     SDCARD_ReadBlock@sdCardBuffer:
  2463                           	callstack 0
  2464  000017                     SDCARD_WriteBlock@sdCardBuffer:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x16
  2468  000017                     	ds	1
  2469  000018                     ??_fputc:
  2470  000018                     ?_toupper:
  2471                           	callstack 0
  2472  000018                     _isspace$1827:
  2473                           	callstack 0
  2474  000018                     toupper@c:
  2475                           	callstack 0
  2476                           
  2477                           ; 2 bytes @ 0x17
  2478  000018                     	ds	1
  2479  000019                     ?_atoi:
  2480                           	callstack 0
  2481  000019                     SDCARD_ReadBlock@i:
  2482                           	callstack 0
  2483  000019                     SDCARD_WriteBlock@i:
  2484                           	callstack 0
  2485  000019                     atoi@s:
  2486                           	callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x18
  2489  000019                     	ds	1
  2490  00001A                     ??_toupper:
  2491  00001A                     ___aodiv@divisor:
  2492                           	callstack 0
  2493  00001A                     ___aomod@divisor:
  2494                           	callstack 0
  2495  00001A                     ___lodiv@divisor:
  2496                           	callstack 0
  2497  00001A                     ___lomod@divisor:
  2498                           	callstack 0
  2499                           
  2500                           ; 8 bytes @ 0x19
  2501  00001A                     	ds	1
  2502  00001B                     ??_atoi:
  2503                           
  2504                           ; 1 bytes @ 0x1A
  2505  00001B                     	ds	2
  2506  00001D                     ?_ctoa:
  2507                           	callstack 0
  2508  00001D                     ctoa@fp:
  2509                           	callstack 0
  2510  00001D                     fputs@s:
  2511                           	callstack 0
  2512                           
  2513                           ; 2 bytes @ 0x1C
  2514  00001D                     	ds	1
  2515  00001E                     _toupper$1876:
  2516                           	callstack 0
  2517                           
  2518                           ; 2 bytes @ 0x1D
  2519  00001E                     	ds	1
  2520  00001F                     ctoa@c:
  2521                           	callstack 0
  2522  00001F                     atoi@neg:
  2523                           	callstack 0
  2524  00001F                     fputs@fp:
  2525                           	callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x1E
  2528  00001F                     	ds	1
  2529  000020                     ??_ctoa:
  2530                           
  2531                           ; 1 bytes @ 0x1F
  2532  000020                     	ds	1
  2533  000021                     fputs@c:
  2534                           	callstack 0
  2535  000021                     ctoa@l:
  2536                           	callstack 0
  2537  000021                     _atoi$1800:
  2538                           	callstack 0
  2539                           
  2540                           ; 2 bytes @ 0x20
  2541  000021                     	ds	1
  2542  000022                     ___aodiv@counter:
  2543                           	callstack 0
  2544  000022                     ___aomod@counter:
  2545                           	callstack 0
  2546  000022                     ___lomod@counter:
  2547                           	callstack 0
  2548  000022                     fputs@i:
  2549                           	callstack 0
  2550  000022                     ___lodiv@quotient:
  2551                           	callstack 0
  2552                           
  2553                           ; 8 bytes @ 0x21
  2554  000022                     	ds	1
  2555  000023                     ___aodiv@sign:
  2556                           	callstack 0
  2557  000023                     ___aomod@sign:
  2558                           	callstack 0
  2559  000023                     ctoa@w:
  2560                           	callstack 0
  2561  000023                     _atoi$1802:
  2562                           	callstack 0
  2563                           
  2564                           ; 2 bytes @ 0x22
  2565  000023                     	ds	1
  2566  000024                     ?_abs:
  2567                           	callstack 0
  2568  000024                     ?_pad:
  2569                           	callstack 0
  2570  000024                     pad@fp:
  2571                           	callstack 0
  2572  000024                     abs@a:
  2573                           	callstack 0
  2574  000024                     ___aodiv@quotient:
  2575                           	callstack 0
  2576                           
  2577                           ; 8 bytes @ 0x23
  2578  000024                     	ds	1
  2579  000025                     _atoi$1801:
  2580                           	callstack 0
  2581                           
  2582                           ; 1 bytes @ 0x24
  2583  000025                     	ds	1
  2584  000026                     ??_abs:
  2585  000026                     pad@buf:
  2586                           	callstack 0
  2587  000026                     atoi@n:
  2588                           	callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x25
  2591  000026                     	ds	2
  2592  000028                     pad@p:
  2593                           	callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x27
  2596  000028                     	ds	2
  2597  00002A                     ??_pad:
  2598  00002A                     ___lodiv@counter:
  2599                           	callstack 0
  2600                           
  2601                           ; 1 bytes @ 0x29
  2602  00002A                     	ds	1
  2603  00002B                     pad@i:
  2604                           	callstack 0
  2605                           
  2606                           ; 2 bytes @ 0x2A
  2607  00002B                     	ds	2
  2608  00002D                     pad@w:
  2609                           	callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x2C
  2612  00002D                     	ds	2
  2613  00002F                     ?_dtoa:
  2614                           	callstack 0
  2615  00002F                     ?_utoa:
  2616                           	callstack 0
  2617  00002F                     ?_xtoa:
  2618                           	callstack 0
  2619  00002F                     dtoa@fp:
  2620                           	callstack 0
  2621  00002F                     utoa@fp:
  2622                           	callstack 0
  2623  00002F                     xtoa@fp:
  2624                           	callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x2E
  2627  00002F                     	ds	2
  2628  000031                     dtoa@d:
  2629                           	callstack 0
  2630  000031                     utoa@d:
  2631                           	callstack 0
  2632  000031                     xtoa@d:
  2633                           	callstack 0
  2634                           
  2635                           ; 8 bytes @ 0x30
  2636  000031                     	ds	8
  2637  000039                     xtoa@x:
  2638                           	callstack 0
  2639                           
  2640                           ; 1 bytes @ 0x38
  2641  000039                     	ds	1
  2642  00003A                     vfprintf@cfmt:
  2643                           	callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x39
  2646  00003A                     	ds	2
  2647  00003C                     
  2648                           ; 1 bytes @ 0x3B
  2649 ;;
  2650 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2651 ;;
  2652 ;; *************** function _main *****************
  2653 ;; Defined at:
  2654 ;;		line 48 in file "main.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  i               2   92[BANK0 ] int 
  2659 ;;  sdCardAddres    4  102[BANK0 ] unsigned long 
  2660 ;;  localAddress    4   96[BANK0 ] unsigned long 
  2661 ;;  i               2  100[BANK0 ] unsigned short 
  2662 ;;  bufIdx          2   94[BANK0 ] unsigned short 
  2663 ;;  cmd             1   91[BANK0 ] unsigned char 
  2664 ;;  waveIdx         1   90[BANK0 ] unsigned char 
  2665 ;;  status          1   89[BANK0 ] unsigned char 
  2666 ;;  letter          1   88[BANK0 ] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:       21 bytes
  2681 ;; Hardware stack levels required when called:   14
  2682 ;; This function calls:
  2683 ;;		_EUSART1_Read
  2684 ;;		_EUSART1_is_rx_ready
  2685 ;;		_SDCARD_Initialize
  2686 ;;		_SDCARD_PollWriteComplete
  2687 ;;		_SDCARD_ReadBlock
  2688 ;;		_SDCARD_WriteBlock
  2689 ;;		_SPI2_Close
  2690 ;;		_SPI2_Open
  2691 ;;		_SYSTEM_Initialize
  2692 ;;		_TMR0_SetInterruptHandler
  2693 ;;		_TMR0_WriteTimer
  2694 ;;		___awmod
  2695 ;;		_hexDumpBuffer
  2696 ;;		_printf
  2697 ;; This function is called by:
  2698 ;;		Startup code after reset
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text0
  2703  000052                     __ptext0:
  2704                           	callstack 0
  2705  000052                     _main:
  2706                           	callstack 17
  2707  000052                     
  2708                           ;main.c: 50:     printf("Dev'21\r\n");;main.c: 51:     printf("No configuration of devel
      +                          opment board\r\n> ");;main.c: 52: 
  2709  000052  0E00               	movlw	0
  2710  000054  0100               	movlb	0	; () banked
  2711  000056  6FC6               	movwf	main@sdCardAddress& (0+255),b
  2712  000058  0E00               	movlw	0
  2713  00005A  6FC7               	movwf	(main@sdCardAddress+1)& (0+255),b
  2714  00005C  0E00               	movlw	0
  2715  00005E  6FC8               	movwf	(main@sdCardAddress+2)& (0+255),b
  2716  000060  0E00               	movlw	0
  2717  000062  6FC9               	movwf	(main@sdCardAddress+3)& (0+255),b
  2718                           
  2719                           ;main.c: 54:     SPI2_Open(SPI2_DEFAULT);
  2720  000064  0E00               	movlw	0
  2721  000066  6FBA               	movwf	main@waveIdx& (0+255),b
  2722                           
  2723                           ;main.c: 55: ;main.c: 56:     for (;;) {;main.c: 58:         if ((EUSART1_is_rx_ready())
      +                          ) {
  2724  000068  0E30               	movlw	48
  2725  00006A  6FB8               	movwf	main@letter& (0+255),b
  2726  00006C                     
  2727                           ; BSR set to: 0
  2728                           ;main.c: 60:             switch (cmd) {
  2729  00006C  ECB2  F015         	call	_SYSTEM_Initialize	;wreg free
  2730  000070  888A               	bsf	138,4,c	;volatile
  2731  000072                     
  2732                           ;main.c: 64: 
  2733  000072  0E00               	movlw	0
  2734  000074  6E13               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2735  000076  0E00               	movlw	0
  2736  000078  6E12               	movwf	TMR0_WriteTimer@timerVal^0,c
  2737  00007A  ECEA  F015         	call	_TMR0_WriteTimer	;wreg free
  2738  00007E                     
  2739                           ;main.c: 65:                 case '?':
  2740  00007E  94F2               	bcf	242,2,c	;volatile
  2741  000080                     l198:
  2742  000080  A4F2               	btfss	242,2,c	;volatile
  2743  000082  EF45  F000         	goto	u4351
  2744  000086  EF47  F000         	goto	u4350
  2745  00008A                     u4351:
  2746  00008A  EF40  F000         	goto	l198
  2747  00008E                     u4350:
  2748  00008E                     
  2749                           ;main.c: 68:                     printf("%04x", sdCardAddress >> 16);
  2750  00008E  0E22               	movlw	low _myTMR0ISR
  2751  000090  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2752  000092  0E1F               	movlw	high _myTMR0ISR
  2753  000094  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2754  000096  ECEF  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  2755  00009A                     
  2756                           ;main.c: 70:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  2757  00009A  8EF2               	bsf	242,7,c	;volatile
  2758  00009C                     
  2759                           ;main.c: 71:                     printf("\r\n");
  2760  00009C  8CF2               	bsf	242,6,c	;volatile
  2761  00009E                     
  2762                           ;main.c: 73:                     printf("?: help menu\r\n");
  2763  00009E  0EC0               	movlw	low STR_1
  2764  0000A0  0100               	movlb	0	; () banked
  2765  0000A2  6FA1               	movwf	printf@fmt& (0+255),b
  2766  0000A4  0EFF               	movlw	high STR_1
  2767  0000A6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2768  0000A8  EC5A  F015         	call	_printf	;wreg free
  2769  0000AC                     
  2770                           ;main.c: 74:                     printf("o: k\r\n");
  2771  0000AC  0E5E               	movlw	low STR_2
  2772  0000AE  0100               	movlb	0	; () banked
  2773  0000B0  6FA1               	movwf	printf@fmt& (0+255),b
  2774  0000B2  0EFF               	movlw	high STR_2
  2775  0000B4  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2776  0000B6  EC5A  F015         	call	_printf	;wreg free
  2777  0000BA                     
  2778                           ;main.c: 75:                     printf("Z: Reset processor\r\n");
  2779  0000BA  0ECB               	movlw	low STR_3
  2780  0000BC  0100               	movlb	0	; () banked
  2781  0000BE  6FA1               	movwf	printf@fmt& (0+255),b
  2782  0000C0  0EFF               	movlw	high STR_3
  2783  0000C2  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2784  0000C4  EC5A  F015         	call	_printf	;wreg free
  2785  0000C8                     
  2786                           ;main.c: 76:                     printf("z: Clear the terminal\r\n");
  2787  0000C8  0EB0               	movlw	low STR_4
  2788  0000CA  0100               	movlb	0	; () banked
  2789  0000CC  6FA1               	movwf	printf@fmt& (0+255),b
  2790  0000CE  0EFD               	movlw	high STR_4
  2791  0000D0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2792  0000D2  EC5A  F015         	call	_printf	;wreg free
  2793  0000D6                     
  2794                           ;main.c: 78:                     printf("i: Initialize SD card\r\n");
  2795  0000D6  EC0F  F016         	call	_SPI2_Close	;wreg free
  2796  0000DA                     
  2797                           ;main.c: 79:                     printf("-----------------------------------------------
      +                          --\r\n");
  2798  0000DA  0E00               	movlw	0
  2799  0000DC  EC1D  F012         	call	_SPI2_Open
  2800  0000E0                     l4796:
  2801                           
  2802                           ;main.c: 83:                     printf("a/A decrease/increase read address\r\n");
  2803  0000E0  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  2804  0000E4  0900               	iorlw	0
  2805  0000E6  B4D8               	btfsc	status,2,c
  2806  0000E8  EF78  F000         	goto	u4361
  2807  0000EC  EF7A  F000         	goto	u4360
  2808  0000F0                     u4361:
  2809  0000F0  EF70  F000         	goto	l4796
  2810  0000F4                     u4360:
  2811  0000F4                     
  2812                           ;main.c: 84:                     printf("r: read a block of %d bytes from SD card\r\n", 
      +                          512);
  2813  0000F4  EC6E  F015         	call	_EUSART1_Read	;wreg free
  2814  0000F8  0100               	movlb	0	; () banked
  2815  0000FA  6FBB               	movwf	main@cmd& (0+255),b
  2816                           
  2817                           ;main.c: 85:                     printf("1: write a perfect 26 value sine wave to the SD
      +                           card\r\n", 512);
  2818  0000FC  EFB2  F004         	goto	l5000
  2819  000100                     l4800:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 91:                     break;
  2823  000100  0EC6               	movlw	low STR_5
  2824  000102  6FA1               	movwf	printf@fmt& (0+255),b
  2825  000104  0EFC               	movlw	high STR_5
  2826  000106  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2827  000108  EC5A  F015         	call	_printf	;wreg free
  2828                           
  2829                           ;main.c: 92: 
  2830  00010C  0E4B               	movlw	low STR_6
  2831  00010E  0100               	movlb	0	; () banked
  2832  000110  6FA1               	movwf	printf@fmt& (0+255),b
  2833  000112  0EFF               	movlw	high STR_6
  2834  000114  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2835  000116  EC5A  F015         	call	_printf	;wreg free
  2836                           
  2837                           ;main.c: 93: 
  2838  00011A  0EEE               	movlw	low STR_7
  2839  00011C  0100               	movlb	0	; () banked
  2840  00011E  6FA1               	movwf	printf@fmt& (0+255),b
  2841  000120  0EFF               	movlw	high STR_7
  2842  000122  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2843  000124  C0C8  F0A3         	movff	main@sdCardAddress+2,?_printf+2
  2844  000128  C0C9  F0A4         	movff	main@sdCardAddress+3,?_printf+3
  2845  00012C  6BA5               	clrf	(?_printf+4)& (0+255),b
  2846  00012E  6BA6               	clrf	(?_printf+5)& (0+255),b
  2847  000130  EC5A  F015         	call	_printf	;wreg free
  2848                           
  2849                           ;main.c: 94: 
  2850  000134  0EFC               	movlw	low STR_8
  2851  000136  0100               	movlb	0	; () banked
  2852  000138  6FA1               	movwf	printf@fmt& (0+255),b
  2853  00013A  0EFF               	movlw	high STR_8
  2854  00013C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2855  00013E  EC5A  F015         	call	_printf	;wreg free
  2856                           
  2857                           ;main.c: 95: 
  2858  000142  0EEE               	movlw	low STR_7
  2859  000144  0100               	movlb	0	; () banked
  2860  000146  6FA1               	movwf	printf@fmt& (0+255),b
  2861  000148  0EFF               	movlw	high STR_7
  2862  00014A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2863  00014C  0EFF               	movlw	255
  2864  00014E  15C6               	andwf	main@sdCardAddress& (0+255),w,b
  2865  000150  6FA3               	movwf	(?_printf+2)& (0+255),b
  2866  000152  0EFF               	movlw	255
  2867  000154  15C7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2868  000156  6FA4               	movwf	(?_printf+3)& (0+255),b
  2869  000158  0E00               	movlw	0
  2870  00015A  15C8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2871  00015C  6FA5               	movwf	(?_printf+4)& (0+255),b
  2872  00015E  0E00               	movlw	0
  2873  000160  15C9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2874  000162  6FA6               	movwf	(?_printf+5)& (0+255),b
  2875  000164  EC5A  F015         	call	_printf	;wreg free
  2876                           
  2877                           ;main.c: 96:                 case 'o':
  2878  000168  0EAE               	movlw	low (STR_46+12)
  2879  00016A  0100               	movlb	0	; () banked
  2880  00016C  6FA1               	movwf	printf@fmt& (0+255),b
  2881  00016E  0EFF               	movlw	high (STR_46+12)
  2882  000170  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2883  000172  EC5A  F015         	call	_printf	;wreg free
  2884                           
  2885                           ;main.c: 97:                     printf("o:	ok\r\n");
  2886  000176  0EC8               	movlw	low (STR_5+2)
  2887  000178  0100               	movlb	0	; () banked
  2888  00017A  6FA1               	movwf	printf@fmt& (0+255),b
  2889  00017C  0EFC               	movlw	high (STR_5+2)
  2890  00017E  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2891  000180  EC5A  F015         	call	_printf	;wreg free
  2892                           
  2893                           ;main.c: 98:                     break;
  2894  000184  0EB1               	movlw	low STR_12
  2895  000186  0100               	movlb	0	; () banked
  2896  000188  6FA1               	movwf	printf@fmt& (0+255),b
  2897  00018A  0EFF               	movlw	high STR_12
  2898  00018C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2899  00018E  EC5A  F015         	call	_printf	;wreg free
  2900                           
  2901                           ;main.c: 99: 
  2902  000192  0EDC               	movlw	low STR_13
  2903  000194  0100               	movlb	0	; () banked
  2904  000196  6FA1               	movwf	printf@fmt& (0+255),b
  2905  000198  0EFF               	movlw	high STR_13
  2906  00019A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2907  00019C  EC5A  F015         	call	_printf	;wreg free
  2908                           
  2909                           ;main.c: 100: 
  2910  0001A0  0E0E               	movlw	low STR_14
  2911  0001A2  0100               	movlb	0	; () banked
  2912  0001A4  6FA1               	movwf	printf@fmt& (0+255),b
  2913  0001A6  0EFF               	movlw	high STR_14
  2914  0001A8  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2915  0001AA  EC5A  F015         	call	_printf	;wreg free
  2916                           
  2917                           ;main.c: 101: 
  2918  0001AE  0EDF               	movlw	low STR_15
  2919  0001B0  0100               	movlb	0	; () banked
  2920  0001B2  6FA1               	movwf	printf@fmt& (0+255),b
  2921  0001B4  0EFE               	movlw	high STR_15
  2922  0001B6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2923  0001B8  EC5A  F015         	call	_printf	;wreg free
  2924                           
  2925                           ;main.c: 102: 
  2926  0001BC  0EC8               	movlw	low (STR_5+2)
  2927  0001BE  0100               	movlb	0	; () banked
  2928  0001C0  6FA1               	movwf	printf@fmt& (0+255),b
  2929  0001C2  0EFC               	movlw	high (STR_5+2)
  2930  0001C4  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2931  0001C6  EC5A  F015         	call	_printf	;wreg free
  2932                           
  2933                           ;main.c: 103:                 case 'Z':
  2934  0001CA  0EC7               	movlw	low STR_17
  2935  0001CC  0100               	movlb	0	; () banked
  2936  0001CE  6FA1               	movwf	printf@fmt& (0+255),b
  2937  0001D0  0EFE               	movlw	high STR_17
  2938  0001D2  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2939  0001D4  EC5A  F015         	call	_printf	;wreg free
  2940                           
  2941                           ;main.c: 104:                     for (i = 0; i < 40; i++) printf("\n");
  2942  0001D8  0EC8               	movlw	low (STR_5+2)
  2943  0001DA  0100               	movlb	0	; () banked
  2944  0001DC  6FA1               	movwf	printf@fmt& (0+255),b
  2945  0001DE  0EFC               	movlw	high (STR_5+2)
  2946  0001E0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2947  0001E2  EC5A  F015         	call	_printf	;wreg free
  2948                           
  2949                           ;main.c: 108: 
  2950  0001E6  0EDA               	movlw	low STR_19
  2951  0001E8  0100               	movlb	0	; () banked
  2952  0001EA  6FA1               	movwf	printf@fmt& (0+255),b
  2953  0001EC  0EFD               	movlw	high STR_19
  2954  0001EE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2955  0001F0  EC5A  F015         	call	_printf	;wreg free
  2956                           
  2957                           ;main.c: 109: 
  2958  0001F4  0E85               	movlw	low STR_20
  2959  0001F6  0100               	movlb	0	; () banked
  2960  0001F8  6FA1               	movwf	printf@fmt& (0+255),b
  2961  0001FA  0EFD               	movlw	high STR_20
  2962  0001FC  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2963  0001FE  0E02               	movlw	2
  2964  000200  6FA4               	movwf	(?_printf+3)& (0+255),b
  2965  000202  0E00               	movlw	0
  2966  000204  6FA3               	movwf	(?_printf+2)& (0+255),b
  2967  000206  EC5A  F015         	call	_printf	;wreg free
  2968                           
  2969                           ;main.c: 110: 
  2970  00020A  0E8F               	movlw	low STR_21
  2971  00020C  0100               	movlb	0	; () banked
  2972  00020E  6FA1               	movwf	printf@fmt& (0+255),b
  2973  000210  0EFC               	movlw	high STR_21
  2974  000212  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2975  000214  0E02               	movlw	2
  2976  000216  6FA4               	movwf	(?_printf+3)& (0+255),b
  2977  000218  0E00               	movlw	0
  2978  00021A  6FA3               	movwf	(?_printf+2)& (0+255),b
  2979  00021C  EC5A  F015         	call	_printf	;wreg free
  2980                           
  2981                           ;main.c: 111:                 case 'z':
  2982  000220  0EC8               	movlw	low (STR_5+2)
  2983  000222  0100               	movlb	0	; () banked
  2984  000224  6FA1               	movwf	printf@fmt& (0+255),b
  2985  000226  0EFC               	movlw	high (STR_5+2)
  2986  000228  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2987  00022A  EC5A  F015         	call	_printf	;wreg free
  2988                           
  2989                           ;main.c: 112:                     for (i = 0; i < 40; i++) printf("\n");
  2990  00022E  0EFC               	movlw	low STR_23
  2991  000230  0100               	movlb	0	; () banked
  2992  000232  6FA1               	movwf	printf@fmt& (0+255),b
  2993  000234  0EFC               	movlw	high STR_23
  2994  000236  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  2995  000238  0E02               	movlw	2
  2996  00023A  6FA4               	movwf	(?_printf+3)& (0+255),b
  2997  00023C  0E00               	movlw	0
  2998  00023E  6FA3               	movwf	(?_printf+2)& (0+255),b
  2999  000240  EC5A  F015         	call	_printf	;wreg free
  3000                           
  3001                           ;main.c: 113:                     break;
  3002  000244  0E2E               	movlw	low STR_24
  3003  000246  0100               	movlb	0	; () banked
  3004  000248  6FA1               	movwf	printf@fmt& (0+255),b
  3005  00024A  0EFD               	movlw	high STR_24
  3006  00024C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3007  00024E  0E02               	movlw	2
  3008  000250  6FA4               	movwf	(?_printf+3)& (0+255),b
  3009  000252  0E00               	movlw	0
  3010  000254  6FA3               	movwf	(?_printf+2)& (0+255),b
  3011  000256  EC5A  F015         	call	_printf	;wreg free
  3012  00025A  0EFF               	movlw	low STR_25
  3013  00025C  0100               	movlb	0	; () banked
  3014  00025E  6FA1               	movwf	printf@fmt& (0+255),b
  3015  000260  0EFD               	movlw	high STR_25
  3016  000262  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3017  000264  0E02               	movlw	2
  3018  000266  6FA4               	movwf	(?_printf+3)& (0+255),b
  3019  000268  0E00               	movlw	0
  3020  00026A  6FA3               	movwf	(?_printf+2)& (0+255),b
  3021  00026C  EC5A  F015         	call	_printf	;wreg free
  3022  000270  0EC8               	movlw	low (STR_5+2)
  3023  000272  0100               	movlb	0	; () banked
  3024  000274  6FA1               	movwf	printf@fmt& (0+255),b
  3025  000276  0EFC               	movlw	high (STR_5+2)
  3026  000278  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3027  00027A  EC5A  F015         	call	_printf	;wreg free
  3028  00027E  EF70  F000         	goto	l4796
  3029  000282                     l4802:
  3030                           
  3031                           ; BSR set to: 0
  3032  000282  0ED4               	movlw	low STR_27
  3033  000284  6FA1               	movwf	printf@fmt& (0+255),b
  3034  000286  0EFF               	movlw	high STR_27
  3035  000288  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3036  00028A  EC5A  F015         	call	_printf	;wreg free
  3037  00028E  EF70  F000         	goto	l4796
  3038  000292                     l4804:
  3039                           
  3040                           ; BSR set to: 0
  3041  000292  0E00               	movlw	0
  3042  000294  6FC5               	movwf	(main@i+1)& (0+255),b
  3043  000296  0E00               	movlw	0
  3044  000298  6FC4               	movwf	main@i& (0+255),b
  3045  00029A                     l4810:
  3046                           
  3047                           ; BSR set to: 0
  3048  00029A  0EF5               	movlw	low (STR_64+2)
  3049  00029C  6FA1               	movwf	printf@fmt& (0+255),b
  3050  00029E  0EFF               	movlw	high (STR_64+2)
  3051  0002A0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3052  0002A2  EC5A  F015         	call	_printf	;wreg free
  3053  0002A6  0100               	movlb	0	; () banked
  3054  0002A8  4BC4               	infsnz	main@i& (0+255),f,b
  3055  0002AA  2BC5               	incf	(main@i+1)& (0+255),f,b
  3056  0002AC                     
  3057                           ; BSR set to: 0
  3058  0002AC  51C5               	movf	(main@i+1)& (0+255),w,b
  3059  0002AE  E109               	bnz	u4370
  3060  0002B0  0E28               	movlw	40
  3061  0002B2  5DC4               	subwf	main@i& (0+255),w,b
  3062  0002B4  A0D8               	btfss	status,0,c
  3063  0002B6  EF5F  F001         	goto	u4371
  3064  0002BA  EF61  F001         	goto	u4370
  3065  0002BE                     u4371:
  3066  0002BE  EF4D  F001         	goto	l4810
  3067  0002C2                     u4370:
  3068  0002C2                     
  3069                           ; BSR set to: 0
  3070  0002C2  00FF               	reset		;# 
  3071  0002C4  EF70  F000         	goto	l4796
  3072  0002C8                     l4816:
  3073                           
  3074                           ; BSR set to: 0
  3075  0002C8  0E00               	movlw	0
  3076  0002CA  6FC5               	movwf	(main@i+1)& (0+255),b
  3077  0002CC  0E00               	movlw	0
  3078  0002CE  6FC4               	movwf	main@i& (0+255),b
  3079  0002D0                     l4822:
  3080                           
  3081                           ; BSR set to: 0
  3082  0002D0  0EF5               	movlw	low (STR_64+2)
  3083  0002D2  6FA1               	movwf	printf@fmt& (0+255),b
  3084  0002D4  0EFF               	movlw	high (STR_64+2)
  3085  0002D6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3086  0002D8  EC5A  F015         	call	_printf	;wreg free
  3087  0002DC  0100               	movlb	0	; () banked
  3088  0002DE  4BC4               	infsnz	main@i& (0+255),f,b
  3089  0002E0  2BC5               	incf	(main@i+1)& (0+255),f,b
  3090  0002E2                     
  3091                           ; BSR set to: 0
  3092  0002E2  51C5               	movf	(main@i+1)& (0+255),w,b
  3093  0002E4  E109               	bnz	u4380
  3094  0002E6  0E28               	movlw	40
  3095  0002E8  5DC4               	subwf	main@i& (0+255),w,b
  3096  0002EA  A0D8               	btfss	status,0,c
  3097  0002EC  EF7A  F001         	goto	u4381
  3098  0002F0  EF7C  F001         	goto	u4380
  3099  0002F4                     u4381:
  3100  0002F4  EF68  F001         	goto	l4822
  3101  0002F8                     u4380:
  3102  0002F8  EF70  F000         	goto	l4796
  3103  0002FC                     l4828:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;main.c: 162:                     SPI2_Close();
  3107  0002FC  EC0F  F016         	call	_SPI2_Close	;wreg free
  3108  000300                     
  3109                           ;main.c: 163:                     SPI2_Open(SPI2_DEFAULT);
  3110  000300  0E00               	movlw	0
  3111  000302  EC1D  F012         	call	_SPI2_Open
  3112  000306                     
  3113                           ;main.c: 164:                     SDCARD_Initialize(1);
  3114  000306  0E01               	movlw	1
  3115  000308  EC23  F00E         	call	_SDCARD_Initialize
  3116                           
  3117                           ;main.c: 165:                     break;
  3118  00030C  EF70  F000         	goto	l4796
  3119  000310                     l4834:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;main.c: 172:                     if (cmd == 'a') {
  3123  000310  0E61               	movlw	97
  3124  000312  19BB               	xorwf	main@cmd& (0+255),w,b
  3125  000314  A4D8               	btfss	status,2,c
  3126  000316  EF8F  F001         	goto	u4391
  3127  00031A  EF91  F001         	goto	u4390
  3128  00031E                     u4391:
  3129  00031E  EFBB  F001         	goto	l4844
  3130  000322                     u4390:
  3131  000322                     
  3132                           ; BSR set to: 0
  3133                           ;main.c: 173:                         sdCardAddress -= 512;
  3134  000322  0E00               	movlw	0
  3135  000324  5FC6               	subwf	main@sdCardAddress& (0+255),f,b
  3136  000326  0E02               	movlw	2
  3137  000328  5BC7               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  3138  00032A  0E00               	movlw	0
  3139  00032C  5BC8               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  3140  00032E  0E00               	movlw	0
  3141  000330  5BC9               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  3142                           
  3143                           ;main.c: 174:                         if (sdCardAddress >= 0x04000000) {
  3144  000332  0E04               	movlw	4
  3145  000334  5DC9               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  3146  000336  A0D8               	btfss	status,0,c
  3147  000338  EFA0  F001         	goto	u4401
  3148  00033C  EFA2  F001         	goto	u4400
  3149  000340                     u4401:
  3150  000340  EFB3  F001         	goto	l4842
  3151  000344                     u4400:
  3152  000344                     
  3153                           ; BSR set to: 0
  3154                           ;main.c: 175:                             printf("Underflowed to high address\r\n");
  3155  000344  0E1F               	movlw	low STR_30
  3156  000346  6FA1               	movwf	printf@fmt& (0+255),b
  3157  000348  0EFE               	movlw	high STR_30
  3158  00034A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3159  00034C  EC5A  F015         	call	_printf	;wreg free
  3160  000350                     
  3161                           ;main.c: 176:                             sdCardAddress = 0x04000000 - 512;
  3162  000350  0E00               	movlw	0
  3163  000352  0100               	movlb	0	; () banked
  3164  000354  6FC6               	movwf	main@sdCardAddress& (0+255),b
  3165  000356  0EFE               	movlw	254
  3166  000358  6FC7               	movwf	(main@sdCardAddress+1)& (0+255),b
  3167  00035A  0EFF               	movlw	255
  3168  00035C  6FC8               	movwf	(main@sdCardAddress+2)& (0+255),b
  3169  00035E  0E03               	movlw	3
  3170  000360  6FC9               	movwf	(main@sdCardAddress+3)& (0+255),b
  3171                           
  3172                           ;main.c: 177:                         } else {
  3173  000362  EFE3  F001         	goto	l219
  3174  000366                     l4842:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;main.c: 178:                             printf("Decreased address\r\n");
  3178  000366  0E23               	movlw	low STR_31
  3179  000368  6FA1               	movwf	printf@fmt& (0+255),b
  3180  00036A  0EFF               	movlw	high STR_31
  3181  00036C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3182  00036E  EC5A  F015         	call	_printf	;wreg free
  3183  000372  EFE3  F001         	goto	l219
  3184  000376                     l4844:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;main.c: 181:                         sdCardAddress += 512;
  3188  000376  0E00               	movlw	0
  3189  000378  27C6               	addwf	main@sdCardAddress& (0+255),f,b
  3190  00037A  0E02               	movlw	2
  3191  00037C  23C7               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3192  00037E  0E00               	movlw	0
  3193  000380  23C8               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3194  000382  0E00               	movlw	0
  3195  000384  23C9               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3196                           
  3197                           ;main.c: 182:                         if (sdCardAddress >= 0x04000000) {
  3198  000386  0E04               	movlw	4
  3199  000388  5DC9               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  3200  00038A  A0D8               	btfss	status,0,c
  3201  00038C  EFCA  F001         	goto	u4411
  3202  000390  EFCC  F001         	goto	u4410
  3203  000394                     u4411:
  3204  000394  EFDD  F001         	goto	l4850
  3205  000398                     u4410:
  3206  000398                     
  3207                           ; BSR set to: 0
  3208                           ;main.c: 183:                             printf("Overflowed to low address\r\n");
  3209  000398  0E76               	movlw	low STR_32
  3210  00039A  6FA1               	movwf	printf@fmt& (0+255),b
  3211  00039C  0EFE               	movlw	high STR_32
  3212  00039E  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3213  0003A0  EC5A  F015         	call	_printf	;wreg free
  3214  0003A4                     
  3215                           ;main.c: 184:                             sdCardAddress = 0x00000000;
  3216  0003A4  0E00               	movlw	0
  3217  0003A6  0100               	movlb	0	; () banked
  3218  0003A8  6FC6               	movwf	main@sdCardAddress& (0+255),b
  3219  0003AA  0E00               	movlw	0
  3220  0003AC  6FC7               	movwf	(main@sdCardAddress+1)& (0+255),b
  3221  0003AE  0E00               	movlw	0
  3222  0003B0  6FC8               	movwf	(main@sdCardAddress+2)& (0+255),b
  3223  0003B2  0E00               	movlw	0
  3224  0003B4  6FC9               	movwf	(main@sdCardAddress+3)& (0+255),b
  3225                           
  3226                           ;main.c: 185:                         } else {
  3227  0003B6  EFE3  F001         	goto	l219
  3228  0003BA                     l4850:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;main.c: 186:                             printf("Increased address\r\n");
  3232  0003BA  0E37               	movlw	low STR_33
  3233  0003BC  6FA1               	movwf	printf@fmt& (0+255),b
  3234  0003BE  0EFF               	movlw	high STR_33
  3235  0003C0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3236  0003C2  EC5A  F015         	call	_printf	;wreg free
  3237  0003C6                     l219:
  3238                           
  3239                           ;main.c: 191:                     printf("SD card address:  ");
  3240  0003C6  0E4B               	movlw	low STR_6
  3241  0003C8  0100               	movlb	0	; () banked
  3242  0003CA  6FA1               	movwf	printf@fmt& (0+255),b
  3243  0003CC  0EFF               	movlw	high STR_6
  3244  0003CE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3245  0003D0  EC5A  F015         	call	_printf	;wreg free
  3246                           
  3247                           ;main.c: 192:                     printf("%04x", sdCardAddress >> 16);
  3248  0003D4  0EEE               	movlw	low STR_7
  3249  0003D6  0100               	movlb	0	; () banked
  3250  0003D8  6FA1               	movwf	printf@fmt& (0+255),b
  3251  0003DA  0EFF               	movlw	high STR_7
  3252  0003DC  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3253  0003DE  C0C8  F0A3         	movff	main@sdCardAddress+2,?_printf+2
  3254  0003E2  C0C9  F0A4         	movff	main@sdCardAddress+3,?_printf+3
  3255  0003E6  6BA5               	clrf	(?_printf+4)& (0+255),b
  3256  0003E8  6BA6               	clrf	(?_printf+5)& (0+255),b
  3257  0003EA  EC5A  F015         	call	_printf	;wreg free
  3258                           
  3259                           ;main.c: 193:                     printf(":");
  3260  0003EE  0EFC               	movlw	low STR_8
  3261  0003F0  0100               	movlb	0	; () banked
  3262  0003F2  6FA1               	movwf	printf@fmt& (0+255),b
  3263  0003F4  0EFF               	movlw	high STR_8
  3264  0003F6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3265  0003F8  EC5A  F015         	call	_printf	;wreg free
  3266                           
  3267                           ;main.c: 194:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3268  0003FC  0EEE               	movlw	low STR_7
  3269  0003FE  0100               	movlb	0	; () banked
  3270  000400  6FA1               	movwf	printf@fmt& (0+255),b
  3271  000402  0EFF               	movlw	high STR_7
  3272  000404  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3273  000406  0EFF               	movlw	255
  3274  000408  15C6               	andwf	main@sdCardAddress& (0+255),w,b
  3275  00040A  6FA3               	movwf	(?_printf+2)& (0+255),b
  3276  00040C  0EFF               	movlw	255
  3277  00040E  15C7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3278  000410  6FA4               	movwf	(?_printf+3)& (0+255),b
  3279  000412  0E00               	movlw	0
  3280  000414  15C8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3281  000416  6FA5               	movwf	(?_printf+4)& (0+255),b
  3282  000418  0E00               	movlw	0
  3283  00041A  15C9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3284  00041C  6FA6               	movwf	(?_printf+5)& (0+255),b
  3285  00041E  EC5A  F015         	call	_printf	;wreg free
  3286                           
  3287                           ;main.c: 195:                     printf("\r\n");
  3288  000422  0EAE               	movlw	low (STR_46+12)
  3289  000424  0100               	movlb	0	; () banked
  3290  000426  6FA1               	movwf	printf@fmt& (0+255),b
  3291  000428  0EFF               	movlw	high (STR_46+12)
  3292  00042A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3293  00042C  EC5A  F015         	call	_printf	;wreg free
  3294                           
  3295                           ;main.c: 196:                     break;
  3296  000430  EF70  F000         	goto	l4796
  3297  000434                     l4852:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 202:                     for (i = 0; i < 512; i++) blueBuffer[i] = 255 - i;
  3301  000434  0E00               	movlw	0
  3302  000436  6FC5               	movwf	(main@i+1)& (0+255),b
  3303  000438  0E00               	movlw	0
  3304  00043A  6FC4               	movwf	main@i& (0+255),b
  3305  00043C                     l4858:
  3306                           
  3307                           ; BSR set to: 0
  3308  00043C  0EF4               	movlw	low _blueBuffer
  3309  00043E  25C4               	addwf	main@i& (0+255),w,b
  3310  000440  6ED9               	movwf	fsr2l,c
  3311  000442  0E02               	movlw	high _blueBuffer
  3312  000444  21C5               	addwfc	(main@i+1)& (0+255),w,b
  3313  000446  6EDA               	movwf	fsr2h,c
  3314  000448  51C4               	movf	main@i& (0+255),w,b
  3315  00044A  0AFF               	xorlw	255
  3316  00044C  6EDF               	movwf	indf2,c
  3317  00044E                     
  3318                           ; BSR set to: 0
  3319  00044E  4BC4               	infsnz	main@i& (0+255),f,b
  3320  000450  2BC5               	incf	(main@i+1)& (0+255),f,b
  3321  000452                     
  3322                           ; BSR set to: 0
  3323  000452  0E02               	movlw	2
  3324  000454  5DC5               	subwf	(main@i+1)& (0+255),w,b
  3325  000456  A0D8               	btfss	status,0,c
  3326  000458  EF30  F002         	goto	u4421
  3327  00045C  EF32  F002         	goto	u4420
  3328  000460                     u4421:
  3329  000460  EF1E  F002         	goto	l4858
  3330  000464                     u4420:
  3331  000464                     
  3332                           ; BSR set to: 0
  3333  000464  888B               	bsf	139,4,c	;volatile
  3334  000466                     
  3335                           ; BSR set to: 0
  3336                           ;main.c: 204:                     SDCARD_WriteBlock(sdCardAddress, blueBuffer);
  3337  000466  C0C6  F013         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3338  00046A  C0C7  F014         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3339  00046E  C0C8  F015         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3340  000472  C0C9  F016         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3341  000476  0EF4               	movlw	low _blueBuffer
  3342  000478  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3343  00047A  0E02               	movlw	high _blueBuffer
  3344  00047C  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3345  00047E  EC0B  F013         	call	_SDCARD_WriteBlock	;wreg free
  3346  000482                     l4866:
  3347  000482  EC82  F014         	call	_SDCARD_PollWriteComplete	;wreg free
  3348  000486  0100               	movlb	0	; () banked
  3349  000488  6FB9               	movwf	main@status& (0+255),b
  3350  00048A  29B9               	incf	main@status& (0+255),w,b
  3351  00048C  B4D8               	btfsc	status,2,c
  3352  00048E  EF4B  F002         	goto	u4431
  3353  000492  EF4D  F002         	goto	u4430
  3354  000496                     u4431:
  3355  000496  EF41  F002         	goto	l4866
  3356  00049A                     u4430:
  3357  00049A                     
  3358                           ; BSR set to: 0
  3359  00049A  988B               	bcf	139,4,c	;volatile
  3360  00049C                     
  3361                           ; BSR set to: 0
  3362                           ;main.c: 208:                     printf("Write block of decremented 8-bit values:\r\n")
      +                          ;
  3363  00049C  0E5A               	movlw	low STR_39
  3364  00049E  6FA1               	movwf	printf@fmt& (0+255),b
  3365  0004A0  0EFD               	movlw	high STR_39
  3366  0004A2  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3367  0004A4  EC5A  F015         	call	_printf	;wreg free
  3368                           
  3369                           ;main.c: 209:                     printf("    Address:    ");
  3370  0004A8  0E81               	movlw	low STR_40
  3371  0004AA  0100               	movlb	0	; () banked
  3372  0004AC  6FA1               	movwf	printf@fmt& (0+255),b
  3373  0004AE  0EFF               	movlw	high STR_40
  3374  0004B0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3375  0004B2  EC5A  F015         	call	_printf	;wreg free
  3376                           
  3377                           ;main.c: 210:                     printf("%04x", sdCardAddress >> 16);
  3378  0004B6  0EEE               	movlw	low STR_7
  3379  0004B8  0100               	movlb	0	; () banked
  3380  0004BA  6FA1               	movwf	printf@fmt& (0+255),b
  3381  0004BC  0EFF               	movlw	high STR_7
  3382  0004BE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3383  0004C0  C0C8  F0A3         	movff	main@sdCardAddress+2,?_printf+2
  3384  0004C4  C0C9  F0A4         	movff	main@sdCardAddress+3,?_printf+3
  3385  0004C8  6BA5               	clrf	(?_printf+4)& (0+255),b
  3386  0004CA  6BA6               	clrf	(?_printf+5)& (0+255),b
  3387  0004CC  EC5A  F015         	call	_printf	;wreg free
  3388                           
  3389                           ;main.c: 211:                     printf(":");
  3390  0004D0  0EFC               	movlw	low STR_8
  3391  0004D2  0100               	movlb	0	; () banked
  3392  0004D4  6FA1               	movwf	printf@fmt& (0+255),b
  3393  0004D6  0EFF               	movlw	high STR_8
  3394  0004D8  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3395  0004DA  EC5A  F015         	call	_printf	;wreg free
  3396                           
  3397                           ;main.c: 212:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3398  0004DE  0EEE               	movlw	low STR_7
  3399  0004E0  0100               	movlb	0	; () banked
  3400  0004E2  6FA1               	movwf	printf@fmt& (0+255),b
  3401  0004E4  0EFF               	movlw	high STR_7
  3402  0004E6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3403  0004E8  0EFF               	movlw	255
  3404  0004EA  15C6               	andwf	main@sdCardAddress& (0+255),w,b
  3405  0004EC  6FA3               	movwf	(?_printf+2)& (0+255),b
  3406  0004EE  0EFF               	movlw	255
  3407  0004F0  15C7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3408  0004F2  6FA4               	movwf	(?_printf+3)& (0+255),b
  3409  0004F4  0E00               	movlw	0
  3410  0004F6  15C8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3411  0004F8  6FA5               	movwf	(?_printf+4)& (0+255),b
  3412  0004FA  0E00               	movlw	0
  3413  0004FC  15C9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3414  0004FE  6FA6               	movwf	(?_printf+5)& (0+255),b
  3415  000500  EC5A  F015         	call	_printf	;wreg free
  3416                           
  3417                           ;main.c: 213:                     printf("\r\n");
  3418  000504  0EAE               	movlw	low (STR_46+12)
  3419  000506  0100               	movlb	0	; () banked
  3420  000508  6FA1               	movwf	printf@fmt& (0+255),b
  3421  00050A  0EFF               	movlw	high (STR_46+12)
  3422  00050C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3423  00050E  EC5A  F015         	call	_printf	;wreg free
  3424                           
  3425                           ;main.c: 214:                     printf("    Status:     %02x\r\n", status);
  3426  000512  0EF7               	movlw	low STR_45
  3427  000514  0100               	movlb	0	; () banked
  3428  000516  6FA1               	movwf	printf@fmt& (0+255),b
  3429  000518  0EFE               	movlw	high STR_45
  3430  00051A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3431  00051C  C0B9  F0A3         	movff	main@status,?_printf+2
  3432  000520  6BA4               	clrf	(?_printf+3)& (0+255),b
  3433  000522  EC5A  F015         	call	_printf	;wreg free
  3434                           
  3435                           ;main.c: 215:                     break;
  3436  000526  EF70  F000         	goto	l4796
  3437  00052A                     l233:
  3438                           
  3439                           ; BSR set to: 0
  3440  00052A  8A8B               	bsf	139,5,c	;volatile
  3441  00052C                     
  3442                           ; BSR set to: 0
  3443                           ;main.c: 222:                     SDCARD_ReadBlock(sdCardAddress, blueBuffer);
  3444  00052C  C0C6  F013         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3445  000530  C0C7  F014         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3446  000534  C0C8  F015         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3447  000538  C0C9  F016         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3448  00053C  0EF4               	movlw	low _blueBuffer
  3449  00053E  6E17               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3450  000540  0E02               	movlw	high _blueBuffer
  3451  000542  6E18               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3452  000544  EC73  F012         	call	_SDCARD_ReadBlock	;wreg free
  3453  000548  9A8B               	bcf	139,5,c	;volatile
  3454  00054A                     
  3455                           ;main.c: 224:                     printf("Read block: \r\n");
  3456  00054A  0EA2               	movlw	low STR_46
  3457  00054C  0100               	movlb	0	; () banked
  3458  00054E  6FA1               	movwf	printf@fmt& (0+255),b
  3459  000550  0EFF               	movlw	high STR_46
  3460  000552  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3461  000554  EC5A  F015         	call	_printf	;wreg free
  3462  000558                     
  3463                           ;main.c: 225:                     printf("    Address:    ");
  3464  000558  0E81               	movlw	low STR_40
  3465  00055A  0100               	movlb	0	; () banked
  3466  00055C  6FA1               	movwf	printf@fmt& (0+255),b
  3467  00055E  0EFF               	movlw	high STR_40
  3468  000560  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3469  000562  EC5A  F015         	call	_printf	;wreg free
  3470  000566                     
  3471                           ;main.c: 226:                     printf("%04x", sdCardAddress >> 16);
  3472  000566  0EEE               	movlw	low STR_7
  3473  000568  0100               	movlb	0	; () banked
  3474  00056A  6FA1               	movwf	printf@fmt& (0+255),b
  3475  00056C  0EFF               	movlw	high STR_7
  3476  00056E  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3477  000570  C0C8  F0A3         	movff	main@sdCardAddress+2,?_printf+2
  3478  000574  C0C9  F0A4         	movff	main@sdCardAddress+3,?_printf+3
  3479  000578  6BA5               	clrf	(?_printf+4)& (0+255),b
  3480  00057A  6BA6               	clrf	(?_printf+5)& (0+255),b
  3481  00057C  EC5A  F015         	call	_printf	;wreg free
  3482  000580                     
  3483                           ;main.c: 227:                     printf(":");
  3484  000580  0EFC               	movlw	low STR_8
  3485  000582  0100               	movlb	0	; () banked
  3486  000584  6FA1               	movwf	printf@fmt& (0+255),b
  3487  000586  0EFF               	movlw	high STR_8
  3488  000588  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3489  00058A  EC5A  F015         	call	_printf	;wreg free
  3490  00058E                     
  3491                           ;main.c: 228:                     printf("%04x", sdCardAddress & 0X0000FFFF);
  3492  00058E  0EEE               	movlw	low STR_7
  3493  000590  0100               	movlb	0	; () banked
  3494  000592  6FA1               	movwf	printf@fmt& (0+255),b
  3495  000594  0EFF               	movlw	high STR_7
  3496  000596  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3497  000598  0EFF               	movlw	255
  3498  00059A  15C6               	andwf	main@sdCardAddress& (0+255),w,b
  3499  00059C  6FA3               	movwf	(?_printf+2)& (0+255),b
  3500  00059E  0EFF               	movlw	255
  3501  0005A0  15C7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3502  0005A2  6FA4               	movwf	(?_printf+3)& (0+255),b
  3503  0005A4  0E00               	movlw	0
  3504  0005A6  15C8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3505  0005A8  6FA5               	movwf	(?_printf+4)& (0+255),b
  3506  0005AA  0E00               	movlw	0
  3507  0005AC  15C9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3508  0005AE  6FA6               	movwf	(?_printf+5)& (0+255),b
  3509  0005B0  EC5A  F015         	call	_printf	;wreg free
  3510  0005B4                     
  3511                           ;main.c: 229:                     printf("\r\n");
  3512  0005B4  0EAE               	movlw	low (STR_46+12)
  3513  0005B6  0100               	movlb	0	; () banked
  3514  0005B8  6FA1               	movwf	printf@fmt& (0+255),b
  3515  0005BA  0EFF               	movlw	high (STR_46+12)
  3516  0005BC  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3517  0005BE  EC5A  F015         	call	_printf	;wreg free
  3518  0005C2                     
  3519                           ;main.c: 230:                     hexDumpBuffer(blueBuffer);
  3520  0005C2  0EF4               	movlw	low _blueBuffer
  3521  0005C4  0100               	movlb	0	; () banked
  3522  0005C6  6FAB               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3523  0005C8  0E02               	movlw	high _blueBuffer
  3524  0005CA  6FAC               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3525  0005CC  EC9C  F00B         	call	_hexDumpBuffer	;wreg free
  3526                           
  3527                           ;main.c: 231:                     break;
  3528  0005D0  EF70  F000         	goto	l4796
  3529  0005D4                     l4888:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;main.c: 235:                     waveIdx = 0;
  3533  0005D4  0E00               	movlw	0
  3534  0005D6  6FBA               	movwf	main@waveIdx& (0+255),b
  3535  0005D8                     
  3536                           ; BSR set to: 0
  3537                           ;main.c: 236:                     localAddress = sdCardAddress;
  3538  0005D8  C0C6  F0C0         	movff	main@sdCardAddress,main@localAddress
  3539  0005DC  C0C7  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3540  0005E0  C0C8  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3541  0005E4  C0C9  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3542  0005E8                     
  3543                           ; BSR set to: 0
  3544                           ;main.c: 237:                     printf("Writing sine wave to memory, starting with the
      +                           current address. Press any key to stop.\r\n");
  3545  0005E8  0EE9               	movlw	low STR_52
  3546  0005EA  6FA1               	movwf	printf@fmt& (0+255),b
  3547  0005EC  0EFB               	movlw	high STR_52
  3548  0005EE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3549  0005F0  EC5A  F015         	call	_printf	;wreg free
  3550                           
  3551                           ;main.c: 238:                     while (!(EUSART1_is_rx_ready())){
  3552  0005F4  EF4F  F003         	goto	l4914
  3553  0005F8                     l4894:
  3554                           
  3555                           ;main.c: 241:                     for(bufIdx = 0;bufIdx < 512;waveIdx = (waveIdx + 1) % 
      +                          26, bufIdx++){
  3556  0005F8  0E00               	movlw	0
  3557  0005FA  0100               	movlb	0	; () banked
  3558  0005FC  6FBF               	movwf	(main@bufIdx+1)& (0+255),b
  3559  0005FE  0E00               	movlw	0
  3560  000600  6FBE               	movwf	main@bufIdx& (0+255),b
  3561  000602                     l4900:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 242:                         blueBuffer[bufIdx] = sin[waveIdx];
  3565  000602  0E3D               	movlw	low _sin
  3566  000604  25BA               	addwf	main@waveIdx& (0+255),w,b
  3567  000606  6EF6               	movwf	tblptrl,c
  3568  000608  6AF7               	clrf	tblptrh,c
  3569  00060A  0EF9               	movlw	high _sin
  3570  00060C  22F7               	addwfc	tblptrh,f,c
  3571  00060E                     	if	1	;There are 3 active tblptr bytes
  3572  00060E  6AF8               	clrf	tblptru,c
  3573  000610  0E00               	movlw	low (__mediumconst shr (0+16))
  3574  000612  22F8               	addwfc	tblptru,f,c
  3575  000614                     	endif
  3576  000614  0EF4               	movlw	low _blueBuffer
  3577  000616  25BE               	addwf	main@bufIdx& (0+255),w,b
  3578  000618  6ED9               	movwf	fsr2l,c
  3579  00061A  0E02               	movlw	high _blueBuffer
  3580  00061C  21BF               	addwfc	(main@bufIdx+1)& (0+255),w,b
  3581  00061E  6EDA               	movwf	fsr2h,c
  3582  000620  0008               	tblrd		*
  3583  000622  CFF5 FFDF          	movff	tablat,indf2
  3584  000626                     
  3585                           ; BSR set to: 0
  3586                           ;main.c: 243:                     }
  3587  000626  0E01               	movlw	1
  3588  000628  25BA               	addwf	main@waveIdx& (0+255),w,b
  3589  00062A  6E12               	movwf	___awmod@dividend^0,c
  3590  00062C  6A13               	clrf	(___awmod@dividend+1)^0,c
  3591  00062E  0E00               	movlw	0
  3592  000630  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  3593  000632  0E00               	movlw	0
  3594  000634  6E15               	movwf	(___awmod@divisor+1)^0,c
  3595  000636  0E1A               	movlw	26
  3596  000638  6E14               	movwf	___awmod@divisor^0,c
  3597  00063A  ECC5  F011         	call	___awmod	;wreg free
  3598  00063E  5012               	movf	?___awmod^0,w,c
  3599  000640  0100               	movlb	0	; () banked
  3600  000642  6FBA               	movwf	main@waveIdx& (0+255),b
  3601  000644                     
  3602                           ; BSR set to: 0
  3603  000644  4BBE               	infsnz	main@bufIdx& (0+255),f,b
  3604  000646  2BBF               	incf	(main@bufIdx+1)& (0+255),f,b
  3605  000648                     
  3606                           ; BSR set to: 0
  3607  000648  0E02               	movlw	2
  3608  00064A  5DBF               	subwf	(main@bufIdx+1)& (0+255),w,b
  3609  00064C  A0D8               	btfss	status,0,c
  3610  00064E  EF2B  F003         	goto	u4441
  3611  000652  EF2D  F003         	goto	u4440
  3612  000656                     u4441:
  3613  000656  EF01  F003         	goto	l4900
  3614  00065A                     u4440:
  3615  00065A                     
  3616                           ; BSR set to: 0
  3617                           ;main.c: 245:                     SDCARD_WriteBlock(localAddress, blueBuffer);
  3618  00065A  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3619  00065E  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3620  000662  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3621  000666  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3622  00066A  0EF4               	movlw	low _blueBuffer
  3623  00066C  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3624  00066E  0E02               	movlw	high _blueBuffer
  3625  000670  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3626  000672  EC0B  F013         	call	_SDCARD_WriteBlock	;wreg free
  3627  000676                     l4910:
  3628  000676  EC82  F014         	call	_SDCARD_PollWriteComplete	;wreg free
  3629  00067A  0100               	movlb	0	; () banked
  3630  00067C  6FB9               	movwf	main@status& (0+255),b
  3631  00067E  29B9               	incf	main@status& (0+255),w,b
  3632  000680  B4D8               	btfsc	status,2,c
  3633  000682  EF45  F003         	goto	u4451
  3634  000686  EF47  F003         	goto	u4450
  3635  00068A                     u4451:
  3636  00068A  EF3B  F003         	goto	l4910
  3637  00068E                     u4450:
  3638  00068E                     
  3639                           ; BSR set to: 0
  3640                           ;main.c: 247:                     localAddress += 512;
  3641  00068E  0E00               	movlw	0
  3642  000690  27C0               	addwf	main@localAddress& (0+255),f,b
  3643  000692  0E02               	movlw	2
  3644  000694  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3645  000696  0E00               	movlw	0
  3646  000698  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3647  00069A  0E00               	movlw	0
  3648  00069C  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3649  00069E                     l4914:
  3650                           
  3651                           ;main.c: 238:                     while (!(EUSART1_is_rx_ready())){
  3652  00069E  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3653  0006A2  0900               	iorlw	0
  3654  0006A4  B4D8               	btfsc	status,2,c
  3655  0006A6  EF57  F003         	goto	u4461
  3656  0006AA  EF59  F003         	goto	u4460
  3657  0006AE                     u4461:
  3658  0006AE  EFFC  F002         	goto	l4894
  3659  0006B2                     u4460:
  3660  0006B2                     
  3661                           ;main.c: 251:                     (void) EUSART1_Read();
  3662  0006B2  EC6E  F015         	call	_EUSART1_Read	;wreg free
  3663  0006B6                     
  3664                           ;main.c: 252:                     printf("Write stopped\r\n");
  3665  0006B6  0E92               	movlw	low STR_53
  3666  0006B8  0100               	movlb	0	; () banked
  3667  0006BA  6FA1               	movwf	printf@fmt& (0+255),b
  3668  0006BC  0EFF               	movlw	high STR_53
  3669  0006BE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3670  0006C0  EC5A  F015         	call	_printf	;wreg free
  3671                           
  3672                           ;main.c: 253:                     break;
  3673  0006C4  EF70  F000         	goto	l4796
  3674  0006C8                     l4920:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;main.c: 255:                     sampleRate += 160;
  3678  0006C8  0EA0               	movlw	160
  3679  0006CA  27F2               	addwf	_sampleRate& (0+255),f,b
  3680  0006CC  0E00               	movlw	0
  3681  0006CE  23F3               	addwfc	(_sampleRate+1)& (0+255),f,b
  3682  0006D0                     
  3683                           ; BSR set to: 0
  3684                           ;main.c: 256:                     printf("The sampling rate is %u us\r\n", sampleRate/16
      +                          );
  3685  0006D0  0E3D               	movlw	low STR_54
  3686  0006D2  6FA1               	movwf	printf@fmt& (0+255),b
  3687  0006D4  0EFE               	movlw	high STR_54
  3688  0006D6  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3689  0006D8  C0F2  F0B5         	movff	_sampleRate,??_main
  3690  0006DC  C0F3  F0B6         	movff	_sampleRate+1,??_main+1
  3691  0006E0  0E04               	movlw	4
  3692  0006E2  6FB7               	movwf	(??_main+2)& (0+255),b
  3693  0006E4                     u4475:
  3694  0006E4  90D8               	bcf	status,0,c
  3695  0006E6  33B6               	rrcf	(??_main+1)& (0+255),f,b
  3696  0006E8  33B5               	rrcf	??_main& (0+255),f,b
  3697  0006EA  2FB7               	decfsz	(??_main+2)& (0+255),f,b
  3698  0006EC  EF72  F003         	goto	u4475
  3699  0006F0  C0B5  F0A3         	movff	??_main,?_printf+2
  3700  0006F4  C0B6  F0A4         	movff	??_main+1,?_printf+3
  3701  0006F8  EC5A  F015         	call	_printf	;wreg free
  3702                           
  3703                           ;main.c: 257:                     break;
  3704  0006FC  EF70  F000         	goto	l4796
  3705  000700                     l4924:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;main.c: 259:                     sampleRate -= 160;
  3709  000700  0EA0               	movlw	160
  3710  000702  5FF2               	subwf	_sampleRate& (0+255),f,b
  3711  000704  0E00               	movlw	0
  3712  000706  5BF3               	subwfb	(_sampleRate+1)& (0+255),f,b
  3713                           
  3714                           ;main.c: 260:                     if(sampleRate < 320) sampleRate = 320;
  3715  000708  0E40               	movlw	64
  3716  00070A  5DF2               	subwf	_sampleRate& (0+255),w,b
  3717  00070C  0E01               	movlw	1
  3718  00070E  59F3               	subwfb	(_sampleRate+1)& (0+255),w,b
  3719  000710  B0D8               	btfsc	status,0,c
  3720  000712  EF8D  F003         	goto	u4481
  3721  000716  EF8F  F003         	goto	u4480
  3722  00071A                     u4481:
  3723  00071A  EF93  F003         	goto	l4928
  3724  00071E                     u4480:
  3725  00071E                     
  3726                           ; BSR set to: 0
  3727  00071E  0E01               	movlw	1
  3728  000720  6FF3               	movwf	(_sampleRate+1)& (0+255),b
  3729  000722  0E40               	movlw	64
  3730  000724  6FF2               	movwf	_sampleRate& (0+255),b
  3731  000726                     l4928:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;main.c: 261:                     printf("The sampling rate is %u us\r\n", sampleRate/16
      +                          );
  3735  000726  0E3D               	movlw	low STR_54
  3736  000728  6FA1               	movwf	printf@fmt& (0+255),b
  3737  00072A  0EFE               	movlw	high STR_54
  3738  00072C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3739  00072E  C0F2  F0B5         	movff	_sampleRate,??_main
  3740  000732  C0F3  F0B6         	movff	_sampleRate+1,??_main+1
  3741  000736  0E04               	movlw	4
  3742  000738  6FB7               	movwf	(??_main+2)& (0+255),b
  3743  00073A                     u4495:
  3744  00073A  90D8               	bcf	status,0,c
  3745  00073C  33B6               	rrcf	(??_main+1)& (0+255),f,b
  3746  00073E  33B5               	rrcf	??_main& (0+255),f,b
  3747  000740  2FB7               	decfsz	(??_main+2)& (0+255),f,b
  3748  000742  EF9D  F003         	goto	u4495
  3749  000746  C0B5  F0A3         	movff	??_main,?_printf+2
  3750  00074A  C0B6  F0A4         	movff	??_main+1,?_printf+3
  3751  00074E  EC5A  F015         	call	_printf	;wreg free
  3752                           
  3753                           ;main.c: 262:                     break;
  3754  000752  EF70  F000         	goto	l4796
  3755  000756                     l4930:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;main.c: 264:                     printf("Press any key to start recording audio and pre
      +                          ss any key to stop recording\r\n");
  3759  000756  0E42               	movlw	low STR_56
  3760  000758  6FA1               	movwf	printf@fmt& (0+255),b
  3761  00075A  0EFC               	movlw	high STR_56
  3762  00075C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3763  00075E  EC5A  F015         	call	_printf	;wreg free
  3764  000762                     
  3765                           ;main.c: 266:                     localAddress = sdCardAddress;
  3766  000762  C0C6  F0C0         	movff	main@sdCardAddress,main@localAddress
  3767  000766  C0C7  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3768  00076A  C0C8  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3769  00076E  C0C9  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3770  000772                     l4934:
  3771  000772  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3772  000776  0900               	iorlw	0
  3773  000778  B4D8               	btfsc	status,2,c
  3774  00077A  EFC1  F003         	goto	u4501
  3775  00077E  EFC3  F003         	goto	u4500
  3776  000782                     u4501:
  3777  000782  EFB9  F003         	goto	l4934
  3778  000786                     u4500:
  3779  000786                     
  3780                           ;main.c: 268:                     (void) EUSART1_Read();
  3781  000786  EC6E  F015         	call	_EUSART1_Read	;wreg free
  3782  00078A                     
  3783                           ;main.c: 269:                     beginSampling = 1;
  3784  00078A  0E01               	movlw	1
  3785  00078C  6E4C               	movwf	_beginSampling^0,c
  3786                           
  3787                           ;main.c: 271:                     while(!(EUSART1_is_rx_ready())){
  3788  00078E  EF26  F004         	goto	l4960
  3789  000792                     l4940:
  3790                           
  3791                           ;main.c: 272:                         if(blueFull == 1){
  3792  000792  0100               	movlb	0	; () banked
  3793  000794  05D1               	decf	_blueFull& (0+255),w,b
  3794  000796  A4D8               	btfss	status,2,c
  3795  000798  EFD0  F003         	goto	u4511
  3796  00079C  EFD2  F003         	goto	u4510
  3797  0007A0                     u4511:
  3798  0007A0  EFF8  F003         	goto	l4950
  3799  0007A4                     u4510:
  3800  0007A4                     
  3801                           ; BSR set to: 0
  3802  0007A4  888B               	bsf	139,4,c	;volatile
  3803  0007A6                     
  3804                           ; BSR set to: 0
  3805                           ;main.c: 274:                             SDCARD_WriteBlock(localAddress, blueBuffer);
  3806  0007A6  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3807  0007AA  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3808  0007AE  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3809  0007B2  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3810  0007B6  0EF4               	movlw	low _blueBuffer
  3811  0007B8  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3812  0007BA  0E02               	movlw	high _blueBuffer
  3813  0007BC  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3814  0007BE  EC0B  F013         	call	_SDCARD_WriteBlock	;wreg free
  3815  0007C2                     l4944:
  3816  0007C2  EC82  F014         	call	_SDCARD_PollWriteComplete	;wreg free
  3817  0007C6  0100               	movlb	0	; () banked
  3818  0007C8  6FB9               	movwf	main@status& (0+255),b
  3819  0007CA  29B9               	incf	main@status& (0+255),w,b
  3820  0007CC  B4D8               	btfsc	status,2,c
  3821  0007CE  EFEB  F003         	goto	u4521
  3822  0007D2  EFED  F003         	goto	u4520
  3823  0007D6                     u4521:
  3824  0007D6  EFE1  F003         	goto	l4944
  3825  0007DA                     u4520:
  3826  0007DA                     
  3827                           ; BSR set to: 0
  3828  0007DA  988B               	bcf	139,4,c	;volatile
  3829  0007DC                     
  3830                           ; BSR set to: 0
  3831                           ;main.c: 277:                             localAddress += 512;
  3832  0007DC  0E00               	movlw	0
  3833  0007DE  27C0               	addwf	main@localAddress& (0+255),f,b
  3834  0007E0  0E02               	movlw	2
  3835  0007E2  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3836  0007E4  0E00               	movlw	0
  3837  0007E6  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3838  0007E8  0E00               	movlw	0
  3839  0007EA  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3840  0007EC                     
  3841                           ; BSR set to: 0
  3842                           ;main.c: 278:                             blueFull = 0;
  3843  0007EC  0E00               	movlw	0
  3844  0007EE  6FD1               	movwf	_blueFull& (0+255),b
  3845  0007F0                     l4950:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;main.c: 281:                         if(redFull == 1){
  3849  0007F0  05D0               	decf	_redFull& (0+255),w,b
  3850  0007F2  A4D8               	btfss	status,2,c
  3851  0007F4  EFFE  F003         	goto	u4531
  3852  0007F8  EF00  F004         	goto	u4530
  3853  0007FC                     u4531:
  3854  0007FC  EF26  F004         	goto	l4960
  3855  000800                     u4530:
  3856  000800                     
  3857                           ; BSR set to: 0
  3858  000800  888B               	bsf	139,4,c	;volatile
  3859  000802                     
  3860                           ; BSR set to: 0
  3861                           ;main.c: 283:                             SDCARD_WriteBlock(localAddress, redBuffer);
  3862  000802  C0C0  F013         	movff	main@localAddress,SDCARD_WriteBlock@addr
  3863  000806  C0C1  F014         	movff	main@localAddress+1,SDCARD_WriteBlock@addr+1
  3864  00080A  C0C2  F015         	movff	main@localAddress+2,SDCARD_WriteBlock@addr+2
  3865  00080E  C0C3  F016         	movff	main@localAddress+3,SDCARD_WriteBlock@addr+3
  3866  000812  0EF4               	movlw	low _redBuffer
  3867  000814  6E17               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3868  000816  0E00               	movlw	high _redBuffer
  3869  000818  6E18               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3870  00081A  EC0B  F013         	call	_SDCARD_WriteBlock	;wreg free
  3871  00081E                     l4954:
  3872  00081E  EC82  F014         	call	_SDCARD_PollWriteComplete	;wreg free
  3873  000822  0100               	movlb	0	; () banked
  3874  000824  6FB9               	movwf	main@status& (0+255),b
  3875  000826  29B9               	incf	main@status& (0+255),w,b
  3876  000828  B4D8               	btfsc	status,2,c
  3877  00082A  EF19  F004         	goto	u4541
  3878  00082E  EF1B  F004         	goto	u4540
  3879  000832                     u4541:
  3880  000832  EF0F  F004         	goto	l4954
  3881  000836                     u4540:
  3882  000836                     
  3883                           ; BSR set to: 0
  3884  000836  988B               	bcf	139,4,c	;volatile
  3885  000838                     
  3886                           ; BSR set to: 0
  3887                           ;main.c: 286:                             localAddress += 512;
  3888  000838  0E00               	movlw	0
  3889  00083A  27C0               	addwf	main@localAddress& (0+255),f,b
  3890  00083C  0E02               	movlw	2
  3891  00083E  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  3892  000840  0E00               	movlw	0
  3893  000842  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  3894  000844  0E00               	movlw	0
  3895  000846  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  3896  000848                     
  3897                           ; BSR set to: 0
  3898                           ;main.c: 287:                             redFull = 0;
  3899  000848  0E00               	movlw	0
  3900  00084A  6FD0               	movwf	_redFull& (0+255),b
  3901  00084C                     l4960:
  3902                           
  3903                           ;main.c: 271:                     while(!(EUSART1_is_rx_ready())){
  3904  00084C  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3905  000850  0900               	iorlw	0
  3906  000852  B4D8               	btfsc	status,2,c
  3907  000854  EF2E  F004         	goto	u4551
  3908  000858  EF30  F004         	goto	u4550
  3909  00085C                     u4551:
  3910  00085C  EFC9  F003         	goto	l4940
  3911  000860                     u4550:
  3912  000860                     
  3913                           ;main.c: 291:                     (void) EUSART1_Read();
  3914  000860  EC6E  F015         	call	_EUSART1_Read	;wreg free
  3915  000864                     
  3916                           ;main.c: 292:                     beginSampling = 0;
  3917  000864  0E00               	movlw	0
  3918  000866  6E4C               	movwf	_beginSampling^0,c
  3919                           
  3920                           ;main.c: 298:                     break;
  3921  000868  EF70  F000         	goto	l4796
  3922  00086C                     l4966:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 301:                     printf("\r\nYou may terminate spooling at anytime with
      +                           a keypress.\r\nTo spool terminal contents into a file follow these instructions:\r\n\r\
      +                          nRight mouse click on the upper left of the PuTTY window\r\nSelect:     Change settings.
      +                          ..\r\nSelect:     Logging\r\nSelect:     Session logging: All session output\r\nLog file
      +                           name:  Browse and provide a .csv extension to your file name\r\nSelect:     Apply\r\nPr
      +                          ess any key to start");
  3926  00086C  0E5B               	movlw	low STR_57
  3927  00086E  6FA1               	movwf	printf@fmt& (0+255),b
  3928  000870  0EF9               	movlw	high STR_57
  3929  000872  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3930  000874  EC5A  F015         	call	_printf	;wreg free
  3931  000878                     
  3932                           ;main.c: 305:                     localAddress = sdCardAddress;
  3933  000878  C0C6  F0C0         	movff	main@sdCardAddress,main@localAddress
  3934  00087C  C0C7  F0C1         	movff	main@sdCardAddress+1,main@localAddress+1
  3935  000880  C0C8  F0C2         	movff	main@sdCardAddress+2,main@localAddress+2
  3936  000884  C0C9  F0C3         	movff	main@sdCardAddress+3,main@localAddress+3
  3937                           
  3938                           ;main.c: 306:                     while(!(EUSART1_is_rx_ready())){
  3939  000888  EF92  F004         	goto	l4990
  3940  00088C                     l4970:
  3941                           
  3942                           ;main.c: 307:                     SDCARD_ReadBlock(localAddress, blueBuffer);
  3943  00088C  C0C0  F013         	movff	main@localAddress,SDCARD_ReadBlock@addr
  3944  000890  C0C1  F014         	movff	main@localAddress+1,SDCARD_ReadBlock@addr+1
  3945  000894  C0C2  F015         	movff	main@localAddress+2,SDCARD_ReadBlock@addr+2
  3946  000898  C0C3  F016         	movff	main@localAddress+3,SDCARD_ReadBlock@addr+3
  3947  00089C  0EF4               	movlw	low _blueBuffer
  3948  00089E  6E17               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3949  0008A0  0E02               	movlw	high _blueBuffer
  3950  0008A2  6E18               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3951  0008A4  EC73  F012         	call	_SDCARD_ReadBlock	;wreg free
  3952  0008A8                     
  3953                           ;main.c: 308:                     for(int i = 0;i<512;i++){
  3954  0008A8  0E00               	movlw	0
  3955  0008AA  0100               	movlb	0	; () banked
  3956  0008AC  6FBD               	movwf	(main@i_751+1)& (0+255),b
  3957  0008AE  0E00               	movlw	0
  3958  0008B0  6FBC               	movwf	main@i_751& (0+255),b
  3959  0008B2                     l4974:
  3960                           
  3961                           ; BSR set to: 0
  3962  0008B2  BFBD               	btfsc	(main@i_751+1)& (0+255),7,b
  3963  0008B4  EF63  F004         	goto	u4561
  3964  0008B8  0E02               	movlw	2
  3965  0008BA  5DBD               	subwf	(main@i_751+1)& (0+255),w,b
  3966  0008BC  A0D8               	btfss	status,0,c
  3967  0008BE  EF63  F004         	goto	u4561
  3968  0008C2  EF65  F004         	goto	u4560
  3969  0008C6                     u4561:
  3970  0008C6  EF67  F004         	goto	l4978
  3971  0008CA                     u4560:
  3972  0008CA  EF89  F004         	goto	l4988
  3973  0008CE                     l4978:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 309:                         printf("%d\r\n", blueBuffer[i]);
  3977  0008CE  0EE9               	movlw	low STR_58
  3978  0008D0  6FA1               	movwf	printf@fmt& (0+255),b
  3979  0008D2  0EFF               	movlw	high STR_58
  3980  0008D4  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  3981  0008D6  0EF4               	movlw	low _blueBuffer
  3982  0008D8  25BC               	addwf	main@i_751& (0+255),w,b
  3983  0008DA  6ED9               	movwf	fsr2l,c
  3984  0008DC  0E02               	movlw	high _blueBuffer
  3985  0008DE  21BD               	addwfc	(main@i_751+1)& (0+255),w,b
  3986  0008E0  6EDA               	movwf	fsr2h,c
  3987  0008E2  50DF               	movf	indf2,w,c
  3988  0008E4  6FB5               	movwf	??_main& (0+255),b
  3989  0008E6  51B5               	movf	??_main& (0+255),w,b
  3990  0008E8  6FA3               	movwf	(?_printf+2)& (0+255),b
  3991  0008EA  6BA4               	clrf	(?_printf+3)& (0+255),b
  3992  0008EC  EC5A  F015         	call	_printf	;wreg free
  3993  0008F0                     
  3994                           ;main.c: 310:                         if((EUSART1_is_rx_ready())){
  3995  0008F0  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  3996  0008F4  0900               	iorlw	0
  3997  0008F6  B4D8               	btfsc	status,2,c
  3998  0008F8  EF80  F004         	goto	u4571
  3999  0008FC  EF82  F004         	goto	u4570
  4000  000900                     u4571:
  4001  000900  EF84  F004         	goto	l4984
  4002  000904                     u4570:
  4003  000904  EF89  F004         	goto	l4988
  4004  000908                     l4984:
  4005                           
  4006                           ;main.c: 314:                     }
  4007  000908  0100               	movlb	0	; () banked
  4008  00090A  4BBC               	infsnz	main@i_751& (0+255),f,b
  4009  00090C  2BBD               	incf	(main@i_751+1)& (0+255),f,b
  4010  00090E  EF59  F004         	goto	l4974
  4011  000912                     l4988:
  4012                           
  4013                           ;main.c: 315:                     localAddress += 512;
  4014  000912  0E00               	movlw	0
  4015  000914  0100               	movlb	0	; () banked
  4016  000916  27C0               	addwf	main@localAddress& (0+255),f,b
  4017  000918  0E02               	movlw	2
  4018  00091A  23C1               	addwfc	(main@localAddress+1)& (0+255),f,b
  4019  00091C  0E00               	movlw	0
  4020  00091E  23C2               	addwfc	(main@localAddress+2)& (0+255),f,b
  4021  000920  0E00               	movlw	0
  4022  000922  23C3               	addwfc	(main@localAddress+3)& (0+255),f,b
  4023  000924                     l4990:
  4024                           
  4025                           ;main.c: 306:                     while(!(EUSART1_is_rx_ready())){
  4026  000924  ECD7  F015         	call	_EUSART1_is_rx_ready	;wreg free
  4027  000928  0900               	iorlw	0
  4028  00092A  B4D8               	btfsc	status,2,c
  4029  00092C  EF9A  F004         	goto	u4581
  4030  000930  EF9C  F004         	goto	u4580
  4031  000934                     u4581:
  4032  000934  EF46  F004         	goto	l4970
  4033  000938                     u4580:
  4034  000938                     
  4035                           ;main.c: 318:                     (void) EUSART1_Read();
  4036  000938  EC6E  F015         	call	_EUSART1_Read	;wreg free
  4037  00093C                     
  4038                           ;main.c: 320:                     printf("Spooled 512 out of the 512 blocks. \r\nTo clos
      +                          e the file follow these instructions: \r\n \r\nRight mouse click on the upper left of th
      +                          e PuTTY window \r\nSelect:     Change settings... \r\nSelect:     Logging \r\nSelect:   
      +                            Session  logging: None \r\nSelect:     Apply");
  4039  00093C  0EEA               	movlw	low STR_59
  4040  00093E  0100               	movlb	0	; () banked
  4041  000940  6FA1               	movwf	printf@fmt& (0+255),b
  4042  000942  0EFA               	movlw	high STR_59
  4043  000944  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4044  000946  EC5A  F015         	call	_printf	;wreg free
  4045                           
  4046                           ;main.c: 321:                     break;
  4047  00094A  EF70  F000         	goto	l4796
  4048  00094E                     l4996:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;main.c: 326:                     printf("Unknown key %c\r\n", cmd);
  4052  00094E  0E70               	movlw	low STR_60
  4053  000950  6FA1               	movwf	printf@fmt& (0+255),b
  4054  000952  0EFF               	movlw	high STR_60
  4055  000954  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4056  000956  C0BB  F0A3         	movff	main@cmd,?_printf+2
  4057  00095A  6BA4               	clrf	(?_printf+3)& (0+255),b
  4058  00095C  EC5A  F015         	call	_printf	;wreg free
  4059                           
  4060                           ;main.c: 327:                     break;
  4061  000960  EF70  F000         	goto	l4796
  4062  000964                     l5000:
  4063                           
  4064                           ; BSR set to: 0
  4065  000964  51BB               	movf	main@cmd& (0+255),w,b
  4066  000966  6FB5               	movwf	??_main& (0+255),b
  4067  000968  6BB6               	clrf	(??_main+1)& (0+255),b
  4068                           
  4069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4070                           ; Switch size 1, requested type "simple"
  4071                           ; Number of cases is 1, Range of values is 0 to 0
  4072                           ; switch strategies available:
  4073                           ; Name         Instructions Cycles
  4074                           ; simple_byte            4     3 (average)
  4075                           ;	Chosen strategy is simple_byte
  4076  00096A  51B6               	movf	(??_main+1)& (0+255),w,b
  4077  00096C  0A00               	xorlw	0	; case 0
  4078  00096E  B4D8               	btfsc	status,2,c
  4079  000970  EFBC  F004         	goto	l5118
  4080  000974  EFA7  F004         	goto	l4996
  4081  000978                     l5118:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ; Switch size 1, requested type "simple"
  4085                           ; Number of cases is 14, Range of values is 43 to 122
  4086                           ; switch strategies available:
  4087                           ; Name         Instructions Cycles
  4088                           ; simple_byte           43    22 (average)
  4089                           ;	Chosen strategy is simple_byte
  4090  000978  51B5               	movf	??_main& (0+255),w,b
  4091  00097A  0A2B               	xorlw	43	; case 43
  4092  00097C  B4D8               	btfsc	status,2,c
  4093  00097E  EF64  F003         	goto	l4920
  4094  000982  0A06               	xorlw	6	; case 45
  4095  000984  B4D8               	btfsc	status,2,c
  4096  000986  EF80  F003         	goto	l4924
  4097  00098A  0A1C               	xorlw	28	; case 49
  4098  00098C  B4D8               	btfsc	status,2,c
  4099  00098E  EFEA  F002         	goto	l4888
  4100  000992  0A0E               	xorlw	14	; case 63
  4101  000994  B4D8               	btfsc	status,2,c
  4102  000996  EF80  F000         	goto	l4800
  4103  00099A  0A7E               	xorlw	126	; case 65
  4104  00099C  B4D8               	btfsc	status,2,c
  4105  00099E  EF88  F001         	goto	l4834
  4106  0009A2  0A16               	xorlw	22	; case 87
  4107  0009A4  B4D8               	btfsc	status,2,c
  4108  0009A6  EFAB  F003         	goto	l4930
  4109  0009AA  0A0D               	xorlw	13	; case 90
  4110  0009AC  B4D8               	btfsc	status,2,c
  4111  0009AE  EF49  F001         	goto	l4804
  4112  0009B2  0A3B               	xorlw	59	; case 97
  4113  0009B4  B4D8               	btfsc	status,2,c
  4114  0009B6  EF88  F001         	goto	l4834
  4115  0009BA  0A08               	xorlw	8	; case 105
  4116  0009BC  B4D8               	btfsc	status,2,c
  4117  0009BE  EF7E  F001         	goto	l4828
  4118  0009C2  0A06               	xorlw	6	; case 111
  4119  0009C4  B4D8               	btfsc	status,2,c
  4120  0009C6  EF41  F001         	goto	l4802
  4121  0009CA  0A1D               	xorlw	29	; case 114
  4122  0009CC  B4D8               	btfsc	status,2,c
  4123  0009CE  EF95  F002         	goto	l233
  4124  0009D2  0A01               	xorlw	1	; case 115
  4125  0009D4  B4D8               	btfsc	status,2,c
  4126  0009D6  EF36  F004         	goto	l4966
  4127  0009DA  0A04               	xorlw	4	; case 119
  4128  0009DC  B4D8               	btfsc	status,2,c
  4129  0009DE  EF1A  F002         	goto	l4852
  4130  0009E2  0A0D               	xorlw	13	; case 122
  4131  0009E4  B4D8               	btfsc	status,2,c
  4132  0009E6  EF64  F001         	goto	l4816
  4133  0009EA  EFA7  F004         	goto	l4996
  4134  0009EE  EF27  F000         	goto	start
  4135  0009F2                     __end_of_main:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _hexDumpBuffer *****************
  4139 ;; Defined at:
  4140 ;;		line 179 in file "sdCard.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  sdCardBuffer    2   75[BANK0 ] PTR unsigned char 
  4143 ;;		 -> blueBuffer(512), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  j               2   79[BANK0 ] int 
  4146 ;;  j               2   81[BANK0 ] int 
  4147 ;;  i               2   83[BANK0 ] unsigned short 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:       10 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:   13
  4164 ;; This function calls:
  4165 ;;		_printf
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text1
  4172  001738                     __ptext1:
  4173                           	callstack 0
  4174  001738                     _hexDumpBuffer:
  4175                           	callstack 17
  4176  001738                     
  4177                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  4178  001738  0EF3               	movlw	low STR_64
  4179  00173A  0100               	movlb	0	; () banked
  4180  00173C  6FA1               	movwf	printf@fmt& (0+255),b
  4181  00173E  0EFF               	movlw	high STR_64
  4182  001740  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4183  001742  EC5A  F015         	call	_printf	;wreg free
  4184  001746                     
  4185                           ;sdCard.c: 185:                     printf(".");
  4186  001746  0E00               	movlw	0
  4187  001748  0100               	movlb	0	; () banked
  4188  00174A  6FB4               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  4189  00174C  0E00               	movlw	0
  4190  00174E  6FB3               	movwf	hexDumpBuffer@i& (0+255),b
  4191  001750                     l4722:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;sdCard.c: 186:                 } else {
  4195  001750  51B3               	movf	hexDumpBuffer@i& (0+255),w,b
  4196  001752  11B4               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4197  001754  B4D8               	btfsc	status,2,c
  4198  001756  EFAF  F00B         	goto	u4261
  4199  00175A  EFB1  F00B         	goto	u4260
  4200  00175E                     u4261:
  4201  00175E  EFC6  F00B         	goto	l4728
  4202  001762                     u4260:
  4203  001762                     
  4204                           ; BSR set to: 0
  4205  001762  0E07               	movlw	7
  4206  001764  15B3               	andwf	hexDumpBuffer@i& (0+255),w,b
  4207  001766  6FAD               	movwf	??_hexDumpBuffer& (0+255),b
  4208  001768  0E00               	movlw	0
  4209  00176A  15B4               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4210  00176C  6FAE               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4211  00176E  51AD               	movf	??_hexDumpBuffer& (0+255),w,b
  4212  001770  11AE               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4213  001772  A4D8               	btfss	status,2,c
  4214  001774  EFBE  F00B         	goto	u4271
  4215  001778  EFC0  F00B         	goto	u4270
  4216  00177C                     u4271:
  4217  00177C  EFC6  F00B         	goto	l4728
  4218  001780                     u4270:
  4219  001780                     
  4220                           ; BSR set to: 0
  4221  001780  0E90               	movlw	low (STR_40+15)
  4222  001782  6FA1               	movwf	printf@fmt& (0+255),b
  4223  001784  0EFF               	movlw	high (STR_40+15)
  4224  001786  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4225  001788  EC5A  F015         	call	_printf	;wreg free
  4226  00178C                     l4728:
  4227                           
  4228                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  4229  00178C  0100               	movlb	0	; () banked
  4230  00178E  51B3               	movf	hexDumpBuffer@i& (0+255),w,b
  4231  001790  11B4               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4232  001792  B4D8               	btfsc	status,2,c
  4233  001794  EFCE  F00B         	goto	u4281
  4234  001798  EFD0  F00B         	goto	u4280
  4235  00179C                     u4281:
  4236  00179C  EF29  F00C         	goto	l509
  4237  0017A0                     u4280:
  4238  0017A0                     
  4239                           ; BSR set to: 0
  4240  0017A0  0E0F               	movlw	15
  4241  0017A2  15B3               	andwf	hexDumpBuffer@i& (0+255),w,b
  4242  0017A4  6FAD               	movwf	??_hexDumpBuffer& (0+255),b
  4243  0017A6  0E00               	movlw	0
  4244  0017A8  15B4               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4245  0017AA  6FAE               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4246  0017AC  51AD               	movf	??_hexDumpBuffer& (0+255),w,b
  4247  0017AE  11AE               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4248  0017B0  A4D8               	btfss	status,2,c
  4249  0017B2  EFDD  F00B         	goto	u4291
  4250  0017B6  EFDF  F00B         	goto	u4290
  4251  0017BA                     u4291:
  4252  0017BA  EF29  F00C         	goto	l509
  4253  0017BE                     u4290:
  4254  0017BE                     
  4255                           ; BSR set to: 0
  4256                           ;sdCard.c: 188:                 }
  4257  0017BE  0E8F               	movlw	low (STR_40+14)
  4258  0017C0  6FA1               	movwf	printf@fmt& (0+255),b
  4259  0017C2  0EFF               	movlw	high (STR_40+14)
  4260  0017C4  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4261  0017C6  EC5A  F015         	call	_printf	;wreg free
  4262  0017CA                     
  4263                           ;sdCard.c: 189:             }
  4264  0017CA  0EF0               	movlw	240
  4265  0017CC  0100               	movlb	0	; () banked
  4266  0017CE  25B3               	addwf	hexDumpBuffer@i& (0+255),w,b
  4267  0017D0  6FAF               	movwf	hexDumpBuffer@j& (0+255),b
  4268  0017D2  0EFF               	movlw	255
  4269  0017D4  21B4               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4270  0017D6  6FB0               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  4271  0017D8  EF18  F00C         	goto	l4744
  4272  0017DC                     l4736:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;sdCard.c: 190:             printf("\r\n");
  4276  0017DC  51AF               	movf	hexDumpBuffer@j& (0+255),w,b
  4277  0017DE  25AB               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4278  0017E0  6ED9               	movwf	fsr2l,c
  4279  0017E2  51B0               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4280  0017E4  21AC               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4281  0017E6  6EDA               	movwf	fsr2h,c
  4282  0017E8  0E20               	movlw	32
  4283  0017EA  60DF               	cpfslt	indf2,c
  4284  0017EC  EFFA  F00B         	goto	u4301
  4285  0017F0  EFFC  F00B         	goto	u4300
  4286  0017F4                     u4301:
  4287  0017F4  EF04  F00C         	goto	l4740
  4288  0017F8                     u4300:
  4289  0017F8                     
  4290                           ; BSR set to: 0
  4291                           ;sdCard.c: 191:         }
  4292  0017F8  0EFA               	movlw	low STR_67
  4293  0017FA  6FA1               	movwf	printf@fmt& (0+255),b
  4294  0017FC  0EFF               	movlw	high STR_67
  4295  0017FE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4296  001800  EC5A  F015         	call	_printf	;wreg free
  4297                           
  4298                           ;sdCard.c: 192: 
  4299  001804  EF15  F00C         	goto	l4742
  4300  001808                     l4740:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  4304  001808  0EF7               	movlw	low STR_68
  4305  00180A  6FA1               	movwf	printf@fmt& (0+255),b
  4306  00180C  0EFF               	movlw	high STR_68
  4307  00180E  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4308  001810  51AF               	movf	hexDumpBuffer@j& (0+255),w,b
  4309  001812  25AB               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4310  001814  6ED9               	movwf	fsr2l,c
  4311  001816  51B0               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4312  001818  21AC               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4313  00181A  6EDA               	movwf	fsr2h,c
  4314  00181C  50DF               	movf	indf2,w,c
  4315  00181E  6FAD               	movwf	??_hexDumpBuffer& (0+255),b
  4316  001820  51AD               	movf	??_hexDumpBuffer& (0+255),w,b
  4317  001822  6FA3               	movwf	(?_printf+2)& (0+255),b
  4318  001824  6BA4               	clrf	(?_printf+3)& (0+255),b
  4319  001826  EC5A  F015         	call	_printf	;wreg free
  4320  00182A                     l4742:
  4321                           
  4322                           ;sdCard.c: 195: 
  4323  00182A  0100               	movlb	0	; () banked
  4324  00182C  4BAF               	infsnz	hexDumpBuffer@j& (0+255),f,b
  4325  00182E  2BB0               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  4326  001830                     l4744:
  4327                           
  4328                           ; BSR set to: 0
  4329  001830  51B3               	movf	hexDumpBuffer@i& (0+255),w,b
  4330  001832  5DAF               	subwf	hexDumpBuffer@j& (0+255),w,b
  4331  001834  51B4               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4332  001836  59B0               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  4333  001838  A0D8               	btfss	status,0,c
  4334  00183A  EF21  F00C         	goto	u4311
  4335  00183E  EF23  F00C         	goto	u4310
  4336  001842                     u4311:
  4337  001842  EFEE  F00B         	goto	l4736
  4338  001846                     u4310:
  4339  001846                     
  4340                           ; BSR set to: 0
  4341                           ;sdCard.c: 196:     printf("   ");
  4342  001846  0EAE               	movlw	low (STR_46+12)
  4343  001848  6FA1               	movwf	printf@fmt& (0+255),b
  4344  00184A  0EFF               	movlw	high (STR_46+12)
  4345  00184C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4346  00184E  EC5A  F015         	call	_printf	;wreg free
  4347  001852                     l509:
  4348                           
  4349                           ;sdCard.c: 199:             printf(".");
  4350  001852  0EE3               	movlw	low STR_70
  4351  001854  0100               	movlb	0	; () banked
  4352  001856  6FA1               	movwf	printf@fmt& (0+255),b
  4353  001858  0EFF               	movlw	high STR_70
  4354  00185A  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4355  00185C  51B3               	movf	hexDumpBuffer@i& (0+255),w,b
  4356  00185E  25AB               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4357  001860  6ED9               	movwf	fsr2l,c
  4358  001862  51B4               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4359  001864  21AC               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4360  001866  6EDA               	movwf	fsr2h,c
  4361  001868  50DF               	movf	indf2,w,c
  4362  00186A  6FAD               	movwf	??_hexDumpBuffer& (0+255),b
  4363  00186C  51AD               	movf	??_hexDumpBuffer& (0+255),w,b
  4364  00186E  6FA3               	movwf	(?_printf+2)& (0+255),b
  4365  001870  6BA4               	clrf	(?_printf+3)& (0+255),b
  4366  001872  EC5A  F015         	call	_printf	;wreg free
  4367  001876                     
  4368                           ;sdCard.c: 200:         } else {
  4369  001876  0100               	movlb	0	; () banked
  4370  001878  4BB3               	infsnz	hexDumpBuffer@i& (0+255),f,b
  4371  00187A  2BB4               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  4372  00187C                     
  4373                           ; BSR set to: 0
  4374  00187C  0E02               	movlw	2
  4375  00187E  5DB4               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4376  001880  A0D8               	btfss	status,0,c
  4377  001882  EF45  F00C         	goto	u4321
  4378  001886  EF47  F00C         	goto	u4320
  4379  00188A                     u4321:
  4380  00188A  EFA8  F00B         	goto	l4722
  4381  00188E                     u4320:
  4382  00188E                     
  4383                           ; BSR set to: 0
  4384                           ;sdCard.c: 202:         }
  4385  00188E  0E8E               	movlw	low (STR_40+13)
  4386  001890  6FA1               	movwf	printf@fmt& (0+255),b
  4387  001892  0EFF               	movlw	high (STR_40+13)
  4388  001894  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4389  001896  EC5A  F015         	call	_printf	;wreg free
  4390  00189A                     
  4391                           ;sdCard.c: 203:     }
  4392  00189A  0EF0               	movlw	240
  4393  00189C  0100               	movlb	0	; () banked
  4394  00189E  25B3               	addwf	hexDumpBuffer@i& (0+255),w,b
  4395  0018A0  6FB1               	movwf	hexDumpBuffer@j_1205& (0+255),b
  4396  0018A2  0EFF               	movlw	255
  4397  0018A4  21B4               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4398  0018A6  6FB2               	movwf	(hexDumpBuffer@j_1205+1)& (0+255),b
  4399  0018A8  EF80  F00C         	goto	l4764
  4400  0018AC                     l4756:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;sdCard.c: 204:     printf("\r\n");
  4404  0018AC  51B1               	movf	hexDumpBuffer@j_1205& (0+255),w,b
  4405  0018AE  25AB               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4406  0018B0  6ED9               	movwf	fsr2l,c
  4407  0018B2  51B2               	movf	(hexDumpBuffer@j_1205+1)& (0+255),w,b
  4408  0018B4  21AC               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4409  0018B6  6EDA               	movwf	fsr2h,c
  4410  0018B8  0E20               	movlw	32
  4411  0018BA  60DF               	cpfslt	indf2,c
  4412  0018BC  EF62  F00C         	goto	u4331
  4413  0018C0  EF64  F00C         	goto	u4330
  4414  0018C4                     u4331:
  4415  0018C4  EF6C  F00C         	goto	l4760
  4416  0018C8                     u4330:
  4417  0018C8                     
  4418                           ; BSR set to: 0
  4419                           ;sdCard.c: 205: }
  4420  0018C8  0EFA               	movlw	low STR_67
  4421  0018CA  6FA1               	movwf	printf@fmt& (0+255),b
  4422  0018CC  0EFF               	movlw	high STR_67
  4423  0018CE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4424  0018D0  EC5A  F015         	call	_printf	;wreg free
  4425  0018D4  EF7D  F00C         	goto	l4762
  4426  0018D8                     l4760:
  4427                           
  4428                           ; BSR set to: 0
  4429  0018D8  0EF7               	movlw	low STR_68
  4430  0018DA  6FA1               	movwf	printf@fmt& (0+255),b
  4431  0018DC  0EFF               	movlw	high STR_68
  4432  0018DE  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4433  0018E0  51B1               	movf	hexDumpBuffer@j_1205& (0+255),w,b
  4434  0018E2  25AB               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4435  0018E4  6ED9               	movwf	fsr2l,c
  4436  0018E6  51B2               	movf	(hexDumpBuffer@j_1205+1)& (0+255),w,b
  4437  0018E8  21AC               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4438  0018EA  6EDA               	movwf	fsr2h,c
  4439  0018EC  50DF               	movf	indf2,w,c
  4440  0018EE  6FAD               	movwf	??_hexDumpBuffer& (0+255),b
  4441  0018F0  51AD               	movf	??_hexDumpBuffer& (0+255),w,b
  4442  0018F2  6FA3               	movwf	(?_printf+2)& (0+255),b
  4443  0018F4  6BA4               	clrf	(?_printf+3)& (0+255),b
  4444  0018F6  EC5A  F015         	call	_printf	;wreg free
  4445  0018FA                     l4762:
  4446  0018FA  0100               	movlb	0	; () banked
  4447  0018FC  4BB1               	infsnz	hexDumpBuffer@j_1205& (0+255),f,b
  4448  0018FE  2BB2               	incf	(hexDumpBuffer@j_1205+1)& (0+255),f,b
  4449  001900                     l4764:
  4450                           
  4451                           ; BSR set to: 0
  4452  001900  51B3               	movf	hexDumpBuffer@i& (0+255),w,b
  4453  001902  5DB1               	subwf	hexDumpBuffer@j_1205& (0+255),w,b
  4454  001904  51B4               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4455  001906  59B2               	subwfb	(hexDumpBuffer@j_1205+1)& (0+255),w,b
  4456  001908  A0D8               	btfss	status,0,c
  4457  00190A  EF89  F00C         	goto	u4341
  4458  00190E  EF8B  F00C         	goto	u4340
  4459  001912                     u4341:
  4460  001912  EF56  F00C         	goto	l4756
  4461  001916                     u4340:
  4462  001916                     
  4463                           ; BSR set to: 0
  4464  001916  0EAE               	movlw	low (STR_46+12)
  4465  001918  6FA1               	movwf	printf@fmt& (0+255),b
  4466  00191A  0EFF               	movlw	high (STR_46+12)
  4467  00191C  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  4468  00191E  EC5A  F015         	call	_printf	;wreg free
  4469  001922  0012               	return		;funcret
  4470  001924                     __end_of_hexDumpBuffer:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function ___awmod *****************
  4474 ;; Defined at:
  4475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  dividend        2   17[COMRAM] int 
  4478 ;;  divisor         2   19[COMRAM] int 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  sign            1   22[COMRAM] unsigned char 
  4481 ;;  counter         1   21[COMRAM] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  2   17[COMRAM] int 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    4
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text2
  4506  00238A                     __ptext2:
  4507                           	callstack 0
  4508  00238A                     ___awmod:
  4509                           	callstack 26
  4510  00238A  0E00               	movlw	0
  4511  00238C  6E17               	movwf	___awmod@sign^0,c
  4512  00238E  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
  4513  002390  EFCE  F011         	goto	u3310
  4514  002394  EFCC  F011         	goto	u3311
  4515  002398                     u3311:
  4516  002398  EFD4  F011         	goto	l3916
  4517  00239C                     u3310:
  4518  00239C  6C12               	negf	___awmod@dividend^0,c
  4519  00239E  1E13               	comf	(___awmod@dividend+1)^0,f,c
  4520  0023A0  B0D8               	btfsc	status,0,c
  4521  0023A2  2A13               	incf	(___awmod@dividend+1)^0,f,c
  4522  0023A4  0E01               	movlw	1
  4523  0023A6  6E17               	movwf	___awmod@sign^0,c
  4524  0023A8                     l3916:
  4525  0023A8  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
  4526  0023AA  EFDB  F011         	goto	u3320
  4527  0023AE  EFD9  F011         	goto	u3321
  4528  0023B2                     u3321:
  4529  0023B2  EFDF  F011         	goto	l3920
  4530  0023B6                     u3320:
  4531  0023B6  6C14               	negf	___awmod@divisor^0,c
  4532  0023B8  1E15               	comf	(___awmod@divisor+1)^0,f,c
  4533  0023BA  B0D8               	btfsc	status,0,c
  4534  0023BC  2A15               	incf	(___awmod@divisor+1)^0,f,c
  4535  0023BE                     l3920:
  4536  0023BE  5014               	movf	___awmod@divisor^0,w,c
  4537  0023C0  1015               	iorwf	(___awmod@divisor+1)^0,w,c
  4538  0023C2  B4D8               	btfsc	status,2,c
  4539  0023C4  EFE6  F011         	goto	u3331
  4540  0023C8  EFE8  F011         	goto	u3330
  4541  0023CC                     u3331:
  4542  0023CC  EF0C  F012         	goto	l3936
  4543  0023D0                     u3330:
  4544  0023D0  0E01               	movlw	1
  4545  0023D2  6E16               	movwf	___awmod@counter^0,c
  4546  0023D4  EFF0  F011         	goto	l3926
  4547  0023D8                     l3924:
  4548  0023D8  90D8               	bcf	status,0,c
  4549  0023DA  3614               	rlcf	___awmod@divisor^0,f,c
  4550  0023DC  3615               	rlcf	(___awmod@divisor+1)^0,f,c
  4551  0023DE  2A16               	incf	___awmod@counter^0,f,c
  4552  0023E0                     l3926:
  4553  0023E0  AE15               	btfss	(___awmod@divisor+1)^0,7,c
  4554  0023E2  EFF5  F011         	goto	u3341
  4555  0023E6  EFF7  F011         	goto	u3340
  4556  0023EA                     u3341:
  4557  0023EA  EFEC  F011         	goto	l3924
  4558  0023EE                     u3340:
  4559  0023EE                     l3928:
  4560  0023EE  5014               	movf	___awmod@divisor^0,w,c
  4561  0023F0  5C12               	subwf	___awmod@dividend^0,w,c
  4562  0023F2  5015               	movf	(___awmod@divisor+1)^0,w,c
  4563  0023F4  5813               	subwfb	(___awmod@dividend+1)^0,w,c
  4564  0023F6  A0D8               	btfss	status,0,c
  4565  0023F8  EF00  F012         	goto	u3351
  4566  0023FC  EF02  F012         	goto	u3350
  4567  002400                     u3351:
  4568  002400  EF06  F012         	goto	l3932
  4569  002404                     u3350:
  4570  002404  5014               	movf	___awmod@divisor^0,w,c
  4571  002406  5E12               	subwf	___awmod@dividend^0,f,c
  4572  002408  5015               	movf	(___awmod@divisor+1)^0,w,c
  4573  00240A  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
  4574  00240C                     l3932:
  4575  00240C  90D8               	bcf	status,0,c
  4576  00240E  3215               	rrcf	(___awmod@divisor+1)^0,f,c
  4577  002410  3214               	rrcf	___awmod@divisor^0,f,c
  4578  002412  2E16               	decfsz	___awmod@counter^0,f,c
  4579  002414  EFF7  F011         	goto	l3928
  4580  002418                     l3936:
  4581  002418  5017               	movf	___awmod@sign^0,w,c
  4582  00241A  B4D8               	btfsc	status,2,c
  4583  00241C  EF12  F012         	goto	u3361
  4584  002420  EF14  F012         	goto	u3360
  4585  002424                     u3361:
  4586  002424  EF18  F012         	goto	l3940
  4587  002428                     u3360:
  4588  002428  6C12               	negf	___awmod@dividend^0,c
  4589  00242A  1E13               	comf	(___awmod@dividend+1)^0,f,c
  4590  00242C  B0D8               	btfsc	status,0,c
  4591  00242E  2A13               	incf	(___awmod@dividend+1)^0,f,c
  4592  002430                     l3940:
  4593  002430  C012  F012         	movff	___awmod@dividend,?___awmod
  4594  002434  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  4595  002438  0012               	return		;funcret
  4596  00243A                     __end_of___awmod:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _TMR0_WriteTimer *****************
  4600 ;; Defined at:
  4601 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  timerVal        2   17[COMRAM] unsigned short 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    4
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text3
  4630  002BD4                     __ptext3:
  4631                           	callstack 0
  4632  002BD4                     _TMR0_WriteTimer:
  4633                           	callstack 26
  4634  002BD4                     
  4635                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4636  002BD4  5013               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4637  002BD6  6ED7               	movwf	215,c	;volatile
  4638  002BD8                     
  4639                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4640  002BD8  C012  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4641  002BDC  0012               	return		;funcret
  4642  002BDE                     __end_of_TMR0_WriteTimer:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _SYSTEM_Initialize *****************
  4646 ;; Defined at:
  4647 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    6
  4668 ;; This function calls:
  4669 ;;		_EUSART1_Initialize
  4670 ;;		_INTERRUPT_Initialize
  4671 ;;		_OSCILLATOR_Initialize
  4672 ;;		_PIN_MANAGER_Initialize
  4673 ;;		_SPI2_Initialize
  4674 ;;		_TMR0_Initialize
  4675 ;; This function is called by:
  4676 ;;		_main
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text4
  4681  002B64                     __ptext4:
  4682                           	callstack 0
  4683  002B64                     _SYSTEM_Initialize:
  4684                           	callstack 24
  4685  002B64                     
  4686                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4687  002B64  EC0D  F016         	call	_INTERRUPT_Initialize	;wreg free
  4688  002B68                     
  4689                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  4690  002B68  ECE1  F015         	call	_SPI2_Initialize	;wreg free
  4691  002B6C                     
  4692                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  4693  002B6C  EC43  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  4694  002B70                     
  4695                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  4696  002B70  ECA4  F015         	call	_OSCILLATOR_Initialize	;wreg free
  4697  002B74                     
  4698                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4699  002B74  ECF2  F014         	call	_TMR0_Initialize	;wreg free
  4700  002B78                     
  4701                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4702  002B78  EC45  F014         	call	_EUSART1_Initialize	;wreg free
  4703  002B7C  0012               	return		;funcret
  4704  002B7E                     __end_of_SYSTEM_Initialize:
  4705                           	callstack 0
  4706                           
  4707 ;; *************** function _TMR0_Initialize *****************
  4708 ;; Defined at:
  4709 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        2 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    5
  4730 ;; This function calls:
  4731 ;;		_TMR0_SetInterruptHandler
  4732 ;; This function is called by:
  4733 ;;		_SYSTEM_Initialize
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text5
  4738  0029E4                     __ptext5:
  4739                           	callstack 0
  4740  0029E4                     _TMR0_Initialize:
  4741                           	callstack 24
  4742  0029E4                     
  4743                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4744  0029E4  9CD5               	bcf	213,6,c	;volatile
  4745  0029E6                     
  4746                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4747  0029E6  0E00               	movlw	0
  4748  0029E8  6ED7               	movwf	215,c	;volatile
  4749                           
  4750                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  4751  0029EA  0E00               	movlw	0
  4752  0029EC  6ED6               	movwf	214,c	;volatile
  4753  0029EE                     
  4754                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4755  0029EE  50D6               	movf	214,w,c	;volatile
  4756  0029F0  CFD7 F014          	movff	4055,??_TMR0_Initialize	;volatile
  4757  0029F4  6A15               	clrf	(??_TMR0_Initialize+1)^0,c
  4758  0029F6  C014  F015         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4759  0029FA  6A14               	clrf	??_TMR0_Initialize^0,c
  4760  0029FC  1014               	iorwf	??_TMR0_Initialize^0,w,c
  4761  0029FE  6E46               	movwf	_timer0ReloadVal^0,c	;volatile
  4762  002A00  5015               	movf	(??_TMR0_Initialize+1)^0,w,c
  4763  002A02  6E47               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4764  002A04                     
  4765                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4766  002A04  94F2               	bcf	242,2,c	;volatile
  4767  002A06                     
  4768                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4769  002A06  8AF2               	bsf	242,5,c	;volatile
  4770  002A08                     
  4771                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4772  002A08  0E24               	movlw	low _TMR0_DefaultInterruptHandler
  4773  002A0A  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4774  002A0C  0E2C               	movlw	high _TMR0_DefaultInterruptHandler
  4775  002A0E  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4776  002A10  ECEF  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  4777  002A14                     
  4778                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4779  002A14  0E9F               	movlw	159
  4780  002A16  6ED5               	movwf	213,c	;volatile
  4781  002A18  0012               	return		;funcret
  4782  002A1A                     __end_of_TMR0_Initialize:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _TMR0_SetInterruptHandler *****************
  4786 ;; Defined at:
  4787 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  InterruptHan    2   17[COMRAM] PTR FTN()void 
  4790 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;Total ram usage:        2 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    4
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_TMR0_Initialize
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text6
  4818  002BDE                     __ptext6:
  4819                           	callstack 0
  4820  002BDE                     _TMR0_SetInterruptHandler:
  4821                           	callstack 26
  4822  002BDE                     
  4823                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4824  002BDE  C012  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4825  002BE2  C013  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4826  002BE6  0012               	return		;funcret
  4827  002BE8                     __end_of_TMR0_SetInterruptHandler:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _SPI2_Initialize *****************
  4831 ;; Defined at:
  4832 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    4
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_SYSTEM_Initialize
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text7
  4861  002BC2                     __ptext7:
  4862                           	callstack 0
  4863  002BC2                     _SPI2_Initialize:
  4864                           	callstack 25
  4865  002BC2                     
  4866                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  4867  002BC2  0E40               	movlw	64
  4868  002BC4  6E6D               	movwf	109,c	;volatile
  4869                           
  4870                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  4871  002BC6  0E01               	movlw	1
  4872  002BC8  6E6C               	movwf	108,c	;volatile
  4873                           
  4874                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  4875  002BCA  0E01               	movlw	1
  4876  002BCC  6E6E               	movwf	110,c	;volatile
  4877  002BCE                     
  4878                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  4879  002BCE  9293               	bcf	147,1,c	;volatile
  4880  002BD0                     
  4881                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  4882  002BD0  9A6C               	bcf	108,5,c	;volatile
  4883  002BD2  0012               	return		;funcret
  4884  002BD4                     __end_of_SPI2_Initialize:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function _PIN_MANAGER_Initialize *****************
  4888 ;; Defined at:
  4889 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;Total ram usage:        0 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    4
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_SYSTEM_Initialize
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text8
  4918  002A86                     __ptext8:
  4919                           	callstack 0
  4920  002A86                     _PIN_MANAGER_Initialize:
  4921                           	callstack 25
  4922  002A86                     
  4923                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4924  002A86  0E00               	movlw	0
  4925  002A88  6E89               	movwf	137,c	;volatile
  4926                           
  4927                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4928  002A8A  0E00               	movlw	0
  4929  002A8C  6E8A               	movwf	138,c	;volatile
  4930                           
  4931                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4932  002A8E  0E00               	movlw	0
  4933  002A90  6E8B               	movwf	139,c	;volatile
  4934                           
  4935                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4936  002A92  0EBF               	movlw	191
  4937  002A94  6E92               	movwf	146,c	;volatile
  4938                           
  4939                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  4940  002A96  0EE5               	movlw	229
  4941  002A98  6E93               	movwf	147,c	;volatile
  4942                           
  4943                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  4944  002A9A  0E8F               	movlw	143
  4945  002A9C  6E94               	movwf	148,c	;volatile
  4946                           
  4947                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0C;
  4948  002A9E  0E0C               	movlw	12
  4949  002AA0  010F               	movlb	15	; () banked
  4950  002AA2  6F3A               	movwf	58,b	;volatile
  4951                           
  4952                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  4953  002AA4  0E31               	movlw	49
  4954  002AA6  6F39               	movwf	57,b	;volatile
  4955                           
  4956                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4957  002AA8  0E2F               	movlw	47
  4958  002AAA  6F38               	movwf	56,b	;volatile
  4959                           
  4960                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4961  002AAC  0E00               	movlw	0
  4962  002AAE  6E61               	movwf	97,c	;volatile
  4963  002AB0                     
  4964                           ; BSR set to: 15
  4965                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4966  002AB0  8EF1               	bsf	241,7,c	;volatile
  4967  002AB2                     
  4968                           ; BSR set to: 15
  4969  002AB2  0012               	return		;funcret
  4970  002AB4                     __end_of_PIN_MANAGER_Initialize:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _OSCILLATOR_Initialize *****************
  4974 ;; Defined at:
  4975 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;		None
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        0 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    4
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_SYSTEM_Initialize
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text9
  5004  002B48                     __ptext9:
  5005                           	callstack 0
  5006  002B48                     _OSCILLATOR_Initialize:
  5007                           	callstack 25
  5008  002B48                     
  5009                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5010  002B48  0E70               	movlw	112
  5011  002B4A  6ED3               	movwf	211,c	;volatile
  5012                           
  5013                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5014  002B4C  0E04               	movlw	4
  5015  002B4E  6ED2               	movwf	210,c	;volatile
  5016                           
  5017                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5018  002B50  0E40               	movlw	64
  5019  002B52  6E9B               	movwf	155,c	;volatile
  5020  002B54                     l418:
  5021                           
  5022                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5023  002B54  AED2               	btfss	4050,7,c	;volatile
  5024  002B56  EFAF  F015         	goto	u3031
  5025  002B5A  EFB1  F015         	goto	u3030
  5026  002B5E                     u3031:
  5027  002B5E  EFAA  F015         	goto	l418
  5028  002B62                     u3030:
  5029  002B62  0012               	return		;funcret
  5030  002B64                     __end_of_OSCILLATOR_Initialize:
  5031                           	callstack 0
  5032                           
  5033 ;; *************** function _INTERRUPT_Initialize *****************
  5034 ;; Defined at:
  5035 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		None
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    4
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_SYSTEM_Initialize
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text10
  5064  002C1A                     __ptext10:
  5065                           	callstack 0
  5066  002C1A                     _INTERRUPT_Initialize:
  5067                           	callstack 25
  5068  002C1A                     
  5069                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5070  002C1A  9ED0               	bcf	208,7,c	;volatile
  5071  002C1C  0012               	return		;funcret
  5072  002C1E                     __end_of_INTERRUPT_Initialize:
  5073                           	callstack 0
  5074                           
  5075 ;; *************** function _EUSART1_Initialize *****************
  5076 ;; Defined at:
  5077 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;Total ram usage:        0 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    5
  5098 ;; This function calls:
  5099 ;;		_EUSART1_SetErrorHandler
  5100 ;;		_EUSART1_SetFramingErrorHandler
  5101 ;;		_EUSART1_SetOverrunErrorHandler
  5102 ;; This function is called by:
  5103 ;;		_SYSTEM_Initialize
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text11
  5108  00288A                     __ptext11:
  5109                           	callstack 0
  5110  00288A                     _EUSART1_Initialize:
  5111                           	callstack 24
  5112  00288A                     
  5113                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5114  00288A  0E08               	movlw	8
  5115  00288C  6EB8               	movwf	184,c	;volatile
  5116                           
  5117                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5118  00288E  0E90               	movlw	144
  5119  002890  6EAB               	movwf	171,c	;volatile
  5120                           
  5121                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5122  002892  0E24               	movlw	36
  5123  002894  6EAC               	movwf	172,c	;volatile
  5124                           
  5125                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5126  002896  0E82               	movlw	130
  5127  002898  6EAF               	movwf	175,c	;volatile
  5128                           
  5129                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5130  00289A  0E06               	movlw	6
  5131  00289C  6EB0               	movwf	176,c	;volatile
  5132  00289E                     
  5133                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5134  00289E  0E00               	movlw	0
  5135  0028A0  6E12               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5136  0028A2  0E00               	movlw	0
  5137  0028A4  6E13               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5138  0028A6  ECF9  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5139  0028AA                     
  5140                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5141  0028AA  0E00               	movlw	0
  5142  0028AC  6E12               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5143  0028AE  0E00               	movlw	0
  5144  0028B0  6E13               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5145  0028B2  ECF4  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5146  0028B6                     
  5147                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5148  0028B6  0E00               	movlw	0
  5149  0028B8  6E12               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5150  0028BA  0E00               	movlw	0
  5151  0028BC  6E13               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5152  0028BE  ECFE  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  5153  0028C2                     
  5154                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5155  0028C2  0E00               	movlw	0
  5156  0028C4  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
  5157  0028C6  0012               	return		;funcret
  5158  0028C8                     __end_of_EUSART1_Initialize:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5162 ;; Defined at:
  5163 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5166 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;Total ram usage:        2 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    4
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_EUSART1_Initialize
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text12
  5193  002BE8                     __ptext12:
  5194                           	callstack 0
  5195  002BE8                     _EUSART1_SetOverrunErrorHandler:
  5196                           	callstack 24
  5197  002BE8                     
  5198                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5199  002BE8  C012  F0CE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5200  002BEC  C013  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5201  002BF0  0012               	return		;funcret
  5202  002BF2                     __end_of_EUSART1_SetOverrunErrorHandler:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5206 ;; Defined at:
  5207 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5210 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:        2 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_EUSART1_Initialize
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text13
  5237  002BF2                     __ptext13:
  5238                           	callstack 0
  5239  002BF2                     _EUSART1_SetFramingErrorHandler:
  5240                           	callstack 24
  5241  002BF2                     
  5242                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5243  002BF2  C012  F042         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5244  002BF6  C013  F043         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5245  002BFA  0012               	return		;funcret
  5246  002BFC                     __end_of_EUSART1_SetFramingErrorHandler:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _EUSART1_SetErrorHandler *****************
  5250 ;; Defined at:
  5251 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5254 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_EUSART1_Initialize
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text14
  5281  002BFC                     __ptext14:
  5282                           	callstack 0
  5283  002BFC                     _EUSART1_SetErrorHandler:
  5284                           	callstack 24
  5285  002BFC                     
  5286                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5287  002BFC  C012  F0CC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5288  002C00  C013  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5289  002C04  0012               	return		;funcret
  5290  002C06                     __end_of_EUSART1_SetErrorHandler:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _SPI2_Open *****************
  5294 ;; Defined at:
  5295 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  spi2UniqueCo    1    wreg     enum E355
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  spi2UniqueCo    1   18[COMRAM] enum E355
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      _Bool 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;Total ram usage:        2 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    4
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text15
  5324  00243A                     __ptext15:
  5325                           	callstack 0
  5326  00243A                     _SPI2_Open:
  5327                           	callstack 26
  5328                           
  5329                           ;incstack = 0
  5330                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5331  00243A  6E13               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5332  00243C                     
  5333                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  5334  00243C  BA6C               	btfsc	108,5,c	;volatile
  5335  00243E  EF23  F012         	goto	u3041
  5336  002442  EF25  F012         	goto	u3040
  5337  002446                     u3041:
  5338  002446  EF72  F012         	goto	l25
  5339  00244A                     u3040:
  5340  00244A                     
  5341                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  5342  00244A  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5343  00244C  0D04               	mullw	4
  5344  00244E  0E01               	movlw	1
  5345  002450  26F3               	addwf	243,f,c
  5346  002452  0E00               	movlw	0
  5347  002454  22F4               	addwfc	244,f,c
  5348  002456  0E57               	movlw	low _spi2_configuration
  5349  002458  24F3               	addwf	243,w,c
  5350  00245A  6EF6               	movwf	tblptrl,c
  5351  00245C  0EF9               	movlw	high _spi2_configuration
  5352  00245E  20F4               	addwfc	244,w,c
  5353  002460  6EF7               	movwf	tblptrh,c
  5354  002462                     	if	1	;There are 3 active tblptr bytes
  5355  002462  6AF8               	clrf	tblptru,c
  5356  002464  0E00               	movlw	low (__mediumconst shr (0+16))
  5357  002466  22F8               	addwfc	tblptru,f,c
  5358  002468                     	endif
  5359  002468  0008               	tblrd		*
  5360  00246A  CFF5 FF6D          	movff	tablat,3949	;volatile
  5361                           
  5362                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  5363  00246E  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5364  002470  0D04               	mullw	4
  5365  002472  0E57               	movlw	low _spi2_configuration
  5366  002474  24F3               	addwf	243,w,c
  5367  002476  6EF6               	movwf	tblptrl,c
  5368  002478  0EF9               	movlw	high _spi2_configuration
  5369  00247A  20F4               	addwfc	244,w,c
  5370  00247C  6EF7               	movwf	tblptrh,c
  5371  00247E                     	if	1	;There are 3 active tblptr bytes
  5372  00247E  6AF8               	clrf	tblptru,c
  5373  002480  0E00               	movlw	low (__mediumconst shr (0+16))
  5374  002482  22F8               	addwfc	tblptru,f,c
  5375  002484                     	endif
  5376  002484  0008               	tblrd		*
  5377  002486  CFF5 FF6C          	movff	tablat,3948	;volatile
  5378  00248A                     
  5379                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  5380  00248A  0E00               	movlw	0
  5381  00248C  6E6B               	movwf	107,c	;volatile
  5382  00248E                     
  5383                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  5384  00248E  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5385  002490  0D04               	mullw	4
  5386  002492  0E02               	movlw	2
  5387  002494  26F3               	addwf	243,f,c
  5388  002496  0E00               	movlw	0
  5389  002498  22F4               	addwfc	244,f,c
  5390  00249A  0E57               	movlw	low _spi2_configuration
  5391  00249C  24F3               	addwf	243,w,c
  5392  00249E  6EF6               	movwf	tblptrl,c
  5393  0024A0  0EF9               	movlw	high _spi2_configuration
  5394  0024A2  20F4               	addwfc	244,w,c
  5395  0024A4  6EF7               	movwf	tblptrh,c
  5396  0024A6                     	if	1	;There are 3 active tblptr bytes
  5397  0024A6  6AF8               	clrf	tblptru,c
  5398  0024A8  0E00               	movlw	low (__mediumconst shr (0+16))
  5399  0024AA  22F8               	addwfc	tblptru,f,c
  5400  0024AC                     	endif
  5401  0024AC  0008               	tblrd		*
  5402  0024AE  CFF5 FF6E          	movff	tablat,3950	;volatile
  5403  0024B2                     
  5404                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  5405  0024B2  5013               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5406  0024B4  0D04               	mullw	4
  5407  0024B6  0E03               	movlw	3
  5408  0024B8  26F3               	addwf	243,f,c
  5409  0024BA  0E00               	movlw	0
  5410  0024BC  22F4               	addwfc	244,f,c
  5411  0024BE  0E57               	movlw	low _spi2_configuration
  5412  0024C0  24F3               	addwf	243,w,c
  5413  0024C2  6EF6               	movwf	tblptrl,c
  5414  0024C4  0EF9               	movlw	high _spi2_configuration
  5415  0024C6  20F4               	addwfc	244,w,c
  5416  0024C8  6EF7               	movwf	tblptrh,c
  5417  0024CA                     	if	1	;There are 3 active tblptr bytes
  5418  0024CA  6AF8               	clrf	tblptru,c
  5419  0024CC  0E00               	movlw	low (__mediumconst shr (0+16))
  5420  0024CE  22F8               	addwfc	tblptru,f,c
  5421  0024D0                     	endif
  5422  0024D0  0008               	tblrd		*
  5423  0024D2  CFF5 F012          	movff	tablat,??_SPI2_Open
  5424  0024D6  4612               	rlncf	??_SPI2_Open^0,f,c
  5425  0024D8  5093               	movf	147,w,c	;volatile
  5426  0024DA  1812               	xorwf	??_SPI2_Open^0,w,c
  5427  0024DC  0BFD               	andlw	-3
  5428  0024DE  1812               	xorwf	??_SPI2_Open^0,w,c
  5429  0024E0  6E93               	movwf	147,c	;volatile
  5430  0024E2                     
  5431                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  5432  0024E2  8A6C               	bsf	108,5,c	;volatile
  5433  0024E4                     l25:
  5434  0024E4  0012               	return		;funcret
  5435  0024E6                     __end_of_SPI2_Open:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _SPI2_Close *****************
  5439 ;; Defined at:
  5440 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		None
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    4
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_main
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text16
  5469  002C1E                     __ptext16:
  5470                           	callstack 0
  5471  002C1E                     _SPI2_Close:
  5472                           	callstack 26
  5473  002C1E                     
  5474                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  5475  002C1E  9A6C               	bcf	108,5,c	;volatile
  5476  002C20  0012               	return		;funcret
  5477  002C22                     __end_of_SPI2_Close:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function _SDCARD_WriteBlock *****************
  5481 ;; Defined at:
  5482 ;;		line 48 in file "sdCard.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  addr            4   18[COMRAM] unsigned long 
  5485 ;;  sdCardBuffer    2   22[COMRAM] PTR unsigned char 
  5486 ;;		 -> redBuffer(512), blueBuffer(512), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  i               2   24[COMRAM] unsigned short 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:        8 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    5
  5505 ;; This function calls:
  5506 ;;		_SPI2_ExchangeByte
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text17
  5513  002616                     __ptext17:
  5514                           	callstack 0
  5515  002616                     _SDCARD_WriteBlock:
  5516                           	callstack 25
  5517  002616  988A               	bcf	138,4,c	;volatile
  5518  002618                     
  5519                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  5520  002618  0EFF               	movlw	255
  5521  00261A  ECBF  F015         	call	_SPI2_ExchangeByte
  5522  00261E                     
  5523                           ;sdCard.c: 55: 
  5524  00261E  0E58               	movlw	88
  5525  002620  ECBF  F015         	call	_SPI2_ExchangeByte
  5526  002624                     
  5527                           ;sdCard.c: 56: 
  5528  002624  5016               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5529  002626  ECBF  F015         	call	_SPI2_ExchangeByte
  5530  00262A                     
  5531                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5532  00262A  5015               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5533  00262C  ECBF  F015         	call	_SPI2_ExchangeByte
  5534  002630                     
  5535                           ;sdCard.c: 58: 
  5536  002630  5014               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5537  002632  ECBF  F015         	call	_SPI2_ExchangeByte
  5538  002636                     
  5539                           ;sdCard.c: 59: 
  5540  002636  5013               	movf	SDCARD_WriteBlock@addr^0,w,c
  5541  002638  ECBF  F015         	call	_SPI2_ExchangeByte
  5542  00263C                     
  5543                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  5544  00263C  0EFF               	movlw	255
  5545  00263E  ECBF  F015         	call	_SPI2_ExchangeByte
  5546  002642                     l3782:
  5547  002642  0EFF               	movlw	255
  5548  002644  ECBF  F015         	call	_SPI2_ExchangeByte
  5549  002648  0AFF               	xorlw	255
  5550  00264A  B4D8               	btfsc	status,2,c
  5551  00264C  EF2A  F013         	goto	u3161
  5552  002650  EF2C  F013         	goto	u3160
  5553  002654                     u3161:
  5554  002654  EF21  F013         	goto	l3782
  5555  002658                     u3160:
  5556  002658                     
  5557                           ;sdCard.c: 66: 
  5558  002658  0EFF               	movlw	255
  5559  00265A  ECBF  F015         	call	_SPI2_ExchangeByte
  5560                           
  5561                           ;sdCard.c: 67: 
  5562  00265E  0EFF               	movlw	255
  5563  002660  ECBF  F015         	call	_SPI2_ExchangeByte
  5564                           
  5565                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  5566  002664  0EFF               	movlw	255
  5567  002666  ECBF  F015         	call	_SPI2_ExchangeByte
  5568                           
  5569                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  5570  00266A  0EFE               	movlw	254
  5571  00266C  ECBF  F015         	call	_SPI2_ExchangeByte
  5572  002670                     
  5573                           ;sdCard.c: 74: 
  5574  002670  0E00               	movlw	0
  5575  002672  6E1A               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  5576  002674  0E00               	movlw	0
  5577  002676  6E19               	movwf	SDCARD_WriteBlock@i^0,c
  5578  002678                     l3792:
  5579                           
  5580                           ;sdCard.c: 75: 
  5581  002678  5019               	movf	SDCARD_WriteBlock@i^0,w,c
  5582  00267A  2417               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  5583  00267C  6ED9               	movwf	fsr2l,c
  5584  00267E  501A               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  5585  002680  2018               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  5586  002682  6EDA               	movwf	fsr2h,c
  5587  002684  50DF               	movf	indf2,w,c
  5588  002686  ECBF  F015         	call	_SPI2_ExchangeByte
  5589  00268A  4A19               	infsnz	SDCARD_WriteBlock@i^0,f,c
  5590  00268C  2A1A               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  5591  00268E  0E02               	movlw	2
  5592  002690  5C1A               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  5593  002692  A0D8               	btfss	status,0,c
  5594  002694  EF4E  F013         	goto	u3171
  5595  002698  EF50  F013         	goto	u3170
  5596  00269C                     u3171:
  5597  00269C  EF3C  F013         	goto	l3792
  5598  0026A0                     u3170:
  5599  0026A0  888A               	bsf	138,4,c	;volatile
  5600  0026A2  0012               	return		;funcret
  5601  0026A4                     __end_of_SDCARD_WriteBlock:
  5602                           	callstack 0
  5603                           
  5604 ;; *************** function _SDCARD_ReadBlock *****************
  5605 ;; Defined at:
  5606 ;;		line 13 in file "sdCard.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  addr            4   18[COMRAM] unsigned long 
  5609 ;;  sdCardBuffer    2   22[COMRAM] PTR unsigned char 
  5610 ;;		 -> blueBuffer(512), 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  i               2   24[COMRAM] unsigned short 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;Total ram usage:        8 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    5
  5629 ;; This function calls:
  5630 ;;		_SPI2_ExchangeByte
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text18
  5637  0024E6                     __ptext18:
  5638                           	callstack 0
  5639  0024E6                     _SDCARD_ReadBlock:
  5640                           	callstack 25
  5641  0024E6  988A               	bcf	138,4,c	;volatile
  5642  0024E8                     
  5643                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  5644  0024E8  0EFF               	movlw	255
  5645  0024EA  ECBF  F015         	call	_SPI2_ExchangeByte
  5646  0024EE                     
  5647                           ;sdCard.c: 19: 
  5648  0024EE  0E51               	movlw	81
  5649  0024F0  ECBF  F015         	call	_SPI2_ExchangeByte
  5650  0024F4                     
  5651                           ;sdCard.c: 20: 
  5652  0024F4  5016               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  5653  0024F6  ECBF  F015         	call	_SPI2_ExchangeByte
  5654  0024FA                     
  5655                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5656  0024FA  5015               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  5657  0024FC  ECBF  F015         	call	_SPI2_ExchangeByte
  5658  002500                     
  5659                           ;sdCard.c: 22: 
  5660  002500  5014               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  5661  002502  ECBF  F015         	call	_SPI2_ExchangeByte
  5662  002506                     
  5663                           ;sdCard.c: 23: 
  5664  002506  5013               	movf	SDCARD_ReadBlock@addr^0,w,c
  5665  002508  ECBF  F015         	call	_SPI2_ExchangeByte
  5666  00250C                     
  5667                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  5668  00250C  0EFF               	movlw	255
  5669  00250E  ECBF  F015         	call	_SPI2_ExchangeByte
  5670  002512                     l3834:
  5671  002512  0EFF               	movlw	255
  5672  002514  ECBF  F015         	call	_SPI2_ExchangeByte
  5673  002518  0AFF               	xorlw	255
  5674  00251A  B4D8               	btfsc	status,2,c
  5675  00251C  EF92  F012         	goto	u3191
  5676  002520  EF94  F012         	goto	u3190
  5677  002524                     u3191:
  5678  002524  EF89  F012         	goto	l3834
  5679  002528                     u3190:
  5680  002528                     l3836:
  5681  002528  0EFF               	movlw	255
  5682  00252A  ECBF  F015         	call	_SPI2_ExchangeByte
  5683  00252E  0AFF               	xorlw	255
  5684  002530  B4D8               	btfsc	status,2,c
  5685  002532  EF9D  F012         	goto	u3201
  5686  002536  EF9F  F012         	goto	u3200
  5687  00253A                     u3201:
  5688  00253A  EF94  F012         	goto	l3836
  5689  00253E                     u3200:
  5690  00253E                     
  5691                           ;sdCard.c: 33: 
  5692  00253E  0E00               	movlw	0
  5693  002540  6E1A               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  5694  002542  0E00               	movlw	0
  5695  002544  6E19               	movwf	SDCARD_ReadBlock@i^0,c
  5696  002546                     l3844:
  5697                           
  5698                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  5699  002546  5019               	movf	SDCARD_ReadBlock@i^0,w,c
  5700  002548  2417               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  5701  00254A  6ED9               	movwf	fsr2l,c
  5702  00254C  501A               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  5703  00254E  2018               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  5704  002550  6EDA               	movwf	fsr2h,c
  5705  002552  0EFF               	movlw	255
  5706  002554  ECBF  F015         	call	_SPI2_ExchangeByte
  5707  002558  6EDF               	movwf	indf2,c
  5708  00255A  4A19               	infsnz	SDCARD_ReadBlock@i^0,f,c
  5709  00255C  2A1A               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  5710  00255E  0E02               	movlw	2
  5711  002560  5C1A               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  5712  002562  A0D8               	btfss	status,0,c
  5713  002564  EFB6  F012         	goto	u3211
  5714  002568  EFB8  F012         	goto	u3210
  5715  00256C                     u3211:
  5716  00256C  EFA3  F012         	goto	l3844
  5717  002570                     u3210:
  5718  002570                     
  5719                           ;sdCard.c: 37: 
  5720  002570  0EFF               	movlw	255
  5721  002572  ECBF  F015         	call	_SPI2_ExchangeByte
  5722                           
  5723                           ;sdCard.c: 38: 
  5724  002576  0EFF               	movlw	255
  5725  002578  ECBF  F015         	call	_SPI2_ExchangeByte
  5726  00257C  888A               	bsf	138,4,c	;volatile
  5727  00257E  0012               	return		;funcret
  5728  002580                     __end_of_SDCARD_ReadBlock:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _SDCARD_PollWriteComplete *****************
  5732 ;; Defined at:
  5733 ;;		line 86 in file "sdCard.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  status          1   18[COMRAM] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      unsigned char 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;Total ram usage:        1 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    5
  5754 ;; This function calls:
  5755 ;;		_SPI2_ExchangeByte
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text19
  5762  002904                     __ptext19:
  5763                           	callstack 0
  5764  002904                     _SDCARD_PollWriteComplete:
  5765                           	callstack 25
  5766  002904  988A               	bcf	138,4,c	;volatile
  5767  002906                     
  5768                           ;sdCard.c: 91: 
  5769  002906  0E0D               	movlw	13
  5770  002908  ECBF  F015         	call	_SPI2_ExchangeByte
  5771  00290C  6E13               	movwf	SDCARD_PollWriteComplete@status^0,c
  5772  00290E  888A               	bsf	138,4,c	;volatile
  5773  002910                     
  5774                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  5775  002910  2813               	incf	SDCARD_PollWriteComplete@status^0,w,c
  5776  002912  A4D8               	btfss	status,2,c
  5777  002914  EF8E  F014         	goto	u3181
  5778  002918  EF90  F014         	goto	u3180
  5779  00291C                     u3181:
  5780  00291C  EF93  F014         	goto	l3810
  5781  002920                     u3180:
  5782  002920                     
  5783                           ;sdCard.c: 95:         return (status);
  5784  002920  0EFF               	movlw	255
  5785  002922  EF9D  F014         	goto	l478
  5786  002926                     l3810:
  5787                           
  5788                           ;sdCard.c: 98: }
  5789  002926  0EFF               	movlw	255
  5790  002928  ECBF  F015         	call	_SPI2_ExchangeByte
  5791                           
  5792                           ;sdCard.c: 99: 
  5793  00292C  0EFF               	movlw	255
  5794  00292E  ECBF  F015         	call	_SPI2_ExchangeByte
  5795                           
  5796                           ;sdCard.c: 100: 
  5797  002932  0EFF               	movlw	255
  5798  002934  ECBF  F015         	call	_SPI2_ExchangeByte
  5799  002938                     
  5800                           ;sdCard.c: 101: 
  5801  002938  5013               	movf	SDCARD_PollWriteComplete@status^0,w,c
  5802  00293A                     l478:
  5803  00293A  0012               	return		;funcret
  5804  00293C                     __end_of_SDCARD_PollWriteComplete:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _SDCARD_Initialize *****************
  5808 ;; Defined at:
  5809 ;;		line 111 in file "sdCard.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  verbose         1    wreg     unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  verbose         1   77[BANK0 ] unsigned char 
  5814 ;;  i               2   75[BANK0 ] int 
  5815 ;;  response        1   78[BANK0 ] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;Total ram usage:        4 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:   13
  5832 ;; This function calls:
  5833 ;;		_SPI2_ExchangeByte
  5834 ;;		_printf
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text20
  5841  001C46                     __ptext20:
  5842                           	callstack 0
  5843  001C46                     _SDCARD_Initialize:
  5844                           	callstack 17
  5845                           
  5846                           ;incstack = 0
  5847                           ;SDCARD_Initialize@verbose stored from wreg
  5848  001C46  0100               	movlb	0	; () banked
  5849  001C48  6FAD               	movwf	SDCARD_Initialize@verbose& (0+255),b
  5850  001C4A                     
  5851                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  5852  001C4A  0E00               	movlw	0
  5853  001C4C  0100               	movlb	0	; () banked
  5854  001C4E  6FAC               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  5855  001C50  0E00               	movlw	0
  5856  001C52  6FAB               	movwf	SDCARD_Initialize@i& (0+255),b
  5857  001C54                     l4644:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  5861  001C54  0EFF               	movlw	255
  5862  001C56  ECBF  F015         	call	_SPI2_ExchangeByte
  5863  001C5A                     
  5864                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  5865  001C5A  0100               	movlb	0	; () banked
  5866  001C5C  4BAB               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  5867  001C5E  2BAC               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  5868  001C60                     
  5869                           ; BSR set to: 0
  5870  001C60  BFAC               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  5871  001C62  EF3C  F00E         	goto	u4201
  5872  001C66  51AC               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  5873  001C68  E109               	bnz	u4200
  5874  001C6A  0E0A               	movlw	10
  5875  001C6C  5DAB               	subwf	SDCARD_Initialize@i& (0+255),w,b
  5876  001C6E  A0D8               	btfss	status,0,c
  5877  001C70  EF3C  F00E         	goto	u4201
  5878  001C74  EF3E  F00E         	goto	u4200
  5879  001C78                     u4201:
  5880  001C78  EF2A  F00E         	goto	l4644
  5881  001C7C                     u4200:
  5882  001C7C                     
  5883                           ; BSR set to: 0
  5884  001C7C  988A               	bcf	138,4,c	;volatile
  5885  001C7E                     
  5886                           ; BSR set to: 0
  5887                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  5888  001C7E  0EFF               	movlw	255
  5889  001C80  ECBF  F015         	call	_SPI2_ExchangeByte
  5890                           
  5891                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  5892  001C84  0E40               	movlw	64
  5893  001C86  ECBF  F015         	call	_SPI2_ExchangeByte
  5894                           
  5895                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  5896  001C8A  0E00               	movlw	0
  5897  001C8C  ECBF  F015         	call	_SPI2_ExchangeByte
  5898                           
  5899                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  5900  001C90  0E00               	movlw	0
  5901  001C92  ECBF  F015         	call	_SPI2_ExchangeByte
  5902                           
  5903                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  5904  001C96  0E00               	movlw	0
  5905  001C98  ECBF  F015         	call	_SPI2_ExchangeByte
  5906                           
  5907                           ;sdCard.c: 130: 
  5908  001C9C  0E00               	movlw	0
  5909  001C9E  ECBF  F015         	call	_SPI2_ExchangeByte
  5910                           
  5911                           ;sdCard.c: 131: 
  5912  001CA2  0E95               	movlw	149
  5913  001CA4  ECBF  F015         	call	_SPI2_ExchangeByte
  5914                           
  5915                           ;sdCard.c: 132: 
  5916  001CA8  0EFF               	movlw	255
  5917  001CAA  ECBF  F015         	call	_SPI2_ExchangeByte
  5918                           
  5919                           ;sdCard.c: 133:     do {
  5920  001CAE  0EFF               	movlw	255
  5921  001CB0  ECBF  F015         	call	_SPI2_ExchangeByte
  5922  001CB4  0100               	movlb	0	; () banked
  5923  001CB6  6FAE               	movwf	SDCARD_Initialize@response& (0+255),b
  5924  001CB8                     
  5925                           ; BSR set to: 0
  5926  001CB8  888A               	bsf	138,4,c	;volatile
  5927  001CBA                     
  5928                           ; BSR set to: 0
  5929                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  5930  001CBA  05AD               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  5931  001CBC  A4D8               	btfss	status,2,c
  5932  001CBE  EF63  F00E         	goto	u4211
  5933  001CC2  EF65  F00E         	goto	u4210
  5934  001CC6                     u4211:
  5935  001CC6  EF6E  F00E         	goto	l4658
  5936  001CCA                     u4210:
  5937  001CCA                     
  5938                           ; BSR set to: 0
  5939  001CCA  0E92               	movlw	low STR_61
  5940  001CCC  6FA1               	movwf	printf@fmt& (0+255),b
  5941  001CCE  0EFE               	movlw	high STR_61
  5942  001CD0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  5943  001CD2  C0AE  F0A3         	movff	SDCARD_Initialize@response,?_printf+2
  5944  001CD6  6BA4               	clrf	(?_printf+3)& (0+255),b
  5945  001CD8  EC5A  F015         	call	_printf	;wreg free
  5946  001CDC                     l4658:
  5947  001CDC  988A               	bcf	138,4,c	;volatile
  5948  001CDE                     
  5949                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  5950  001CDE  0EFF               	movlw	255
  5951  001CE0  ECBF  F015         	call	_SPI2_ExchangeByte
  5952  001CE4                     
  5953                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  5954  001CE4  0E41               	movlw	65
  5955  001CE6  ECBF  F015         	call	_SPI2_ExchangeByte
  5956  001CEA                     
  5957                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  5958  001CEA  0E00               	movlw	0
  5959  001CEC  ECBF  F015         	call	_SPI2_ExchangeByte
  5960  001CF0                     
  5961                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  5962  001CF0  0E00               	movlw	0
  5963  001CF2  ECBF  F015         	call	_SPI2_ExchangeByte
  5964  001CF6                     
  5965                           ;sdCard.c: 145:     } while (response != 0);
  5966  001CF6  0E00               	movlw	0
  5967  001CF8  ECBF  F015         	call	_SPI2_ExchangeByte
  5968  001CFC                     
  5969                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  5970  001CFC  0E00               	movlw	0
  5971  001CFE  ECBF  F015         	call	_SPI2_ExchangeByte
  5972  001D02                     
  5973                           ;sdCard.c: 147: 
  5974  001D02  0EFF               	movlw	255
  5975  001D04  ECBF  F015         	call	_SPI2_ExchangeByte
  5976  001D08                     
  5977                           ;sdCard.c: 148: 
  5978  001D08  0EFF               	movlw	255
  5979  001D0A  ECBF  F015         	call	_SPI2_ExchangeByte
  5980  001D0E                     
  5981                           ;sdCard.c: 149: 
  5982  001D0E  0EFF               	movlw	255
  5983  001D10  ECBF  F015         	call	_SPI2_ExchangeByte
  5984  001D14  0100               	movlb	0	; () banked
  5985  001D16  6FAE               	movwf	SDCARD_Initialize@response& (0+255),b
  5986  001D18                     
  5987                           ; BSR set to: 0
  5988  001D18  888A               	bsf	138,4,c	;volatile
  5989  001D1A                     
  5990                           ; BSR set to: 0
  5991                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  5992  001D1A  51AE               	movf	SDCARD_Initialize@response& (0+255),w,b
  5993  001D1C  A4D8               	btfss	status,2,c
  5994  001D1E  EF93  F00E         	goto	u4221
  5995  001D22  EF95  F00E         	goto	u4220
  5996  001D26                     u4221:
  5997  001D26  EF6E  F00E         	goto	l4658
  5998  001D2A                     u4220:
  5999  001D2A                     
  6000                           ; BSR set to: 0
  6001                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  6002  001D2A  05AD               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6003  001D2C  A4D8               	btfss	status,2,c
  6004  001D2E  EF9B  F00E         	goto	u4231
  6005  001D32  EF9D  F00E         	goto	u4230
  6006  001D36                     u4231:
  6007  001D36  EFA6  F00E         	goto	l4686
  6008  001D3A                     u4230:
  6009  001D3A                     
  6010                           ; BSR set to: 0
  6011  001D3A  0EAD               	movlw	low STR_62
  6012  001D3C  6FA1               	movwf	printf@fmt& (0+255),b
  6013  001D3E  0EFE               	movlw	high STR_62
  6014  001D40  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  6015  001D42  C0AE  F0A3         	movff	SDCARD_Initialize@response,?_printf+2
  6016  001D46  6BA4               	clrf	(?_printf+3)& (0+255),b
  6017  001D48  EC5A  F015         	call	_printf	;wreg free
  6018  001D4C                     l4686:
  6019  001D4C  988A               	bcf	138,4,c	;volatile
  6020  001D4E                     
  6021                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  6022  001D4E  0EFF               	movlw	255
  6023  001D50  ECBF  F015         	call	_SPI2_ExchangeByte
  6024  001D54                     
  6025                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  6026  001D54  0E50               	movlw	80
  6027  001D56  ECBF  F015         	call	_SPI2_ExchangeByte
  6028  001D5A                     
  6029                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  6030  001D5A  0E00               	movlw	0
  6031  001D5C  ECBF  F015         	call	_SPI2_ExchangeByte
  6032  001D60                     
  6033                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  6034  001D60  0E00               	movlw	0
  6035  001D62  ECBF  F015         	call	_SPI2_ExchangeByte
  6036  001D66                     
  6037                           ;sdCard.c: 162:     } while (response == 0xFF);
  6038  001D66  0E02               	movlw	2
  6039  001D68  ECBF  F015         	call	_SPI2_ExchangeByte
  6040  001D6C                     
  6041                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  6042  001D6C  0E00               	movlw	0
  6043  001D6E  ECBF  F015         	call	_SPI2_ExchangeByte
  6044  001D72                     
  6045                           ;sdCard.c: 164: 
  6046  001D72  0EFF               	movlw	255
  6047  001D74  ECBF  F015         	call	_SPI2_ExchangeByte
  6048  001D78                     
  6049                           ;sdCard.c: 165: }
  6050  001D78  0EFF               	movlw	255
  6051  001D7A  ECBF  F015         	call	_SPI2_ExchangeByte
  6052  001D7E                     
  6053                           ;sdCard.c: 166: 
  6054  001D7E  0EFF               	movlw	255
  6055  001D80  ECBF  F015         	call	_SPI2_ExchangeByte
  6056  001D84  0100               	movlb	0	; () banked
  6057  001D86  6FAE               	movwf	SDCARD_Initialize@response& (0+255),b
  6058  001D88                     
  6059                           ; BSR set to: 0
  6060  001D88  888A               	bsf	138,4,c	;volatile
  6061  001D8A                     
  6062                           ; BSR set to: 0
  6063                           ;sdCard.c: 168: 
  6064  001D8A  29AE               	incf	SDCARD_Initialize@response& (0+255),w,b
  6065  001D8C  B4D8               	btfsc	status,2,c
  6066  001D8E  EFCB  F00E         	goto	u4241
  6067  001D92  EFCD  F00E         	goto	u4240
  6068  001D96                     u4241:
  6069  001D96  EFA6  F00E         	goto	l4686
  6070  001D9A                     u4240:
  6071  001D9A                     
  6072                           ; BSR set to: 0
  6073                           ;sdCard.c: 169: 
  6074  001D9A  05AD               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6075  001D9C  A4D8               	btfss	status,2,c
  6076  001D9E  EFD3  F00E         	goto	u4251
  6077  001DA2  EFD5  F00E         	goto	u4250
  6078  001DA6                     u4251:
  6079  001DA6  EFDE  F00E         	goto	l503
  6080  001DAA                     u4250:
  6081  001DAA                     
  6082                           ; BSR set to: 0
  6083  001DAA  0E5A               	movlw	low STR_63
  6084  001DAC  6FA1               	movwf	printf@fmt& (0+255),b
  6085  001DAE  0EFE               	movlw	high STR_63
  6086  001DB0  6FA2               	movwf	(printf@fmt+1)& (0+255),b
  6087  001DB2  C0AE  F0A3         	movff	SDCARD_Initialize@response,?_printf+2
  6088  001DB6  6BA4               	clrf	(?_printf+3)& (0+255),b
  6089  001DB8  EC5A  F015         	call	_printf	;wreg free
  6090  001DBC                     l503:
  6091  001DBC  0012               	return		;funcret
  6092  001DBE                     __end_of_SDCARD_Initialize:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _printf *****************
  6096 ;; Defined at:
  6097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  6100 ;;		 -> STR_74(3), STR_73(3), STR_72(2), STR_71(4), 
  6101 ;;		 -> STR_70(6), STR_69(3), STR_68(3), STR_67(2), 
  6102 ;;		 -> STR_66(3), STR_65(2), STR_64(4), STR_63(28), 
  6103 ;;		 -> STR_62(26), STR_61(27), STR_60(17), STR_59(255), 
  6104 ;;		 -> STR_58(5), STR_57(399), STR_56(77), STR_55(29), 
  6105 ;;		 -> STR_54(29), STR_53(16), STR_52(89), STR_51(3), 
  6106 ;;		 -> STR_50(5), STR_49(2), STR_48(5), STR_47(17), 
  6107 ;;		 -> STR_46(15), STR_45(23), STR_44(3), STR_43(5), 
  6108 ;;		 -> STR_42(2), STR_41(5), STR_40(17), STR_39(43), 
  6109 ;;		 -> STR_38(3), STR_37(5), STR_36(2), STR_35(5), 
  6110 ;;		 -> STR_34(19), STR_33(20), STR_32(28), STR_31(20), 
  6111 ;;		 -> STR_30(30), STR_29(2), STR_28(2), STR_27(8), 
  6112 ;;		 -> STR_26(52), STR_25(32), STR_24(44), STR_23(50), 
  6113 ;;		 -> STR_22(52), STR_21(55), STR_20(43), STR_19(37), 
  6114 ;;		 -> STR_18(52), STR_17(24), STR_16(52), STR_15(24), 
  6115 ;;		 -> STR_14(21), STR_13(7), STR_12(15), STR_11(52), 
  6116 ;;		 -> STR_10(3), STR_9(5), STR_8(2), STR_7(5), 
  6117 ;;		 -> STR_6(19), STR_5(54), STR_4(42), STR_3(9), 
  6118 ;;		 -> STR_2(18), STR_1(11), 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  ap              2   73[BANK0 ] PTR void [1]
  6121 ;;		 -> ?_printf(2), 
  6122 ;;  ret             2    0        int 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2   65[BANK0 ] int 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:       10 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:   12
  6139 ;; This function calls:
  6140 ;;		_vfprintf
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;;		_SDCARD_Initialize
  6144 ;;		_hexDumpBuffer
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text21
  6149  002AB4                     __ptext21:
  6150                           	callstack 0
  6151  002AB4                     _printf:
  6152                           	callstack 18
  6153  002AB4  0EA3               	movlw	low (?_printf+2)
  6154  002AB6  0100               	movlb	0	; () banked
  6155  002AB8  6FA9               	movwf	printf@ap& (0+255),b
  6156  002ABA  0E00               	movlw	high (?_printf+2)
  6157  002ABC  6FAA               	movwf	(printf@ap+1)& (0+255),b
  6158  002ABE                     
  6159                           ; BSR set to: 0
  6160  002ABE  0E00               	movlw	0
  6161  002AC0  6F9B               	movwf	vfprintf@fp& (0+255),b
  6162  002AC2  0E00               	movlw	0
  6163  002AC4  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  6164  002AC6  C0A1  F09D         	movff	printf@fmt,vfprintf@fmt
  6165  002ACA  C0A2  F09E         	movff	printf@fmt+1,vfprintf@fmt+1
  6166  002ACE  0EA9               	movlw	low printf@ap
  6167  002AD0  6F9F               	movwf	vfprintf@ap& (0+255),b
  6168  002AD2  0E00               	movlw	high printf@ap
  6169  002AD4  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  6170  002AD6  EC52  F013         	call	_vfprintf	;wreg free
  6171  002ADA  0012               	return		;funcret
  6172  002ADC                     __end_of_printf:
  6173                           	callstack 0
  6174                           
  6175 ;; *************** function _vfprintf *****************
  6176 ;; Defined at:
  6177 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  6180 ;;		 -> NULL(0), 
  6181 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  6182 ;;		 -> STR_74(3), STR_73(3), STR_72(2), STR_71(4), 
  6183 ;;		 -> STR_70(6), STR_69(3), STR_68(3), STR_67(2), 
  6184 ;;		 -> STR_66(3), STR_65(2), STR_64(4), STR_63(28), 
  6185 ;;		 -> STR_62(26), STR_61(27), STR_60(17), STR_59(255), 
  6186 ;;		 -> STR_58(5), STR_57(399), STR_56(77), STR_55(29), 
  6187 ;;		 -> STR_54(29), STR_53(16), STR_52(89), STR_51(3), 
  6188 ;;		 -> STR_50(5), STR_49(2), STR_48(5), STR_47(17), 
  6189 ;;		 -> STR_46(15), STR_45(23), STR_44(3), STR_43(5), 
  6190 ;;		 -> STR_42(2), STR_41(5), STR_40(17), STR_39(43), 
  6191 ;;		 -> STR_38(3), STR_37(5), STR_36(2), STR_35(5), 
  6192 ;;		 -> STR_34(19), STR_33(20), STR_32(28), STR_31(20), 
  6193 ;;		 -> STR_30(30), STR_29(2), STR_28(2), STR_27(8), 
  6194 ;;		 -> STR_26(52), STR_25(32), STR_24(44), STR_23(50), 
  6195 ;;		 -> STR_22(52), STR_21(55), STR_20(43), STR_19(37), 
  6196 ;;		 -> STR_18(52), STR_17(24), STR_16(52), STR_15(24), 
  6197 ;;		 -> STR_14(21), STR_13(7), STR_12(15), STR_11(52), 
  6198 ;;		 -> STR_10(3), STR_9(5), STR_8(2), STR_7(5), 
  6199 ;;		 -> STR_6(19), STR_5(54), STR_4(42), STR_3(9), 
  6200 ;;		 -> STR_2(18), STR_1(11), 
  6201 ;;  ap              2   63[BANK0 ] PTR PTR void 
  6202 ;;		 -> printf@ap(2), 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  cfmt            2   57[COMRAM] PTR unsigned char 
  6205 ;;		 -> STR_74(3), STR_73(3), STR_72(2), STR_71(4), 
  6206 ;;		 -> STR_70(6), STR_69(3), STR_68(3), STR_67(2), 
  6207 ;;		 -> STR_66(3), STR_65(2), STR_64(4), STR_63(28), 
  6208 ;;		 -> STR_62(26), STR_61(27), STR_60(17), STR_59(255), 
  6209 ;;		 -> STR_58(5), STR_57(399), STR_56(77), STR_55(29), 
  6210 ;;		 -> STR_54(29), STR_53(16), STR_52(89), STR_51(3), 
  6211 ;;		 -> STR_50(5), STR_49(2), STR_48(5), STR_47(17), 
  6212 ;;		 -> STR_46(15), STR_45(23), STR_44(3), STR_43(5), 
  6213 ;;		 -> STR_42(2), STR_41(5), STR_40(17), STR_39(43), 
  6214 ;;		 -> STR_38(3), STR_37(5), STR_36(2), STR_35(5), 
  6215 ;;		 -> STR_34(19), STR_33(20), STR_32(28), STR_31(20), 
  6216 ;;		 -> STR_30(30), STR_29(2), STR_28(2), STR_27(8), 
  6217 ;;		 -> STR_26(52), STR_25(32), STR_24(44), STR_23(50), 
  6218 ;;		 -> STR_22(52), STR_21(55), STR_20(43), STR_19(37), 
  6219 ;;		 -> STR_18(52), STR_17(24), STR_16(52), STR_15(24), 
  6220 ;;		 -> STR_14(21), STR_13(7), STR_12(15), STR_11(52), 
  6221 ;;		 -> STR_10(3), STR_9(5), STR_8(2), STR_7(5), 
  6222 ;;		 -> STR_6(19), STR_5(54), STR_4(42), STR_3(9), 
  6223 ;;		 -> STR_2(18), STR_1(11), 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  2   59[BANK0 ] int 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        8 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:   11
  6240 ;; This function calls:
  6241 ;;		_vfpfcnvrt
  6242 ;; This function is called by:
  6243 ;;		_printf
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text22
  6248  0026A4                     __ptext22:
  6249                           	callstack 0
  6250  0026A4                     _vfprintf:
  6251                           	callstack 18
  6252  0026A4                     
  6253                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6254  0026A4  C09D  F03A         	movff	vfprintf@fmt,vfprintf@cfmt
  6255  0026A8  C09E  F03B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6256  0026AC                     
  6257                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6258  0026AC  0E00               	movlw	0
  6259  0026AE  0100               	movlb	0	; () banked
  6260  0026B0  6FCB               	movwf	(_nout+1)& (0+255),b
  6261  0026B2  0E00               	movlw	0
  6262  0026B4  6FCA               	movwf	_nout& (0+255),b
  6263                           
  6264                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6265  0026B6  EF70  F013         	goto	l4630
  6266  0026BA                     l4628:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6270  0026BA  C09B  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6271  0026BE  C09C  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6272  0026C2  0E3A               	movlw	low vfprintf@cfmt
  6273  0026C4  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  6274  0026C6  0E00               	movlw	high vfprintf@cfmt
  6275  0026C8  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6276  0026CA  C09F  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  6277  0026CE  C0A0  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6278  0026D2  ECF9  F004         	call	_vfpfcnvrt	;wreg free
  6279  0026D6  0100               	movlb	0	; () banked
  6280  0026D8  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  6281  0026DA  27CA               	addwf	_nout& (0+255),f,b
  6282  0026DC  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6283  0026DE  23CB               	addwfc	(_nout+1)& (0+255),f,b
  6284  0026E0                     l4630:
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6288  0026E0  C03A  FFF6         	movff	vfprintf@cfmt,tblptrl
  6289  0026E4  C03B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6290  0026E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6291  0026E8  6AF8               	clrf	tblptru,c
  6292  0026EA                     	endif
  6293  0026EA                     	if	0	;tblptru may be non-zero
  6294  0026EA                     	endif
  6295  0026EA  0008               	tblrd		*
  6296  0026EC  50F5               	movf	tablat,w,c
  6297  0026EE  0900               	iorlw	0
  6298  0026F0  A4D8               	btfss	status,2,c
  6299  0026F2  EF7D  F013         	goto	u4191
  6300  0026F6  EF7F  F013         	goto	u4190
  6301  0026FA                     u4191:
  6302  0026FA  EF5D  F013         	goto	l4628
  6303  0026FE                     u4190:
  6304  0026FE                     
  6305                           ; BSR set to: 0
  6306                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6307  0026FE  C0CA  F09B         	movff	_nout,?_vfprintf
  6308  002702  C0CB  F09C         	movff	_nout+1,?_vfprintf+1
  6309  002706                     
  6310                           ; BSR set to: 0
  6311  002706  0012               	return		;funcret
  6312  002708                     __end_of_vfprintf:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _vfpfcnvrt *****************
  6316 ;; Defined at:
  6317 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6320 ;;		 -> NULL(0), 
  6321 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  6322 ;;		 -> vfprintf@cfmt(2), 
  6323 ;;  ap              2   32[BANK0 ] PTR PTR void 
  6324 ;;		 -> printf@ap(2), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  llu             8   50[BANK0 ] unsigned long long 
  6327 ;;  ll              8   38[BANK0 ] long long 
  6328 ;;  f               4    0        long long 
  6329 ;;  vp              3    0        PTR void 
  6330 ;;  ct              3    0        unsigned char [3]
  6331 ;;  cp              3    0        PTR unsigned char 
  6332 ;;  done            2   46[BANK0 ] int 
  6333 ;;  i               2    0        int 
  6334 ;;  c               1   58[BANK0 ] unsigned char 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  2   28[BANK0 ] int 
  6337 ;; Registers used:
  6338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;Total ram usage:       31 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:   10
  6351 ;; This function calls:
  6352 ;;		_atoi
  6353 ;;		_ctoa
  6354 ;;		_dtoa
  6355 ;;		_fputc
  6356 ;;		_isdigit
  6357 ;;		_utoa
  6358 ;;		_xtoa
  6359 ;; This function is called by:
  6360 ;;		_vfprintf
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text23
  6365  0009F2                     __ptext23:
  6366                           	callstack 0
  6367  0009F2                     _vfpfcnvrt:
  6368                           	callstack 18
  6369  0009F2                     
  6370                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6371  0009F2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6372  0009F6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6373  0009FA  CFDE FFF6          	movff	postinc2,tblptrl
  6374  0009FE  CFDD FFF7          	movff	postdec2,tblptrh
  6375  000A02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6376  000A02  6AF8               	clrf	tblptru,c
  6377  000A04                     	endif
  6378  000A04                     	if	0	;tblptru may be non-zero
  6379  000A04                     	endif
  6380  000A04  0008               	tblrd		*
  6381  000A06  50F5               	movf	tablat,w,c
  6382  000A08  0A25               	xorlw	37
  6383  000A0A  A4D8               	btfss	status,2,c
  6384  000A0C  EF0A  F005         	goto	u4041
  6385  000A10  EF0C  F005         	goto	u4040
  6386  000A14                     u4041:
  6387  000A14  EF9E  F007         	goto	l4608
  6388  000A18                     u4040:
  6389  000A18                     
  6390                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6391  000A18  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6392  000A1C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6393  000A20  2ADE               	incf	postinc2,f,c
  6394  000A22  0E00               	movlw	0
  6395  000A24  22DD               	addwfc	postdec2,f,c
  6396  000A26                     
  6397                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6398  000A26  0E00               	movlw	0
  6399  000A28  6E3D               	movwf	(_width+1)^0,c
  6400  000A2A  0E00               	movlw	0
  6401  000A2C  6E3C               	movwf	_width^0,c
  6402  000A2E  C03C  F040         	movff	_width,_flags
  6403  000A32  C03D  F041         	movff	_width+1,_flags+1
  6404  000A36                     
  6405                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6406  000A36  683E               	setf	_prec^0,c
  6407  000A38  683F               	setf	(_prec+1)^0,c
  6408  000A3A                     
  6409                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6410  000A3A  0E00               	movlw	0
  6411  000A3C  0100               	movlb	0	; () banked
  6412  000A3E  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6413  000A40  0E00               	movlw	0
  6414  000A42  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6415                           
  6416                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6417  000A44  EF6B  F005         	goto	l4530
  6418  000A48                     l4504:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6422  000A48  8040               	bsf	_flags^0,0,c
  6423  000A4A                     l4506:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6427  000A4A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6428  000A4E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6429  000A52  2ADE               	incf	postinc2,f,c
  6430  000A54  0E00               	movlw	0
  6431  000A56  22DD               	addwfc	postdec2,f,c
  6432                           
  6433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6434  000A58  EF6B  F005         	goto	l4530
  6435  000A5C                     l4508:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6439  000A5C  8240               	bsf	_flags^0,1,c
  6440  000A5E  EF25  F005         	goto	l4506
  6441  000A62                     l4512:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6445  000A62  8440               	bsf	_flags^0,2,c
  6446  000A64  EF25  F005         	goto	l4506
  6447  000A68                     l4516:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6451  000A68  8640               	bsf	_flags^0,3,c
  6452  000A6A  EF25  F005         	goto	l4506
  6453  000A6E                     l4520:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6457  000A6E  8840               	bsf	_flags^0,4,c
  6458  000A70  EF25  F005         	goto	l4506
  6459  000A74                     l4524:
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6463  000A74  0E00               	movlw	0
  6464  000A76  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6465  000A78  0E01               	movlw	1
  6466  000A7A  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6467                           
  6468                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6469  000A7C  EF6B  F005         	goto	l4530
  6470  000A80                     l4528:
  6471                           
  6472                           ; BSR set to: 0
  6473  000A80  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6474  000A84  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6475  000A88  CFDE FFF6          	movff	postinc2,tblptrl
  6476  000A8C  CFDD FFF7          	movff	postdec2,tblptrh
  6477  000A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6478  000A90  6AF8               	clrf	tblptru,c
  6479  000A92                     	endif
  6480  000A92                     	if	0	;tblptru may be non-zero
  6481  000A92                     	endif
  6482  000A92  0008               	tblrd		*
  6483  000A94  50F5               	movf	tablat,w,c
  6484  000A96  6F82               	movwf	??_vfpfcnvrt& (0+255),b
  6485  000A98  6B83               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6486                           
  6487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6488                           ; Switch size 1, requested type "simple"
  6489                           ; Number of cases is 1, Range of values is 0 to 0
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte            4     3 (average)
  6493                           ;	Chosen strategy is simple_byte
  6494  000A9A  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6495  000A9C  0A00               	xorlw	0	; case 0
  6496  000A9E  B4D8               	btfsc	status,2,c
  6497  000AA0  EF54  F005         	goto	l5120
  6498  000AA4  EF3A  F005         	goto	l4524
  6499  000AA8                     l5120:
  6500                           
  6501                           ; BSR set to: 0
  6502                           ; Switch size 1, requested type "simple"
  6503                           ; Number of cases is 5, Range of values is 32 to 48
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte           16     9 (average)
  6507                           ;	Chosen strategy is simple_byte
  6508  000AA8  5182               	movf	??_vfpfcnvrt& (0+255),w,b
  6509  000AAA  0A20               	xorlw	32	; case 32
  6510  000AAC  B4D8               	btfsc	status,2,c
  6511  000AAE  EF34  F005         	goto	l4516
  6512  000AB2  0A03               	xorlw	3	; case 35
  6513  000AB4  B4D8               	btfsc	status,2,c
  6514  000AB6  EF37  F005         	goto	l4520
  6515  000ABA  0A08               	xorlw	8	; case 43
  6516  000ABC  B4D8               	btfsc	status,2,c
  6517  000ABE  EF31  F005         	goto	l4512
  6518  000AC2  0A06               	xorlw	6	; case 45
  6519  000AC4  B4D8               	btfsc	status,2,c
  6520  000AC6  EF24  F005         	goto	l4504
  6521  000ACA  0A1D               	xorlw	29	; case 48
  6522  000ACC  B4D8               	btfsc	status,2,c
  6523  000ACE  EF2E  F005         	goto	l4508
  6524  000AD2  EF3A  F005         	goto	l4524
  6525  000AD6                     l4530:
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6529  000AD6  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  6530  000AD8  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6531  000ADA  B4D8               	btfsc	status,2,c
  6532  000ADC  EF72  F005         	goto	u4051
  6533  000AE0  EF74  F005         	goto	u4050
  6534  000AE4                     u4051:
  6535  000AE4  EF40  F005         	goto	l4528
  6536  000AE8                     u4050:
  6537  000AE8                     
  6538                           ; BSR set to: 0
  6539                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6540  000AE8  A040               	btfss	_flags^0,0,c
  6541  000AEA  EF79  F005         	goto	u4061
  6542  000AEE  EF7B  F005         	goto	u4060
  6543  000AF2                     u4061:
  6544  000AF2  EF7C  F005         	goto	l4534
  6545  000AF6                     u4060:
  6546  000AF6                     
  6547                           ; BSR set to: 0
  6548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6549  000AF6  9240               	bcf	_flags^0,1,c
  6550  000AF8                     l4534:
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6554  000AF8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6555  000AFC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6556  000B00  CFDE FFF6          	movff	postinc2,tblptrl
  6557  000B04  CFDD FFF7          	movff	postdec2,tblptrh
  6558  000B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6559  000B08  6AF8               	clrf	tblptru,c
  6560  000B0A                     	endif
  6561  000B0A                     	if	0	;tblptru may be non-zero
  6562  000B0A                     	endif
  6563  000B0A  0008               	tblrd		*
  6564  000B0C  50F5               	movf	tablat,w,c
  6565  000B0E  0A2A               	xorlw	42
  6566  000B10  A4D8               	btfss	status,2,c
  6567  000B12  EF8D  F005         	goto	u4071
  6568  000B16  EF8F  F005         	goto	u4070
  6569  000B1A                     u4071:
  6570  000B1A  EFB8  F005         	goto	l4542
  6571  000B1E                     u4070:
  6572  000B1E                     
  6573                           ; BSR set to: 0
  6574                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6575  000B1E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6576  000B22  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6577  000B26  2ADE               	incf	postinc2,f,c
  6578  000B28  0E00               	movlw	0
  6579  000B2A  22DD               	addwfc	postdec2,f,c
  6580                           
  6581                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6582  000B2C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6583  000B30  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6584  000B34  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6585  000B38  0E02               	movlw	2
  6586  000B3A  26DE               	addwf	postinc2,f,c
  6587  000B3C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6588  000B40  0E00               	movlw	0
  6589  000B42  22DD               	addwfc	postdec2,f,c
  6590  000B44  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6591  000B48  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6592  000B4C  CFDE F03C          	movff	postinc2,_width
  6593  000B50  CFDD F03D          	movff	postdec2,_width+1
  6594  000B54                     
  6595                           ; BSR set to: 0
  6596                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6597  000B54  BE3D               	btfsc	(_width+1)^0,7,c
  6598  000B56  EFB1  F005         	goto	u4080
  6599  000B5A  EFAF  F005         	goto	u4081
  6600  000B5E                     u4081:
  6601  000B5E  EFFD  F005         	goto	l4552
  6602  000B62                     u4080:
  6603  000B62                     
  6604                           ; BSR set to: 0
  6605                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6606  000B62  8040               	bsf	_flags^0,0,c
  6607                           
  6608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6609  000B64  6C3C               	negf	_width^0,c
  6610  000B66  1E3D               	comf	(_width+1)^0,f,c
  6611  000B68  B0D8               	btfsc	status,0,c
  6612  000B6A  2A3D               	incf	(_width+1)^0,f,c
  6613  000B6C  EFFD  F005         	goto	l4552
  6614  000B70                     l4542:
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6618  000B70  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6619  000B74  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6620  000B78  CFDE F019          	movff	postinc2,atoi@s
  6621  000B7C  CFDD F01A          	movff	postdec2,atoi@s+1
  6622  000B80  EC92  F00C         	call	_atoi	;wreg free
  6623  000B84  C019  F03C         	movff	?_atoi,_width
  6624  000B88  C01A  F03D         	movff	?_atoi+1,_width+1
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6627  000B8C  EFCF  F005         	goto	l4546
  6628  000B90                     l4544:
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6632  000B90  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6633  000B94  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6634  000B98  2ADE               	incf	postinc2,f,c
  6635  000B9A  0E00               	movlw	0
  6636  000B9C  22DD               	addwfc	postdec2,f,c
  6637  000B9E                     l4546:
  6638  000B9E  0ED0               	movlw	208
  6639  000BA0  0100               	movlb	0	; () banked
  6640  000BA2  6F82               	movwf	??_vfpfcnvrt& (0+255),b
  6641  000BA4  0EFF               	movlw	255
  6642  000BA6  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6643  000BA8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6644  000BAC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6645  000BB0  CFDE FFF6          	movff	postinc2,tblptrl
  6646  000BB4  CFDD FFF7          	movff	postdec2,tblptrh
  6647  000BB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6648  000BB8  6AF8               	clrf	tblptru,c
  6649  000BBA                     	endif
  6650  000BBA                     	if	0	;tblptru may be non-zero
  6651  000BBA                     	endif
  6652  000BBA  0008               	tblrd		*
  6653  000BBC  50F5               	movf	tablat,w,c
  6654  000BBE  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6655  000BC0  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6656  000BC2  5182               	movf	??_vfpfcnvrt& (0+255),w,b
  6657  000BC4  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6658  000BC6  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6659  000BC8  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6660  000BCA  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6661  000BCC  E10A               	bnz	u4090
  6662  000BCE  0E0A               	movlw	10
  6663  000BD0  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6664  000BD2  A0D8               	btfss	status,0,c
  6665  000BD4  EFEE  F005         	goto	u4091
  6666  000BD8  EFF1  F005         	goto	u4090
  6667  000BDC                     u4091:
  6668  000BDC  0E01               	movlw	1
  6669  000BDE  EFF2  F005         	goto	u4100
  6670  000BE2                     u4090:
  6671  000BE2  0E00               	movlw	0
  6672  000BE4                     u4100:
  6673  000BE4  6F90               	movwf	_vfpfcnvrt$1777& (0+255),b
  6674  000BE6  6B91               	clrf	(_vfpfcnvrt$1777+1)& (0+255),b
  6675  000BE8                     
  6676                           ; BSR set to: 0
  6677  000BE8  5190               	movf	_vfpfcnvrt$1777& (0+255),w,b
  6678  000BEA  1191               	iorwf	(_vfpfcnvrt$1777+1)& (0+255),w,b
  6679  000BEC  A4D8               	btfss	status,2,c
  6680  000BEE  EFFB  F005         	goto	u4111
  6681  000BF2  EFFD  F005         	goto	u4110
  6682  000BF6                     u4111:
  6683  000BF6  EFC8  F005         	goto	l4544
  6684  000BFA                     u4110:
  6685  000BFA                     l4552:
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  6689  000BFA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6690  000BFE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6691  000C02  CFDE FFF6          	movff	postinc2,tblptrl
  6692  000C06  CFDD FFF7          	movff	postdec2,tblptrh
  6693  000C0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6694  000C0A  6AF8               	clrf	tblptru,c
  6695  000C0C                     	endif
  6696  000C0C                     	if	0	;tblptru may be non-zero
  6697  000C0C                     	endif
  6698  000C0C  0008               	tblrd		*
  6699  000C0E  50F5               	movf	tablat,w,c
  6700  000C10  0A63               	xorlw	99
  6701  000C12  A4D8               	btfss	status,2,c
  6702  000C14  EF0E  F006         	goto	u4121
  6703  000C18  EF10  F006         	goto	u4120
  6704  000C1C                     u4121:
  6705  000C1C  EF37  F006         	goto	l4560
  6706  000C20                     u4120:
  6707  000C20                     
  6708                           ; BSR set to: 0
  6709                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  6710  000C20  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6711  000C24  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6712  000C28  2ADE               	incf	postinc2,f,c
  6713  000C2A  0E00               	movlw	0
  6714  000C2C  22DD               	addwfc	postdec2,f,c
  6715                           
  6716                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6717  000C2E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6718  000C32  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6719  000C36  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6720  000C3A  0E02               	movlw	2
  6721  000C3C  26DE               	addwf	postinc2,f,c
  6722  000C3E  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6723  000C42  0E00               	movlw	0
  6724  000C44  22DD               	addwfc	postdec2,f,c
  6725  000C46  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6726  000C4A  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6727  000C4E  50DF               	movf	indf2,w,c
  6728  000C50  6F9A               	movwf	vfpfcnvrt@c& (0+255),b
  6729  000C52                     
  6730                           ; BSR set to: 0
  6731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  6732  000C52  C07C  F01D         	movff	vfpfcnvrt@fp,ctoa@fp
  6733  000C56  C07D  F01E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6734  000C5A  C09A  F01F         	movff	vfpfcnvrt@c,ctoa@c
  6735  000C5E  EC92  F010         	call	_ctoa	;wreg free
  6736  000C62  C01D  F07C         	movff	?_ctoa,?_vfpfcnvrt
  6737  000C66  C01E  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6738  000C6A  EFBA  F007         	goto	l1357
  6739  000C6E                     l4560:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6743  000C6E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6744  000C72  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6745  000C76  CFDE FFF6          	movff	postinc2,tblptrl
  6746  000C7A  CFDD FFF7          	movff	postdec2,tblptrh
  6747  000C7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6748  000C7E  6AF8               	clrf	tblptru,c
  6749  000C80                     	endif
  6750  000C80                     	if	0	;tblptru may be non-zero
  6751  000C80                     	endif
  6752  000C80  0008               	tblrd		*
  6753  000C82  50F5               	movf	tablat,w,c
  6754  000C84  0A64               	xorlw	100
  6755  000C86  B4D8               	btfsc	status,2,c
  6756  000C88  EF48  F006         	goto	u4131
  6757  000C8C  EF4A  F006         	goto	u4130
  6758  000C90                     u4131:
  6759  000C90  EF5D  F006         	goto	l4564
  6760  000C94                     u4130:
  6761  000C94                     
  6762                           ; BSR set to: 0
  6763  000C94  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6764  000C98  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6765  000C9C  CFDE FFF6          	movff	postinc2,tblptrl
  6766  000CA0  CFDD FFF7          	movff	postdec2,tblptrh
  6767  000CA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6768  000CA4  6AF8               	clrf	tblptru,c
  6769  000CA6                     	endif
  6770  000CA6                     	if	0	;tblptru may be non-zero
  6771  000CA6                     	endif
  6772  000CA6  0008               	tblrd		*
  6773  000CA8  50F5               	movf	tablat,w,c
  6774  000CAA  0A69               	xorlw	105
  6775  000CAC  A4D8               	btfss	status,2,c
  6776  000CAE  EF5B  F006         	goto	u4141
  6777  000CB2  EF5D  F006         	goto	u4140
  6778  000CB6                     u4141:
  6779  000CB6  EF9D  F006         	goto	l4570
  6780  000CBA                     u4140:
  6781  000CBA                     l4564:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6785  000CBA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6786  000CBE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6787  000CC2  2ADE               	incf	postinc2,f,c
  6788  000CC4  0E00               	movlw	0
  6789  000CC6  22DD               	addwfc	postdec2,f,c
  6790                           
  6791                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6792  000CC8  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6793  000CCC  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6794  000CD0  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6795  000CD4  0E02               	movlw	2
  6796  000CD6  26DE               	addwf	postinc2,f,c
  6797  000CD8  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6798  000CDC  0E00               	movlw	0
  6799  000CDE  22DD               	addwfc	postdec2,f,c
  6800  000CE0  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6801  000CE4  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6802  000CE8  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
  6803  000CEC  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
  6804  000CF0  0E00               	movlw	0
  6805  000CF2  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6806  000CF4  0EFF               	movlw	-1
  6807  000CF6  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6808  000CF8  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6809  000CFA  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6810  000CFC  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6811  000CFE  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6812  000D00  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6813  000D02                     
  6814                           ; BSR set to: 0
  6815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6816  000D02  C07C  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  6817  000D06  C07D  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6818  000D0A  C086  F031         	movff	vfpfcnvrt@ll,dtoa@d
  6819  000D0E  C087  F032         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6820  000D12  C088  F033         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6821  000D16  C089  F034         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6822  000D1A  C08A  F035         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6823  000D1E  C08B  F036         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6824  000D22  C08C  F037         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6825  000D26  C08D  F038         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6826  000D2A  ECBB  F007         	call	_dtoa	;wreg free
  6827  000D2E  C02F  F07C         	movff	?_dtoa,?_vfpfcnvrt
  6828  000D32  C030  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6829  000D36  EFBA  F007         	goto	l1357
  6830  000D3A                     l4570:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6834  000D3A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6835  000D3E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6836  000D42  CFDE FFF6          	movff	postinc2,tblptrl
  6837  000D46  CFDD FFF7          	movff	postdec2,tblptrh
  6838  000D4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6839  000D4A  6AF8               	clrf	tblptru,c
  6840  000D4C                     	endif
  6841  000D4C                     	if	0	;tblptru may be non-zero
  6842  000D4C                     	endif
  6843  000D4C  0008               	tblrd		*
  6844  000D4E  50F5               	movf	tablat,w,c
  6845  000D50  0A75               	xorlw	117
  6846  000D52  A4D8               	btfss	status,2,c
  6847  000D54  EFAE  F006         	goto	u4151
  6848  000D58  EFB0  F006         	goto	u4150
  6849  000D5C                     u4151:
  6850  000D5C  EFF1  F006         	goto	l4578
  6851  000D60                     u4150:
  6852  000D60                     
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6855  000D60  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6856  000D64  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6857  000D68  2ADE               	incf	postinc2,f,c
  6858  000D6A  0E00               	movlw	0
  6859  000D6C  22DD               	addwfc	postdec2,f,c
  6860                           
  6861                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6862  000D6E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6863  000D72  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6864  000D76  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6865  000D7A  0E02               	movlw	2
  6866  000D7C  26DE               	addwf	postinc2,f,c
  6867  000D7E  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6868  000D82  0E00               	movlw	0
  6869  000D84  22DD               	addwfc	postdec2,f,c
  6870  000D86  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6871  000D8A  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6872  000D8E  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
  6873  000D92  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
  6874  000D96  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6875  000D9A  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6876  000D9E  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6877  000DA0  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6878  000DA2  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6879  000DA4  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6880  000DA6  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6881  000DA8  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6882  000DAA                     
  6883                           ; BSR set to: 0
  6884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6885  000DAA  C07C  F02F         	movff	vfpfcnvrt@fp,utoa@fp
  6886  000DAE  C07D  F030         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6887  000DB2  C092  F031         	movff	vfpfcnvrt@llu,utoa@d
  6888  000DB6  C093  F032         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6889  000DBA  C094  F033         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6890  000DBE  C095  F034         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6891  000DC2  C096  F035         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6892  000DC6  C097  F036         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6893  000DCA  C098  F037         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6894  000DCE  C099  F038         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6895  000DD2  EC99  F00A         	call	_utoa	;wreg free
  6896  000DD6  C02F  F07C         	movff	?_utoa,?_vfpfcnvrt
  6897  000DDA  C030  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
  6898  000DDE  EFBA  F007         	goto	l1357
  6899  000DE2                     l4578:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6903  000DE2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6904  000DE6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6905  000DEA  CFDE FFF6          	movff	postinc2,tblptrl
  6906  000DEE  CFDD FFF7          	movff	postdec2,tblptrh
  6907  000DF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6908  000DF2  6AF8               	clrf	tblptru,c
  6909  000DF4                     	endif
  6910  000DF4                     	if	0	;tblptru may be non-zero
  6911  000DF4                     	endif
  6912  000DF4  0008               	tblrd		*
  6913  000DF6  50F5               	movf	tablat,w,c
  6914  000DF8  0A78               	xorlw	120
  6915  000DFA  B4D8               	btfsc	status,2,c
  6916  000DFC  EF02  F007         	goto	u4161
  6917  000E00  EF04  F007         	goto	u4160
  6918  000E04                     u4161:
  6919  000E04  EF17  F007         	goto	l4582
  6920  000E08                     u4160:
  6921  000E08                     
  6922                           ; BSR set to: 0
  6923  000E08  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6924  000E0C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6925  000E10  CFDE FFF6          	movff	postinc2,tblptrl
  6926  000E14  CFDD FFF7          	movff	postdec2,tblptrh
  6927  000E18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6928  000E18  6AF8               	clrf	tblptru,c
  6929  000E1A                     	endif
  6930  000E1A                     	if	0	;tblptru may be non-zero
  6931  000E1A                     	endif
  6932  000E1A  0008               	tblrd		*
  6933  000E1C  50F5               	movf	tablat,w,c
  6934  000E1E  0A58               	xorlw	88
  6935  000E20  A4D8               	btfss	status,2,c
  6936  000E22  EF15  F007         	goto	u4171
  6937  000E26  EF17  F007         	goto	u4170
  6938  000E2A                     u4171:
  6939  000E2A  EF66  F007         	goto	l4592
  6940  000E2E                     u4170:
  6941  000E2E                     l4582:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  6945  000E2E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6946  000E32  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6947  000E36  CFDE FFF6          	movff	postinc2,tblptrl
  6948  000E3A  CFDD FFF7          	movff	postdec2,tblptrh
  6949  000E3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6950  000E3E  6AF8               	clrf	tblptru,c
  6951  000E40                     	endif
  6952  000E40                     	if	0	;tblptru may be non-zero
  6953  000E40                     	endif
  6954  000E40  0008               	tblrd		*
  6955  000E42  CFF5 F09A          	movff	tablat,vfpfcnvrt@c
  6956  000E46                     
  6957                           ; BSR set to: 0
  6958                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  6959  000E46  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6960  000E4A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6961  000E4E  2ADE               	incf	postinc2,f,c
  6962  000E50  0E00               	movlw	0
  6963  000E52  22DD               	addwfc	postdec2,f,c
  6964  000E54                     
  6965                           ; BSR set to: 0
  6966                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6967  000E54  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6968  000E58  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6969  000E5C  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6970  000E60  0E02               	movlw	2
  6971  000E62  26DE               	addwf	postinc2,f,c
  6972  000E64  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6973  000E68  0E00               	movlw	0
  6974  000E6A  22DD               	addwfc	postdec2,f,c
  6975  000E6C  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6976  000E70  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6977  000E74  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
  6978  000E78  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
  6979  000E7C  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6980  000E80  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6981  000E84  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6982  000E86  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6983  000E88  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6984  000E8A  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6985  000E8C  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6986  000E8E  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6987  000E90                     
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  6990  000E90  C07C  F02F         	movff	vfpfcnvrt@fp,xtoa@fp
  6991  000E94  C07D  F030         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6992  000E98  C092  F031         	movff	vfpfcnvrt@llu,xtoa@d
  6993  000E9C  C093  F032         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6994  000EA0  C094  F033         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6995  000EA4  C095  F034         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6996  000EA8  C096  F035         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6997  000EAC  C097  F036         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6998  000EB0  C098  F037         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6999  000EB4  C099  F038         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  7000  000EB8  C09A  F039         	movff	vfpfcnvrt@c,xtoa@x
  7001  000EBC  EC2C  F009         	call	_xtoa	;wreg free
  7002  000EC0  C02F  F07C         	movff	?_xtoa,?_vfpfcnvrt
  7003  000EC4  C030  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  7004  000EC8  EFBA  F007         	goto	l1357
  7005  000ECC                     l4592:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7009  000ECC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7010  000ED0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7011  000ED4  CFDE FFF6          	movff	postinc2,tblptrl
  7012  000ED8  CFDD FFF7          	movff	postdec2,tblptrh
  7013  000EDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7014  000EDC  6AF8               	clrf	tblptru,c
  7015  000EDE                     	endif
  7016  000EDE                     	if	0	;tblptru may be non-zero
  7017  000EDE                     	endif
  7018  000EDE  0008               	tblrd		*
  7019  000EE0  50F5               	movf	tablat,w,c
  7020  000EE2  0A25               	xorlw	37
  7021  000EE4  A4D8               	btfss	status,2,c
  7022  000EE6  EF77  F007         	goto	u4181
  7023  000EEA  EF79  F007         	goto	u4180
  7024  000EEE                     u4181:
  7025  000EEE  EF91  F007         	goto	l4602
  7026  000EF2                     u4180:
  7027  000EF2                     
  7028                           ; BSR set to: 0
  7029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7030  000EF2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7031  000EF6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7032  000EFA  2ADE               	incf	postinc2,f,c
  7033  000EFC  0E00               	movlw	0
  7034  000EFE  22DD               	addwfc	postdec2,f,c
  7035  000F00                     
  7036                           ; BSR set to: 0
  7037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7038  000F00  0E00               	movlw	0
  7039  000F02  6E15               	movwf	(fputc@c+1)^0,c
  7040  000F04  0E25               	movlw	37
  7041  000F06  6E14               	movwf	fputc@c^0,c
  7042  000F08  C07C  F016         	movff	vfpfcnvrt@fp,fputc@fp
  7043  000F0C  C07D  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7044  000F10  ECC0  F012         	call	_fputc	;wreg free
  7045  000F14                     l4598:
  7046                           
  7047                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7048  000F14  0E00               	movlw	0
  7049  000F16  0100               	movlb	0	; () banked
  7050  000F18  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7051  000F1A  0E01               	movlw	1
  7052  000F1C  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  7053  000F1E  EFBA  F007         	goto	l1357
  7054  000F22                     l4602:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7058  000F22  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7059  000F26  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7060  000F2A  2ADE               	incf	postinc2,f,c
  7061  000F2C  0E00               	movlw	0
  7062  000F2E  22DD               	addwfc	postdec2,f,c
  7063  000F30                     
  7064                           ; BSR set to: 0
  7065                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7066  000F30  0E00               	movlw	0
  7067  000F32  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7068  000F34  0E00               	movlw	0
  7069  000F36  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  7070  000F38  EFBA  F007         	goto	l1357
  7071  000F3C                     l4608:
  7072                           
  7073                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7074  000F3C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7075  000F40  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7076  000F44  CFDE FFF6          	movff	postinc2,tblptrl
  7077  000F48  CFDD FFF7          	movff	postdec2,tblptrh
  7078  000F4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7079  000F4C  6AF8               	clrf	tblptru,c
  7080  000F4E                     	endif
  7081  000F4E                     	if	0	;tblptru may be non-zero
  7082  000F4E                     	endif
  7083  000F4E  0008               	tblrd		*
  7084  000F50  50F5               	movf	tablat,w,c
  7085  000F52  6E14               	movwf	fputc@c^0,c
  7086  000F54  6A15               	clrf	(fputc@c+1)^0,c
  7087  000F56  C07C  F016         	movff	vfpfcnvrt@fp,fputc@fp
  7088  000F5A  C07D  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7089  000F5E  ECC0  F012         	call	_fputc	;wreg free
  7090  000F62                     
  7091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7092  000F62  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7093  000F66  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7094  000F6A  2ADE               	incf	postinc2,f,c
  7095  000F6C  0E00               	movlw	0
  7096  000F6E  22DD               	addwfc	postdec2,f,c
  7097  000F70  EF8A  F007         	goto	l4598
  7098  000F74                     l1357:
  7099  000F74  0012               	return		;funcret
  7100  000F76                     __end_of_vfpfcnvrt:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _xtoa *****************
  7104 ;; Defined at:
  7105 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  7108 ;;		 -> NULL(0), 
  7109 ;;  d               8   48[COMRAM] unsigned long long 
  7110 ;;  x               1   56[COMRAM] unsigned char 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  n               8   16[BANK0 ] unsigned long long 
  7113 ;;  c               2   26[BANK0 ] int 
  7114 ;;  i               2   24[BANK0 ] int 
  7115 ;;  w               2   14[BANK0 ] int 
  7116 ;;  p               2   12[BANK0 ] int 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2   46[COMRAM] int 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7126 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;Total ram usage:       39 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    9
  7133 ;; This function calls:
  7134 ;;		_isalpha
  7135 ;;		_isupper
  7136 ;;		_pad
  7137 ;;		_toupper
  7138 ;; This function is called by:
  7139 ;;		_vfpfcnvrt
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text24
  7144  001258                     __ptext24:
  7145                           	callstack 0
  7146  001258                     _xtoa:
  7147                           	callstack 18
  7148  001258                     
  7149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  7150  001258  BE3F               	btfsc	(_prec+1)^0,7,c
  7151  00125A  EF31  F009         	goto	u3871
  7152  00125E  EF33  F009         	goto	u3870
  7153  001262                     u3871:
  7154  001262  EF34  F009         	goto	l4432
  7155  001266                     u3870:
  7156  001266                     
  7157                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  7158  001266  9240               	bcf	_flags^0,1,c
  7159  001268                     l4432:
  7160                           
  7161                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  7162  001268  BE3F               	btfsc	(_prec+1)^0,7,c
  7163  00126A  EF41  F009         	goto	u3880
  7164  00126E  503F               	movf	(_prec+1)^0,w,c
  7165  001270  E106               	bnz	u3881
  7166  001272  043E               	decf	_prec^0,w,c
  7167  001274  B0D8               	btfsc	status,0,c
  7168  001276  EF3F  F009         	goto	u3881
  7169  00127A  EF41  F009         	goto	u3880
  7170  00127E                     u3881:
  7171  00127E  EF48  F009         	goto	l1305
  7172  001282                     u3880:
  7173  001282  0E00               	movlw	0
  7174  001284  0100               	movlb	0	; () banked
  7175  001286  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  7176  001288  0E01               	movlw	1
  7177  00128A  6F6C               	movwf	xtoa@p& (0+255),b
  7178  00128C  EF4C  F009         	goto	l1307
  7179  001290                     l1305:
  7180  001290  C03E  F06C         	movff	_prec,xtoa@p
  7181  001294  C03F  F06D         	movff	_prec+1,xtoa@p+1
  7182  001298                     l1307:
  7183                           
  7184                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  7185  001298  C03C  F06E         	movff	_width,xtoa@w
  7186  00129C  C03D  F06F         	movff	_width+1,xtoa@w+1
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  7189  0012A0  A840               	btfss	_flags^0,4,c
  7190  0012A2  EF55  F009         	goto	u3891
  7191  0012A6  EF57  F009         	goto	u3890
  7192  0012AA                     u3891:
  7193  0012AA  EF5C  F009         	goto	l4438
  7194  0012AE                     u3890:
  7195  0012AE                     
  7196                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  7197  0012AE  0100               	movlb	0	; () banked
  7198  0012B0  0EFE               	movlw	254
  7199  0012B2  276E               	addwf	xtoa@w& (0+255),f,b
  7200  0012B4  0EFF               	movlw	255
  7201  0012B6  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7202  0012B8                     l4438:
  7203                           
  7204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  7205  0012B8  C031  F070         	movff	xtoa@d,xtoa@n
  7206  0012BC  C032  F071         	movff	xtoa@d+1,xtoa@n+1
  7207  0012C0  C033  F072         	movff	xtoa@d+2,xtoa@n+2
  7208  0012C4  C034  F073         	movff	xtoa@d+3,xtoa@n+3
  7209  0012C8  C035  F074         	movff	xtoa@d+4,xtoa@n+4
  7210  0012CC  C036  F075         	movff	xtoa@d+5,xtoa@n+5
  7211  0012D0  C037  F076         	movff	xtoa@d+6,xtoa@n+6
  7212  0012D4  C038  F077         	movff	xtoa@d+7,xtoa@n+7
  7213  0012D8                     
  7214                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  7215  0012D8  0E00               	movlw	0
  7216  0012DA  0100               	movlb	0	; () banked
  7217  0012DC  6F79               	movwf	(xtoa@i+1)& (0+255),b
  7218  0012DE  0E1F               	movlw	31
  7219  0012E0  6F78               	movwf	xtoa@i& (0+255),b
  7220  0012E2                     
  7221                           ; BSR set to: 0
  7222                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  7223  0012E2  0E00               	movlw	0
  7224  0012E4  6FF1               	movwf	(_dbuf+31)& (0+255),b
  7225                           
  7226                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7227  0012E6  EF29  F00A         	goto	l4474
  7228  0012EA                     l4444:
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  7232  0012EA  0778               	decf	xtoa@i& (0+255),f,b
  7233  0012EC  A0D8               	btfss	status,0,c
  7234  0012EE  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7235  0012F0                     
  7236                           ; BSR set to: 0
  7237                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  7238  0012F0  0E0F               	movlw	15
  7239  0012F2  1570               	andwf	xtoa@n& (0+255),w,b
  7240  0012F4  6F7A               	movwf	xtoa@c& (0+255),b
  7241  0012F6  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  7242  0012F8                     
  7243                           ; BSR set to: 0
  7244                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7245  0012F8  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7246  0012FA  EF88  F009         	goto	u3901
  7247  0012FE  517B               	movf	(xtoa@c+1)& (0+255),w,b
  7248  001300  E109               	bnz	u3900
  7249  001302  0E0A               	movlw	10
  7250  001304  5D7A               	subwf	xtoa@c& (0+255),w,b
  7251  001306  A0D8               	btfss	status,0,c
  7252  001308  EF88  F009         	goto	u3901
  7253  00130C  EF8A  F009         	goto	u3900
  7254  001310                     u3901:
  7255  001310  EF92  F009         	goto	l4452
  7256  001314                     u3900:
  7257  001314                     
  7258                           ; BSR set to: 0
  7259  001314  0E57               	movlw	87
  7260  001316  257A               	addwf	xtoa@c& (0+255),w,b
  7261  001318  6F7A               	movwf	xtoa@c& (0+255),b
  7262  00131A  0E00               	movlw	0
  7263  00131C  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7264  00131E  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7265  001320  EF98  F009         	goto	l1314
  7266  001324                     l4452:
  7267                           
  7268                           ; BSR set to: 0
  7269  001324  0E30               	movlw	48
  7270  001326  257A               	addwf	xtoa@c& (0+255),w,b
  7271  001328  6F7A               	movwf	xtoa@c& (0+255),b
  7272  00132A  0E00               	movlw	0
  7273  00132C  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7274  00132E  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7275  001330                     l1314:
  7276                           
  7277                           ; BSR set to: 0
  7278  001330  0EBF               	movlw	191
  7279  001332  6F60               	movwf	??_xtoa& (0+255),b
  7280  001334  0EFF               	movlw	255
  7281  001336  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7282  001338  5039               	movf	xtoa@x^0,w,c
  7283  00133A  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7284  00133C  6B63               	clrf	(??_xtoa+3)& (0+255),b
  7285  00133E  5160               	movf	??_xtoa& (0+255),w,b
  7286  001340  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7287  001342  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7288  001344  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7289  001346  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7290  001348  E10A               	bnz	u3910
  7291  00134A  0E1A               	movlw	26
  7292  00134C  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7293  00134E  A0D8               	btfss	status,0,c
  7294  001350  EFAC  F009         	goto	u3911
  7295  001354  EFAF  F009         	goto	u3910
  7296  001358                     u3911:
  7297  001358  0E01               	movlw	1
  7298  00135A  EFB0  F009         	goto	u3920
  7299  00135E                     u3910:
  7300  00135E  0E00               	movlw	0
  7301  001360                     u3920:
  7302  001360  6F68               	movwf	_xtoa$1762& (0+255),b
  7303  001362  6B69               	clrf	(_xtoa$1762+1)& (0+255),b
  7304  001364                     
  7305                           ; BSR set to: 0
  7306  001364  5168               	movf	_xtoa$1762& (0+255),w,b
  7307  001366  1169               	iorwf	(_xtoa$1762+1)& (0+255),w,b
  7308  001368  B4D8               	btfsc	status,2,c
  7309  00136A  EFB9  F009         	goto	u3931
  7310  00136E  EFBB  F009         	goto	u3930
  7311  001372                     u3931:
  7312  001372  EFEB  F009         	goto	l4466
  7313  001376                     u3930:
  7314  001376                     
  7315                           ; BSR set to: 0
  7316  001376  0E9F               	movlw	159
  7317  001378  6F60               	movwf	??_xtoa& (0+255),b
  7318  00137A  0EFF               	movlw	255
  7319  00137C  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7320  00137E  0E20               	movlw	32
  7321  001380  117A               	iorwf	xtoa@c& (0+255),w,b
  7322  001382  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7323  001384  0E00               	movlw	0
  7324  001386  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7325  001388  6F63               	movwf	(??_xtoa+3)& (0+255),b
  7326  00138A  5160               	movf	??_xtoa& (0+255),w,b
  7327  00138C  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7328  00138E  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7329  001390  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7330  001392  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7331  001394  E10A               	bnz	u3940
  7332  001396  0E1A               	movlw	26
  7333  001398  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7334  00139A  A0D8               	btfss	status,0,c
  7335  00139C  EFD2  F009         	goto	u3941
  7336  0013A0  EFD5  F009         	goto	u3940
  7337  0013A4                     u3941:
  7338  0013A4  0E01               	movlw	1
  7339  0013A6  EFD6  F009         	goto	u3950
  7340  0013AA                     u3940:
  7341  0013AA  0E00               	movlw	0
  7342  0013AC                     u3950:
  7343  0013AC  6F6A               	movwf	_xtoa$1763& (0+255),b
  7344  0013AE  6B6B               	clrf	(_xtoa$1763+1)& (0+255),b
  7345  0013B0                     
  7346                           ; BSR set to: 0
  7347  0013B0  516A               	movf	_xtoa$1763& (0+255),w,b
  7348  0013B2  116B               	iorwf	(_xtoa$1763+1)& (0+255),w,b
  7349  0013B4  B4D8               	btfsc	status,2,c
  7350  0013B6  EFDF  F009         	goto	u3961
  7351  0013BA  EFE1  F009         	goto	u3960
  7352  0013BE                     u3961:
  7353  0013BE  EFEB  F009         	goto	l4466
  7354  0013C2                     u3960:
  7355  0013C2                     
  7356                           ; BSR set to: 0
  7357                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  7358  0013C2  C07A  F018         	movff	xtoa@c,toupper@c
  7359  0013C6  C07B  F019         	movff	xtoa@c+1,toupper@c+1
  7360  0013CA  EC84  F013         	call	_toupper	;wreg free
  7361  0013CE  C018  F07A         	movff	?_toupper,xtoa@c
  7362  0013D2  C019  F07B         	movff	?_toupper+1,xtoa@c+1
  7363  0013D6                     l4466:
  7364                           
  7365                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  7366  0013D6  0ED2               	movlw	low _dbuf
  7367  0013D8  0100               	movlb	0	; () banked
  7368  0013DA  2578               	addwf	xtoa@i& (0+255),w,b
  7369  0013DC  6ED9               	movwf	fsr2l,c
  7370  0013DE  0E00               	movlw	high _dbuf
  7371  0013E0  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7372  0013E2  6EDA               	movwf	fsr2h,c
  7373  0013E4  C07A  FFDF         	movff	xtoa@c,indf2
  7374  0013E8                     
  7375                           ; BSR set to: 0
  7376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  7377  0013E8  076C               	decf	xtoa@p& (0+255),f,b
  7378  0013EA  A0D8               	btfss	status,0,c
  7379  0013EC  076D               	decf	(xtoa@p+1)& (0+255),f,b
  7380  0013EE                     
  7381                           ; BSR set to: 0
  7382                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  7383  0013EE  076E               	decf	xtoa@w& (0+255),f,b
  7384  0013F0  A0D8               	btfss	status,0,c
  7385  0013F2  076F               	decf	(xtoa@w+1)& (0+255),f,b
  7386  0013F4                     
  7387                           ; BSR set to: 0
  7388                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  7389  0013F4  C070  F060         	movff	xtoa@n,??_xtoa
  7390  0013F8  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  7391  0013FC  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  7392  001400  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  7393  001404  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  7394  001408  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  7395  00140C  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  7396  001410  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  7397  001414  0E05               	movlw	5
  7398  001416  EF16  F00A         	goto	u3970
  7399  00141A                     u3975:
  7400  00141A  90D8               	bcf	status,0,c
  7401  00141C  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  7402  00141E  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  7403  001420  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  7404  001422  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  7405  001424  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  7406  001426  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  7407  001428  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  7408  00142A  3360               	rrcf	??_xtoa& (0+255),f,b
  7409  00142C                     u3970:
  7410  00142C  2EE8               	decfsz	wreg,f,c
  7411  00142E  EF0D  F00A         	goto	u3975
  7412  001432  C060  F070         	movff	??_xtoa,xtoa@n
  7413  001436  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  7414  00143A  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  7415  00143E  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  7416  001442  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  7417  001446  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  7418  00144A  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  7419  00144E  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  7420  001452                     l4474:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7424  001452  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  7425  001454  EF35  F00A         	goto	u3981
  7426  001458  5179               	movf	(xtoa@i+1)& (0+255),w,b
  7427  00145A  E109               	bnz	u3980
  7428  00145C  0E02               	movlw	2
  7429  00145E  5D78               	subwf	xtoa@i& (0+255),w,b
  7430  001460  A0D8               	btfss	status,0,c
  7431  001462  EF35  F00A         	goto	u3981
  7432  001466  EF37  F00A         	goto	u3980
  7433  00146A                     u3981:
  7434  00146A  EF67  F00A         	goto	l1328
  7435  00146E                     u3980:
  7436  00146E                     
  7437                           ; BSR set to: 0
  7438  00146E  5170               	movf	xtoa@n& (0+255),w,b
  7439  001470  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  7440  001472  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  7441  001474  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  7442  001476  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  7443  001478  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  7444  00147A  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  7445  00147C  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  7446  00147E  A4D8               	btfss	status,2,c
  7447  001480  EF44  F00A         	goto	u3991
  7448  001484  EF46  F00A         	goto	u3990
  7449  001488                     u3991:
  7450  001488  EF75  F009         	goto	l4444
  7451  00148C                     u3990:
  7452  00148C                     
  7453                           ; BSR set to: 0
  7454  00148C  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7455  00148E  EF53  F00A         	goto	u4000
  7456  001492  516D               	movf	(xtoa@p+1)& (0+255),w,b
  7457  001494  E106               	bnz	u4001
  7458  001496  056C               	decf	xtoa@p& (0+255),w,b
  7459  001498  B0D8               	btfsc	status,0,c
  7460  00149A  EF51  F00A         	goto	u4001
  7461  00149E  EF53  F00A         	goto	u4000
  7462  0014A2                     u4001:
  7463  0014A2  EF75  F009         	goto	l4444
  7464  0014A6                     u4000:
  7465  0014A6                     
  7466                           ; BSR set to: 0
  7467  0014A6  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7468  0014A8  EF5E  F00A         	goto	u4011
  7469  0014AC  516F               	movf	(xtoa@w+1)& (0+255),w,b
  7470  0014AE  E108               	bnz	u4010
  7471  0014B0  056E               	decf	xtoa@w& (0+255),w,b
  7472  0014B2  A0D8               	btfss	status,0,c
  7473  0014B4  EF5E  F00A         	goto	u4011
  7474  0014B8  EF60  F00A         	goto	u4010
  7475  0014BC                     u4011:
  7476  0014BC  EF67  F00A         	goto	l1328
  7477  0014C0                     u4010:
  7478  0014C0                     
  7479                           ; BSR set to: 0
  7480  0014C0  B240               	btfsc	_flags^0,1,c
  7481  0014C2  EF65  F00A         	goto	u4021
  7482  0014C6  EF67  F00A         	goto	u4020
  7483  0014CA                     u4021:
  7484  0014CA  EF75  F009         	goto	l4444
  7485  0014CE                     u4020:
  7486  0014CE                     l1328:
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  7490  0014CE  A840               	btfss	_flags^0,4,c
  7491  0014D0  EF6C  F00A         	goto	u4031
  7492  0014D4  EF6E  F00A         	goto	u4030
  7493  0014D8                     u4031:
  7494  0014D8  EF84  F00A         	goto	l4490
  7495  0014DC                     u4030:
  7496  0014DC                     
  7497                           ; BSR set to: 0
  7498                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  7499  0014DC  0778               	decf	xtoa@i& (0+255),f,b
  7500  0014DE  A0D8               	btfss	status,0,c
  7501  0014E0  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7502  0014E2                     
  7503                           ; BSR set to: 0
  7504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  7505  0014E2  0ED2               	movlw	low _dbuf
  7506  0014E4  2578               	addwf	xtoa@i& (0+255),w,b
  7507  0014E6  6ED9               	movwf	fsr2l,c
  7508  0014E8  0E00               	movlw	high _dbuf
  7509  0014EA  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7510  0014EC  6EDA               	movwf	fsr2h,c
  7511  0014EE  C039  FFDF         	movff	xtoa@x,indf2
  7512  0014F2                     
  7513                           ; BSR set to: 0
  7514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  7515  0014F2  0778               	decf	xtoa@i& (0+255),f,b
  7516  0014F4  A0D8               	btfss	status,0,c
  7517  0014F6  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  7520  0014F8  0ED2               	movlw	low _dbuf
  7521  0014FA  2578               	addwf	xtoa@i& (0+255),w,b
  7522  0014FC  6ED9               	movwf	fsr2l,c
  7523  0014FE  0E00               	movlw	high _dbuf
  7524  001500  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7525  001502  6EDA               	movwf	fsr2h,c
  7526  001504  0E30               	movlw	48
  7527  001506  6EDF               	movwf	indf2,c
  7528  001508                     l4490:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  7532  001508  C02F  F024         	movff	xtoa@fp,pad@fp
  7533  00150C  C030  F025         	movff	xtoa@fp+1,pad@fp+1
  7534  001510  0ED2               	movlw	low _dbuf
  7535  001512  2578               	addwf	xtoa@i& (0+255),w,b
  7536  001514  6E26               	movwf	pad@buf^0,c
  7537  001516  0E00               	movlw	high _dbuf
  7538  001518  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7539  00151A  6E27               	movwf	(pad@buf+1)^0,c
  7540  00151C  C06E  F028         	movff	xtoa@w,pad@p
  7541  001520  C06F  F029         	movff	xtoa@w+1,pad@p+1
  7542  001524  EC64  F011         	call	_pad	;wreg free
  7543  001528  C024  F02F         	movff	?_pad,?_xtoa
  7544  00152C  C025  F030         	movff	?_pad+1,?_xtoa+1
  7545  001530  0012               	return		;funcret
  7546  001532                     __end_of_xtoa:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _toupper *****************
  7550 ;; Defined at:
  7551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  c               2   23[COMRAM] int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2   23[COMRAM] int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;Total ram usage:        8 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    5
  7572 ;; This function calls:
  7573 ;;		_islower
  7574 ;; This function is called by:
  7575 ;;		_xtoa
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text25
  7580  002708                     __ptext25:
  7581                           	callstack 0
  7582  002708                     _toupper:
  7583                           	callstack 21
  7584  002708  0E9F               	movlw	159
  7585  00270A  6E1A               	movwf	??_toupper^0,c
  7586  00270C  0EFF               	movlw	255
  7587  00270E  6E1B               	movwf	(??_toupper+1)^0,c
  7588  002710  C018  F01C         	movff	toupper@c,??_toupper+2
  7589  002714  C019  F01D         	movff	toupper@c+1,??_toupper+3
  7590  002718  501A               	movf	??_toupper^0,w,c
  7591  00271A  261C               	addwf	(??_toupper+2)^0,f,c
  7592  00271C  501B               	movf	(??_toupper+1)^0,w,c
  7593  00271E  221D               	addwfc	(??_toupper+3)^0,f,c
  7594  002720  501D               	movf	(??_toupper+3)^0,w,c
  7595  002722  E10A               	bnz	u2230
  7596  002724  0E1A               	movlw	26
  7597  002726  5C1C               	subwf	(??_toupper+2)^0,w,c
  7598  002728  A0D8               	btfss	status,0,c
  7599  00272A  EF99  F013         	goto	u2231
  7600  00272E  EF9C  F013         	goto	u2230
  7601  002732                     u2231:
  7602  002732  0E01               	movlw	1
  7603  002734  EF9D  F013         	goto	u2240
  7604  002738                     u2230:
  7605  002738  0E00               	movlw	0
  7606  00273A                     u2240:
  7607  00273A  6E1E               	movwf	_toupper$1876^0,c
  7608  00273C  6A1F               	clrf	(_toupper$1876+1)^0,c
  7609  00273E  501E               	movf	_toupper$1876^0,w,c
  7610  002740  101F               	iorwf	(_toupper$1876+1)^0,w,c
  7611  002742  B4D8               	btfsc	status,2,c
  7612  002744  EFA6  F013         	goto	u2251
  7613  002748  EFA8  F013         	goto	u2250
  7614  00274C                     u2251:
  7615  00274C  EFAE  F013         	goto	l1466
  7616  002750                     u2250:
  7617  002750  0E5F               	movlw	95
  7618  002752  1418               	andwf	toupper@c^0,w,c
  7619  002754  6E18               	movwf	?_toupper^0,c
  7620  002756  6A19               	clrf	(?_toupper+1)^0,c
  7621  002758  EFB2  F013         	goto	l1471
  7622  00275C                     l1466:
  7623  00275C  C018  F018         	movff	toupper@c,?_toupper
  7624  002760  C019  F019         	movff	toupper@c+1,?_toupper+1
  7625  002764                     l1471:
  7626  002764  0012               	return		;funcret
  7627  002766                     __end_of_toupper:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _islower *****************
  7631 ;; Defined at:
  7632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  c               2   17[COMRAM] int 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2   17[COMRAM] int 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;Total ram usage:        6 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    4
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_toupper
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text26
  7661  00293C                     __ptext26:
  7662                           	callstack 0
  7663  00293C                     _islower:
  7664                           	callstack 21
  7665  00293C  0E9F               	movlw	159
  7666  00293E  6E14               	movwf	??_islower^0,c
  7667  002940  0EFF               	movlw	255
  7668  002942  6E15               	movwf	(??_islower+1)^0,c
  7669  002944  C012  F016         	movff	islower@c,??_islower+2
  7670  002948  C013  F017         	movff	islower@c+1,??_islower+3
  7671  00294C  5014               	movf	??_islower^0,w,c
  7672  00294E  2616               	addwf	(??_islower+2)^0,f,c
  7673  002950  5015               	movf	(??_islower+1)^0,w,c
  7674  002952  2217               	addwfc	(??_islower+3)^0,f,c
  7675  002954  5017               	movf	(??_islower+3)^0,w,c
  7676  002956  E10A               	bnz	u1920
  7677  002958  0E1A               	movlw	26
  7678  00295A  5C16               	subwf	(??_islower+2)^0,w,c
  7679  00295C  A0D8               	btfss	status,0,c
  7680  00295E  EFB3  F014         	goto	u1921
  7681  002962  EFB6  F014         	goto	u1920
  7682  002966                     u1921:
  7683  002966  0E01               	movlw	1
  7684  002968  EFB7  F014         	goto	u1930
  7685  00296C                     u1920:
  7686  00296C  0E00               	movlw	0
  7687  00296E                     u1930:
  7688  00296E  6E12               	movwf	?_islower^0,c
  7689  002970  6A13               	clrf	(?_islower+1)^0,c
  7690  002972  0012               	return		;funcret
  7691  002974                     __end_of_islower:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function _isupper *****************
  7695 ;; Defined at:
  7696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  c               2   17[COMRAM] int 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  2   17[COMRAM] int 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;Total ram usage:        6 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    4
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_xtoa
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text27
  7725  002974                     __ptext27:
  7726                           	callstack 0
  7727  002974                     _isupper:
  7728                           	callstack 22
  7729  002974  0EBF               	movlw	191
  7730  002976  6E14               	movwf	??_isupper^0,c
  7731  002978  0EFF               	movlw	255
  7732  00297A  6E15               	movwf	(??_isupper+1)^0,c
  7733  00297C  C012  F016         	movff	isupper@c,??_isupper+2
  7734  002980  C013  F017         	movff	isupper@c+1,??_isupper+3
  7735  002984  5014               	movf	??_isupper^0,w,c
  7736  002986  2616               	addwf	(??_isupper+2)^0,f,c
  7737  002988  5015               	movf	(??_isupper+1)^0,w,c
  7738  00298A  2217               	addwfc	(??_isupper+3)^0,f,c
  7739  00298C  5017               	movf	(??_isupper+3)^0,w,c
  7740  00298E  E10A               	bnz	u2190
  7741  002990  0E1A               	movlw	26
  7742  002992  5C16               	subwf	(??_isupper+2)^0,w,c
  7743  002994  A0D8               	btfss	status,0,c
  7744  002996  EFCF  F014         	goto	u2191
  7745  00299A  EFD2  F014         	goto	u2190
  7746  00299E                     u2191:
  7747  00299E  0E01               	movlw	1
  7748  0029A0  EFD3  F014         	goto	u2200
  7749  0029A4                     u2190:
  7750  0029A4  0E00               	movlw	0
  7751  0029A6                     u2200:
  7752  0029A6  6E12               	movwf	?_isupper^0,c
  7753  0029A8  6A13               	clrf	(?_isupper+1)^0,c
  7754  0029AA  0012               	return		;funcret
  7755  0029AC                     __end_of_isupper:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _isalpha *****************
  7759 ;; Defined at:
  7760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  c               2   17[COMRAM] int 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  2   17[COMRAM] int 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;Total ram usage:        6 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    4
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_xtoa
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text28
  7789  0028C8                     __ptext28:
  7790                           	callstack 0
  7791  0028C8                     _isalpha:
  7792                           	callstack 22
  7793  0028C8  0E9F               	movlw	159
  7794  0028CA  6E14               	movwf	??_isalpha^0,c
  7795  0028CC  0EFF               	movlw	255
  7796  0028CE  6E15               	movwf	(??_isalpha+1)^0,c
  7797  0028D0  0E20               	movlw	32
  7798  0028D2  1012               	iorwf	isalpha@c^0,w,c
  7799  0028D4  6E16               	movwf	(??_isalpha+2)^0,c
  7800  0028D6  0E00               	movlw	0
  7801  0028D8  1013               	iorwf	(isalpha@c+1)^0,w,c
  7802  0028DA  6E17               	movwf	(??_isalpha+3)^0,c
  7803  0028DC  5014               	movf	??_isalpha^0,w,c
  7804  0028DE  2616               	addwf	(??_isalpha+2)^0,f,c
  7805  0028E0  5015               	movf	(??_isalpha+1)^0,w,c
  7806  0028E2  2217               	addwfc	(??_isalpha+3)^0,f,c
  7807  0028E4  5017               	movf	(??_isalpha+3)^0,w,c
  7808  0028E6  E10A               	bnz	u2210
  7809  0028E8  0E1A               	movlw	26
  7810  0028EA  5C16               	subwf	(??_isalpha+2)^0,w,c
  7811  0028EC  A0D8               	btfss	status,0,c
  7812  0028EE  EF7B  F014         	goto	u2211
  7813  0028F2  EF7E  F014         	goto	u2210
  7814  0028F6                     u2211:
  7815  0028F6  0E01               	movlw	1
  7816  0028F8  EF7F  F014         	goto	u2220
  7817  0028FC                     u2210:
  7818  0028FC  0E00               	movlw	0
  7819  0028FE                     u2220:
  7820  0028FE  6E12               	movwf	?_isalpha^0,c
  7821  002900  6A13               	clrf	(?_isalpha+1)^0,c
  7822  002902  0012               	return		;funcret
  7823  002904                     __end_of_isalpha:
  7824                           	callstack 0
  7825                           
  7826 ;; *************** function _utoa *****************
  7827 ;; Defined at:
  7828 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  7831 ;;		 -> NULL(0), 
  7832 ;;  d               8   48[COMRAM] unsigned long long 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  n               8   12[BANK0 ] unsigned long long 
  7835 ;;  i               2   20[BANK0 ] int 
  7836 ;;  w               2   10[BANK0 ] int 
  7837 ;;  p               2    8[BANK0 ] int 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  2   46[COMRAM] int 
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7847 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7851 ;;Total ram usage:       32 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    9
  7854 ;; This function calls:
  7855 ;;		___lodiv
  7856 ;;		___lomod
  7857 ;;		_pad
  7858 ;; This function is called by:
  7859 ;;		_vfpfcnvrt
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text29
  7864  001532                     __ptext29:
  7865                           	callstack 0
  7866  001532                     _utoa:
  7867                           	callstack 18
  7868  001532                     
  7869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  7870  001532  BE3F               	btfsc	(_prec+1)^0,7,c
  7871  001534  EF9E  F00A         	goto	u3801
  7872  001538  EFA0  F00A         	goto	u3800
  7873  00153C                     u3801:
  7874  00153C  EFA1  F00A         	goto	l4396
  7875  001540                     u3800:
  7876  001540                     
  7877                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  7878  001540  9240               	bcf	_flags^0,1,c
  7879  001542                     l4396:
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  7882  001542  BE3F               	btfsc	(_prec+1)^0,7,c
  7883  001544  EFAE  F00A         	goto	u3810
  7884  001548  503F               	movf	(_prec+1)^0,w,c
  7885  00154A  E106               	bnz	u3811
  7886  00154C  043E               	decf	_prec^0,w,c
  7887  00154E  B0D8               	btfsc	status,0,c
  7888  001550  EFAC  F00A         	goto	u3811
  7889  001554  EFAE  F00A         	goto	u3810
  7890  001558                     u3811:
  7891  001558  EFB5  F00A         	goto	l1290
  7892  00155C                     u3810:
  7893  00155C  0E00               	movlw	0
  7894  00155E  0100               	movlb	0	; () banked
  7895  001560  6F69               	movwf	(utoa@p+1)& (0+255),b
  7896  001562  0E01               	movlw	1
  7897  001564  6F68               	movwf	utoa@p& (0+255),b
  7898  001566  EFB9  F00A         	goto	l1292
  7899  00156A                     l1290:
  7900  00156A  C03E  F068         	movff	_prec,utoa@p
  7901  00156E  C03F  F069         	movff	_prec+1,utoa@p+1
  7902  001572                     l1292:
  7903                           
  7904                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  7905  001572  C03C  F06A         	movff	_width,utoa@w
  7906  001576  C03D  F06B         	movff	_width+1,utoa@w+1
  7907                           
  7908                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 628:     n = d;
  7909  00157A  C031  F06C         	movff	utoa@d,utoa@n
  7910  00157E  C032  F06D         	movff	utoa@d+1,utoa@n+1
  7911  001582  C033  F06E         	movff	utoa@d+2,utoa@n+2
  7912  001586  C034  F06F         	movff	utoa@d+3,utoa@n+3
  7913  00158A  C035  F070         	movff	utoa@d+4,utoa@n+4
  7914  00158E  C036  F071         	movff	utoa@d+5,utoa@n+5
  7915  001592  C037  F072         	movff	utoa@d+6,utoa@n+6
  7916  001596  C038  F073         	movff	utoa@d+7,utoa@n+7
  7917  00159A                     
  7918                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  7919  00159A  0E00               	movlw	0
  7920  00159C  0100               	movlb	0	; () banked
  7921  00159E  6F75               	movwf	(utoa@i+1)& (0+255),b
  7922  0015A0  0E1F               	movlw	31
  7923  0015A2  6F74               	movwf	utoa@i& (0+255),b
  7924  0015A4                     
  7925                           ; BSR set to: 0
  7926                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  7927  0015A4  0E00               	movlw	0
  7928  0015A6  6FF1               	movwf	(_dbuf+31)& (0+255),b
  7929                           
  7930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7931  0015A8  EF4D  F00B         	goto	l4414
  7932  0015AC                     l4404:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 632:         --i;
  7936  0015AC  0774               	decf	utoa@i& (0+255),f,b
  7937  0015AE  A0D8               	btfss	status,0,c
  7938  0015B0  0775               	decf	(utoa@i+1)& (0+255),f,b
  7939  0015B2                     
  7940                           ; BSR set to: 0
  7941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  7942  0015B2  0ED2               	movlw	low _dbuf
  7943  0015B4  2574               	addwf	utoa@i& (0+255),w,b
  7944  0015B6  6ED9               	movwf	fsr2l,c
  7945  0015B8  0E00               	movlw	high _dbuf
  7946  0015BA  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  7947  0015BC  6EDA               	movwf	fsr2h,c
  7948  0015BE  C06C  F012         	movff	utoa@n,___lomod@dividend
  7949  0015C2  C06D  F013         	movff	utoa@n+1,___lomod@dividend+1
  7950  0015C6  C06E  F014         	movff	utoa@n+2,___lomod@dividend+2
  7951  0015CA  C06F  F015         	movff	utoa@n+3,___lomod@dividend+3
  7952  0015CE  C070  F016         	movff	utoa@n+4,___lomod@dividend+4
  7953  0015D2  C071  F017         	movff	utoa@n+5,___lomod@dividend+5
  7954  0015D6  C072  F018         	movff	utoa@n+6,___lomod@dividend+6
  7955  0015DA  C073  F019         	movff	utoa@n+7,___lomod@dividend+7
  7956  0015DE  0E0A               	movlw	10
  7957  0015E0  6E1A               	movwf	___lomod@divisor^0,c
  7958  0015E2  0E00               	movlw	0
  7959  0015E4  6E1B               	movwf	(___lomod@divisor+1)^0,c
  7960  0015E6  0E00               	movlw	0
  7961  0015E8  6E1C               	movwf	(___lomod@divisor+2)^0,c
  7962  0015EA  0E00               	movlw	0
  7963  0015EC  6E1D               	movwf	(___lomod@divisor+3)^0,c
  7964  0015EE  0E00               	movlw	0
  7965  0015F0  6E1E               	movwf	(___lomod@divisor+4)^0,c
  7966  0015F2  0E00               	movlw	0
  7967  0015F4  6E1F               	movwf	(___lomod@divisor+5)^0,c
  7968  0015F6  0E00               	movlw	0
  7969  0015F8  6E20               	movwf	(___lomod@divisor+6)^0,c
  7970  0015FA  0E00               	movlw	0
  7971  0015FC  6E21               	movwf	(___lomod@divisor+7)^0,c
  7972  0015FE  ECFC  F010         	call	___lomod	;wreg free
  7973  001602  C012  F060         	movff	?___lomod,??_utoa
  7974  001606  C013  F061         	movff	?___lomod+1,??_utoa+1
  7975  00160A  C014  F062         	movff	?___lomod+2,??_utoa+2
  7976  00160E  C015  F063         	movff	?___lomod+3,??_utoa+3
  7977  001612  C016  F064         	movff	?___lomod+4,??_utoa+4
  7978  001616  C017  F065         	movff	?___lomod+5,??_utoa+5
  7979  00161A  C018  F066         	movff	?___lomod+6,??_utoa+6
  7980  00161E  C019  F067         	movff	?___lomod+7,??_utoa+7
  7981  001622  0100               	movlb	0	; () banked
  7982  001624  5160               	movf	??_utoa& (0+255),w,b
  7983  001626  0F30               	addlw	48
  7984  001628  6EDF               	movwf	indf2,c
  7985  00162A                     
  7986                           ; BSR set to: 0
  7987                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 634:         --p;
  7988  00162A  0768               	decf	utoa@p& (0+255),f,b
  7989  00162C  A0D8               	btfss	status,0,c
  7990  00162E  0769               	decf	(utoa@p+1)& (0+255),f,b
  7991  001630                     
  7992                           ; BSR set to: 0
  7993                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 635:         --w;
  7994  001630  076A               	decf	utoa@w& (0+255),f,b
  7995  001632  A0D8               	btfss	status,0,c
  7996  001634  076B               	decf	(utoa@w+1)& (0+255),f,b
  7997  001636                     
  7998                           ; BSR set to: 0
  7999                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  8000  001636  C06C  F012         	movff	utoa@n,___lodiv@dividend
  8001  00163A  C06D  F013         	movff	utoa@n+1,___lodiv@dividend+1
  8002  00163E  C06E  F014         	movff	utoa@n+2,___lodiv@dividend+2
  8003  001642  C06F  F015         	movff	utoa@n+3,___lodiv@dividend+3
  8004  001646  C070  F016         	movff	utoa@n+4,___lodiv@dividend+4
  8005  00164A  C071  F017         	movff	utoa@n+5,___lodiv@dividend+5
  8006  00164E  C072  F018         	movff	utoa@n+6,___lodiv@dividend+6
  8007  001652  C073  F019         	movff	utoa@n+7,___lodiv@dividend+7
  8008  001656  0E0A               	movlw	10
  8009  001658  6E1A               	movwf	___lodiv@divisor^0,c
  8010  00165A  0E00               	movlw	0
  8011  00165C  6E1B               	movwf	(___lodiv@divisor+1)^0,c
  8012  00165E  0E00               	movlw	0
  8013  001660  6E1C               	movwf	(___lodiv@divisor+2)^0,c
  8014  001662  0E00               	movlw	0
  8015  001664  6E1D               	movwf	(___lodiv@divisor+3)^0,c
  8016  001666  0E00               	movlw	0
  8017  001668  6E1E               	movwf	(___lodiv@divisor+4)^0,c
  8018  00166A  0E00               	movlw	0
  8019  00166C  6E1F               	movwf	(___lodiv@divisor+5)^0,c
  8020  00166E  0E00               	movlw	0
  8021  001670  6E20               	movwf	(___lodiv@divisor+6)^0,c
  8022  001672  0E00               	movlw	0
  8023  001674  6E21               	movwf	(___lodiv@divisor+7)^0,c
  8024  001676  EC1A  F010         	call	___lodiv	;wreg free
  8025  00167A  C012  F06C         	movff	?___lodiv,utoa@n
  8026  00167E  C013  F06D         	movff	?___lodiv+1,utoa@n+1
  8027  001682  C014  F06E         	movff	?___lodiv+2,utoa@n+2
  8028  001686  C015  F06F         	movff	?___lodiv+3,utoa@n+3
  8029  00168A  C016  F070         	movff	?___lodiv+4,utoa@n+4
  8030  00168E  C017  F071         	movff	?___lodiv+5,utoa@n+5
  8031  001692  C018  F072         	movff	?___lodiv+6,utoa@n+6
  8032  001696  C019  F073         	movff	?___lodiv+7,utoa@n+7
  8033  00169A                     l4414:
  8034                           
  8035                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8036  00169A  0100               	movlb	0	; () banked
  8037  00169C  5174               	movf	utoa@i& (0+255),w,b
  8038  00169E  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  8039  0016A0  B4D8               	btfsc	status,2,c
  8040  0016A2  EF55  F00B         	goto	u3821
  8041  0016A6  EF57  F00B         	goto	u3820
  8042  0016AA                     u3821:
  8043  0016AA  EF87  F00B         	goto	l4424
  8044  0016AE                     u3820:
  8045  0016AE                     
  8046                           ; BSR set to: 0
  8047  0016AE  516C               	movf	utoa@n& (0+255),w,b
  8048  0016B0  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  8049  0016B2  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  8050  0016B4  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  8051  0016B6  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  8052  0016B8  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  8053  0016BA  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  8054  0016BC  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  8055  0016BE  A4D8               	btfss	status,2,c
  8056  0016C0  EF64  F00B         	goto	u3831
  8057  0016C4  EF66  F00B         	goto	u3830
  8058  0016C8                     u3831:
  8059  0016C8  EFD6  F00A         	goto	l4404
  8060  0016CC                     u3830:
  8061  0016CC                     
  8062                           ; BSR set to: 0
  8063  0016CC  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
  8064  0016CE  EF73  F00B         	goto	u3840
  8065  0016D2  5169               	movf	(utoa@p+1)& (0+255),w,b
  8066  0016D4  E106               	bnz	u3841
  8067  0016D6  0568               	decf	utoa@p& (0+255),w,b
  8068  0016D8  B0D8               	btfsc	status,0,c
  8069  0016DA  EF71  F00B         	goto	u3841
  8070  0016DE  EF73  F00B         	goto	u3840
  8071  0016E2                     u3841:
  8072  0016E2  EFD6  F00A         	goto	l4404
  8073  0016E6                     u3840:
  8074  0016E6                     
  8075                           ; BSR set to: 0
  8076  0016E6  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
  8077  0016E8  EF7E  F00B         	goto	u3851
  8078  0016EC  516B               	movf	(utoa@w+1)& (0+255),w,b
  8079  0016EE  E108               	bnz	u3850
  8080  0016F0  056A               	decf	utoa@w& (0+255),w,b
  8081  0016F2  A0D8               	btfss	status,0,c
  8082  0016F4  EF7E  F00B         	goto	u3851
  8083  0016F8  EF80  F00B         	goto	u3850
  8084  0016FC                     u3851:
  8085  0016FC  EF87  F00B         	goto	l4424
  8086  001700                     u3850:
  8087  001700                     
  8088                           ; BSR set to: 0
  8089  001700  B240               	btfsc	_flags^0,1,c
  8090  001702  EF85  F00B         	goto	u3861
  8091  001706  EF87  F00B         	goto	u3860
  8092  00170A                     u3861:
  8093  00170A  EFD6  F00A         	goto	l4404
  8094  00170E                     u3860:
  8095  00170E                     l4424:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  8099  00170E  C02F  F024         	movff	utoa@fp,pad@fp
  8100  001712  C030  F025         	movff	utoa@fp+1,pad@fp+1
  8101  001716  0ED2               	movlw	low _dbuf
  8102  001718  2574               	addwf	utoa@i& (0+255),w,b
  8103  00171A  6E26               	movwf	pad@buf^0,c
  8104  00171C  0E00               	movlw	high _dbuf
  8105  00171E  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  8106  001720  6E27               	movwf	(pad@buf+1)^0,c
  8107  001722  C06A  F028         	movff	utoa@w,pad@p
  8108  001726  C06B  F029         	movff	utoa@w+1,pad@p+1
  8109  00172A  EC64  F011         	call	_pad	;wreg free
  8110  00172E  C024  F02F         	movff	?_pad,?_utoa
  8111  001732  C025  F030         	movff	?_pad+1,?_utoa+1
  8112  001736  0012               	return		;funcret
  8113  001738                     __end_of_utoa:
  8114                           	callstack 0
  8115                           
  8116 ;; *************** function ___lomod *****************
  8117 ;; Defined at:
  8118 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lomod.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  dividend        8   17[COMRAM] unsigned long long 
  8121 ;;  divisor         8   25[COMRAM] unsigned long long 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  counter         1   33[COMRAM] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  8   17[COMRAM] unsigned long long 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8133 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;Total ram usage:       17 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    4
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_utoa
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text30
  8148  0021F8                     __ptext30:
  8149                           	callstack 0
  8150  0021F8                     ___lomod:
  8151                           	callstack 22
  8152  0021F8  501A               	movf	___lomod@divisor^0,w,c
  8153  0021FA  101B               	iorwf	(___lomod@divisor+1)^0,w,c
  8154  0021FC  101C               	iorwf	(___lomod@divisor+2)^0,w,c
  8155  0021FE  101D               	iorwf	(___lomod@divisor+3)^0,w,c
  8156  002200  101E               	iorwf	(___lomod@divisor+4)^0,w,c
  8157  002202  101F               	iorwf	(___lomod@divisor+5)^0,w,c
  8158  002204  1020               	iorwf	(___lomod@divisor+6)^0,w,c
  8159  002206  1021               	iorwf	(___lomod@divisor+7)^0,w,c
  8160  002208  B4D8               	btfsc	status,2,c
  8161  00220A  EF09  F011         	goto	u2111
  8162  00220E  EF0B  F011         	goto	u2110
  8163  002212                     u2111:
  8164  002212  EF53  F011         	goto	l971
  8165  002216                     u2110:
  8166  002216  0E01               	movlw	1
  8167  002218  6E22               	movwf	___lomod@counter^0,c
  8168  00221A  EF19  F011         	goto	l3082
  8169  00221E                     l3080:
  8170  00221E  90D8               	bcf	status,0,c
  8171  002220  361A               	rlcf	___lomod@divisor^0,f,c
  8172  002222  361B               	rlcf	(___lomod@divisor+1)^0,f,c
  8173  002224  361C               	rlcf	(___lomod@divisor+2)^0,f,c
  8174  002226  361D               	rlcf	(___lomod@divisor+3)^0,f,c
  8175  002228  361E               	rlcf	(___lomod@divisor+4)^0,f,c
  8176  00222A  361F               	rlcf	(___lomod@divisor+5)^0,f,c
  8177  00222C  3620               	rlcf	(___lomod@divisor+6)^0,f,c
  8178  00222E  3621               	rlcf	(___lomod@divisor+7)^0,f,c
  8179  002230  2A22               	incf	___lomod@counter^0,f,c
  8180  002232                     l3082:
  8181  002232  AE21               	btfss	(___lomod@divisor+7)^0,7,c
  8182  002234  EF1E  F011         	goto	u2121
  8183  002238  EF20  F011         	goto	u2120
  8184  00223C                     u2121:
  8185  00223C  EF0F  F011         	goto	l3080
  8186  002240                     u2120:
  8187  002240                     l3084:
  8188  002240  501A               	movf	___lomod@divisor^0,w,c
  8189  002242  5C12               	subwf	___lomod@dividend^0,w,c
  8190  002244  501B               	movf	(___lomod@divisor+1)^0,w,c
  8191  002246  5813               	subwfb	(___lomod@dividend+1)^0,w,c
  8192  002248  501C               	movf	(___lomod@divisor+2)^0,w,c
  8193  00224A  5814               	subwfb	(___lomod@dividend+2)^0,w,c
  8194  00224C  501D               	movf	(___lomod@divisor+3)^0,w,c
  8195  00224E  5815               	subwfb	(___lomod@dividend+3)^0,w,c
  8196  002250  501E               	movf	(___lomod@divisor+4)^0,w,c
  8197  002252  5816               	subwfb	(___lomod@dividend+4)^0,w,c
  8198  002254  501F               	movf	(___lomod@divisor+5)^0,w,c
  8199  002256  5817               	subwfb	(___lomod@dividend+5)^0,w,c
  8200  002258  5020               	movf	(___lomod@divisor+6)^0,w,c
  8201  00225A  5818               	subwfb	(___lomod@dividend+6)^0,w,c
  8202  00225C  5021               	movf	(___lomod@divisor+7)^0,w,c
  8203  00225E  5819               	subwfb	(___lomod@dividend+7)^0,w,c
  8204  002260  A0D8               	btfss	status,0,c
  8205  002262  EF35  F011         	goto	u2131
  8206  002266  EF37  F011         	goto	u2130
  8207  00226A                     u2131:
  8208  00226A  EF47  F011         	goto	l3088
  8209  00226E                     u2130:
  8210  00226E  501A               	movf	___lomod@divisor^0,w,c
  8211  002270  5E12               	subwf	___lomod@dividend^0,f,c
  8212  002272  501B               	movf	(___lomod@divisor+1)^0,w,c
  8213  002274  5A13               	subwfb	(___lomod@dividend+1)^0,f,c
  8214  002276  501C               	movf	(___lomod@divisor+2)^0,w,c
  8215  002278  5A14               	subwfb	(___lomod@dividend+2)^0,f,c
  8216  00227A  501D               	movf	(___lomod@divisor+3)^0,w,c
  8217  00227C  5A15               	subwfb	(___lomod@dividend+3)^0,f,c
  8218  00227E  501E               	movf	(___lomod@divisor+4)^0,w,c
  8219  002280  5A16               	subwfb	(___lomod@dividend+4)^0,f,c
  8220  002282  501F               	movf	(___lomod@divisor+5)^0,w,c
  8221  002284  5A17               	subwfb	(___lomod@dividend+5)^0,f,c
  8222  002286  5020               	movf	(___lomod@divisor+6)^0,w,c
  8223  002288  5A18               	subwfb	(___lomod@dividend+6)^0,f,c
  8224  00228A  5021               	movf	(___lomod@divisor+7)^0,w,c
  8225  00228C  5A19               	subwfb	(___lomod@dividend+7)^0,f,c
  8226  00228E                     l3088:
  8227  00228E  90D8               	bcf	status,0,c
  8228  002290  3221               	rrcf	(___lomod@divisor+7)^0,f,c
  8229  002292  3220               	rrcf	(___lomod@divisor+6)^0,f,c
  8230  002294  321F               	rrcf	(___lomod@divisor+5)^0,f,c
  8231  002296  321E               	rrcf	(___lomod@divisor+4)^0,f,c
  8232  002298  321D               	rrcf	(___lomod@divisor+3)^0,f,c
  8233  00229A  321C               	rrcf	(___lomod@divisor+2)^0,f,c
  8234  00229C  321B               	rrcf	(___lomod@divisor+1)^0,f,c
  8235  00229E  321A               	rrcf	___lomod@divisor^0,f,c
  8236  0022A0  2E22               	decfsz	___lomod@counter^0,f,c
  8237  0022A2  EF20  F011         	goto	l3084
  8238  0022A6                     l971:
  8239  0022A6  C012  F012         	movff	___lomod@dividend,?___lomod
  8240  0022AA  C013  F013         	movff	___lomod@dividend+1,?___lomod+1
  8241  0022AE  C014  F014         	movff	___lomod@dividend+2,?___lomod+2
  8242  0022B2  C015  F015         	movff	___lomod@dividend+3,?___lomod+3
  8243  0022B6  C016  F016         	movff	___lomod@dividend+4,?___lomod+4
  8244  0022BA  C017  F017         	movff	___lomod@dividend+5,?___lomod+5
  8245  0022BE  C018  F018         	movff	___lomod@dividend+6,?___lomod+6
  8246  0022C2  C019  F019         	movff	___lomod@dividend+7,?___lomod+7
  8247  0022C6  0012               	return		;funcret
  8248  0022C8                     __end_of___lomod:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function ___lodiv *****************
  8252 ;; Defined at:
  8253 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lodiv.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  dividend        8   17[COMRAM] unsigned long long 
  8256 ;;  divisor         8   25[COMRAM] unsigned long long 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  quotient        8   33[COMRAM] unsigned long long 
  8259 ;;  counter         1   41[COMRAM] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  8   17[COMRAM] unsigned long long 
  8262 ;; Registers used:
  8263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8269 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;Total ram usage:       25 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    4
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_utoa
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text31
  8284  002034                     __ptext31:
  8285                           	callstack 0
  8286  002034                     ___lodiv:
  8287                           	callstack 22
  8288  002034  EE20  F022         	lfsr	2,___lodiv@quotient
  8289  002038  0E07               	movlw	7
  8290  00203A                     u2071:
  8291  00203A  6ADE               	clrf	postinc2,c
  8292  00203C  06E8               	decf	wreg,f,c
  8293  00203E  E2FD               	bc	u2071
  8294  002040  501A               	movf	___lodiv@divisor^0,w,c
  8295  002042  101B               	iorwf	(___lodiv@divisor+1)^0,w,c
  8296  002044  101C               	iorwf	(___lodiv@divisor+2)^0,w,c
  8297  002046  101D               	iorwf	(___lodiv@divisor+3)^0,w,c
  8298  002048  101E               	iorwf	(___lodiv@divisor+4)^0,w,c
  8299  00204A  101F               	iorwf	(___lodiv@divisor+5)^0,w,c
  8300  00204C  1020               	iorwf	(___lodiv@divisor+6)^0,w,c
  8301  00204E  1021               	iorwf	(___lodiv@divisor+7)^0,w,c
  8302  002050  B4D8               	btfsc	status,2,c
  8303  002052  EF2D  F010         	goto	u2081
  8304  002056  EF2F  F010         	goto	u2080
  8305  00205A                     u2081:
  8306  00205A  EF81  F010         	goto	l961
  8307  00205E                     u2080:
  8308  00205E  0E01               	movlw	1
  8309  002060  6E2A               	movwf	___lodiv@counter^0,c
  8310  002062  EF3D  F010         	goto	l3062
  8311  002066                     l3060:
  8312  002066  90D8               	bcf	status,0,c
  8313  002068  361A               	rlcf	___lodiv@divisor^0,f,c
  8314  00206A  361B               	rlcf	(___lodiv@divisor+1)^0,f,c
  8315  00206C  361C               	rlcf	(___lodiv@divisor+2)^0,f,c
  8316  00206E  361D               	rlcf	(___lodiv@divisor+3)^0,f,c
  8317  002070  361E               	rlcf	(___lodiv@divisor+4)^0,f,c
  8318  002072  361F               	rlcf	(___lodiv@divisor+5)^0,f,c
  8319  002074  3620               	rlcf	(___lodiv@divisor+6)^0,f,c
  8320  002076  3621               	rlcf	(___lodiv@divisor+7)^0,f,c
  8321  002078  2A2A               	incf	___lodiv@counter^0,f,c
  8322  00207A                     l3062:
  8323  00207A  AE21               	btfss	(___lodiv@divisor+7)^0,7,c
  8324  00207C  EF42  F010         	goto	u2091
  8325  002080  EF44  F010         	goto	u2090
  8326  002084                     u2091:
  8327  002084  EF33  F010         	goto	l3060
  8328  002088                     u2090:
  8329  002088                     l3064:
  8330  002088  90D8               	bcf	status,0,c
  8331  00208A  3622               	rlcf	___lodiv@quotient^0,f,c
  8332  00208C  3623               	rlcf	(___lodiv@quotient+1)^0,f,c
  8333  00208E  3624               	rlcf	(___lodiv@quotient+2)^0,f,c
  8334  002090  3625               	rlcf	(___lodiv@quotient+3)^0,f,c
  8335  002092  3626               	rlcf	(___lodiv@quotient+4)^0,f,c
  8336  002094  3627               	rlcf	(___lodiv@quotient+5)^0,f,c
  8337  002096  3628               	rlcf	(___lodiv@quotient+6)^0,f,c
  8338  002098  3629               	rlcf	(___lodiv@quotient+7)^0,f,c
  8339  00209A  501A               	movf	___lodiv@divisor^0,w,c
  8340  00209C  5C12               	subwf	___lodiv@dividend^0,w,c
  8341  00209E  501B               	movf	(___lodiv@divisor+1)^0,w,c
  8342  0020A0  5813               	subwfb	(___lodiv@dividend+1)^0,w,c
  8343  0020A2  501C               	movf	(___lodiv@divisor+2)^0,w,c
  8344  0020A4  5814               	subwfb	(___lodiv@dividend+2)^0,w,c
  8345  0020A6  501D               	movf	(___lodiv@divisor+3)^0,w,c
  8346  0020A8  5815               	subwfb	(___lodiv@dividend+3)^0,w,c
  8347  0020AA  501E               	movf	(___lodiv@divisor+4)^0,w,c
  8348  0020AC  5816               	subwfb	(___lodiv@dividend+4)^0,w,c
  8349  0020AE  501F               	movf	(___lodiv@divisor+5)^0,w,c
  8350  0020B0  5817               	subwfb	(___lodiv@dividend+5)^0,w,c
  8351  0020B2  5020               	movf	(___lodiv@divisor+6)^0,w,c
  8352  0020B4  5818               	subwfb	(___lodiv@dividend+6)^0,w,c
  8353  0020B6  5021               	movf	(___lodiv@divisor+7)^0,w,c
  8354  0020B8  5819               	subwfb	(___lodiv@dividend+7)^0,w,c
  8355  0020BA  A0D8               	btfss	status,0,c
  8356  0020BC  EF62  F010         	goto	u2101
  8357  0020C0  EF64  F010         	goto	u2100
  8358  0020C4                     u2101:
  8359  0020C4  EF75  F010         	goto	l3072
  8360  0020C8                     u2100:
  8361  0020C8  501A               	movf	___lodiv@divisor^0,w,c
  8362  0020CA  5E12               	subwf	___lodiv@dividend^0,f,c
  8363  0020CC  501B               	movf	(___lodiv@divisor+1)^0,w,c
  8364  0020CE  5A13               	subwfb	(___lodiv@dividend+1)^0,f,c
  8365  0020D0  501C               	movf	(___lodiv@divisor+2)^0,w,c
  8366  0020D2  5A14               	subwfb	(___lodiv@dividend+2)^0,f,c
  8367  0020D4  501D               	movf	(___lodiv@divisor+3)^0,w,c
  8368  0020D6  5A15               	subwfb	(___lodiv@dividend+3)^0,f,c
  8369  0020D8  501E               	movf	(___lodiv@divisor+4)^0,w,c
  8370  0020DA  5A16               	subwfb	(___lodiv@dividend+4)^0,f,c
  8371  0020DC  501F               	movf	(___lodiv@divisor+5)^0,w,c
  8372  0020DE  5A17               	subwfb	(___lodiv@dividend+5)^0,f,c
  8373  0020E0  5020               	movf	(___lodiv@divisor+6)^0,w,c
  8374  0020E2  5A18               	subwfb	(___lodiv@dividend+6)^0,f,c
  8375  0020E4  5021               	movf	(___lodiv@divisor+7)^0,w,c
  8376  0020E6  5A19               	subwfb	(___lodiv@dividend+7)^0,f,c
  8377  0020E8  8022               	bsf	___lodiv@quotient^0,0,c
  8378  0020EA                     l3072:
  8379  0020EA  90D8               	bcf	status,0,c
  8380  0020EC  3221               	rrcf	(___lodiv@divisor+7)^0,f,c
  8381  0020EE  3220               	rrcf	(___lodiv@divisor+6)^0,f,c
  8382  0020F0  321F               	rrcf	(___lodiv@divisor+5)^0,f,c
  8383  0020F2  321E               	rrcf	(___lodiv@divisor+4)^0,f,c
  8384  0020F4  321D               	rrcf	(___lodiv@divisor+3)^0,f,c
  8385  0020F6  321C               	rrcf	(___lodiv@divisor+2)^0,f,c
  8386  0020F8  321B               	rrcf	(___lodiv@divisor+1)^0,f,c
  8387  0020FA  321A               	rrcf	___lodiv@divisor^0,f,c
  8388  0020FC  2E2A               	decfsz	___lodiv@counter^0,f,c
  8389  0020FE  EF44  F010         	goto	l3064
  8390  002102                     l961:
  8391  002102  C022  F012         	movff	___lodiv@quotient,?___lodiv
  8392  002106  C023  F013         	movff	___lodiv@quotient+1,?___lodiv+1
  8393  00210A  C024  F014         	movff	___lodiv@quotient+2,?___lodiv+2
  8394  00210E  C025  F015         	movff	___lodiv@quotient+3,?___lodiv+3
  8395  002112  C026  F016         	movff	___lodiv@quotient+4,?___lodiv+4
  8396  002116  C027  F017         	movff	___lodiv@quotient+5,?___lodiv+5
  8397  00211A  C028  F018         	movff	___lodiv@quotient+6,?___lodiv+6
  8398  00211E  C029  F019         	movff	___lodiv@quotient+7,?___lodiv+7
  8399  002122  0012               	return		;funcret
  8400  002124                     __end_of___lodiv:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _dtoa *****************
  8404 ;; Defined at:
  8405 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  8408 ;;		 -> NULL(0), 
  8409 ;;  d               8   48[COMRAM] long long 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  n               8   16[BANK0 ] long long 
  8412 ;;  i               2   24[BANK0 ] int 
  8413 ;;  s               2   14[BANK0 ] int 
  8414 ;;  w               2   12[BANK0 ] int 
  8415 ;;  p               2   10[BANK0 ] int 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  2   46[COMRAM] int 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8425 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8426 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;Total ram usage:       36 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    9
  8432 ;; This function calls:
  8433 ;;		___aodiv
  8434 ;;		___aomod
  8435 ;;		_abs
  8436 ;;		_pad
  8437 ;; This function is called by:
  8438 ;;		_vfpfcnvrt
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text32
  8443  000F76                     __ptext32:
  8444                           	callstack 0
  8445  000F76                     _dtoa:
  8446                           	callstack 18
  8447  000F76                     
  8448                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8449  000F76  C031  F070         	movff	dtoa@d,dtoa@n
  8450  000F7A  C032  F071         	movff	dtoa@d+1,dtoa@n+1
  8451  000F7E  C033  F072         	movff	dtoa@d+2,dtoa@n+2
  8452  000F82  C034  F073         	movff	dtoa@d+3,dtoa@n+3
  8453  000F86  C035  F074         	movff	dtoa@d+4,dtoa@n+4
  8454  000F8A  C036  F075         	movff	dtoa@d+5,dtoa@n+5
  8455  000F8E  C037  F076         	movff	dtoa@d+6,dtoa@n+6
  8456  000F92  C038  F077         	movff	dtoa@d+7,dtoa@n+7
  8457  000F96                     
  8458                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8459  000F96  0100               	movlb	0	; () banked
  8460  000F98  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  8461  000F9A  EFD1  F007         	goto	u3651
  8462  000F9E  EFD4  F007         	goto	u3650
  8463  000FA2                     u3651:
  8464  000FA2  0E01               	movlw	1
  8465  000FA4  EFD5  F007         	goto	u3660
  8466  000FA8                     u3650:
  8467  000FA8  0E00               	movlw	0
  8468  000FAA                     u3660:
  8469  000FAA  6F6E               	movwf	dtoa@s& (0+255),b
  8470  000FAC  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8473  000FAE  516E               	movf	dtoa@s& (0+255),w,b
  8474  000FB0  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8475  000FB2  B4D8               	btfsc	status,2,c
  8476  000FB4  EFDE  F007         	goto	u3671
  8477  000FB8  EFE0  F007         	goto	u3670
  8478  000FBC                     u3671:
  8479  000FBC  EFF0  F007         	goto	l4336
  8480  000FC0                     u3670:
  8481  000FC0                     
  8482                           ; BSR set to: 0
  8483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8484  000FC0  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  8485  000FC2  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  8486  000FC4  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  8487  000FC6  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  8488  000FC8  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  8489  000FCA  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  8490  000FCC  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  8491  000FCE  6D70               	negf	dtoa@n& (0+255),b
  8492  000FD0  0E00               	movlw	0
  8493  000FD2  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  8494  000FD4  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  8495  000FD6  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  8496  000FD8  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  8497  000FDA  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  8498  000FDC  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  8499  000FDE  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  8500  000FE0                     l4336:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8504  000FE0  BE3F               	btfsc	(_prec+1)^0,7,c
  8505  000FE2  EFF5  F007         	goto	u3681
  8506  000FE6  EFF7  F007         	goto	u3680
  8507  000FEA                     u3681:
  8508  000FEA  EFF8  F007         	goto	l4340
  8509  000FEE                     u3680:
  8510  000FEE                     
  8511                           ; BSR set to: 0
  8512                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8513  000FEE  9240               	bcf	_flags^0,1,c
  8514  000FF0                     l4340:
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8518  000FF0  BE3F               	btfsc	(_prec+1)^0,7,c
  8519  000FF2  EF05  F008         	goto	u3690
  8520  000FF6  503F               	movf	(_prec+1)^0,w,c
  8521  000FF8  E106               	bnz	u3691
  8522  000FFA  043E               	decf	_prec^0,w,c
  8523  000FFC  B0D8               	btfsc	status,0,c
  8524  000FFE  EF03  F008         	goto	u3691
  8525  001002  EF05  F008         	goto	u3690
  8526  001006                     u3691:
  8527  001006  EF0B  F008         	goto	l1265
  8528  00100A                     u3690:
  8529  00100A                     
  8530                           ; BSR set to: 0
  8531  00100A  0E00               	movlw	0
  8532  00100C  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  8533  00100E  0E01               	movlw	1
  8534  001010  6F6A               	movwf	dtoa@p& (0+255),b
  8535  001012  EF0F  F008         	goto	l1267
  8536  001016                     l1265:
  8537                           
  8538                           ; BSR set to: 0
  8539  001016  C03E  F06A         	movff	_prec,dtoa@p
  8540  00101A  C03F  F06B         	movff	_prec+1,dtoa@p+1
  8541  00101E                     l1267:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8545  00101E  C03C  F06C         	movff	_width,dtoa@w
  8546  001022  C03D  F06D         	movff	_width+1,dtoa@w+1
  8547  001026                     
  8548                           ; BSR set to: 0
  8549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8550  001026  516E               	movf	dtoa@s& (0+255),w,b
  8551  001028  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8552  00102A  A4D8               	btfss	status,2,c
  8553  00102C  EF1A  F008         	goto	u3701
  8554  001030  EF1C  F008         	goto	u3700
  8555  001034                     u3701:
  8556  001034  EF23  F008         	goto	l4348
  8557  001038                     u3700:
  8558  001038                     
  8559                           ; BSR set to: 0
  8560  001038  A440               	btfss	_flags^0,2,c
  8561  00103A  EF21  F008         	goto	u3711
  8562  00103E  EF23  F008         	goto	u3710
  8563  001042                     u3711:
  8564  001042  EF26  F008         	goto	l4350
  8565  001046                     u3710:
  8566  001046                     l4348:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  8570  001046  076C               	decf	dtoa@w& (0+255),f,b
  8571  001048  A0D8               	btfss	status,0,c
  8572  00104A  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8573  00104C                     l4350:
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8577  00104C  0E00               	movlw	0
  8578  00104E  6F79               	movwf	(dtoa@i+1)& (0+255),b
  8579  001050  0E1F               	movlw	31
  8580  001052  6F78               	movwf	dtoa@i& (0+255),b
  8581  001054                     
  8582                           ; BSR set to: 0
  8583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8584  001054  0E00               	movlw	0
  8585  001056  6FF1               	movwf	(_dbuf+31)& (0+255),b
  8586                           
  8587                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8588  001058  EFAB  F008         	goto	l4364
  8589  00105C                     l4354:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  8593  00105C  0778               	decf	dtoa@i& (0+255),f,b
  8594  00105E  A0D8               	btfss	status,0,c
  8595  001060  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8596  001062                     
  8597                           ; BSR set to: 0
  8598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8599  001062  0ED2               	movlw	low _dbuf
  8600  001064  2578               	addwf	dtoa@i& (0+255),w,b
  8601  001066  6ED9               	movwf	fsr2l,c
  8602  001068  0E00               	movlw	high _dbuf
  8603  00106A  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8604  00106C  6EDA               	movwf	fsr2h,c
  8605  00106E  C070  F012         	movff	dtoa@n,___aomod@dividend
  8606  001072  C071  F013         	movff	dtoa@n+1,___aomod@dividend+1
  8607  001076  C072  F014         	movff	dtoa@n+2,___aomod@dividend+2
  8608  00107A  C073  F015         	movff	dtoa@n+3,___aomod@dividend+3
  8609  00107E  C074  F016         	movff	dtoa@n+4,___aomod@dividend+4
  8610  001082  C075  F017         	movff	dtoa@n+5,___aomod@dividend+5
  8611  001086  C076  F018         	movff	dtoa@n+6,___aomod@dividend+6
  8612  00108A  C077  F019         	movff	dtoa@n+7,___aomod@dividend+7
  8613  00108E  0E0A               	movlw	10
  8614  001090  6E1A               	movwf	___aomod@divisor^0,c
  8615  001092  0E00               	movlw	0
  8616  001094  6E1B               	movwf	(___aomod@divisor+1)^0,c
  8617  001096  0E00               	movlw	0
  8618  001098  6E1C               	movwf	(___aomod@divisor+2)^0,c
  8619  00109A  0E00               	movlw	0
  8620  00109C  6E1D               	movwf	(___aomod@divisor+3)^0,c
  8621  00109E  0E00               	movlw	0
  8622  0010A0  6E1E               	movwf	(___aomod@divisor+4)^0,c
  8623  0010A2  0E00               	movlw	0
  8624  0010A4  6E1F               	movwf	(___aomod@divisor+5)^0,c
  8625  0010A6  0E00               	movlw	0
  8626  0010A8  6E20               	movwf	(___aomod@divisor+6)^0,c
  8627  0010AA  0E00               	movlw	0
  8628  0010AC  6E21               	movwf	(___aomod@divisor+7)^0,c
  8629  0010AE  ECDF  F00E         	call	___aomod	;wreg free
  8630  0010B2  C012  F060         	movff	?___aomod,??_dtoa
  8631  0010B6  C013  F061         	movff	?___aomod+1,??_dtoa+1
  8632  0010BA  C014  F062         	movff	?___aomod+2,??_dtoa+2
  8633  0010BE  C015  F063         	movff	?___aomod+3,??_dtoa+3
  8634  0010C2  C016  F064         	movff	?___aomod+4,??_dtoa+4
  8635  0010C6  C017  F065         	movff	?___aomod+5,??_dtoa+5
  8636  0010CA  C018  F066         	movff	?___aomod+6,??_dtoa+6
  8637  0010CE  C019  F067         	movff	?___aomod+7,??_dtoa+7
  8638  0010D2  C060  F024         	movff	??_dtoa,abs@a
  8639  0010D6  C062  F025         	movff	??_dtoa+2,abs@a+1
  8640  0010DA  EC25  F014         	call	_abs	;wreg free
  8641  0010DE  5024               	movf	?_abs^0,w,c
  8642  0010E0  0F30               	addlw	48
  8643  0010E2  6EDF               	movwf	indf2,c
  8644  0010E4                     
  8645                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  8646  0010E4  0100               	movlb	0	; () banked
  8647  0010E6  076A               	decf	dtoa@p& (0+255),f,b
  8648  0010E8  A0D8               	btfss	status,0,c
  8649  0010EA  076B               	decf	(dtoa@p+1)& (0+255),f,b
  8650  0010EC                     
  8651                           ; BSR set to: 0
  8652                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  8653  0010EC  076C               	decf	dtoa@w& (0+255),f,b
  8654  0010EE  A0D8               	btfss	status,0,c
  8655  0010F0  076D               	decf	(dtoa@w+1)& (0+255),f,b
  8656  0010F2                     
  8657                           ; BSR set to: 0
  8658                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8659  0010F2  C070  F012         	movff	dtoa@n,___aodiv@dividend
  8660  0010F6  C071  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  8661  0010FA  C072  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  8662  0010FE  C073  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  8663  001102  C074  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  8664  001106  C075  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  8665  00110A  C076  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  8666  00110E  C077  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  8667  001112  0E0A               	movlw	10
  8668  001114  6E1A               	movwf	___aodiv@divisor^0,c
  8669  001116  0E00               	movlw	0
  8670  001118  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  8671  00111A  0E00               	movlw	0
  8672  00111C  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  8673  00111E  0E00               	movlw	0
  8674  001120  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  8675  001122  0E00               	movlw	0
  8676  001124  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  8677  001126  0E00               	movlw	0
  8678  001128  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  8679  00112A  0E00               	movlw	0
  8680  00112C  6E20               	movwf	(___aodiv@divisor+6)^0,c
  8681  00112E  0E00               	movlw	0
  8682  001130  6E21               	movwf	(___aodiv@divisor+7)^0,c
  8683  001132  EC5F  F00D         	call	___aodiv	;wreg free
  8684  001136  C012  F070         	movff	?___aodiv,dtoa@n
  8685  00113A  C013  F071         	movff	?___aodiv+1,dtoa@n+1
  8686  00113E  C014  F072         	movff	?___aodiv+2,dtoa@n+2
  8687  001142  C015  F073         	movff	?___aodiv+3,dtoa@n+3
  8688  001146  C016  F074         	movff	?___aodiv+4,dtoa@n+4
  8689  00114A  C017  F075         	movff	?___aodiv+5,dtoa@n+5
  8690  00114E  C018  F076         	movff	?___aodiv+6,dtoa@n+6
  8691  001152  C019  F077         	movff	?___aodiv+7,dtoa@n+7
  8692  001156                     l4364:
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8695  001156  0100               	movlb	0	; () banked
  8696  001158  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  8697  00115A  EFB7  F008         	goto	u3721
  8698  00115E  5179               	movf	(dtoa@i+1)& (0+255),w,b
  8699  001160  E108               	bnz	u3720
  8700  001162  0578               	decf	dtoa@i& (0+255),w,b
  8701  001164  A0D8               	btfss	status,0,c
  8702  001166  EFB7  F008         	goto	u3721
  8703  00116A  EFB9  F008         	goto	u3720
  8704  00116E                     u3721:
  8705  00116E  EFE9  F008         	goto	l4374
  8706  001172                     u3720:
  8707  001172                     
  8708                           ; BSR set to: 0
  8709  001172  5170               	movf	dtoa@n& (0+255),w,b
  8710  001174  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  8711  001176  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  8712  001178  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  8713  00117A  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  8714  00117C  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  8715  00117E  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  8716  001180  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  8717  001182  A4D8               	btfss	status,2,c
  8718  001184  EFC6  F008         	goto	u3731
  8719  001188  EFC8  F008         	goto	u3730
  8720  00118C                     u3731:
  8721  00118C  EF2E  F008         	goto	l4354
  8722  001190                     u3730:
  8723  001190                     
  8724                           ; BSR set to: 0
  8725  001190  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  8726  001192  EFD5  F008         	goto	u3740
  8727  001196  516B               	movf	(dtoa@p+1)& (0+255),w,b
  8728  001198  E106               	bnz	u3741
  8729  00119A  056A               	decf	dtoa@p& (0+255),w,b
  8730  00119C  B0D8               	btfsc	status,0,c
  8731  00119E  EFD3  F008         	goto	u3741
  8732  0011A2  EFD5  F008         	goto	u3740
  8733  0011A6                     u3741:
  8734  0011A6  EF2E  F008         	goto	l4354
  8735  0011AA                     u3740:
  8736  0011AA                     
  8737                           ; BSR set to: 0
  8738  0011AA  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  8739  0011AC  EFE0  F008         	goto	u3751
  8740  0011B0  516D               	movf	(dtoa@w+1)& (0+255),w,b
  8741  0011B2  E108               	bnz	u3750
  8742  0011B4  056C               	decf	dtoa@w& (0+255),w,b
  8743  0011B6  A0D8               	btfss	status,0,c
  8744  0011B8  EFE0  F008         	goto	u3751
  8745  0011BC  EFE2  F008         	goto	u3750
  8746  0011C0                     u3751:
  8747  0011C0  EFE9  F008         	goto	l4374
  8748  0011C4                     u3750:
  8749  0011C4                     
  8750                           ; BSR set to: 0
  8751  0011C4  B240               	btfsc	_flags^0,1,c
  8752  0011C6  EFE7  F008         	goto	u3761
  8753  0011CA  EFE9  F008         	goto	u3760
  8754  0011CE                     u3761:
  8755  0011CE  EF2E  F008         	goto	l4354
  8756  0011D2                     u3760:
  8757  0011D2                     l4374:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8761  0011D2  516E               	movf	dtoa@s& (0+255),w,b
  8762  0011D4  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8763  0011D6  A4D8               	btfss	status,2,c
  8764  0011D8  EFF0  F008         	goto	u3771
  8765  0011DC  EFF2  F008         	goto	u3770
  8766  0011E0                     u3771:
  8767  0011E0  EFF9  F008         	goto	l4378
  8768  0011E4                     u3770:
  8769  0011E4                     
  8770                           ; BSR set to: 0
  8771  0011E4  A440               	btfss	_flags^0,2,c
  8772  0011E6  EFF7  F008         	goto	u3781
  8773  0011EA  EFF9  F008         	goto	u3780
  8774  0011EE                     u3781:
  8775  0011EE  EF17  F009         	goto	l4388
  8776  0011F2                     u3780:
  8777  0011F2                     l4378:
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  8781  0011F2  0778               	decf	dtoa@i& (0+255),f,b
  8782  0011F4  A0D8               	btfss	status,0,c
  8783  0011F6  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8784  0011F8                     
  8785                           ; BSR set to: 0
  8786                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8787  0011F8  516E               	movf	dtoa@s& (0+255),w,b
  8788  0011FA  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8789  0011FC  A4D8               	btfss	status,2,c
  8790  0011FE  EF03  F009         	goto	u3791
  8791  001202  EF05  F009         	goto	u3790
  8792  001206                     u3791:
  8793  001206  EF0B  F009         	goto	l4384
  8794  00120A                     u3790:
  8795  00120A                     
  8796                           ; BSR set to: 0
  8797  00120A  0E00               	movlw	0
  8798  00120C  6F69               	movwf	(_dtoa$1744+1)& (0+255),b
  8799  00120E  0E2B               	movlw	43
  8800  001210  6F68               	movwf	_dtoa$1744& (0+255),b
  8801  001212  EF0F  F009         	goto	l4386
  8802  001216                     l4384:
  8803                           
  8804                           ; BSR set to: 0
  8805  001216  0E00               	movlw	0
  8806  001218  6F69               	movwf	(_dtoa$1744+1)& (0+255),b
  8807  00121A  0E2D               	movlw	45
  8808  00121C  6F68               	movwf	_dtoa$1744& (0+255),b
  8809  00121E                     l4386:
  8810                           
  8811                           ; BSR set to: 0
  8812  00121E  0ED2               	movlw	low _dbuf
  8813  001220  2578               	addwf	dtoa@i& (0+255),w,b
  8814  001222  6ED9               	movwf	fsr2l,c
  8815  001224  0E00               	movlw	high _dbuf
  8816  001226  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8817  001228  6EDA               	movwf	fsr2h,c
  8818  00122A  C068  FFDF         	movff	_dtoa$1744,indf2
  8819  00122E                     l4388:
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8823  00122E  C02F  F024         	movff	dtoa@fp,pad@fp
  8824  001232  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  8825  001236  0ED2               	movlw	low _dbuf
  8826  001238  2578               	addwf	dtoa@i& (0+255),w,b
  8827  00123A  6E26               	movwf	pad@buf^0,c
  8828  00123C  0E00               	movlw	high _dbuf
  8829  00123E  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8830  001240  6E27               	movwf	(pad@buf+1)^0,c
  8831  001242  C06C  F028         	movff	dtoa@w,pad@p
  8832  001246  C06D  F029         	movff	dtoa@w+1,pad@p+1
  8833  00124A  EC64  F011         	call	_pad	;wreg free
  8834  00124E  C024  F02F         	movff	?_pad,?_dtoa
  8835  001252  C025  F030         	movff	?_pad+1,?_dtoa+1
  8836  001256  0012               	return		;funcret
  8837  001258                     __end_of_dtoa:
  8838                           	callstack 0
  8839                           
  8840 ;; *************** function _pad *****************
  8841 ;; Defined at:
  8842 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  8845 ;;		 -> NULL(0), 
  8846 ;;  buf             2   37[COMRAM] PTR unsigned char 
  8847 ;;		 -> dbuf(32), 
  8848 ;;  p               2   39[COMRAM] int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  w               2   44[COMRAM] int 
  8851 ;;  i               2   42[COMRAM] int 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  2   35[COMRAM] int 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;Total ram usage:       11 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    8
  8868 ;; This function calls:
  8869 ;;		_fputc
  8870 ;;		_fputs
  8871 ;;		_strlen
  8872 ;; This function is called by:
  8873 ;;		_dtoa
  8874 ;;		_utoa
  8875 ;;		_xtoa
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text33
  8880  0022C8                     __ptext33:
  8881                           	callstack 0
  8882  0022C8                     _pad:
  8883                           	callstack 18
  8884  0022C8                     
  8885                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8886  0022C8  A040               	btfss	_flags^0,0,c
  8887  0022CA  EF69  F011         	goto	u2141
  8888  0022CE  EF6B  F011         	goto	u2140
  8889  0022D2                     u2141:
  8890  0022D2  EF75  F011         	goto	l3096
  8891  0022D6                     u2140:
  8892  0022D6                     
  8893                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8894  0022D6  C026  F01D         	movff	pad@buf,fputs@s
  8895  0022DA  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8896  0022DE  C024  F01F         	movff	pad@fp,fputs@fp
  8897  0022E2  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8898  0022E6  EC03  F014         	call	_fputs	;wreg free
  8899  0022EA                     l3096:
  8900                           
  8901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8902  0022EA  BE29               	btfsc	(pad@p+1)^0,7,c
  8903  0022EC  EF7A  F011         	goto	u2151
  8904  0022F0  EF7C  F011         	goto	u2150
  8905  0022F4                     u2151:
  8906  0022F4  EF82  F011         	goto	l3100
  8907  0022F8                     u2150:
  8908  0022F8  C028  F02D         	movff	pad@p,pad@w
  8909  0022FC  C029  F02E         	movff	pad@p+1,pad@w+1
  8910  002300  EF86  F011         	goto	l1238
  8911  002304                     l3100:
  8912  002304  0E00               	movlw	0
  8913  002306  6E2E               	movwf	(pad@w+1)^0,c
  8914  002308  0E00               	movlw	0
  8915  00230A  6E2D               	movwf	pad@w^0,c
  8916  00230C                     l1238:
  8917                           
  8918                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8919  00230C  0E00               	movlw	0
  8920  00230E  6E2C               	movwf	(pad@i+1)^0,c
  8921  002310  0E00               	movlw	0
  8922  002312  6E2B               	movwf	pad@i^0,c
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8925  002314  EF98  F011         	goto	l3106
  8926  002318                     l3102:
  8927                           
  8928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8929  002318  0E00               	movlw	0
  8930  00231A  6E15               	movwf	(fputc@c+1)^0,c
  8931  00231C  0E20               	movlw	32
  8932  00231E  6E14               	movwf	fputc@c^0,c
  8933  002320  C024  F016         	movff	pad@fp,fputc@fp
  8934  002324  C025  F017         	movff	pad@fp+1,fputc@fp+1
  8935  002328  ECC0  F012         	call	_fputc	;wreg free
  8936  00232C                     
  8937                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8938  00232C  4A2B               	infsnz	pad@i^0,f,c
  8939  00232E  2A2C               	incf	(pad@i+1)^0,f,c
  8940  002330                     l3106:
  8941                           
  8942                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8943  002330  502D               	movf	pad@w^0,w,c
  8944  002332  5C2B               	subwf	pad@i^0,w,c
  8945  002334  502C               	movf	(pad@i+1)^0,w,c
  8946  002336  0A80               	xorlw	128
  8947  002338  6E2A               	movwf	??_pad^0,c
  8948  00233A  502E               	movf	(pad@w+1)^0,w,c
  8949  00233C  0A80               	xorlw	128
  8950  00233E  582A               	subwfb	??_pad^0,w,c
  8951  002340  A0D8               	btfss	status,0,c
  8952  002342  EFA5  F011         	goto	u2161
  8953  002346  EFA7  F011         	goto	u2160
  8954  00234A                     u2161:
  8955  00234A  EF8C  F011         	goto	l3102
  8956  00234E                     u2160:
  8957  00234E                     
  8958                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8959  00234E  B040               	btfsc	_flags^0,0,c
  8960  002350  EFAC  F011         	goto	u2171
  8961  002354  EFAE  F011         	goto	u2170
  8962  002358                     u2171:
  8963  002358  EFB8  F011         	goto	l3110
  8964  00235C                     u2170:
  8965  00235C                     
  8966                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8967  00235C  C026  F01D         	movff	pad@buf,fputs@s
  8968  002360  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8969  002364  C024  F01F         	movff	pad@fp,fputs@fp
  8970  002368  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8971  00236C  EC03  F014         	call	_fputs	;wreg free
  8972  002370                     l3110:
  8973                           
  8974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8975  002370  C026  F012         	movff	pad@buf,strlen@s
  8976  002374  C027  F013         	movff	pad@buf+1,strlen@s+1
  8977  002378  EC0D  F015         	call	_strlen	;wreg free
  8978  00237C  502D               	movf	pad@w^0,w,c
  8979  00237E  2412               	addwf	?_strlen^0,w,c
  8980  002380  6E24               	movwf	?_pad^0,c
  8981  002382  502E               	movf	(pad@w+1)^0,w,c
  8982  002384  2013               	addwfc	(?_strlen+1)^0,w,c
  8983  002386  6E25               	movwf	(?_pad+1)^0,c
  8984  002388  0012               	return		;funcret
  8985  00238A                     __end_of_pad:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _strlen *****************
  8989 ;; Defined at:
  8990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  s               2   17[COMRAM] PTR const unsigned char 
  8993 ;;		 -> dbuf(32), 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  a               2   19[COMRAM] PTR const unsigned char 
  8996 ;;		 -> dbuf(32), 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  2   17[COMRAM] unsigned int 
  8999 ;; Registers used:
  9000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;Total ram usage:        4 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    4
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_pad
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text34
  9021  002A1A                     __ptext34:
  9022                           	callstack 0
  9023  002A1A                     _strlen:
  9024                           	callstack 21
  9025  002A1A  C012  F014         	movff	strlen@s,strlen@a
  9026  002A1E  C013  F015         	movff	strlen@s+1,strlen@a+1
  9027  002A22  EF15  F015         	goto	l2958
  9028  002A26                     l2956:
  9029  002A26  4A12               	infsnz	strlen@s^0,f,c
  9030  002A28  2A13               	incf	(strlen@s+1)^0,f,c
  9031  002A2A                     l2958:
  9032  002A2A  C012  FFD9         	movff	strlen@s,fsr2l
  9033  002A2E  C013  FFDA         	movff	strlen@s+1,fsr2h
  9034  002A32  50DF               	movf	indf2,w,c
  9035  002A34  A4D8               	btfss	status,2,c
  9036  002A36  EF1F  F015         	goto	u1911
  9037  002A3A  EF21  F015         	goto	u1910
  9038  002A3E                     u1911:
  9039  002A3E  EF13  F015         	goto	l2956
  9040  002A42                     u1910:
  9041  002A42  5014               	movf	strlen@a^0,w,c
  9042  002A44  5C12               	subwf	strlen@s^0,w,c
  9043  002A46  6E12               	movwf	?_strlen^0,c
  9044  002A48  5015               	movf	(strlen@a+1)^0,w,c
  9045  002A4A  5813               	subwfb	(strlen@s+1)^0,w,c
  9046  002A4C  6E13               	movwf	(?_strlen+1)^0,c
  9047  002A4E  0012               	return		;funcret
  9048  002A50                     __end_of_strlen:
  9049                           	callstack 0
  9050                           
  9051 ;; *************** function _fputs *****************
  9052 ;; Defined at:
  9053 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;  s               2   28[COMRAM] PTR const unsigned char 
  9056 ;;		 -> dbuf(32), 
  9057 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9058 ;;		 -> NULL(0), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  i               2   33[COMRAM] int 
  9061 ;;  c               1   32[COMRAM] unsigned char 
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  2   28[COMRAM] int 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9072 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;Total ram usage:        7 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    7
  9078 ;; This function calls:
  9079 ;;		_fputc
  9080 ;; This function is called by:
  9081 ;;		_pad
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text35
  9086  002806                     __ptext35:
  9087                           	callstack 0
  9088  002806                     _fputs:
  9089                           	callstack 18
  9090  002806  0E00               	movlw	0
  9091  002808  6E23               	movwf	(fputs@i+1)^0,c
  9092  00280A  0E00               	movlw	0
  9093  00280C  6E22               	movwf	fputs@i^0,c
  9094  00280E  EF14  F014         	goto	l2952
  9095  002812                     l2948:
  9096  002812  C021  F014         	movff	fputs@c,fputc@c
  9097  002816  6A15               	clrf	(fputc@c+1)^0,c
  9098  002818  C01F  F016         	movff	fputs@fp,fputc@fp
  9099  00281C  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  9100  002820  ECC0  F012         	call	_fputc	;wreg free
  9101  002824  4A22               	infsnz	fputs@i^0,f,c
  9102  002826  2A23               	incf	(fputs@i+1)^0,f,c
  9103  002828                     l2952:
  9104  002828  5022               	movf	fputs@i^0,w,c
  9105  00282A  241D               	addwf	fputs@s^0,w,c
  9106  00282C  6ED9               	movwf	fsr2l,c
  9107  00282E  5023               	movf	(fputs@i+1)^0,w,c
  9108  002830  201E               	addwfc	(fputs@s+1)^0,w,c
  9109  002832  6EDA               	movwf	fsr2h,c
  9110  002834  50DF               	movf	indf2,w,c
  9111  002836  6E21               	movwf	fputs@c^0,c
  9112  002838  5021               	movf	fputs@c^0,w,c
  9113  00283A  A4D8               	btfss	status,2,c
  9114  00283C  EF22  F014         	goto	u1901
  9115  002840  EF24  F014         	goto	u1900
  9116  002844                     u1901:
  9117  002844  EF09  F014         	goto	l2948
  9118  002848                     u1900:
  9119  002848  0012               	return		;funcret
  9120  00284A                     __end_of_fputs:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function _abs *****************
  9124 ;; Defined at:
  9125 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  a               2   35[COMRAM] int 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  2   35[COMRAM] int 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;Total ram usage:        4 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    4
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_dtoa
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text36
  9154  00284A                     __ptext36:
  9155                           	callstack 0
  9156  00284A                     _abs:
  9157                           	callstack 22
  9158  00284A  BE25               	btfsc	(abs@a+1)^0,7,c
  9159  00284C  EF32  F014         	goto	u2180
  9160  002850  5025               	movf	(abs@a+1)^0,w,c
  9161  002852  E106               	bnz	u2181
  9162  002854  0424               	decf	abs@a^0,w,c
  9163  002856  B0D8               	btfsc	status,0,c
  9164  002858  EF30  F014         	goto	u2181
  9165  00285C  EF32  F014         	goto	u2180
  9166  002860                     u2181:
  9167  002860  EF40  F014         	goto	l1375
  9168  002864                     u2180:
  9169  002864  C024  F026         	movff	abs@a,??_abs
  9170  002868  C025  F027         	movff	abs@a+1,??_abs+1
  9171  00286C  1E26               	comf	??_abs^0,f,c
  9172  00286E  1E27               	comf	(??_abs+1)^0,f,c
  9173  002870  4A26               	infsnz	??_abs^0,f,c
  9174  002872  2A27               	incf	(??_abs+1)^0,f,c
  9175  002874  C026  F024         	movff	??_abs,?_abs
  9176  002878  C027  F025         	movff	??_abs+1,?_abs+1
  9177  00287C  EF44  F014         	goto	l1378
  9178  002880                     l1375:
  9179  002880  C024  F024         	movff	abs@a,?_abs
  9180  002884  C025  F025         	movff	abs@a+1,?_abs+1
  9181  002888                     l1378:
  9182  002888  0012               	return		;funcret
  9183  00288A                     __end_of_abs:
  9184                           	callstack 0
  9185                           
  9186 ;; *************** function ___aomod *****************
  9187 ;; Defined at:
  9188 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  dividend        8   17[COMRAM] long long 
  9191 ;;  divisor         8   25[COMRAM] long long 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  sign            1   34[COMRAM] unsigned char 
  9194 ;;  counter         1   33[COMRAM] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  8   17[COMRAM] long long 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9204 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;Total ram usage:       18 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    4
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_dtoa
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           	psect	text37
  9219  001DBE                     __ptext37:
  9220                           	callstack 0
  9221  001DBE                     ___aomod:
  9222                           	callstack 22
  9223  001DBE  0E00               	movlw	0
  9224  001DC0  6E23               	movwf	___aomod@sign^0,c
  9225  001DC2  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
  9226  001DC4  EFE8  F00E         	goto	u2010
  9227  001DC8  EFE6  F00E         	goto	u2011
  9228  001DCC                     u2011:
  9229  001DCC  EFFA  F00E         	goto	l3026
  9230  001DD0                     u2010:
  9231  001DD0  1E19               	comf	(___aomod@dividend+7)^0,f,c
  9232  001DD2  1E18               	comf	(___aomod@dividend+6)^0,f,c
  9233  001DD4  1E17               	comf	(___aomod@dividend+5)^0,f,c
  9234  001DD6  1E16               	comf	(___aomod@dividend+4)^0,f,c
  9235  001DD8  1E15               	comf	(___aomod@dividend+3)^0,f,c
  9236  001DDA  1E14               	comf	(___aomod@dividend+2)^0,f,c
  9237  001DDC  1E13               	comf	(___aomod@dividend+1)^0,f,c
  9238  001DDE  6C12               	negf	___aomod@dividend^0,c
  9239  001DE0  0E00               	movlw	0
  9240  001DE2  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  9241  001DE4  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  9242  001DE6  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  9243  001DE8  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  9244  001DEA  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  9245  001DEC  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  9246  001DEE  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  9247  001DF0  0E01               	movlw	1
  9248  001DF2  6E23               	movwf	___aomod@sign^0,c
  9249  001DF4                     l3026:
  9250  001DF4  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
  9251  001DF6  EF01  F00F         	goto	u2020
  9252  001DFA  EFFF  F00E         	goto	u2021
  9253  001DFE                     u2021:
  9254  001DFE  EF11  F00F         	goto	l3030
  9255  001E02                     u2020:
  9256  001E02  1E21               	comf	(___aomod@divisor+7)^0,f,c
  9257  001E04  1E20               	comf	(___aomod@divisor+6)^0,f,c
  9258  001E06  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  9259  001E08  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  9260  001E0A  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  9261  001E0C  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  9262  001E0E  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  9263  001E10  6C1A               	negf	___aomod@divisor^0,c
  9264  001E12  0E00               	movlw	0
  9265  001E14  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  9266  001E16  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  9267  001E18  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  9268  001E1A  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  9269  001E1C  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  9270  001E1E  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  9271  001E20  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  9272  001E22                     l3030:
  9273  001E22  501A               	movf	___aomod@divisor^0,w,c
  9274  001E24  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  9275  001E26  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  9276  001E28  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  9277  001E2A  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  9278  001E2C  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  9279  001E2E  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  9280  001E30  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  9281  001E32  B4D8               	btfsc	status,2,c
  9282  001E34  EF1E  F00F         	goto	u2031
  9283  001E38  EF20  F00F         	goto	u2030
  9284  001E3C                     u2031:
  9285  001E3C  EF68  F00F         	goto	l3046
  9286  001E40                     u2030:
  9287  001E40  0E01               	movlw	1
  9288  001E42  6E22               	movwf	___aomod@counter^0,c
  9289  001E44  EF2E  F00F         	goto	l3036
  9290  001E48                     l3034:
  9291  001E48  90D8               	bcf	status,0,c
  9292  001E4A  361A               	rlcf	___aomod@divisor^0,f,c
  9293  001E4C  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  9294  001E4E  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  9295  001E50  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  9296  001E52  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  9297  001E54  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  9298  001E56  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  9299  001E58  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  9300  001E5A  2A22               	incf	___aomod@counter^0,f,c
  9301  001E5C                     l3036:
  9302  001E5C  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  9303  001E5E  EF33  F00F         	goto	u2041
  9304  001E62  EF35  F00F         	goto	u2040
  9305  001E66                     u2041:
  9306  001E66  EF24  F00F         	goto	l3034
  9307  001E6A                     u2040:
  9308  001E6A                     l3038:
  9309  001E6A  501A               	movf	___aomod@divisor^0,w,c
  9310  001E6C  5C12               	subwf	___aomod@dividend^0,w,c
  9311  001E6E  501B               	movf	(___aomod@divisor+1)^0,w,c
  9312  001E70  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  9313  001E72  501C               	movf	(___aomod@divisor+2)^0,w,c
  9314  001E74  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  9315  001E76  501D               	movf	(___aomod@divisor+3)^0,w,c
  9316  001E78  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  9317  001E7A  501E               	movf	(___aomod@divisor+4)^0,w,c
  9318  001E7C  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  9319  001E7E  501F               	movf	(___aomod@divisor+5)^0,w,c
  9320  001E80  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  9321  001E82  5020               	movf	(___aomod@divisor+6)^0,w,c
  9322  001E84  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  9323  001E86  5021               	movf	(___aomod@divisor+7)^0,w,c
  9324  001E88  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  9325  001E8A  A0D8               	btfss	status,0,c
  9326  001E8C  EF4A  F00F         	goto	u2051
  9327  001E90  EF4C  F00F         	goto	u2050
  9328  001E94                     u2051:
  9329  001E94  EF5C  F00F         	goto	l3042
  9330  001E98                     u2050:
  9331  001E98  501A               	movf	___aomod@divisor^0,w,c
  9332  001E9A  5E12               	subwf	___aomod@dividend^0,f,c
  9333  001E9C  501B               	movf	(___aomod@divisor+1)^0,w,c
  9334  001E9E  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  9335  001EA0  501C               	movf	(___aomod@divisor+2)^0,w,c
  9336  001EA2  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  9337  001EA4  501D               	movf	(___aomod@divisor+3)^0,w,c
  9338  001EA6  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  9339  001EA8  501E               	movf	(___aomod@divisor+4)^0,w,c
  9340  001EAA  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  9341  001EAC  501F               	movf	(___aomod@divisor+5)^0,w,c
  9342  001EAE  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  9343  001EB0  5020               	movf	(___aomod@divisor+6)^0,w,c
  9344  001EB2  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  9345  001EB4  5021               	movf	(___aomod@divisor+7)^0,w,c
  9346  001EB6  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  9347  001EB8                     l3042:
  9348  001EB8  90D8               	bcf	status,0,c
  9349  001EBA  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  9350  001EBC  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  9351  001EBE  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  9352  001EC0  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  9353  001EC2  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  9354  001EC4  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  9355  001EC6  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  9356  001EC8  321A               	rrcf	___aomod@divisor^0,f,c
  9357  001ECA  2E22               	decfsz	___aomod@counter^0,f,c
  9358  001ECC  EF35  F00F         	goto	l3038
  9359  001ED0                     l3046:
  9360  001ED0  5023               	movf	___aomod@sign^0,w,c
  9361  001ED2  B4D8               	btfsc	status,2,c
  9362  001ED4  EF6E  F00F         	goto	u2061
  9363  001ED8  EF70  F00F         	goto	u2060
  9364  001EDC                     u2061:
  9365  001EDC  EF80  F00F         	goto	l3050
  9366  001EE0                     u2060:
  9367  001EE0  1E19               	comf	(___aomod@dividend+7)^0,f,c
  9368  001EE2  1E18               	comf	(___aomod@dividend+6)^0,f,c
  9369  001EE4  1E17               	comf	(___aomod@dividend+5)^0,f,c
  9370  001EE6  1E16               	comf	(___aomod@dividend+4)^0,f,c
  9371  001EE8  1E15               	comf	(___aomod@dividend+3)^0,f,c
  9372  001EEA  1E14               	comf	(___aomod@dividend+2)^0,f,c
  9373  001EEC  1E13               	comf	(___aomod@dividend+1)^0,f,c
  9374  001EEE  6C12               	negf	___aomod@dividend^0,c
  9375  001EF0  0E00               	movlw	0
  9376  001EF2  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  9377  001EF4  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  9378  001EF6  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  9379  001EF8  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  9380  001EFA  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  9381  001EFC  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  9382  001EFE  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  9383  001F00                     l3050:
  9384  001F00  C012  F012         	movff	___aomod@dividend,?___aomod
  9385  001F04  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  9386  001F08  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  9387  001F0C  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  9388  001F10  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  9389  001F14  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  9390  001F18  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  9391  001F1C  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  9392  001F20  0012               	return		;funcret
  9393  001F22                     __end_of___aomod:
  9394                           	callstack 0
  9395                           
  9396 ;; *************** function ___aodiv *****************
  9397 ;; Defined at:
  9398 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  dividend        8   17[COMRAM] long long 
  9401 ;;  divisor         8   25[COMRAM] long long 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  quotient        8   35[COMRAM] long long 
  9404 ;;  sign            1   34[COMRAM] unsigned char 
  9405 ;;  counter         1   33[COMRAM] unsigned char 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  8   17[COMRAM] long long 
  9408 ;; Registers used:
  9409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9415 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;Total ram usage:       26 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    4
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_dtoa
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text38
  9430  001ABE                     __ptext38:
  9431                           	callstack 0
  9432  001ABE                     ___aodiv:
  9433                           	callstack 22
  9434  001ABE  0E00               	movlw	0
  9435  001AC0  6E23               	movwf	___aodiv@sign^0,c
  9436  001AC2  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
  9437  001AC4  EF68  F00D         	goto	u1940
  9438  001AC8  EF66  F00D         	goto	u1941
  9439  001ACC                     u1941:
  9440  001ACC  EF7A  F00D         	goto	l2982
  9441  001AD0                     u1940:
  9442  001AD0  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  9443  001AD2  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  9444  001AD4  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  9445  001AD6  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  9446  001AD8  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  9447  001ADA  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  9448  001ADC  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  9449  001ADE  6C1A               	negf	___aodiv@divisor^0,c
  9450  001AE0  0E00               	movlw	0
  9451  001AE2  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  9452  001AE4  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  9453  001AE6  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  9454  001AE8  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  9455  001AEA  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  9456  001AEC  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  9457  001AEE  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  9458  001AF0  0E01               	movlw	1
  9459  001AF2  6E23               	movwf	___aodiv@sign^0,c
  9460  001AF4                     l2982:
  9461  001AF4  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
  9462  001AF6  EF81  F00D         	goto	u1950
  9463  001AFA  EF7F  F00D         	goto	u1951
  9464  001AFE                     u1951:
  9465  001AFE  EF93  F00D         	goto	l2988
  9466  001B02                     u1950:
  9467  001B02  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  9468  001B04  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  9469  001B06  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  9470  001B08  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  9471  001B0A  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  9472  001B0C  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  9473  001B0E  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  9474  001B10  6C12               	negf	___aodiv@dividend^0,c
  9475  001B12  0E00               	movlw	0
  9476  001B14  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  9477  001B16  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  9478  001B18  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  9479  001B1A  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  9480  001B1C  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  9481  001B1E  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  9482  001B20  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  9483  001B22  0E01               	movlw	1
  9484  001B24  1A23               	xorwf	___aodiv@sign^0,f,c
  9485  001B26                     l2988:
  9486  001B26  EE20  F024         	lfsr	2,___aodiv@quotient
  9487  001B2A  0E07               	movlw	7
  9488  001B2C                     u1961:
  9489  001B2C  6ADE               	clrf	postinc2,c
  9490  001B2E  06E8               	decf	wreg,f,c
  9491  001B30  E2FD               	bc	u1961
  9492  001B32  501A               	movf	___aodiv@divisor^0,w,c
  9493  001B34  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  9494  001B36  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  9495  001B38  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  9496  001B3A  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  9497  001B3C  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  9498  001B3E  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  9499  001B40  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  9500  001B42  B4D8               	btfsc	status,2,c
  9501  001B44  EFA6  F00D         	goto	u1971
  9502  001B48  EFA8  F00D         	goto	u1970
  9503  001B4C                     u1971:
  9504  001B4C  EFFA  F00D         	goto	l3010
  9505  001B50                     u1970:
  9506  001B50  0E01               	movlw	1
  9507  001B52  6E22               	movwf	___aodiv@counter^0,c
  9508  001B54  EFB6  F00D         	goto	l2996
  9509  001B58                     l2994:
  9510  001B58  90D8               	bcf	status,0,c
  9511  001B5A  361A               	rlcf	___aodiv@divisor^0,f,c
  9512  001B5C  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  9513  001B5E  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  9514  001B60  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  9515  001B62  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  9516  001B64  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  9517  001B66  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  9518  001B68  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  9519  001B6A  2A22               	incf	___aodiv@counter^0,f,c
  9520  001B6C                     l2996:
  9521  001B6C  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  9522  001B6E  EFBB  F00D         	goto	u1981
  9523  001B72  EFBD  F00D         	goto	u1980
  9524  001B76                     u1981:
  9525  001B76  EFAC  F00D         	goto	l2994
  9526  001B7A                     u1980:
  9527  001B7A                     l2998:
  9528  001B7A  90D8               	bcf	status,0,c
  9529  001B7C  3624               	rlcf	___aodiv@quotient^0,f,c
  9530  001B7E  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  9531  001B80  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  9532  001B82  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  9533  001B84  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  9534  001B86  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  9535  001B88  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  9536  001B8A  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  9537  001B8C  501A               	movf	___aodiv@divisor^0,w,c
  9538  001B8E  5C12               	subwf	___aodiv@dividend^0,w,c
  9539  001B90  501B               	movf	(___aodiv@divisor+1)^0,w,c
  9540  001B92  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  9541  001B94  501C               	movf	(___aodiv@divisor+2)^0,w,c
  9542  001B96  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  9543  001B98  501D               	movf	(___aodiv@divisor+3)^0,w,c
  9544  001B9A  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  9545  001B9C  501E               	movf	(___aodiv@divisor+4)^0,w,c
  9546  001B9E  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  9547  001BA0  501F               	movf	(___aodiv@divisor+5)^0,w,c
  9548  001BA2  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  9549  001BA4  5020               	movf	(___aodiv@divisor+6)^0,w,c
  9550  001BA6  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  9551  001BA8  5021               	movf	(___aodiv@divisor+7)^0,w,c
  9552  001BAA  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  9553  001BAC  A0D8               	btfss	status,0,c
  9554  001BAE  EFDB  F00D         	goto	u1991
  9555  001BB2  EFDD  F00D         	goto	u1990
  9556  001BB6                     u1991:
  9557  001BB6  EFEE  F00D         	goto	l3006
  9558  001BBA                     u1990:
  9559  001BBA  501A               	movf	___aodiv@divisor^0,w,c
  9560  001BBC  5E12               	subwf	___aodiv@dividend^0,f,c
  9561  001BBE  501B               	movf	(___aodiv@divisor+1)^0,w,c
  9562  001BC0  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  9563  001BC2  501C               	movf	(___aodiv@divisor+2)^0,w,c
  9564  001BC4  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  9565  001BC6  501D               	movf	(___aodiv@divisor+3)^0,w,c
  9566  001BC8  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  9567  001BCA  501E               	movf	(___aodiv@divisor+4)^0,w,c
  9568  001BCC  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  9569  001BCE  501F               	movf	(___aodiv@divisor+5)^0,w,c
  9570  001BD0  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  9571  001BD2  5020               	movf	(___aodiv@divisor+6)^0,w,c
  9572  001BD4  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  9573  001BD6  5021               	movf	(___aodiv@divisor+7)^0,w,c
  9574  001BD8  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  9575  001BDA  8024               	bsf	___aodiv@quotient^0,0,c
  9576  001BDC                     l3006:
  9577  001BDC  90D8               	bcf	status,0,c
  9578  001BDE  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  9579  001BE0  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  9580  001BE2  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  9581  001BE4  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  9582  001BE6  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  9583  001BE8  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  9584  001BEA  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  9585  001BEC  321A               	rrcf	___aodiv@divisor^0,f,c
  9586  001BEE  2E22               	decfsz	___aodiv@counter^0,f,c
  9587  001BF0  EFBD  F00D         	goto	l2998
  9588  001BF4                     l3010:
  9589  001BF4  5023               	movf	___aodiv@sign^0,w,c
  9590  001BF6  B4D8               	btfsc	status,2,c
  9591  001BF8  EF00  F00E         	goto	u2001
  9592  001BFC  EF02  F00E         	goto	u2000
  9593  001C00                     u2001:
  9594  001C00  EF12  F00E         	goto	l3014
  9595  001C04                     u2000:
  9596  001C04  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  9597  001C06  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  9598  001C08  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  9599  001C0A  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  9600  001C0C  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  9601  001C0E  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  9602  001C10  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  9603  001C12  6C24               	negf	___aodiv@quotient^0,c
  9604  001C14  0E00               	movlw	0
  9605  001C16  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  9606  001C18  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  9607  001C1A  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  9608  001C1C  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  9609  001C1E  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  9610  001C20  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  9611  001C22  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  9612  001C24                     l3014:
  9613  001C24  C024  F012         	movff	___aodiv@quotient,?___aodiv
  9614  001C28  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  9615  001C2C  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  9616  001C30  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  9617  001C34  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  9618  001C38  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  9619  001C3C  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  9620  001C40  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  9621  001C44  0012               	return		;funcret
  9622  001C46                     __end_of___aodiv:
  9623                           	callstack 0
  9624                           
  9625 ;; *************** function _ctoa *****************
  9626 ;; Defined at:
  9627 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  9630 ;;		 -> NULL(0), 
  9631 ;;  c               1   30[COMRAM] unsigned char 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  w               2   34[COMRAM] int 
  9634 ;;  l               2   32[COMRAM] int 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  2   28[COMRAM] int 
  9637 ;; Registers used:
  9638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9644 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;Total ram usage:        8 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    7
  9651 ;; This function calls:
  9652 ;;		_fputc
  9653 ;; This function is called by:
  9654 ;;		_vfpfcnvrt
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text39
  9659  002124                     __ptext39:
  9660                           	callstack 0
  9661  002124                     _ctoa:
  9662                           	callstack 20
  9663  002124                     
  9664                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9665  002124  503C               	movf	_width^0,w,c
  9666  002126  103D               	iorwf	(_width+1)^0,w,c
  9667  002128  A4D8               	btfss	status,2,c
  9668  00212A  EF99  F010         	goto	u2301
  9669  00212E  EF9B  F010         	goto	u2300
  9670  002132                     u2301:
  9671  002132  EFA1  F010         	goto	l3156
  9672  002136                     u2300:
  9673  002136  C03C  F023         	movff	_width,ctoa@w
  9674  00213A  C03D  F024         	movff	_width+1,ctoa@w+1
  9675  00213E  EFA7  F010         	goto	l3158
  9676  002142                     l3156:
  9677  002142  0EFF               	movlw	255
  9678  002144  243C               	addwf	_width^0,w,c
  9679  002146  6E23               	movwf	ctoa@w^0,c
  9680  002148  0EFF               	movlw	255
  9681  00214A  203D               	addwfc	(_width+1)^0,w,c
  9682  00214C  6E24               	movwf	(ctoa@w+1)^0,c
  9683  00214E                     l3158:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9686  00214E  A040               	btfss	_flags^0,0,c
  9687  002150  EFAC  F010         	goto	u2311
  9688  002154  EFAE  F010         	goto	u2310
  9689  002158                     u2311:
  9690  002158  EFB7  F010         	goto	l3162
  9691  00215C                     u2310:
  9692  00215C                     
  9693                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9694  00215C  C01F  F014         	movff	ctoa@c,fputc@c
  9695  002160  6A15               	clrf	(fputc@c+1)^0,c
  9696  002162  C01D  F016         	movff	ctoa@fp,fputc@fp
  9697  002166  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9698  00216A  ECC0  F012         	call	_fputc	;wreg free
  9699  00216E                     l3162:
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9702  00216E  BE24               	btfsc	(ctoa@w+1)^0,7,c
  9703  002170  EFBC  F010         	goto	u2321
  9704  002174  EFBE  F010         	goto	u2320
  9705  002178                     u2321:
  9706  002178  EFC0  F010         	goto	l3166
  9707  00217C                     u2320:
  9708  00217C  EFC4  F010         	goto	l1254
  9709  002180                     l3166:
  9710  002180  0E00               	movlw	0
  9711  002182  6E24               	movwf	(ctoa@w+1)^0,c
  9712  002184  0E00               	movlw	0
  9713  002186  6E23               	movwf	ctoa@w^0,c
  9714  002188                     l1254:
  9715                           
  9716                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9717  002188  0E00               	movlw	0
  9718  00218A  6E22               	movwf	(ctoa@l+1)^0,c
  9719  00218C  0E00               	movlw	0
  9720  00218E  6E21               	movwf	ctoa@l^0,c
  9721                           
  9722                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9723  002190  EFD6  F010         	goto	l3172
  9724  002194                     l3168:
  9725                           
  9726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9727  002194  0E00               	movlw	0
  9728  002196  6E15               	movwf	(fputc@c+1)^0,c
  9729  002198  0E20               	movlw	32
  9730  00219A  6E14               	movwf	fputc@c^0,c
  9731  00219C  C01D  F016         	movff	ctoa@fp,fputc@fp
  9732  0021A0  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9733  0021A4  ECC0  F012         	call	_fputc	;wreg free
  9734  0021A8                     
  9735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9736  0021A8  4A21               	infsnz	ctoa@l^0,f,c
  9737  0021AA  2A22               	incf	(ctoa@l+1)^0,f,c
  9738  0021AC                     l3172:
  9739                           
  9740                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9741  0021AC  5023               	movf	ctoa@w^0,w,c
  9742  0021AE  5C21               	subwf	ctoa@l^0,w,c
  9743  0021B0  5022               	movf	(ctoa@l+1)^0,w,c
  9744  0021B2  0A80               	xorlw	128
  9745  0021B4  6E20               	movwf	??_ctoa^0,c
  9746  0021B6  5024               	movf	(ctoa@w+1)^0,w,c
  9747  0021B8  0A80               	xorlw	128
  9748  0021BA  5820               	subwfb	??_ctoa^0,w,c
  9749  0021BC  A0D8               	btfss	status,0,c
  9750  0021BE  EFE3  F010         	goto	u2331
  9751  0021C2  EFE5  F010         	goto	u2330
  9752  0021C6                     u2331:
  9753  0021C6  EFCA  F010         	goto	l3168
  9754  0021CA                     u2330:
  9755  0021CA                     
  9756                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9757  0021CA  B040               	btfsc	_flags^0,0,c
  9758  0021CC  EFEA  F010         	goto	u2341
  9759  0021D0  EFEC  F010         	goto	u2340
  9760  0021D4                     u2341:
  9761  0021D4  EFF5  F010         	goto	l3176
  9762  0021D8                     u2340:
  9763  0021D8                     
  9764                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9765  0021D8  C01F  F014         	movff	ctoa@c,fputc@c
  9766  0021DC  6A15               	clrf	(fputc@c+1)^0,c
  9767  0021DE  C01D  F016         	movff	ctoa@fp,fputc@fp
  9768  0021E2  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  9769  0021E6  ECC0  F012         	call	_fputc	;wreg free
  9770  0021EA                     l3176:
  9771                           
  9772                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9773  0021EA  0E01               	movlw	1
  9774  0021EC  2421               	addwf	ctoa@l^0,w,c
  9775  0021EE  6E1D               	movwf	?_ctoa^0,c
  9776  0021F0  0E00               	movlw	0
  9777  0021F2  2022               	addwfc	(ctoa@l+1)^0,w,c
  9778  0021F4  6E1E               	movwf	(?_ctoa+1)^0,c
  9779  0021F6  0012               	return		;funcret
  9780  0021F8                     __end_of_ctoa:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function _fputc *****************
  9784 ;; Defined at:
  9785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  c               2   19[COMRAM] int 
  9788 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  9789 ;;		 -> NULL(0), 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2   19[COMRAM] int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        9 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    6
  9808 ;; This function calls:
  9809 ;;		_putch
  9810 ;; This function is called by:
  9811 ;;		_pad
  9812 ;;		_ctoa
  9813 ;;		_vfpfcnvrt
  9814 ;;		_fputs
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text40
  9819  002580                     __ptext40:
  9820                           	callstack 0
  9821  002580                     _fputc:
  9822                           	callstack 18
  9823  002580  5016               	movf	fputc@fp^0,w,c
  9824  002582  1017               	iorwf	(fputc@fp+1)^0,w,c
  9825  002584  B4D8               	btfsc	status,2,c
  9826  002586  EFC7  F012         	goto	u1861
  9827  00258A  EFC9  F012         	goto	u1860
  9828  00258E                     u1861:
  9829  00258E  EFD2  F012         	goto	l2936
  9830  002592                     u1860:
  9831  002592  5016               	movf	fputc@fp^0,w,c
  9832  002594  1017               	iorwf	(fputc@fp+1)^0,w,c
  9833  002596  A4D8               	btfss	status,2,c
  9834  002598  EFD0  F012         	goto	u1871
  9835  00259C  EFD2  F012         	goto	u1870
  9836  0025A0                     u1871:
  9837  0025A0  EFD7  F012         	goto	l2938
  9838  0025A4                     u1870:
  9839  0025A4                     l2936:
  9840  0025A4  5014               	movf	fputc@c^0,w,c
  9841  0025A6  EC03  F016         	call	_putch
  9842  0025AA  EF0A  F013         	goto	l1447
  9843  0025AE                     l2938:
  9844  0025AE  EE20 F004          	lfsr	2,4
  9845  0025B2  5016               	movf	fputc@fp^0,w,c
  9846  0025B4  26D9               	addwf	fsr2l,f,c
  9847  0025B6  5017               	movf	(fputc@fp+1)^0,w,c
  9848  0025B8  22DA               	addwfc	fsr2h,f,c
  9849  0025BA  50DE               	movf	postinc2,w,c
  9850  0025BC  10DE               	iorwf	postinc2,w,c
  9851  0025BE  B4D8               	btfsc	status,2,c
  9852  0025C0  EFE4  F012         	goto	u1881
  9853  0025C4  EFE6  F012         	goto	u1880
  9854  0025C8                     u1881:
  9855  0025C8  EF01  F013         	goto	l2942
  9856  0025CC                     u1880:
  9857  0025CC  EE20 F004          	lfsr	2,4
  9858  0025D0  5016               	movf	fputc@fp^0,w,c
  9859  0025D2  26D9               	addwf	fsr2l,f,c
  9860  0025D4  5017               	movf	(fputc@fp+1)^0,w,c
  9861  0025D6  22DA               	addwfc	fsr2h,f,c
  9862  0025D8  EE10 F002          	lfsr	1,2
  9863  0025DC  5016               	movf	fputc@fp^0,w,c
  9864  0025DE  26E1               	addwf	fsr1l,f,c
  9865  0025E0  5017               	movf	(fputc@fp+1)^0,w,c
  9866  0025E2  22E2               	addwfc	fsr1h,f,c
  9867  0025E4  50DE               	movf	postinc2,w,c
  9868  0025E6  5CE6               	subwf	postinc1,w,c
  9869  0025E8  50E6               	movf	postinc1,w,c
  9870  0025EA  0A80               	xorlw	128
  9871  0025EC  6E1C               	movwf	(??_fputc+4)^0,c
  9872  0025EE  50DE               	movf	postinc2,w,c
  9873  0025F0  0A80               	xorlw	128
  9874  0025F2  581C               	subwfb	(??_fputc+4)^0,w,c
  9875  0025F4  B0D8               	btfsc	status,0,c
  9876  0025F6  EFFF  F012         	goto	u1891
  9877  0025FA  EF01  F013         	goto	u1890
  9878  0025FE                     u1891:
  9879  0025FE  EF0A  F013         	goto	l1447
  9880  002602                     u1890:
  9881  002602                     l2942:
  9882  002602  EE20 F002          	lfsr	2,2
  9883  002606  5016               	movf	fputc@fp^0,w,c
  9884  002608  26D9               	addwf	fsr2l,f,c
  9885  00260A  5017               	movf	(fputc@fp+1)^0,w,c
  9886  00260C  22DA               	addwfc	fsr2h,f,c
  9887  00260E  2ADE               	incf	postinc2,f,c
  9888  002610  0E00               	movlw	0
  9889  002612  22DD               	addwfc	postdec2,f,c
  9890  002614                     l1447:
  9891  002614  0012               	return		;funcret
  9892  002616                     __end_of_fputc:
  9893                           	callstack 0
  9894                           
  9895 ;; *************** function _putch *****************
  9896 ;; Defined at:
  9897 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  txData          1    wreg     unsigned char 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  txData          1   18[COMRAM] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;Total ram usage:        1 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    5
  9918 ;; This function calls:
  9919 ;;		_EUSART1_Write
  9920 ;; This function is called by:
  9921 ;;		_fputc
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text41
  9926  002C06                     __ptext41:
  9927                           	callstack 0
  9928  002C06                     _putch:
  9929                           	callstack 18
  9930                           
  9931                           ;incstack = 0
  9932                           ;putch@txData stored from wreg
  9933  002C06  6E13               	movwf	putch@txData^0,c
  9934  002C08                     
  9935                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  9936  002C08  5013               	movf	putch@txData^0,w,c
  9937  002C0A  ECCC  F015         	call	_EUSART1_Write
  9938  002C0E  0012               	return		;funcret
  9939  002C10                     __end_of_putch:
  9940                           	callstack 0
  9941                           
  9942 ;; *************** function _EUSART1_Write *****************
  9943 ;; Defined at:
  9944 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  txData          1    wreg     unsigned char 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  txData          1   17[COMRAM] unsigned char 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;Total ram usage:        1 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    4
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_putch
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text42
  9973  002B98                     __ptext42:
  9974                           	callstack 0
  9975  002B98                     _EUSART1_Write:
  9976                           	callstack 18
  9977                           
  9978                           ;incstack = 0
  9979                           ;EUSART1_Write@txData stored from wreg
  9980  002B98  6E12               	movwf	EUSART1_Write@txData^0,c
  9981  002B9A                     l365:
  9982                           
  9983                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9984  002B9A  A89E               	btfss	158,4,c	;volatile
  9985  002B9C  EFD2  F015         	goto	u1851
  9986  002BA0  EFD4  F015         	goto	u1850
  9987  002BA4                     u1851:
  9988  002BA4  EFCD  F015         	goto	l365
  9989  002BA8                     u1850:
  9990  002BA8                     
  9991                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9992  002BA8  C012  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9993  002BAC  0012               	return		;funcret
  9994  002BAE                     __end_of_EUSART1_Write:
  9995                           	callstack 0
  9996                           
  9997 ;; *************** function _atoi *****************
  9998 ;; Defined at:
  9999 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  s               2   24[COMRAM] PTR const unsigned char 
 10002 ;;		 -> STR_74(3), STR_73(3), STR_72(2), STR_71(4), 
 10003 ;;		 -> STR_70(6), STR_69(3), STR_68(3), STR_67(2), 
 10004 ;;		 -> STR_66(3), STR_65(2), STR_64(4), STR_63(28), 
 10005 ;;		 -> STR_62(26), STR_61(27), STR_60(17), STR_59(255), 
 10006 ;;		 -> STR_58(5), STR_57(399), STR_56(77), STR_55(29), 
 10007 ;;		 -> STR_54(29), STR_53(16), STR_52(89), STR_51(3), 
 10008 ;;		 -> STR_50(5), STR_49(2), STR_48(5), STR_47(17), 
 10009 ;;		 -> STR_46(15), STR_45(23), STR_44(3), STR_43(5), 
 10010 ;;		 -> STR_42(2), STR_41(5), STR_40(17), STR_39(43), 
 10011 ;;		 -> STR_38(3), STR_37(5), STR_36(2), STR_35(5), 
 10012 ;;		 -> STR_34(19), STR_33(20), STR_32(28), STR_31(20), 
 10013 ;;		 -> STR_30(30), STR_29(2), STR_28(2), STR_27(8), 
 10014 ;;		 -> STR_26(52), STR_25(32), STR_24(44), STR_23(50), 
 10015 ;;		 -> STR_22(52), STR_21(55), STR_20(43), STR_19(37), 
 10016 ;;		 -> STR_18(52), STR_17(24), STR_16(52), STR_15(24), 
 10017 ;;		 -> STR_14(21), STR_13(7), STR_12(15), STR_11(52), 
 10018 ;;		 -> STR_10(3), STR_9(5), STR_8(2), STR_7(5), 
 10019 ;;		 -> STR_6(19), STR_5(54), STR_4(42), STR_3(9), 
 10020 ;;		 -> STR_2(18), STR_1(11), 
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  n               2   37[COMRAM] int 
 10023 ;;  neg             2   30[COMRAM] int 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  2   24[COMRAM] int 
 10026 ;; Registers used:
 10027 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;Total ram usage:       15 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    5
 10040 ;; This function calls:
 10041 ;;		___wmul
 10042 ;;		_isdigit
 10043 ;;		_isspace
 10044 ;; This function is called by:
 10045 ;;		_vfpfcnvrt
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text43
 10050  001924                     __ptext43:
 10051                           	callstack 0
 10052  001924                     _atoi:
 10053                           	callstack 22
 10054  001924  0E00               	movlw	0
 10055  001926  6E27               	movwf	(atoi@n+1)^0,c
 10056  001928  0E00               	movlw	0
 10057  00192A  6E26               	movwf	atoi@n^0,c
 10058  00192C  0E00               	movlw	0
 10059  00192E  6E20               	movwf	(atoi@neg+1)^0,c
 10060  001930  0E00               	movlw	0
 10061  001932  6E1F               	movwf	atoi@neg^0,c
 10062  001934  EF9E  F00C         	goto	l3348
 10063  001938                     l3346:
 10064  001938  4A19               	infsnz	atoi@s^0,f,c
 10065  00193A  2A1A               	incf	(atoi@s+1)^0,f,c
 10066  00193C                     l3348:
 10067  00193C  0E01               	movlw	1
 10068  00193E  6E25               	movwf	_atoi$1801^0,c
 10069  001940  C019  FFF6         	movff	atoi@s,tblptrl
 10070  001944  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10071  001948                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10072  001948  6AF8               	clrf	tblptru,c
 10073  00194A                     	endif
 10074  00194A                     	if	0	;tblptru may be non-zero
 10075  00194A                     	endif
 10076  00194A  0008               	tblrd		*
 10077  00194C  50F5               	movf	tablat,w,c
 10078  00194E  0A20               	xorlw	32
 10079  001950  B4D8               	btfsc	status,2,c
 10080  001952  EFAD  F00C         	goto	u2741
 10081  001956  EFAF  F00C         	goto	u2740
 10082  00195A                     u2741:
 10083  00195A  EFCD  F00C         	goto	l3356
 10084  00195E                     u2740:
 10085  00195E  0EF7               	movlw	247
 10086  001960  6E1B               	movwf	??_atoi^0,c
 10087  001962  0EFF               	movlw	255
 10088  001964  6E1C               	movwf	(??_atoi+1)^0,c
 10089  001966  C019  FFF6         	movff	atoi@s,tblptrl
 10090  00196A  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10091  00196E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10092  00196E  6AF8               	clrf	tblptru,c
 10093  001970                     	endif
 10094  001970                     	if	0	;tblptru may be non-zero
 10095  001970                     	endif
 10096  001970  0008               	tblrd		*
 10097  001972  50F5               	movf	tablat,w,c
 10098  001974  6E1D               	movwf	(??_atoi+2)^0,c
 10099  001976  6A1E               	clrf	(??_atoi+3)^0,c
 10100  001978  501B               	movf	??_atoi^0,w,c
 10101  00197A  261D               	addwf	(??_atoi+2)^0,f,c
 10102  00197C  501C               	movf	(??_atoi+1)^0,w,c
 10103  00197E  221E               	addwfc	(??_atoi+3)^0,f,c
 10104  001980  501E               	movf	(??_atoi+3)^0,w,c
 10105  001982  E109               	bnz	u2750
 10106  001984  0E05               	movlw	5
 10107  001986  5C1D               	subwf	(??_atoi+2)^0,w,c
 10108  001988  A0D8               	btfss	status,0,c
 10109  00198A  EFC9  F00C         	goto	u2751
 10110  00198E  EFCB  F00C         	goto	u2750
 10111  001992                     u2751:
 10112  001992  EFCD  F00C         	goto	l3356
 10113  001996                     u2750:
 10114  001996  0E00               	movlw	0
 10115  001998  6E25               	movwf	_atoi$1801^0,c
 10116  00199A                     l3356:
 10117  00199A  C025  F021         	movff	_atoi$1801,_atoi$1800
 10118  00199E  6A22               	clrf	(_atoi$1800+1)^0,c
 10119  0019A0  5021               	movf	_atoi$1800^0,w,c
 10120  0019A2  1022               	iorwf	(_atoi$1800+1)^0,w,c
 10121  0019A4  A4D8               	btfss	status,2,c
 10122  0019A6  EFD7  F00C         	goto	u2761
 10123  0019AA  EFD9  F00C         	goto	u2760
 10124  0019AE                     u2761:
 10125  0019AE  EF9C  F00C         	goto	l3346
 10126  0019B2                     u2760:
 10127  0019B2  EFE3  F00C         	goto	l3366
 10128  0019B6                     l3362:
 10129  0019B6  0E00               	movlw	0
 10130  0019B8  6E20               	movwf	(atoi@neg+1)^0,c
 10131  0019BA  0E01               	movlw	1
 10132  0019BC  6E1F               	movwf	atoi@neg^0,c
 10133  0019BE                     l3364:
 10134  0019BE  4A19               	infsnz	atoi@s^0,f,c
 10135  0019C0  2A1A               	incf	(atoi@s+1)^0,f,c
 10136  0019C2  EF1A  F00D         	goto	l3372
 10137  0019C6                     l3366:
 10138  0019C6  C019  FFF6         	movff	atoi@s,tblptrl
 10139  0019CA  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10140  0019CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10141  0019CE  6AF8               	clrf	tblptru,c
 10142  0019D0                     	endif
 10143  0019D0                     	if	0	;tblptru may be non-zero
 10144  0019D0                     	endif
 10145  0019D0  0008               	tblrd		*
 10146  0019D2  50F5               	movf	tablat,w,c
 10147  0019D4  6E1B               	movwf	??_atoi^0,c
 10148  0019D6  6A1C               	clrf	(??_atoi+1)^0,c
 10149                           
 10150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10151                           ; Switch size 1, requested type "simple"
 10152                           ; Number of cases is 1, Range of values is 0 to 0
 10153                           ; switch strategies available:
 10154                           ; Name         Instructions Cycles
 10155                           ; simple_byte            4     3 (average)
 10156                           ;	Chosen strategy is simple_byte
 10157  0019D8  501C               	movf	(??_atoi+1)^0,w,c
 10158  0019DA  0A00               	xorlw	0	; case 0
 10159  0019DC  B4D8               	btfsc	status,2,c
 10160  0019DE  EFF3  F00C         	goto	l5122
 10161  0019E2  EF1A  F00D         	goto	l3372
 10162  0019E6                     l5122:
 10163                           
 10164                           ; Switch size 1, requested type "simple"
 10165                           ; Number of cases is 2, Range of values is 43 to 45
 10166                           ; switch strategies available:
 10167                           ; Name         Instructions Cycles
 10168                           ; simple_byte            7     4 (average)
 10169                           ;	Chosen strategy is simple_byte
 10170  0019E6  501B               	movf	??_atoi^0,w,c
 10171  0019E8  0A2B               	xorlw	43	; case 43
 10172  0019EA  B4D8               	btfsc	status,2,c
 10173  0019EC  EFDF  F00C         	goto	l3364
 10174  0019F0  0A06               	xorlw	6	; case 45
 10175  0019F2  B4D8               	btfsc	status,2,c
 10176  0019F4  EFDB  F00C         	goto	l3362
 10177  0019F8  EF1A  F00D         	goto	l3372
 10178  0019FC                     l3368:
 10179  0019FC  C026  F012         	movff	atoi@n,___wmul@multiplier
 10180  001A00  C027  F013         	movff	atoi@n+1,___wmul@multiplier+1
 10181  001A04  0E00               	movlw	0
 10182  001A06  6E15               	movwf	(___wmul@multiplicand+1)^0,c
 10183  001A08  0E0A               	movlw	10
 10184  001A0A  6E14               	movwf	___wmul@multiplicand^0,c
 10185  001A0C  EC82  F015         	call	___wmul	;wreg free
 10186  001A10  C019  FFF6         	movff	atoi@s,tblptrl
 10187  001A14  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10188  001A18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10189  001A18  6AF8               	clrf	tblptru,c
 10190  001A1A                     	endif
 10191  001A1A                     	if	0	;tblptru may be non-zero
 10192  001A1A                     	endif
 10193  001A1A  0008               	tblrd		*
 10194  001A1C  50F5               	movf	tablat,w,c
 10195  001A1E  5E12               	subwf	?___wmul^0,f,c
 10196  001A20  0E00               	movlw	0
 10197  001A22  5A13               	subwfb	(?___wmul+1)^0,f,c
 10198  001A24  0E30               	movlw	48
 10199  001A26  2412               	addwf	?___wmul^0,w,c
 10200  001A28  6E26               	movwf	atoi@n^0,c
 10201  001A2A  0E00               	movlw	0
 10202  001A2C  2013               	addwfc	(?___wmul+1)^0,w,c
 10203  001A2E  6E27               	movwf	(atoi@n+1)^0,c
 10204  001A30  EFDF  F00C         	goto	l3364
 10205  001A34                     l3372:
 10206  001A34  0ED0               	movlw	208
 10207  001A36  6E1B               	movwf	??_atoi^0,c
 10208  001A38  0EFF               	movlw	255
 10209  001A3A  6E1C               	movwf	(??_atoi+1)^0,c
 10210  001A3C  C019  FFF6         	movff	atoi@s,tblptrl
 10211  001A40  C01A  FFF7         	movff	atoi@s+1,tblptrh
 10212  001A44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10213  001A44  6AF8               	clrf	tblptru,c
 10214  001A46                     	endif
 10215  001A46                     	if	0	;tblptru may be non-zero
 10216  001A46                     	endif
 10217  001A46  0008               	tblrd		*
 10218  001A48  50F5               	movf	tablat,w,c
 10219  001A4A  6E1D               	movwf	(??_atoi+2)^0,c
 10220  001A4C  6A1E               	clrf	(??_atoi+3)^0,c
 10221  001A4E  501B               	movf	??_atoi^0,w,c
 10222  001A50  261D               	addwf	(??_atoi+2)^0,f,c
 10223  001A52  501C               	movf	(??_atoi+1)^0,w,c
 10224  001A54  221E               	addwfc	(??_atoi+3)^0,f,c
 10225  001A56  501E               	movf	(??_atoi+3)^0,w,c
 10226  001A58  E10A               	bnz	u2770
 10227  001A5A  0E0A               	movlw	10
 10228  001A5C  5C1D               	subwf	(??_atoi+2)^0,w,c
 10229  001A5E  A0D8               	btfss	status,0,c
 10230  001A60  EF34  F00D         	goto	u2771
 10231  001A64  EF37  F00D         	goto	u2770
 10232  001A68                     u2771:
 10233  001A68  0E01               	movlw	1
 10234  001A6A  EF38  F00D         	goto	u2780
 10235  001A6E                     u2770:
 10236  001A6E  0E00               	movlw	0
 10237  001A70                     u2780:
 10238  001A70  6E23               	movwf	_atoi$1802^0,c
 10239  001A72  6A24               	clrf	(_atoi$1802+1)^0,c
 10240  001A74  5023               	movf	_atoi$1802^0,w,c
 10241  001A76  1024               	iorwf	(_atoi$1802+1)^0,w,c
 10242  001A78  A4D8               	btfss	status,2,c
 10243  001A7A  EF41  F00D         	goto	u2791
 10244  001A7E  EF43  F00D         	goto	u2790
 10245  001A82                     u2791:
 10246  001A82  EFFE  F00C         	goto	l3368
 10247  001A86                     u2790:
 10248  001A86  501F               	movf	atoi@neg^0,w,c
 10249  001A88  1020               	iorwf	(atoi@neg+1)^0,w,c
 10250  001A8A  A4D8               	btfss	status,2,c
 10251  001A8C  EF4A  F00D         	goto	u2801
 10252  001A90  EF4C  F00D         	goto	u2800
 10253  001A94                     u2801:
 10254  001A94  EF5A  F00D         	goto	l1406
 10255  001A98                     u2800:
 10256  001A98  C026  F01B         	movff	atoi@n,??_atoi
 10257  001A9C  C027  F01C         	movff	atoi@n+1,??_atoi+1
 10258  001AA0  1E1B               	comf	??_atoi^0,f,c
 10259  001AA2  1E1C               	comf	(??_atoi+1)^0,f,c
 10260  001AA4  4A1B               	infsnz	??_atoi^0,f,c
 10261  001AA6  2A1C               	incf	(??_atoi+1)^0,f,c
 10262  001AA8  C01B  F019         	movff	??_atoi,?_atoi
 10263  001AAC  C01C  F01A         	movff	??_atoi+1,?_atoi+1
 10264  001AB0  EF5E  F00D         	goto	l1409
 10265  001AB4                     l1406:
 10266  001AB4  C026  F019         	movff	atoi@n,?_atoi
 10267  001AB8  C027  F01A         	movff	atoi@n+1,?_atoi+1
 10268  001ABC                     l1409:
 10269  001ABC  0012               	return		;funcret
 10270  001ABE                     __end_of_atoi:
 10271                           	callstack 0
 10272                           
 10273 ;; *************** function _isspace *****************
 10274 ;; Defined at:
 10275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  c               2   17[COMRAM] int 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;		None
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  2   17[COMRAM] int 
 10282 ;; Registers used:
 10283 ;;		wreg, status,2, status,0
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;Total ram usage:        7 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:    4
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_atoi
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text44
 10304  002766                     __ptext44:
 10305                           	callstack 0
 10306  002766                     _isspace:
 10307                           	callstack 22
 10308  002766  0E01               	movlw	1
 10309  002768  6E18               	movwf	_isspace$1827^0,c
 10310  00276A  0E20               	movlw	32
 10311  00276C  1812               	xorwf	isspace@c^0,w,c
 10312  00276E  1013               	iorwf	(isspace@c+1)^0,w,c
 10313  002770  B4D8               	btfsc	status,2,c
 10314  002772  EFBD  F013         	goto	u2281
 10315  002776  EFBF  F013         	goto	u2280
 10316  00277A                     u2281:
 10317  00277A  EFD8  F013         	goto	l3148
 10318  00277E                     u2280:
 10319  00277E  0EF7               	movlw	247
 10320  002780  6E14               	movwf	??_isspace^0,c
 10321  002782  0EFF               	movlw	255
 10322  002784  6E15               	movwf	(??_isspace+1)^0,c
 10323  002786  C012  F016         	movff	isspace@c,??_isspace+2
 10324  00278A  C013  F017         	movff	isspace@c+1,??_isspace+3
 10325  00278E  5014               	movf	??_isspace^0,w,c
 10326  002790  2616               	addwf	(??_isspace+2)^0,f,c
 10327  002792  5015               	movf	(??_isspace+1)^0,w,c
 10328  002794  2217               	addwfc	(??_isspace+3)^0,f,c
 10329  002796  5017               	movf	(??_isspace+3)^0,w,c
 10330  002798  E109               	bnz	u2290
 10331  00279A  0E05               	movlw	5
 10332  00279C  5C16               	subwf	(??_isspace+2)^0,w,c
 10333  00279E  A0D8               	btfss	status,0,c
 10334  0027A0  EFD4  F013         	goto	u2291
 10335  0027A4  EFD6  F013         	goto	u2290
 10336  0027A8                     u2291:
 10337  0027A8  EFD8  F013         	goto	l3148
 10338  0027AC                     u2290:
 10339  0027AC  0E00               	movlw	0
 10340  0027AE  6E18               	movwf	_isspace$1827^0,c
 10341  0027B0                     l3148:
 10342  0027B0  C018  F012         	movff	_isspace$1827,?_isspace
 10343  0027B4  6A13               	clrf	(?_isspace+1)^0,c
 10344  0027B6  0012               	return		;funcret
 10345  0027B8                     __end_of_isspace:
 10346                           	callstack 0
 10347                           
 10348 ;; *************** function _isdigit *****************
 10349 ;; Defined at:
 10350 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  c               2   17[COMRAM] int 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  2   17[COMRAM] int 
 10357 ;; Registers used:
 10358 ;;		wreg, status,2, status,0
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;Total ram usage:        6 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    4
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_vfpfcnvrt
 10375 ;;		_atoi
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text45
 10380  0029AC                     __ptext45:
 10381                           	callstack 0
 10382  0029AC                     _isdigit:
 10383                           	callstack 23
 10384  0029AC  0ED0               	movlw	208
 10385  0029AE  6E14               	movwf	??_isdigit^0,c
 10386  0029B0  0EFF               	movlw	255
 10387  0029B2  6E15               	movwf	(??_isdigit+1)^0,c
 10388  0029B4  C012  F016         	movff	isdigit@c,??_isdigit+2
 10389  0029B8  C013  F017         	movff	isdigit@c+1,??_isdigit+3
 10390  0029BC  5014               	movf	??_isdigit^0,w,c
 10391  0029BE  2616               	addwf	(??_isdigit+2)^0,f,c
 10392  0029C0  5015               	movf	(??_isdigit+1)^0,w,c
 10393  0029C2  2217               	addwfc	(??_isdigit+3)^0,f,c
 10394  0029C4  5017               	movf	(??_isdigit+3)^0,w,c
 10395  0029C6  E10A               	bnz	u2260
 10396  0029C8  0E0A               	movlw	10
 10397  0029CA  5C16               	subwf	(??_isdigit+2)^0,w,c
 10398  0029CC  A0D8               	btfss	status,0,c
 10399  0029CE  EFEB  F014         	goto	u2261
 10400  0029D2  EFEE  F014         	goto	u2260
 10401  0029D6                     u2261:
 10402  0029D6  0E01               	movlw	1
 10403  0029D8  EFEF  F014         	goto	u2270
 10404  0029DC                     u2260:
 10405  0029DC  0E00               	movlw	0
 10406  0029DE                     u2270:
 10407  0029DE  6E12               	movwf	?_isdigit^0,c
 10408  0029E0  6A13               	clrf	(?_isdigit+1)^0,c
 10409  0029E2  0012               	return		;funcret
 10410  0029E4                     __end_of_isdigit:
 10411                           	callstack 0
 10412                           
 10413 ;; *************** function ___wmul *****************
 10414 ;; Defined at:
 10415 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  multiplier      2   17[COMRAM] unsigned int 
 10418 ;;  multiplicand    2   19[COMRAM] unsigned int 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  product         2   21[COMRAM] unsigned int 
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  2   17[COMRAM] unsigned int 
 10423 ;; Registers used:
 10424 ;;		wreg, status,2, status,0, prodl, prodh
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;Total ram usage:        6 bytes
 10435 ;; Hardware stack levels used:    1
 10436 ;; Hardware stack levels required when called:    4
 10437 ;; This function calls:
 10438 ;;		Nothing
 10439 ;; This function is called by:
 10440 ;;		_atoi
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text46
 10445  002B04                     __ptext46:
 10446                           	callstack 0
 10447  002B04                     ___wmul:
 10448                           	callstack 22
 10449  002B04  5012               	movf	___wmul@multiplier^0,w,c
 10450  002B06  0214               	mulwf	___wmul@multiplicand^0,c
 10451  002B08  CFF3 F016          	movff	prodl,___wmul@product
 10452  002B0C  CFF4 F017          	movff	prodh,___wmul@product+1
 10453  002B10  5012               	movf	___wmul@multiplier^0,w,c
 10454  002B12  0215               	mulwf	(___wmul@multiplicand+1)^0,c
 10455  002B14  50F3               	movf	243,w,c
 10456  002B16  2617               	addwf	(___wmul@product+1)^0,f,c
 10457  002B18  5013               	movf	(___wmul@multiplier+1)^0,w,c
 10458  002B1A  0214               	mulwf	___wmul@multiplicand^0,c
 10459  002B1C  50F3               	movf	243,w,c
 10460  002B1E  2617               	addwf	(___wmul@product+1)^0,f,c
 10461  002B20  C016  F012         	movff	___wmul@product,?___wmul
 10462  002B24  C017  F013         	movff	___wmul@product+1,?___wmul+1
 10463  002B28  0012               	return		;funcret
 10464  002B2A                     __end_of___wmul:
 10465                           	callstack 0
 10466                           
 10467 ;; *************** function _SPI2_ExchangeByte *****************
 10468 ;; Defined at:
 10469 ;;		line 92 in file "mcc_generated_files/spi2.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  data            1    wreg     unsigned char 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  data            1   17[COMRAM] unsigned char 
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      unsigned char 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;Total ram usage:        1 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    4
 10490 ;; This function calls:
 10491 ;;		Nothing
 10492 ;; This function is called by:
 10493 ;;		_SDCARD_ReadBlock
 10494 ;;		_SDCARD_WriteBlock
 10495 ;;		_SDCARD_PollWriteComplete
 10496 ;;		_SDCARD_Initialize
 10497 ;;		_SPI2_WriteBlock
 10498 ;;		_SPI2_ReadBlock
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text47
 10503  002B7E                     __ptext47:
 10504                           	callstack 0
 10505  002B7E                     _SPI2_ExchangeByte:
 10506                           	callstack 25
 10507                           
 10508                           ;incstack = 0
 10509                           ;SPI2_ExchangeByte@data stored from wreg
 10510  002B7E  6E12               	movwf	SPI2_ExchangeByte@data^0,c
 10511  002B80                     
 10512                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 10513  002B80  C012  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 10514  002B84                     l31:
 10515  002B84  AEA4               	btfss	164,7,c	;volatile
 10516  002B86  EFC7  F015         	goto	u2971
 10517  002B8A  EFC9  F015         	goto	u2970
 10518  002B8E                     u2971:
 10519  002B8E  EFC2  F015         	goto	l31
 10520  002B92                     u2970:
 10521  002B92                     
 10522                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 10523  002B92  9EA4               	bcf	164,7,c	;volatile
 10524                           
 10525                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 10526  002B94  506F               	movf	111,w,c	;volatile
 10527  002B96  0012               	return		;funcret
 10528  002B98                     __end_of_SPI2_ExchangeByte:
 10529                           	callstack 0
 10530                           
 10531 ;; *************** function _EUSART1_is_rx_ready *****************
 10532 ;; Defined at:
 10533 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      _Bool 
 10540 ;; Registers used:
 10541 ;;		wreg
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;Total ram usage:        0 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    4
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text48
 10562  002BAE                     __ptext48:
 10563                           	callstack 0
 10564  002BAE                     _EUSART1_is_rx_ready:
 10565                           	callstack 26
 10566  002BAE                     
 10567                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 10568  002BAE  BA9E               	btfsc	158,5,c	;volatile
 10569  002BB0  EFDC  F015         	goto	u3071
 10570  002BB4  EFDF  F015         	goto	u3070
 10571  002BB8                     u3071:
 10572  002BB8  0E01               	movlw	1
 10573  002BBA  EFE0  F015         	goto	u3076
 10574  002BBE                     u3070:
 10575  002BBE  0E00               	movlw	0
 10576  002BC0                     u3076:
 10577  002BC0  0012               	return		;funcret
 10578  002BC2                     __end_of_EUSART1_is_rx_ready:
 10579                           	callstack 0
 10580                           
 10581 ;; *************** function _EUSART1_Read *****************
 10582 ;; Defined at:
 10583 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      unsigned char 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    4
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_main
 10608 ;;		_getch
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text49
 10613  002ADC                     __ptext49:
 10614                           	callstack 0
 10615  002ADC                     _EUSART1_Read:
 10616                           	callstack 26
 10617  002ADC                     l358:
 10618                           
 10619                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 10620  002ADC  AA9E               	btfss	158,5,c	;volatile
 10621  002ADE  EF73  F015         	goto	u3081
 10622  002AE2  EF75  F015         	goto	u3080
 10623  002AE6                     u3081:
 10624  002AE6  EF6E  F015         	goto	l358
 10625  002AEA                     u3080:
 10626  002AEA                     
 10627                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10628  002AEA  0E00               	movlw	0
 10629  002AEC  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
 10630  002AEE                     
 10631                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 10632  002AEE  A2AB               	btfss	171,1,c	;volatile
 10633  002AF0  EF7C  F015         	goto	u3091
 10634  002AF4  EF7E  F015         	goto	u3090
 10635  002AF8                     u3091:
 10636  002AF8  EF80  F015         	goto	l3684
 10637  002AFC                     u3090:
 10638  002AFC                     
 10639                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 10640  002AFC  98AB               	bcf	171,4,c	;volatile
 10641                           
 10642                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 10643  002AFE  88AB               	bsf	171,4,c	;volatile
 10644  002B00                     l3684:
 10645                           
 10646                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 10647  002B00  50AE               	movf	174,w,c	;volatile
 10648  002B02  0012               	return		;funcret
 10649  002B04                     __end_of_EUSART1_Read:
 10650                           	callstack 0
 10651                           
 10652 ;; *************** function _INTERRUPT_InterruptManager *****************
 10653 ;; Defined at:
 10654 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      void 
 10661 ;; Registers used:
 10662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;Total ram usage:        4 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    3
 10675 ;; This function calls:
 10676 ;;		_TMR0_ISR
 10677 ;; This function is called by:
 10678 ;;		Interrupt level 2
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           	psect	intcode
 10683  000008                     __pintcode:
 10684                           	callstack 0
 10685  000008                     _INTERRUPT_InterruptManager:
 10686                           	callstack 17
 10687                           
 10688                           ;incstack = 0
 10689  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10690  00000A  CFFA F00E          	movff	pclath,??_INTERRUPT_InterruptManager
 10691  00000E  CFFB F00F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10692  000012  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10693  000016  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10694  00001A                     
 10695                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10696  00001A  AAF2               	btfss	242,5,c	;volatile
 10697  00001C  EF12  F000         	goto	i2u363_41
 10698  000020  EF14  F000         	goto	i2u363_40
 10699  000024                     i2u363_41:
 10700  000024  EF1D  F000         	goto	i2l437
 10701  000028                     i2u363_40:
 10702  000028  A4F2               	btfss	242,2,c	;volatile
 10703  00002A  EF19  F000         	goto	i2u364_41
 10704  00002E  EF1B  F000         	goto	i2u364_40
 10705  000032                     i2u364_41:
 10706  000032  EF1D  F000         	goto	i2l437
 10707  000036                     i2u364_40:
 10708  000036                     
 10709                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 10710  000036  EC28  F015         	call	_TMR0_ISR	;wreg free
 10711  00003A                     i2l437:
 10712  00003A  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10713  00003E  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10714  000042  C00F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10715  000046  C00E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10716  00004A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10717  00004C  0011               	retfie		f
 10718  00004E                     __end_of_INTERRUPT_InterruptManager:
 10719                           	callstack 0
 10720                           
 10721 ;; *************** function _TMR0_ISR *****************
 10722 ;; Defined at:
 10723 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    2
 10744 ;; This function calls:
 10745 ;;		Absolute function
 10746 ;;		_TMR0_DefaultInterruptHandler
 10747 ;;		_myTMR0ISR
 10748 ;; This function is called by:
 10749 ;;		_INTERRUPT_InterruptManager
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text51
 10754  002A50                     __ptext51:
 10755                           	callstack 0
 10756  002A50                     _TMR0_ISR:
 10757                           	callstack 17
 10758  002A50                     
 10759                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 10760  002A50  94F2               	bcf	242,2,c	;volatile
 10761  002A52                     
 10762                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 10763  002A52  5047               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 10764  002A54  6ED7               	movwf	215,c	;volatile
 10765  002A56                     
 10766                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 10767  002A56  C046  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10768  002A5A                     
 10769                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 10770  002A5A  5048               	movf	_TMR0_InterruptHandler^0,w,c
 10771  002A5C  1049               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 10772  002A5E  B4D8               	btfsc	status,2,c
 10773  002A60  EF34  F015         	goto	i2u305_41
 10774  002A64  EF36  F015         	goto	i2u305_40
 10775  002A68                     i2u305_41:
 10776  002A68  EF42  F015         	goto	i2l131
 10777  002A6C                     i2u305_40:
 10778  002A6C                     
 10779                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 10780  002A6C  D802               	call	i2u306_48
 10781  002A6E  EF42  F015         	goto	i2u306_49
 10782  002A72                     i2u306_48:
 10783  002A72  0005               	push	
 10784  002A74  6EFA               	movwf	pclath,c
 10785  002A76  5048               	movf	_TMR0_InterruptHandler^0,w,c
 10786  002A78  6EFD               	movwf	tosl,c
 10787  002A7A  5049               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 10788  002A7C  6EFE               	movwf	tosh,c
 10789  002A7E  6AFF               	clrf	tosu,c
 10790  002A80  50FA               	movf	pclath,w,c
 10791  002A82  0012               	return		;indir
 10792  002A84                     i2u306_49:
 10793  002A84                     i2l131:
 10794  002A84  0012               	return		;funcret
 10795  002A86                     __end_of_TMR0_ISR:
 10796                           	callstack 0
 10797                           
 10798 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10799 ;; Defined at:
 10800 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		None
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10818 ;;Total ram usage:        0 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_TMR0_Initialize
 10824 ;;		_TMR0_ISR
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text52
 10829  002C24                     __ptext52:
 10830                           	callstack 0
 10831  002C24                     _TMR0_DefaultInterruptHandler:
 10832                           	callstack 18
 10833  002C24  0012               	return		;funcret
 10834  002C26                     __end_of_TMR0_DefaultInterruptHandler:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _myTMR0ISR *****************
 10838 ;; Defined at:
 10839 ;;		line 351 in file "main.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;		None
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  micReading      1   12[COMRAM] unsigned char 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10857 ;;Total ram usage:        3 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; Hardware stack levels required when called:    1
 10860 ;; This function calls:
 10861 ;;		_TMR0_ReadTimer
 10862 ;;		i2_TMR0_WriteTimer
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;;		_TMR0_ISR
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text53
 10870  001F22                     __ptext53:
 10871                           	callstack 0
 10872  001F22                     _myTMR0ISR:
 10873                           	callstack 17
 10874  001F22                     
 10875                           ;main.c: 354:     uint8_t micReading = ADRESH;
 10876  001F22  CFC4 F00D          	movff	4036,myTMR0ISR@micReading	;volatile
 10877                           
 10878                           ;main.c: 359:     ADCON0bits.GO_NOT_DONE = 1;
 10879  001F26  82C2               	bsf	194,1,c	;volatile
 10880                           
 10881                           ;main.c: 363:     switch(timerState){
 10882  001F28  EFF4  F00F         	goto	i2l3606
 10883  001F2C                     i2l3580:
 10884                           
 10885                           ;main.c: 367:             if(beginSampling == 1){
 10886  001F2C  044C               	decf	_beginSampling^0,w,c
 10887  001F2E  A4D8               	btfss	status,2,c
 10888  001F30  EF9C  F00F         	goto	i2u298_41
 10889  001F34  EF9E  F00F         	goto	i2u298_40
 10890  001F38                     i2u298_41:
 10891  001F38  EF0D  F010         	goto	i2l3608
 10892  001F3C                     i2u298_40:
 10893  001F3C                     
 10894                           ;main.c: 368:                 timerState = MIC_ACQUIRE_BLUE;
 10895  001F3C  0E01               	movlw	1
 10896  001F3E  6E4B               	movwf	_timerState^0,c
 10897                           
 10898                           ;main.c: 369:                 bufferIdx = 0;
 10899  001F40  0E00               	movlw	0
 10900  001F42  6E45               	movwf	(_bufferIdx+1)^0,c
 10901  001F44  0E00               	movlw	0
 10902  001F46  6E44               	movwf	_bufferIdx^0,c
 10903  001F48  EF0D  F010         	goto	i2l3608
 10904  001F4C                     i2l3584:
 10905                           
 10906                           ;main.c: 374:             blueBuffer[bufferIdx] = micReading;
 10907  001F4C  0EF4               	movlw	low _blueBuffer
 10908  001F4E  2444               	addwf	_bufferIdx^0,w,c
 10909  001F50  6ED9               	movwf	fsr2l,c
 10910  001F52  0E02               	movlw	high _blueBuffer
 10911  001F54  2045               	addwfc	(_bufferIdx+1)^0,w,c
 10912  001F56  6EDA               	movwf	fsr2h,c
 10913  001F58  C00D  FFDF         	movff	myTMR0ISR@micReading,indf2
 10914  001F5C                     
 10915                           ;main.c: 375:             bufferIdx += 1;
 10916  001F5C  4A44               	infsnz	_bufferIdx^0,f,c
 10917  001F5E  2A45               	incf	(_bufferIdx+1)^0,f,c
 10918  001F60                     
 10919                           ;main.c: 376:             if(bufferIdx >= 512){
 10920  001F60  0E02               	movlw	2
 10921  001F62  5C45               	subwf	(_bufferIdx+1)^0,w,c
 10922  001F64  A0D8               	btfss	status,0,c
 10923  001F66  EFB7  F00F         	goto	i2u299_41
 10924  001F6A  EFB9  F00F         	goto	i2u299_40
 10925  001F6E                     i2u299_41:
 10926  001F6E  EFC2  F00F         	goto	i2l293
 10927  001F72                     i2u299_40:
 10928  001F72                     
 10929                           ;main.c: 377:                 blueFull = 1;
 10930  001F72  0E01               	movlw	1
 10931  001F74  0100               	movlb	0	; () banked
 10932  001F76  6FD1               	movwf	_blueFull& (0+255),b
 10933                           
 10934                           ;main.c: 378:                 timerState = MIC_ACQUIRE_RED;
 10935  001F78  0E02               	movlw	2
 10936  001F7A  6E4B               	movwf	_timerState^0,c
 10937                           
 10938                           ;main.c: 379:                 bufferIdx = 0;
 10939  001F7C  0E00               	movlw	0
 10940  001F7E  6E45               	movwf	(_bufferIdx+1)^0,c
 10941  001F80  0E00               	movlw	0
 10942  001F82  6E44               	movwf	_bufferIdx^0,c
 10943  001F84                     i2l293:
 10944                           
 10945                           ;main.c: 381:             if(beginSampling == 0){
 10946  001F84  504C               	movf	_beginSampling^0,w,c
 10947  001F86  A4D8               	btfss	status,2,c
 10948  001F88  EFC8  F00F         	goto	i2u300_41
 10949  001F8C  EFCA  F00F         	goto	i2u300_40
 10950  001F90                     i2u300_41:
 10951  001F90  EF0D  F010         	goto	i2l3608
 10952  001F94                     i2u300_40:
 10953  001F94                     i2l3592:
 10954                           
 10955                           ;main.c: 382:                 timerState = MIC_IDLE;
 10956  001F94  0E00               	movlw	0
 10957  001F96  6E4B               	movwf	_timerState^0,c
 10958  001F98  EF0D  F010         	goto	i2l3608
 10959  001F9C                     i2l3594:
 10960                           
 10961                           ;main.c: 387:             redBuffer[bufferIdx] = micReading;
 10962  001F9C  0EF4               	movlw	low _redBuffer
 10963  001F9E  2444               	addwf	_bufferIdx^0,w,c
 10964  001FA0  6ED9               	movwf	fsr2l,c
 10965  001FA2  0E00               	movlw	high _redBuffer
 10966  001FA4  2045               	addwfc	(_bufferIdx+1)^0,w,c
 10967  001FA6  6EDA               	movwf	fsr2h,c
 10968  001FA8  C00D  FFDF         	movff	myTMR0ISR@micReading,indf2
 10969  001FAC                     
 10970                           ;main.c: 388:             bufferIdx += 1;
 10971  001FAC  4A44               	infsnz	_bufferIdx^0,f,c
 10972  001FAE  2A45               	incf	(_bufferIdx+1)^0,f,c
 10973  001FB0                     
 10974                           ;main.c: 389:             if(bufferIdx >= 512){
 10975  001FB0  0E02               	movlw	2
 10976  001FB2  5C45               	subwf	(_bufferIdx+1)^0,w,c
 10977  001FB4  A0D8               	btfss	status,0,c
 10978  001FB6  EFDF  F00F         	goto	i2u301_41
 10979  001FBA  EFE1  F00F         	goto	i2u301_40
 10980  001FBE                     i2u301_41:
 10981  001FBE  EFEA  F00F         	goto	i2l296
 10982  001FC2                     i2u301_40:
 10983  001FC2                     
 10984                           ;main.c: 390:                 redFull = 1;
 10985  001FC2  0E01               	movlw	1
 10986  001FC4  0100               	movlb	0	; () banked
 10987  001FC6  6FD0               	movwf	_redFull& (0+255),b
 10988                           
 10989                           ;main.c: 391:                 timerState = MIC_ACQUIRE_BLUE;
 10990  001FC8  0E01               	movlw	1
 10991  001FCA  6E4B               	movwf	_timerState^0,c
 10992                           
 10993                           ;main.c: 392:                 bufferIdx = 0;
 10994  001FCC  0E00               	movlw	0
 10995  001FCE  6E45               	movwf	(_bufferIdx+1)^0,c
 10996  001FD0  0E00               	movlw	0
 10997  001FD2  6E44               	movwf	_bufferIdx^0,c
 10998  001FD4                     i2l296:
 10999                           
 11000                           ;main.c: 394:             if(beginSampling == 0){
 11001  001FD4  504C               	movf	_beginSampling^0,w,c
 11002  001FD6  A4D8               	btfss	status,2,c
 11003  001FD8  EFF0  F00F         	goto	i2u302_41
 11004  001FDC  EFF2  F00F         	goto	i2u302_40
 11005  001FE0                     i2u302_41:
 11006  001FE0  EF0D  F010         	goto	i2l3608
 11007  001FE4                     i2u302_40:
 11008  001FE4  EFCA  F00F         	goto	i2l3592
 11009  001FE8                     i2l3606:
 11010  001FE8  504B               	movf	_timerState^0,w,c
 11011  001FEA  6E0B               	movwf	??_myTMR0ISR^0,c
 11012  001FEC  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 11013                           
 11014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11015                           ; Switch size 1, requested type "simple"
 11016                           ; Number of cases is 1, Range of values is 0 to 0
 11017                           ; switch strategies available:
 11018                           ; Name         Instructions Cycles
 11019                           ; simple_byte            4     3 (average)
 11020                           ;	Chosen strategy is simple_byte
 11021  001FEE  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 11022  001FF0  0A00               	xorlw	0	; case 0
 11023  001FF2  B4D8               	btfsc	status,2,c
 11024  001FF4  EFFE  F00F         	goto	i2l5124
 11025  001FF8  EF0D  F010         	goto	i2l3608
 11026  001FFC                     i2l5124:
 11027                           
 11028                           ; Switch size 1, requested type "simple"
 11029                           ; Number of cases is 3, Range of values is 0 to 2
 11030                           ; switch strategies available:
 11031                           ; Name         Instructions Cycles
 11032                           ; simple_byte           10     6 (average)
 11033                           ;	Chosen strategy is simple_byte
 11034  001FFC  500B               	movf	??_myTMR0ISR^0,w,c
 11035  001FFE  0A00               	xorlw	0	; case 0
 11036  002000  B4D8               	btfsc	status,2,c
 11037  002002  EF96  F00F         	goto	i2l3580
 11038  002006  0A01               	xorlw	1	; case 1
 11039  002008  B4D8               	btfsc	status,2,c
 11040  00200A  EFA6  F00F         	goto	i2l3584
 11041  00200E  0A03               	xorlw	3	; case 2
 11042  002010  B4D8               	btfsc	status,2,c
 11043  002012  EFCE  F00F         	goto	i2l3594
 11044  002016  EF0D  F010         	goto	i2l3608
 11045  00201A                     i2l3608:
 11046                           
 11047                           ;main.c: 405:         TMR0_WriteTimer(TMR0_ReadTimer() + (0x10000 - sampleRate));
 11048  00201A  EC95  F015         	call	_TMR0_ReadTimer	;wreg free
 11049  00201E  0100               	movlb	0	; () banked
 11050  002020  51F2               	movf	_sampleRate& (0+255),w,b
 11051  002022  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 11052  002024  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 11053  002026  51F3               	movf	(_sampleRate+1)& (0+255),w,b
 11054  002028  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 11055  00202A  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 11056  00202C  EC08  F016         	call	i2_TMR0_WriteTimer	;wreg free
 11057  002030                     
 11058                           ;main.c: 406:         INTCONbits.TMR0IF = 0;
 11059  002030  94F2               	bcf	242,2,c	;volatile
 11060  002032  0012               	return		;funcret
 11061  002034                     __end_of_myTMR0ISR:
 11062                           	callstack 0
 11063                           
 11064 ;; *************** function i2_TMR0_WriteTimer *****************
 11065 ;; Defined at:
 11066 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  timerVal        2    8[COMRAM] unsigned short 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;		None
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      void 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;Total ram usage:        2 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; This function calls:
 11087 ;;		Nothing
 11088 ;; This function is called by:
 11089 ;;		_myTMR0ISR
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           	psect	text54
 11094  002C10                     __ptext54:
 11095                           	callstack 0
 11096  002C10                     i2_TMR0_WriteTimer:
 11097                           	callstack 17
 11098  002C10                     
 11099                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 11100  002C10  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 11101  002C12  6ED7               	movwf	215,c	;volatile
 11102  002C14                     
 11103                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 11104  002C14  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 11105  002C18  0012               	return		;funcret
 11106  002C1A                     __end_ofi2_TMR0_WriteTimer:
 11107                           	callstack 0
 11108                           
 11109 ;; *************** function _TMR0_ReadTimer *****************
 11110 ;; Defined at:
 11111 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;		None
 11114 ;; Auto vars:     Size  Location     Type
 11115 ;;  readVal         2    4[COMRAM] unsigned short 
 11116 ;;  readValHigh     1    7[COMRAM] unsigned char 
 11117 ;;  readValLow      1    6[COMRAM] unsigned char 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  2    0[COMRAM] unsigned short 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;Total ram usage:        8 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; This function calls:
 11134 ;;		Nothing
 11135 ;; This function is called by:
 11136 ;;		_myTMR0ISR
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text55
 11141  002B2A                     __ptext55:
 11142                           	callstack 0
 11143  002B2A                     _TMR0_ReadTimer:
 11144                           	callstack 17
 11145  002B2A                     
 11146                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 11147  002B2A  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 11148                           
 11149                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 11150  002B2E  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 11151  002B32                     
 11152                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 11153  002B32  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 11154  002B34  6E03               	movwf	??_TMR0_ReadTimer^0,c
 11155  002B36  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 11156  002B38  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 11157  002B3A  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 11158  002B3E                     
 11159                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 11160  002B3E  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 11161  002B42  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 11162  002B46  0012               	return		;funcret
 11163  002B48                     __end_of_TMR0_ReadTimer:
 11164                           	callstack 0
 11165                           
 11166                           	psect	text56
 11167  000000                     __ptext56:
 11168                           	callstack 0
 11169  000000                     
 11170                           	psect	rparam
 11171  0000                     
 11172                           	psect	temp
 11173  00004D                     btemp:
 11174                           	callstack 0
 11175  00004D                     	ds	1
 11176  0000                     int$flags	set	btemp
 11177  0000                     wtemp8	set	btemp+1
 11178  0000                     ttemp5	set	btemp+1
 11179  0000                     ttemp6	set	btemp+4
 11180  0000                     ttemp7	set	btemp+8
 11181                           
 11182                           	psect	idloc
 11183                           
 11184                           ;Config register IDLOC0 @ 0x200000
 11185                           ;	unspecified, using default values
 11186  200000                     	org	2097152
 11187  200000  FF                 	db	255
 11188                           
 11189                           ;Config register IDLOC1 @ 0x200001
 11190                           ;	unspecified, using default values
 11191  200001                     	org	2097153
 11192  200001  FF                 	db	255
 11193                           
 11194                           ;Config register IDLOC2 @ 0x200002
 11195                           ;	unspecified, using default values
 11196  200002                     	org	2097154
 11197  200002  FF                 	db	255
 11198                           
 11199                           ;Config register IDLOC3 @ 0x200003
 11200                           ;	unspecified, using default values
 11201  200003                     	org	2097155
 11202  200003  FF                 	db	255
 11203                           
 11204                           ;Config register IDLOC4 @ 0x200004
 11205                           ;	unspecified, using default values
 11206  200004                     	org	2097156
 11207  200004  FF                 	db	255
 11208                           
 11209                           ;Config register IDLOC5 @ 0x200005
 11210                           ;	unspecified, using default values
 11211  200005                     	org	2097157
 11212  200005  FF                 	db	255
 11213                           
 11214                           ;Config register IDLOC6 @ 0x200006
 11215                           ;	unspecified, using default values
 11216  200006                     	org	2097158
 11217  200006  FF                 	db	255
 11218                           
 11219                           ;Config register IDLOC7 @ 0x200007
 11220                           ;	unspecified, using default values
 11221  200007                     	org	2097159
 11222  200007  FF                 	db	255
 11223                           
 11224                           	psect	config
 11225                           
 11226                           ; Padding undefined space
 11227  300000                     	org	3145728
 11228  300000  FF                 	db	255
 11229                           
 11230                           ;Config register CONFIG1H @ 0x300001
 11231                           ;	Oscillator Selection bits
 11232                           ;	FOSC = INTIO67, Internal oscillator block
 11233                           ;	4X PLL Enable
 11234                           ;	PLLCFG = OFF, Oscillator used directly
 11235                           ;	Primary clock enable bit
 11236                           ;	PRICLKEN = ON, Primary clock enabled
 11237                           ;	Fail-Safe Clock Monitor Enable bit
 11238                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11239                           ;	Internal/External Oscillator Switchover bit
 11240                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11241  300001                     	org	3145729
 11242  300001  28                 	db	40
 11243                           
 11244                           ;Config register CONFIG2L @ 0x300002
 11245                           ;	Power-up Timer Enable bit
 11246                           ;	PWRTEN = OFF, Power up timer disabled
 11247                           ;	Brown-out Reset Enable bits
 11248                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11249                           ;	Brown Out Reset Voltage bits
 11250                           ;	BORV = 190, VBOR set to 1.90 V nominal
 11251  300002                     	org	3145730
 11252  300002  1F                 	db	31
 11253                           
 11254                           ;Config register CONFIG2H @ 0x300003
 11255                           ;	Watchdog Timer Enable bits
 11256                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11257                           ;	Watchdog Timer Postscale Select bits
 11258                           ;	WDTPS = 32768, 1:32768
 11259  300003                     	org	3145731
 11260  300003  3C                 	db	60
 11261                           
 11262                           ; Padding undefined space
 11263  300004                     	org	3145732
 11264  300004  FF                 	db	255
 11265                           
 11266                           ;Config register CONFIG3H @ 0x300005
 11267                           ;	CCP2 MUX bit
 11268                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11269                           ;	PORTB A/D Enable bit
 11270                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 11271                           ;	P3A/CCP3 Mux bit
 11272                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11273                           ;	HFINTOSC Fast Start-up
 11274                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11275                           ;	Timer3 Clock input mux bit
 11276                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11277                           ;	ECCP2 B output mux bit
 11278                           ;	P2BMX = PORTB5, P2B is on RB5
 11279                           ;	MCLR Pin Enable bit
 11280                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11281  300005                     	org	3145733
 11282  300005  BF                 	db	191
 11283                           
 11284                           ;Config register CONFIG4L @ 0x300006
 11285                           ;	Stack Full/Underflow Reset Enable bit
 11286                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11287                           ;	Single-Supply ICSP Enable bit
 11288                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 11289                           ;	Extended Instruction Set Enable bit
 11290                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11291                           ;	Background Debug
 11292                           ;	DEBUG = OFF, Disabled
 11293  300006                     	org	3145734
 11294  300006  85                 	db	133
 11295                           
 11296                           ; Padding undefined space
 11297  300007                     	org	3145735
 11298  300007  FF                 	db	255
 11299                           
 11300                           ;Config register CONFIG5L @ 0x300008
 11301                           ;	Code Protection Block 0
 11302                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11303                           ;	Code Protection Block 1
 11304                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11305                           ;	Code Protection Block 2
 11306                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11307                           ;	Code Protection Block 3
 11308                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11309  300008                     	org	3145736
 11310  300008  0F                 	db	15
 11311                           
 11312                           ;Config register CONFIG5H @ 0x300009
 11313                           ;	Boot Block Code Protection bit
 11314                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11315                           ;	Data EEPROM Code Protection bit
 11316                           ;	CPD = OFF, Data EEPROM not code-protected
 11317  300009                     	org	3145737
 11318  300009  C0                 	db	192
 11319                           
 11320                           ;Config register CONFIG6L @ 0x30000A
 11321                           ;	Write Protection Block 0
 11322                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11323                           ;	Write Protection Block 1
 11324                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11325                           ;	Write Protection Block 2
 11326                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11327                           ;	Write Protection Block 3
 11328                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11329  30000A                     	org	3145738
 11330  30000A  0F                 	db	15
 11331                           
 11332                           ;Config register CONFIG6H @ 0x30000B
 11333                           ;	Configuration Register Write Protection bit
 11334                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11335                           ;	Boot Block Write Protection bit
 11336                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11337                           ;	Data EEPROM Write Protection bit
 11338                           ;	WRTD = OFF, Data EEPROM not write-protected
 11339  30000B                     	org	3145739
 11340  30000B  E0                 	db	224
 11341                           
 11342                           ;Config register CONFIG7L @ 0x30000C
 11343                           ;	Table Read Protection Block 0
 11344                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11345                           ;	Table Read Protection Block 1
 11346                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11347                           ;	Table Read Protection Block 2
 11348                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11349                           ;	Table Read Protection Block 3
 11350                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11351  30000C                     	org	3145740
 11352  30000C  0F                 	db	15
 11353                           
 11354                           ;Config register CONFIG7H @ 0x30000D
 11355                           ;	Boot Block Table Read Protection bit
 11356                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11357  30000D                     	org	3145741
 11358  30000D  40                 	db	64
 11359                           tosu	equ	0xFFF
 11360                           tosh	equ	0xFFE
 11361                           tosl	equ	0xFFD
 11362                           stkptr	equ	0xFFC
 11363                           pclatu	equ	0xFFB
 11364                           pclath	equ	0xFFA
 11365                           pcl	equ	0xFF9
 11366                           tblptru	equ	0xFF8
 11367                           tblptrh	equ	0xFF7
 11368                           tblptrl	equ	0xFF6
 11369                           tablat	equ	0xFF5
 11370                           prodh	equ	0xFF4
 11371                           prodl	equ	0xFF3
 11372                           indf0	equ	0xFEF
 11373                           postinc0	equ	0xFEE
 11374                           postdec0	equ	0xFED
 11375                           preinc0	equ	0xFEC
 11376                           plusw0	equ	0xFEB
 11377                           fsr0h	equ	0xFEA
 11378                           fsr0l	equ	0xFE9
 11379                           wreg	equ	0xFE8
 11380                           indf1	equ	0xFE7
 11381                           postinc1	equ	0xFE6
 11382                           postdec1	equ	0xFE5
 11383                           preinc1	equ	0xFE4
 11384                           plusw1	equ	0xFE3
 11385                           fsr1h	equ	0xFE2
 11386                           fsr1l	equ	0xFE1
 11387                           bsr	equ	0xFE0
 11388                           indf2	equ	0xFDF
 11389                           postinc2	equ	0xFDE
 11390                           postdec2	equ	0xFDD
 11391                           preinc2	equ	0xFDC
 11392                           plusw2	equ	0xFDB
 11393                           fsr2h	equ	0xFDA
 11394                           fsr2l	equ	0xFD9
 11395                           status	equ	0xFD8

Data Sizes:
    Strings     1699
    Constant    30
    Data        2
    BSS         1081
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160    106     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1650_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_74(CODE[3]), STR_73(CODE[3]), STR_72(CODE[2]), STR_71(CODE[4]), 
		 -> STR_70(CODE[6]), STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), STR_63(CODE[28]), 
		 -> STR_62(CODE[26]), STR_61(CODE[27]), STR_60(CODE[17]), STR_59(CODE[255]), 
		 -> STR_58(CODE[5]), STR_57(CODE[399]), STR_56(CODE[77]), STR_55(CODE[29]), 
		 -> STR_54(CODE[29]), STR_53(CODE[16]), STR_52(CODE[89]), STR_51(CODE[3]), 
		 -> STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), STR_47(CODE[17]), 
		 -> STR_46(CODE[15]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[5]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[43]), 
		 -> STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), 
		 -> STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), 
		 -> STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), 
		 -> STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), 
		 -> STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), 
		 -> STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), 
		 -> STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), 
		 -> STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), 
		 -> STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), 
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_74(CODE[3]), STR_73(CODE[3]), STR_72(CODE[2]), STR_71(CODE[4]), 
		 -> STR_70(CODE[6]), STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), STR_63(CODE[28]), 
		 -> STR_62(CODE[26]), STR_61(CODE[27]), STR_60(CODE[17]), STR_59(CODE[255]), 
		 -> STR_58(CODE[5]), STR_57(CODE[399]), STR_56(CODE[77]), STR_55(CODE[29]), 
		 -> STR_54(CODE[29]), STR_53(CODE[16]), STR_52(CODE[89]), STR_51(CODE[3]), 
		 -> STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), STR_47(CODE[17]), 
		 -> STR_46(CODE[15]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[5]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[43]), 
		 -> STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), 
		 -> STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), 
		 -> STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), 
		 -> STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), 
		 -> STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), 
		 -> STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), 
		 -> STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), 
		 -> STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), 
		 -> STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), 
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 399
		 -> STR_74(CODE[3]), STR_73(CODE[3]), STR_72(CODE[2]), STR_71(CODE[4]), 
		 -> STR_70(CODE[6]), STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), STR_63(CODE[28]), 
		 -> STR_62(CODE[26]), STR_61(CODE[27]), STR_60(CODE[17]), STR_59(CODE[255]), 
		 -> STR_58(CODE[5]), STR_57(CODE[399]), STR_56(CODE[77]), STR_55(CODE[29]), 
		 -> STR_54(CODE[29]), STR_53(CODE[16]), STR_52(CODE[89]), STR_51(CODE[3]), 
		 -> STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), STR_47(CODE[17]), 
		 -> STR_46(CODE[15]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[5]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[43]), 
		 -> STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), 
		 -> STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), 
		 -> STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), 
		 -> STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), 
		 -> STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), 
		 -> STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), 
		 -> STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), 
		 -> STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), 
		 -> STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), 
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 399
		 -> STR_74(CODE[3]), STR_73(CODE[3]), STR_72(CODE[2]), STR_71(CODE[4]), 
		 -> STR_70(CODE[6]), STR_69(CODE[3]), STR_68(CODE[3]), STR_67(CODE[2]), 
		 -> STR_66(CODE[3]), STR_65(CODE[2]), STR_64(CODE[4]), STR_63(CODE[28]), 
		 -> STR_62(CODE[26]), STR_61(CODE[27]), STR_60(CODE[17]), STR_59(CODE[255]), 
		 -> STR_58(CODE[5]), STR_57(CODE[399]), STR_56(CODE[77]), STR_55(CODE[29]), 
		 -> STR_54(CODE[29]), STR_53(CODE[16]), STR_52(CODE[89]), STR_51(CODE[3]), 
		 -> STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), STR_47(CODE[17]), 
		 -> STR_46(CODE[15]), STR_45(CODE[23]), STR_44(CODE[3]), STR_43(CODE[5]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[43]), 
		 -> STR_38(CODE[3]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), 
		 -> STR_34(CODE[19]), STR_33(CODE[20]), STR_32(CODE[28]), STR_31(CODE[20]), 
		 -> STR_30(CODE[30]), STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), 
		 -> STR_26(CODE[52]), STR_25(CODE[32]), STR_24(CODE[44]), STR_23(CODE[50]), 
		 -> STR_22(CODE[52]), STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), 
		 -> STR_18(CODE[52]), STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), 
		 -> STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), 
		 -> STR_10(CODE[3]), STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), 
		 -> STR_6(CODE[19]), STR_5(CODE[54]), STR_4(CODE[42]), STR_3(CODE[9]), 
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> redBuffer(BIGRAM[512]), blueBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> blueBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _printf->_vfprintf
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   97358
                                             85 BANK0     21    21      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___awmod
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   31519
                                             75 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             19 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     809
                                             18 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     505
                                             18 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             18 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   31076
                                             75 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   30729
                                             65 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   23964
                                             57 COMRAM     2     2      0
                                             59 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   23401
                                             28 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5903
                                             46 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             23 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5237
                                             46 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                             17 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                             17 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5920
                                             46 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4033
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1623
                                             28 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1268
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                             18 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1428
                                             24 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                             17 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     587
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     184
                                             13 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     184
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           3     3      0     184
                                             10 COMRAM     3     3      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___awmod
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     400      37       26.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E0      12        0.0%
DATA                 0      0     4E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 27 14:05:09 2020

                                            l21 2BD2                                              l31 2B84  
                                            l33 2B92                                              l25 24E4  
                                            l34 2B96                                              l28 2C20  
                                            l88 2AB2                            SDCARD_ReadBlock@addr 0013  
                           ___wmul@multiplicand 0014                                 _timer0ReloadVal 0046  
                                hexDumpBuffer@i 00B3                                  hexDumpBuffer@j 00AF  
                           myTMR0ISR@micReading 000D                                             l112 2A18  
                                           l124 2BDC                                             l134 2BE6  
                                           l230 049A                                             l233 052A  
                                           l225 0464                                             l209 02C2  
                                           l219 03C6                                             l341 28C6  
                                           l421 2B62                                             l261 07DA  
                                           l430 2C1C                                             l503 1DBC  
                                           l415 2B7C                                             l520 1922  
                                           l264 0800                                             l256 07A4  
                                           l362 2B02                                             l418 2B54  
                                           l523 2B28                                             l349 2BC0  
                                           l365 2B9A                                             l509 1852  
                                           l269 0836                                             l358 2ADC  
                                           l374 2C0E                                             l470 26A2  
                                           l198 0080                                             l368 2BAC  
                                           l392 2C04                                             l473 2904  
                                           l650 1F20                                             l458 257E  
                                           l386 2BFA                                             l484 1C7C  
                                           l468 26A0                                             l637 1C44  
                                           l389 2BF0                                             l478 293A  
                                           l767 2438                                             l961 2102  
                                           l971 22A6                                             l968 2122  
                                           l978 22C6                                             _abs 284A  
                                           _pad 22C8                                             _sin F93D  
                                  ___awmod@sign 0017                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1201 2ADA                                            ?_abs 0024  
                                          l1300 1736                                            l3000 1B8C  
                                          l1241 234E                                            l1305 1290  
                                          l3002 1BBA                                            l3010 1BF4  
                                          l1330 1530                                            l1314 1330  
                                          l1243 2388                                            l1307 1298  
                                          l3012 1C04                                            l3004 1BDA  
                                          l3020 1DC2                                            l3100 2304  
                                          l1412 2902                                            l1406 1AB4  
                                          l1254 2188                                            l3014 1C24  
                                          l3006 1BDC                                            l3030 1E22  
                                          l3022 1DD0                                            l3110 2370  
                                          l3102 2318                                            l1238 230C  
                                          l3008 1BEE                                            l3040 1E98  
                                          l3032 1E40                                            l3024 1DF0  
                                          l3104 232C                                            l1432 29AA  
                                          l1328 14CE                                            l1344 0AE8  
                                          l1409 1ABC                                            l1257 21CA  
                                          l1265 1016                                            l1418 29E2  
                                          l1426 27B6                                            l3050 1F00  
                                          l3042 1EB8                                            l3034 1E48  
                                          l3026 1DF4                                            l3018 1DBE  
                                          l3114 284A                                            l3106 2330  
                                          l1290 156A                                            l3122 28C8  
                                          l3130 273E                                            l1370 26FE  
                                          l1259 21F6                                            l1267 101E  
                                          l1371 2706                                            l3140 2766  
                                          l3044 1ECA                                            l3036 1E5C  
                                          l3028 1E02                                            l3116 2864  
                                          l3108 235C                                            l3060 2066  
                                          l1292 1572                                            l3132 2750  
                                          l1461 2A4E                                            l1285 1256  
                                          l1357 0F74                                            l3142 276A  
                                          l3038 1E6A                                            l3046 1ED0  
                                          l3070 20E8                                            l3062 207A  
                                          l3054 2034                                            l3118 2974  
                                          l3126 2708                                            l1447 2614  
                                          l1375 2880                                            l1455 2848  
                                          l1471 2764                                            l3136 29AC  
                                          l3144 277E                                            l3160 215C  
                                          l3152 2124                                            l3048 1EE0  
                                          l3072 20EA                                            l3064 2088  
                                          l3056 2040                                            l3080 221E  
                                          l5000 0964                                            l3146 27AC  
                                          l3170 21A8                                            l3162 216E  
                                          l3154 2136                                            l1378 2888  
                                          l3074 20FC                                            l3066 209A  
                                          l3058 205E                                            l3090 22A0  
                                          l3082 2232                                            l1466 275C  
                                          l3148 27B0                                            l3172 21AC  
                                          l3156 2142                                            l3092 22C8  
                                          l3068 20C8                                            l3084 2240  
                                          l3076 21F8                                            l1477 2972  
                                          l3350 1940                                            l3174 21D8  
                                          l3166 2180                                            l3158 214E  
                                          l3094 22D6                                            l3086 226E  
                                          l3078 2216                                            l3360 19A0  
                                          l3352 195E                                            l3344 1924  
                                          l3176 21EA                                            l3168 2194  
                                          l3096 22EA                                            l3088 228E  
                                          l4400 159A                                            l5120 0AA8  
                                          l5122 19E6                                            l3362 19B6  
                                          l3354 1996                                            l3346 1938  
                                          l3098 22F8                                            l4330 0F76  
                                          l4410 1630                                            l4402 15A4  
                                          l3530 2BE8                                            l3380 1A98  
                                          l3372 1A34                                            l3364 19BE  
                                          l3356 199A                                            l3348 193C  
                                          l4340 0FF0                                            l4332 0F96  
                                          l4420 16E6                                            l4412 1636  
                                          l4404 15AC                                            l4500 0A36  
                                          l3532 2BFC                                            l3620 28AA  
                                          l3366 19C6                                            l4350 104C  
                                          l4342 100A                                            l4334 0FC0  
                                          l4422 1700                                            l4406 15B2  
                                          l4414 169A                                            l4430 1266  
                                          l4502 0A3A                                            l3630 243C  
                                          l3622 28B6                                            l3550 2BD0  
                                          l3518 2BDE                                            l5118 0978  
                                          l3552 2B80                                            l3376 1A74  
                                          l3368 19FC                                            l4360 10EC  
                                          l4352 1054                                            l4344 1026  
                                          l4336 0FE0                                            l4416 16AE  
                                          l4424 170E                                            l4408 162A  
                                          l4440 12D8                                            l4432 1268  
                                          l4520 0A6E                                            l4512 0A62  
                                          l4504 0A48                                            l3800 290E  
                                          l3640 24E2                                            l3632 244A  
                                          l3528 2BF2                                            l3624 28C2  
                                          l3616 288A                                            l3560 29E6  
                                          l3378 1A86                                            l2930 2C08  
                                          l4370 11AA                                            l4362 10F2  
                                          l4354 105C                                            l4346 1038  
                                          l4338 0FEE                                            l4418 16CC  
                                          l4450 1314                                            l4442 12E2  
                                          l4434 1282                                            l4610 0F62  
                                          l4602 0F22                                            l4506 0A4A  
                                          l4530 0AD6                                            l3810 2926  
                                          l3802 2910                                            l3634 248A  
                                          l3618 289E                                            l3626 2C1A  
                                          l3554 2A86                                            l3546 2BC2  
                                          l3570 2A14                                            l3562 29EE  
                                          l2940 25CC                                            l2932 2580  
                                          l4380 11F8                                            l4372 11C4  
                                          l4356 1062                                            l4364 1156  
                                          l4348 1046                                            l4452 1324  
                                          l4444 12EA                                            l4436 12AE  
                                          l4428 1258                                            l4604 0F30  
                                          l4540 0B62                                            l4532 0AF6  
                                          l4524 0A74                                            l4516 0A68  
                                          l4508 0A5C                                            l4700 1D72  
                                          l3812 2938                                            l3804 2920  
                                          l3820 24E8                                            l3644 2C1E  
                                          l3636 248E                                            l3628 2B48  
                                          l3556 2AB0                                            l3548 2BCE  
                                          l3564 2A04                                            l3660 2B64  
                                          l2926 2B9A                                            l2942 2602  
                                          l2934 2592                                            l2950 2824  
                                          l4382 120A                                            l4366 1172  
                                          l4374 11D2                                            l4358 10E4  
                                          l4470 13EE                                            l4462 13B0  
                                          l4446 12F0                                            l4438 12B8  
                                          l4550 0BE8                                            l4542 0B70  
                                          l4534 0AF8                                            l4630 26E0  
                                          l4710 1D9A                                            l4702 1D78  
                                          l3830 2506                                            l3822 24EE  
                                          l3638 24B2                                            l3566 2A06  
                                          l3558 29E4                                            l3670 2B78  
                                          l3662 2B68                                            l3646 2BD4  
                                          l3910 238E                                            ?_pad 0024  
                                          l3680 2AEE                                            l3672 2BAE  
                                          l2928 2BA8                                            l2936 25A4  
                                          l2952 2828                                            l2960 2A42  
                                          l4384 1216                                            l4376 11E4  
                                          l4368 1190                                            l4392 1532  
                                          l4480 14A6                                            l4472 13F4  
                                          l4464 13C2                                            l4456 1364  
                                          l4448 12F8                                            l4560 0C6E  
                                          l4544 0B90                                            l4552 0BFA  
                                          l4536 0B1E                                            l4528 0A80  
                                          l4608 0F3C                                            l4624 26A4  
                                          l4632 2AB4                                            l4712 1DAA  
                                          l4704 1D7E                                            l3832 250C  
                                          l3824 24F4                                            l3816 24E6  
                                          l3568 2A08                                            l3664 2B6C  
                                          l3648 2BD8                                            l3920 23BE  
                                          l3912 239C                                            l4800 0100  
                                          l3682 2AFC                                            l2970 2B20  
                                          l2938 25AE                                            l2946 2806  
                                          l2954 2A1A                                            l4386 121E  
                                          l4378 11F2                                            l4394 1540  
                                          l4490 1508                                            l4482 14C0  
                                          l4458 1376                                            l4466 13D6  
                                          l4474 1452                                            l4570 0D3A  
                                          l4562 0C94                                            l4554 0C20  
                                          l4546 0B9E                                            l4538 0B54  
                                          l4626 26AC                                            l4634 2ABE  
                                          l4706 1D88                                            l4650 1C7E  
                                          l3850 2570                                            l3834 2512  
                                          l3826 24FA                                            l3818 24E6  
                                          l3770 261E                                            l3666 2B70  
                                          l3930 2404                                            l3922 23D0  
                                          l3914 23A4                                            l4730 17A0  
                                          l4722 1750                                            l4714 1738  
                                          l4810 029A                                            l4802 0282  
                                          l3684 2B00                                            l3676 2ADC  
                                          l2980 1AF0                                            l2948 2812  
                                          l2956 2A26                                            l4388 122E  
                                          l4396 1542                                            l2964 293C  
                                          l4484 14DC                                            l4476 146E  
                                          l4468 13E8                                            l4580 0E08  
                                          l4572 0D60                                            l4564 0CBA  
                                          l4556 0C52                                            l4628 26BA  
                                          l4708 1D8A                                            l4660 1CDE  
                                          l4652 1CB8                                            l4644 1C54  
                                          l3852 257C                                            l3844 2546  
                                          l3836 2528                                            l3828 2500  
                                          l3780 263C                                            l3772 2624  
                                          l3764 2616                                            l3668 2B74  
                                          l3940 2430                                            l3932 240C  
                                          l3924 23D8                                            l3916 23A8  
                                          l3908 238A                                            l4740 1808  
                                          l4732 17BE                                            l4724 1762  
                                          l4716 1746                                            l4900 0602  
                                          l4812 02A6                                            l4804 0292  
                                          l3678 2AEA                                            l2990 1B32  
                                          l2982 1AF4                                            l2974 1ABE  
                                          l2958 2A2A                                            l4398 155C  
                                          l4486 14E2                                            l4478 148C  
                                          l4582 0E2E                                            l4574 0DAA  
                                          l4566 0D02                                            l4494 09F2  
                                          l4670 1CFC                                            l4662 1CE4  
                                          l4654 1CBA                                            l4646 1C5A  
                                          l4638 1C4A                                            l3846 255A  
                                          l3838 253E                                            l3782 2642  
                                          l3774 262A                                            l3766 2616  
                                          l3934 2412                                            l3926 23E0  
                                          l3918 23B6                                            l4750 187C  
                                          l4742 182A                                            l4734 17CA  
                                          l4726 1780                                            l4910 0676  
                                          l4902 0626                                            l4830 0300  
                                          l4822 02D0                                            l4814 02AC  
                                          l2968 2B04                                            l2992 1B50  
                                          l2984 1B02                                            l2976 1AC2  
                                          l4488 14F2                                            l4584 0E46  
                                          l4592 0ECC                                            l4496 0A18  
                                          l4680 1D1A                                            l4672 1D02  
                                          l4664 1CEA                                            l4656 1CCA  
                                          l4648 1C60                                            l3848 255E  
                                          l3792 2678                                            l3784 2658  
                                          l3776 2630                                            l3768 2618  
                                          l3928 23EE                                            l3936 2418  
                                          l4760 18D8                                            l4752 188E  
                                          l4736 17DC                                            l4744 1830  
                                          l4728 178C                                            l4920 06C8  
                                          l4912 068E                                            l4904 0644  
                                          l4840 0350                                            l4832 0306  
                                          l4824 02DC                                            l4816 02C8  
                                          l2994 1B58                                            l2986 1B22  
                                          l2978 1AD0                                            l4594 0EF2  
                                          l4586 0E54                                            l4578 0DE2  
                                          l4498 0A26                                            l4690 1D54  
                                          l4682 1D2A                                            l4674 1D08  
                                          l4666 1CF0                                            l4658 1CDC  
                                          l3794 268A                                            l3786 2670  
                                          l3778 2636                                            l3938 2428  
                                          l4762 18FA                                            l4754 189A  
                                          l4746 1846                                            l4738 17F8  
                                          l4930 0756                                            l4922 06D0  
                                          l4906 0648                                            l4914 069E  
                                          l4850 03BA                                            l4842 0366  
                                          l4834 0310                                            l4826 02E2  
                                          l4770 006C                                            l2996 1B6C  
                                          l2988 1B26                                            l4596 0F00  
                                          l4588 0E90                                            l4692 1D5A  
                                          l4684 1D3A                                            l4676 1D0E  
                                          l4668 1CF6                                            l3796 268E  
                                          l4756 18AC                                            l4764 1900  
                                          l4748 1876                                            l4940 0792  
                                          l4932 0762                                            l4924 0700  
                                          l4916 06B2                                            l4908 065A  
                                          l4860 044E                                            l4852 0434  
                                          l4836 0322                                            l4844 0376  
                                          l4828 02FC                                            l4780 009A  
                                          l4772 0070                                            l2998 1B7A  
                                          l4598 0F14                                            l4694 1D60  
                                          l4686 1D4C                                            l4678 1D18  
                                          l3798 2906                                            l4766 1916  
                                          l4758 18C8                                            l4942 07A6  
                                          l4950 07F0                                            l4934 0772  
                                          l4926 071E                                            l4918 06B6  
                                          l4870 052C                                            l4862 0452  
                                          l4846 0398                                            l4838 0344  
                                          l4790 00C8                                            l4782 009C  
                                          l4774 0072                                            l4696 1D66  
                                          l4688 1D4E                                            l4952 0802  
                                          l4944 07C2                                            l4960 084C  
                                          l4936 0786                                            l4928 0726  
                                          l4880 0580                                            l4872 0548  
                                          l4864 0466                                            l4848 03A4  
                                          l4792 00D6                                            l4784 009E  
                                          l4776 007E                                            l4768 0052  
                                          l4698 1D6C                                            l4970 088C  
                                          l4962 0860                                            l4954 081E  
                                          l4946 07DC                                            l4938 078A  
                                          l4890 05D8                                            l4882 058E  
                                          l4874 054A                                            l4866 0482  
                                          l4858 043C                                            l4794 00DA  
                                          l4786 00AC                                            l4778 008E  
                                          l4980 08F0                                            l4972 08A8  
                                          l4964 0864                                            l4956 0838  
                                          l4948 07EC                                            l4892 05E8  
                                          l4884 05B4                                            l4876 0558  
                                          l4868 049C                                            l4796 00E0  
                                          l4788 00BA                                            l4974 08B2  
                                          l4990 0924                                            l4966 086C  
                                          l4958 0848                                            l4894 05F8  
                                          l4886 05C2                                            l4878 0566  
                                          l4798 00F4                                            l4992 0938  
                                          l4984 0908                                            l4968 0878  
                                          l4888 05D4                                            l4994 093C  
                                          l4978 08CE                                            l4996 094E  
                                          l4988 0912                                            STR_1 FFC0  
                                          STR_2 FF5E                                            STR_3 FFCB  
                                          STR_4 FDB0                                            STR_5 FCC6  
                                          STR_6 FF4B                                            STR_7 FFEE  
                                          STR_8 FFFC                                            STR_9 FFEE  
                                          u2000 1C04                                            u2001 1C00  
                                          u2010 1DD0                                            u2011 1DCC  
                                          u2020 1E02                                            u2100 20C8  
                                          u2021 1DFE                                            u2101 20C4  
                                          u2030 1E40                                            u2110 2216  
                                          u2031 1E3C                                            u2111 2212  
                                          u2040 1E6A                                            u2120 2240  
                                          u2200 29A6                                            u2041 1E66  
                                          u2121 223C                                            u2050 1E98  
                                          u2130 226E                                            u2210 28FC  
                                          u2051 1E94                                            u2131 226A  
                                          u2211 28F6                                            u2300 2136  
                                          u2060 1EE0                                            u2140 22D6  
                                          u2220 28FE                                            u2301 2132  
                                          u2061 1EDC                                            u2141 22D2  
                                          _LATA 000F89                                            u2310 215C  
                                          u2150 22F8                                            u2230 2738  
                                          u3030 2B62                                            _LATB 000F8A  
                                          u2311 2158                                            u2151 22F4  
                                          u2071 203A                                            u2231 2732  
                                          u3031 2B5E                                            _LATC 000F8B  
                                          u2320 217C                                            u2160 234E  
                                          u2080 205E                                            u2240 273A  
                                          u4000 14A6                                            u3200 253E  
                                          u3040 244A                                            u2321 2178  
                                          u2161 234A                                            u2081 205A  
                                          u4001 14A2                                            u3201 253A  
                                          u3041 2446                                            u2330 21CA  
                                          u2170 235C                                            u2090 2088  
                                          u2250 2750                                            u4010 14C0  
                                          u3210 2570                                            u2331 21C6  
                                          u2171 2358                                            u2091 2084  
                                          u2251 274C                                            u4011 14BC  
                                          u3211 256C                                            u2260 29DC  
                                          u2340 21D8                                            u2180 2864  
                                          u4020 14CE                                            u4100 0BE4  
                                          u2261 29D6                                            u2341 21D4  
                                          u2181 2860                                            u4021 14CA  
                                          u3070 2BBE                                            u2270 29DE  
                                          u2190 29A4                                            u4030 14DC  
                                          u4110 0BFA                                            u3310 239C  
                                          u3071 2BB8                                            u2191 299E  
                                          u4031 14D8                                            u4111 0BF6  
                                          u3311 2398                                            u3080 2AEA  
                                          u2280 277E                                            u4120 0C20  
                                          u4040 0A18                                            u4200 1C7C  
                                          u3160 2658                                            u3320 23B6  
                                          u3081 2AE6                                            u2281 277A  
                                          u4121 0C1C                                            u4041 0A14  
                                          u4201 1C78                                            u3161 2654  
                                          u3321 23B2                                            u3090 2AFC  
                                          u2290 27AC                                            u4130 0C94  
                                          u4050 0AE8                                            u4210 1CCA  
                                          u3170 26A0                                            u3330 23D0  
                                          u3091 2AF8                                            u2291 27A8  
                                          u4131 0C90                                            u4051 0AE4  
                                          u4211 1CC6                                            u3171 269C  
                                          u3331 23CC                                            u3076 2BC0  
                                          u1900 2848                                            u4140 0CBA  
                                          u4060 0AF6                                            u4220 1D2A  
                                          u3180 2920                                            u3340 23EE  
                                          u4300 17F8                                            u1901 2844  
                                          u4141 0CB6                                            u4061 0AF2  
                                          u4221 1D26                                            u3181 291C  
                                          u3341 23EA                                            u4301 17F4  
                                          u1910 2A42                                            u4150 0D60  
                                          u4070 0B1E                                            u4230 1D3A  
                                          u3190 2528                                            u3350 2404  
                                          u4310 1846                                            u1911 2A3E  
                                          u4151 0D5C                                            u4071 0B1A  
                                          u4231 1D36                                            u3191 2524  
                                          u3351 2400                                            u4311 1842  
                                          u2800 1A98                                            u1920 296C  
                                          u4160 0E08                                            u4080 0B62  
                                          u4240 1D9A                                            u3360 2428  
                                          u4320 188E                                            u4400 0344  
                                          u2801 1A94                                            u1921 2966  
                                          u4161 0E04                                            u4081 0B5E  
                                          u4241 1D96                                            u3361 2424  
                                          u4321 188A                                            u4401 0340  
                                          u1850 2BA8                                            u1930 296E  
                                          u4170 0E2E                                            u4090 0BE2  
                                          u4250 1DAA                                            u4330 18C8  
                                          u4410 0398                                            u1851 2BA4  
                                          u4171 0E2A                                            u4091 0BDC  
                                          u4251 1DA6                                            u4331 18C4  
                                          u4411 0394                                            u2740 195E  
                                          u1860 2592                                            u1940 1AD0  
                                          u3700 1038                                            u4180 0EF2  
                                          u4340 1916                                            u4260 1762  
                                          u4500 0786                                            u4420 0464  
                                          u2741 195A                                            u1861 258E  
                                          u1941 1ACC                                            u3701 1034  
                                          u4181 0EEE                                            u4341 1912  
                                          u4261 175E                                            u4501 0782  
                                          u4421 0460                                            u2750 1996  
                                          u1870 25A4                                            u1950 1B02  
                                          u3710 1046                                            u4190 26FE  
                                          u4270 1780                                            u4510 07A4  
                                          u4430 049A                                            u4350 008E  
                                          u2751 1992                                            u1871 25A0  
                                          u1951 1AFE                                            u3711 1042  
                                          u4191 26FA                                            u4271 177C  
                                          u4511 07A0                                            u4431 0496  
                                          u4351 008A                                            u2760 19B2  
                                          u1880 25CC                                            u3720 1172  
                                          u3800 1540                                            u4280 17A0  
                                          u4520 07DA                                            u4440 065A  
                                          u4360 00F4                                            u2761 19AE  
                                          u1881 25C8                                            u1961 1B2C  
                                          u3721 116E                                            u3801 153C  
                                          u4281 179C                                            u4521 07D6  
                                          u4441 0656                                            u4361 00F0  
                                          u2770 1A6E                                            u1890 2602  
                                          u1970 1B50                                            u3730 1190  
                                          u3650 0FA8                                            u3810 155C  
                                          u4290 17BE                                            u4530 0800  
                                          u4450 068E                                            u4370 02C2  
                                          u2771 1A68                                            u1891 25FE  
                                          u1971 1B4C                                            u3731 118C  
                                          u3651 0FA2                                            u3811 1558  
                                          u4291 17BA                                            u4531 07FC  
                                          u4451 068A                                            u4371 02BE  
                                          u2780 1A70                                            u1980 1B7A  
                                          u3740 11AA                                            u3660 0FAA  
                                          u3820 16AE                                            u3900 1314  
                                          u4540 0836                                            u4460 06B2  
                                          u4380 02F8                                            u1981 1B76  
                                          u3741 11A6                                            u3821 16AA  
                                          u3901 1310                                            u4541 0832  
                                          u4461 06AE                                            u4381 02F4  
                                          u2790 1A86                                            u1990 1BBA  
                                          u3750 11C4                                            u3670 0FC0  
                                          u3830 16CC                                            u3910 135E  
                                          u4550 0860                                            u4390 0322  
                                          u2791 1A82                                            u1991 1BB6  
                                          u3751 11C0                                            u3671 0FBC  
                                          u3831 16C8                                            u3911 1358  
                                          u4551 085C                                            u4391 031E  
                                          u3760 11D2                                            u3680 0FEE  
                                          u3840 16E6                                            u3920 1360  
                                          u4560 08CA                                            u4480 071E  
                                          u3761 11CE                                            u3681 0FEA  
                                          u3841 16E2                                            u4561 08C6  
                                          u4481 071A                                            u2970 2B92  
                                          u3770 11E4                                            u3690 100A  
                                          u3850 1700                                            u3930 1376  
                                          u4570 0904                                            u2971 2B8E  
                                          u3771 11E0                                            u3691 1006  
                                          u3851 16FC                                            u3931 1372  
                                          u4571 0900                                            u4475 06E4  
                                          u3780 11F2                                            u3860 170E  
                                          u3940 13AA                                            u4580 0938  
                                          u3781 11EE                                            u3861 170A  
                                          u3941 13A4                                            u4581 0934  
                                          u3790 120A                                            u3950 13AC  
                                          u3870 1266                                            u3791 1206  
                                          u3871 1262                                            u4495 073A  
                                          u3960 13C2                                            u3880 1282  
                                          u3961 13BE                                            u3881 127E  
                                          u3970 142C                                            u3890 12AE  
                                          u3891 12AA                                            u3980 146E  
                                          u3981 146A                                            u3990 148C  
                                          u3991 1488                                            u3975 141A  
                                          _WPUB 000F61                                   _EUSART1_Write 2B98  
                                          abs@a 0024                                            _dbuf 00D2  
                                          _atoi 1924                                            _ctoa 2124  
                                          _main 0052                                            _dtoa 0F76  
                                 ?_EUSART1_Read 0001                                            _prec 003E  
                                          _nout 00CA                                            pad@i 002B  
                                          pad@p 0028                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002D  
                                          fsr2l 000FD9                                            btemp 004D  
                                          _utoa 1532                                     main@waveIdx 00BA  
                                          _xtoa 1258                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00AD  
                                          start 004E                       __size_of_SDCARD_ReadBlock 009A  
                                  ___param_bank 000000                                           ??_abs 0026  
                                         ??_pad 002A                         __end_of_TMR0_Initialize 2A1A  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 2B64                                 __end_of___aodiv 1C46  
                                         ?_atoi 0019                                     ?_SPI2_Close 0001  
                                         ?_ctoa 001D                                           ?_main 0001  
                                         ?_dtoa 002F                                 __end_of___aomod 1F22  
                                         STR_10 FFAE                                           STR_11 FCC8  
                                         STR_12 FFB1                                           STR_20 FD85  
                                         STR_13 FFDC                                           STR_21 FC8F  
                                         STR_22 FCC8                                           STR_14 FF0E  
                                         STR_30 FE1F                                           STR_31 FF23  
                                         STR_15 FEDF                                           STR_23 FCFC  
                                         STR_16 FCC8                                           STR_40 FF81  
                                         STR_32 FE76                                           STR_24 FD2E  
                                         STR_41 FFEE                                           STR_33 FF37  
                                         STR_17 FEC7                                           STR_25 FDFF  
                                         STR_26 FCC8                                           STR_18 FCC8  
                                         STR_34 FF4B                                           STR_42 FFFC  
                                         STR_50 FFEE                                           STR_51 FFAE  
                                         STR_43 FFEE                                           STR_35 FFEE  
                                         STR_27 FFD4                                           STR_19 FDDA  
                                         STR_28 FFF5                                           STR_44 FFAE  
                                         STR_36 FFFC                                           STR_60 FF70  
                                         STR_52 FBE9                                 __end_of___awmod 243A  
                                         STR_29 FFF5                                           STR_37 FFEE  
                                         STR_53 FF92                                           STR_45 FEF7  
                                         STR_61 FE92                                           STR_38 FFAE  
                                         STR_70 FFE3                                           STR_46 FFA2  
                                         STR_62 FEAD                                           STR_54 FE3D  
                                         STR_55 FE3D                                           STR_71 FF8E  
                                         STR_47 FF81                                           STR_63 FE5A  
                                         STR_39 FD5A                                           STR_72 FFFA  
                                         STR_48 FFEE                                           STR_64 FFF3  
                                         STR_56 FC42                                           STR_65 FF90  
                                         STR_49 FFFC                                           STR_73 FFF7  
                                         STR_57 F95B                                           STR_74 FFAE  
                                         STR_66 FF8F                                           STR_58 FFE9  
                                         STR_67 FFFA                                           STR_59 FAEA  
                                         STR_68 FFF7                                           STR_69 FFAE  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 002F  
                                         _T0CON 000FD5                                 __end_of___lodiv 2124  
                                         ?_xtoa 002F                                 __end_of___lomod 22C8  
                                         i2l121 2B46                                           i2l131 2A84  
                                         i2l124 2C18                                           i2l137 2C24  
                               _TMR0_WriteTimer 2BD4                                           i2l293 1F84  
                                         i2l437 003A                                           i2l296 1FD4  
                                         i2l298 2032                                    vfpfcnvrt@fmt 007E  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0092  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0012                                __end_of_TMR0_ISR 2A86  
                                         _flags 0040                                           _fputc 2580  
                               __end_of_isalpha 2904                                           _fputs 2806  
                               __end_of_isdigit 29E4                                           atoi@n 0026  
                                         pad@fp 0024                                           atoi@s 0019  
                                         _width 003C                                           ctoa@c 001F  
                                         _putch 2C06                                           ctoa@l 0021  
                                         ctoa@w 0023                                           main@i 00C4  
                                         dtoa@d 0031                                           dtoa@i 0078  
                                         dtoa@n 0070                                           dtoa@p 006A  
                                         dtoa@s 006E                                           dtoa@w 006C  
                               __end_of_islower 2974                                 __end_of_isspace 27B8  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 29AC  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0012                                           ttemp5 004E  
                                         ttemp6 0051                                           ttemp7 0055  
                                         utoa@d 0031                                           utoa@i 0074  
                                         utoa@n 006C                                           utoa@p 0068  
                                         utoa@w 006A                                           status 000FD8  
                                         wtemp8 004E                                           xtoa@c 007A  
                                         xtoa@d 0031                                           xtoa@i 0078  
                                         xtoa@n 0070                                           xtoa@p 006C  
                                         xtoa@w 006E                                           xtoa@x 0039  
                               __end_of_toupper 2766                                ___lodiv@dividend 0012  
            _EUSART1_DefaultFramingErrorHandler 000000                                    _toupper$1876 001E  
                               __initialization 27B8                    SDCARD_ReadBlock@sdCardBuffer 0017  
                                  __end_of_atoi 1ABE                                    __end_of_ctoa 21F8  
                    __end_of_EUSART1_Initialize 28C8                                    __end_of_main 09F2  
                                  __end_of_dtoa 1258                                    __end_of_utoa 1738  
                             _SPI2_ExchangeByte 2B7E                                    __end_of_xtoa 1532  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 001B                                          ??_ctoa 0020  
                                        ??_main 00B5                                          ??_dtoa 0060  
                                        ??_utoa 0060                                          ??_xtoa 0060  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                              ___lodiv@quotient 0022                             ??_SPI2_ExchangeByte 0012  
                                        ?_fputc 0014                                          ?_fputs 001D  
                                        _ADRESH 000FC4                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4204 001A                                          i2l4206 0028  
                                        i2l3520 2B2A                                          i2l3600 1FC2  
                                        i2l4208 0036                                          i2l3522 2B32  
                                        i2l3610 2030                                          i2l3524 2B3E  
                                        i2l5124 1FFC                                          i2l3542 2C10  
                                        i2l3606 1FE8                                          i2l3544 2C14  
                                        i2l3608 201A                                          i2l3650 2A50  
                                        i2l3580 1F2C                                          i2l3652 2A52  
                                        i2l3590 1F72                                          i2l3582 1F3C  
                                        i2l3654 2A56                                          i2l3592 1F94  
                                        i2l3584 1F4C                                          i2l3656 2A5A  
                                        i2l3594 1F9C                                          i2l3586 1F5C  
                                        i2l3578 1F22                                          i2l3658 2A6C  
                                        i2l3596 1FAC                                          i2l3588 1F60  
                                        i2l3598 1FB0                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 008E  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                             __size_of_SPI2_Close 0004  
                             __end_of_SPI2_Open 24E6                       __end_of_SPI2_ExchangeByte 2B98  
                                  vfprintf@cfmt 003A                                       ??___aodiv 0022  
                                     ??___aomod 0022                                          ___wmul 2B04  
                                     ??___awmod 0016                         __end_of_TMR0_WriteTimer 2BDE  
                                     ??___lodiv 0022                                       ??___lomod 0022  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0012  
                              ?_TMR0_Initialize 0001                                          clear_0 27D8  
                                        clear_1 27EA                                          clear_2 27F6  
                               ___awmod@divisor 0014                                 ___awmod@counter 0016  
                                        _printf 2AB4                                          pad@buf 0026  
              ??_EUSART1_SetOverrunErrorHandler 0014                 ?_EUSART1_SetOverrunErrorHandler 0012  
                                        ctoa@fp 001D                                          dtoa@fp 002F  
                                        _strlen 2A1A                                          fputc@c 0014  
                                        fputs@c 0021                                          fputs@i 0022  
                                        fputs@s 001D                                       ??_isalpha 0014  
                                     ??_isdigit 0014                                       ??_islower 0014  
                                  __mediumconst F93C                                       ??_isspace 0014  
                                        tblptrh 000FF7                                       ??_isupper 0014  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 2708                                 ??_EUSART1_Write 0012  
                                        utoa@fp 002F        TMR0_SetInterruptHandler@InterruptHandler 0012  
                                        xtoa@fp 002F                                       ??_toupper 001A  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 2B64  
                                    __accesstop 0060                         __end_of__initialization 27FC  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 24E6                      __end_of_spi2_configuration F95B  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2C22  
                           ??_SYSTEM_Initialize 0016                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 2616                                   __end_of_fputs 284A  
                                 __end_of_putch 2C10                         __size_of_TMR0_ReadTimer 001E  
                          __end_of_EUSART1_Read 2B04                                         ??_fputc 0018  
                     __end_of_SYSTEM_Initialize 2B7E                                         ??_fputs 0021  
                            __size_of_myTMR0ISR 0112                                         ??_putch 0013  
                            SDCARD_WriteBlock@i 0019                               ??_SPI2_Initialize 0012  
                                    __pbssBANK0 00CA                      __size_of_SPI2_ExchangeByte 001A  
               __end_of_EUSART1_SetErrorHandler 2C06                __end_of_TMR0_SetInterruptHandler 2BE8  
                                       ?___wmul 0012                                      ??_TMR0_ISR 000E  
                                    _blueBuffer 02F4                                ?_TMR0_WriteTimer 0012  
                                       ?_printf 00A1                                    ??_SPI2_Close 0012  
                                       ?_strlen 0012          __end_of_EUSART1_SetFramingErrorHandler 2BFC  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2BF2  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0584  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                              ___lomod@dividend 0012                               SDCARD_ReadBlock@i 0019  
              __end_of_SDCARD_PollWriteComplete 293C                              __end_of_SPI2_Close 2C22  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 1924                       SDCARD_Initialize@response 00AE  
                                       ___aodiv 1ABE                                         ___aomod 1DBE  
                                       ___awmod 238A                                 __size_of___wmul 0026  
                                       ___lodiv 2034                                         ___lomod 21F8  
                             __end_of_myTMR0ISR 2034                                       ?_vfprintf 009B  
                                 _beginSampling 004C                             _EUSART1_is_rx_ready 2BAE  
                                       __pcinit 27B8                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 1738  
                                       __ptext2 238A                                         __ptext3 2BD4  
                                       __ptext4 2B64                                         __ptext5 29E4  
                                       __ptext6 2BDE                                         __ptext7 2BC2  
                                       __ptext8 2A86                                         __ptext9 2B48  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                                         _redFull 00D0  
                         _OSCILLATOR_Initialize 2B48                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 28C8  
                                       _isdigit 29AC                                ___awmod@dividend 0012  
                            _EUSART1_Initialize 288A                                         _islower 293C  
                      ??_PIN_MANAGER_Initialize 0012                                         _isspace 2766  
                                       _isupper 2974                                         atoi@neg 001F  
                                       main@cmd 00BB                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 2708                            end_of_initialization 27FC  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 00F2                                         fputc@fp 0016  
                   _EUSART1_OverrunErrorHandler 00CE                                         fputs@fp 001F  
                 SDCARD_WriteBlock@sdCardBuffer 0017                               __end_of_vfpfcnvrt 0F76  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 003A  
                                     _SPI2_Open 243A                                  _TMR0_ReadTimer 2B2A  
                          ??_EUSART1_Initialize 0014                           SDCARD_WriteBlock@addr 0013  
                                       strlen@a 0014                                         strlen@s 0012  
                                    _timerState 004B                        _TMR0_SetInterruptHandler 2BDE  
                              main@localAddress 00C0                        __end_of_SDCARD_ReadBlock 2580  
                                     _TRISBbits 000F93                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0013                             EUSART1_Write@txData 0012  
                         ??_EUSART1_is_rx_ready 0012                                      main@bufIdx 00BE  
                                  _EUSART1_Read 2ADC                                      main@letter 00B8  
                                    main@status 00B9                        _SDCARD_PollWriteComplete 2904  
                        __end_of_TMR0_ReadTimer 2B48                    __end_of_INTERRUPT_Initialize 2C1E  
                             _SDCARD_Initialize 1C46                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0080                                     vfpfcnvrt@fp 007C  
                                   vfpfcnvrt@ll 0086                                  __end_of___wmul 2B2A  
                             __size_of_TMR0_ISR 0036                              ?_SDCARD_Initialize 0001  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 2BC2  
                                __end_of_printf 2ADC                                  __end_of_strlen 2A50  
                            _spi2_configuration F957                             start_initialization 27B8  
                               ___lodiv@divisor 001A                                 ___lodiv@counter 002A  
                           ??_SDCARD_Initialize 003C                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_abs 288A  
                                   __end_of_pad 238A                                     __end_of_sin F957  
                                   putch@txData 0013                           __end_of_EUSART1_Write 2BAE  
                             main@sdCardAddress 00C6                       __end_of_SDCARD_Initialize 1DBE  
                                   vfprintf@fmt 009D                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0016                                     __pdataBANK0 00F2  
                                      ??_printf 003C                           SPI2_ExchangeByte@data 0012  
                                      ??_strlen 0014                                     __pbssBIGRAM 00F4  
                                   __pbssCOMRAM 003C                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1205 00B1                                ___aodiv@dividend 0012  
              ??_EUSART1_SetFramingErrorHandler 0014                 ?_EUSART1_SetFramingErrorHandler 0012  
                                     _atoi$1800 0021                                       _atoi$1801 0025  
                                     _atoi$1802 0023                           _TMR0_InterruptHandler 0048  
                        _PIN_MANAGER_Initialize 2A86                                       _dtoa$1744 0068  
                             _SDCARD_WriteBlock 2616                                       __pintcode 0008  
                                 __pmediumconst F93C                         __end_of_SPI2_Initialize 2BD4  
                                      ?___aodiv 0012                                        ?___aomod 0012  
                              ___aodiv@quotient 0024                                        ?___awmod 0012  
                            ?_SDCARD_WriteBlock 0013                                        ?___lodiv 0012  
                                      ?___lomod 0012                                     ??_SPI2_Open 0012  
              SPI2_Open@spi2UniqueConfiguration 0013                                       _bufferIdx 0044  
                  ??_INTERRUPT_InterruptManager 000E                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 1F22                                 ___lomod@divisor 001A  
                           ??_SDCARD_WriteBlock 0019                                 ___lomod@counter 0022  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0012                                        ?_isdigit 0012  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00CC  
                                      ?_islower 0012                                        ?_isspace 0012  
                                     _redBuffer 00F4                                        ?_isupper 0012  
                       _EUSART1_SetErrorHandler 2BFC                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 0018  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2C1A  
                             ??_TMR0_Initialize 0014                                  ___wmul@product 0016  
       EUSART1_SetErrorHandler@interruptHandler 0012                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                       __end_of_SDCARD_WriteBlock 26A4  
                                      i2u300_40 1F94                                        i2u300_41 1F90  
                                      i2u301_40 1FC2                                        i2u301_41 1FBE  
                                      i2u302_40 1FE4                                        i2u302_41 1FE0  
           __size_of_INTERRUPT_InterruptManager 0046                                        i2u305_40 2A6C  
                                      i2u305_41 2A68                                        i2u306_48 2A72  
                                      i2u306_49 2A84                      ??_TMR0_SetInterruptHandler 0014  
                                      _PIR1bits 000F9E                                        i2u363_40 0028  
                                      i2u363_41 0024                                        i2u364_40 0036  
                                      i2u364_41 0032                                        _PIR3bits 000FA4  
                                      i2u298_40 1F3C                                        i2u298_41 1F38  
                                      i2u299_40 1F72                                        i2u299_41 1F6E  
                    __size_of_SDCARD_Initialize 0178                                        _RCONbits 000FD0  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                                      _TMR0_ISR 2A50                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 09F2                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$1762 0068                                       _xtoa$1763 006A  
                                    _ADCON0bits 000FC2                                       main@i_751 00BC  
                             ___wmul@multiplier 0012                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 2C10                               ?_SDCARD_ReadBlock 0013  
                                  _isspace$1827 0018                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 009A                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 0019                      ??_SDCARD_PollWriteComplete 0013  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 009F                                        __Lrparam 0000  
                                    vfprintf@fp 009B                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0012                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00AB                                __size_of___aomod 0164  
                              __size_of___awmod 00B0                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 007C                                 ___aodiv@divisor 001A  
                               ___aodiv@counter 0022                       __end_ofi2_TMR0_WriteTimer 2C1A  
                     ??_EUSART1_SetErrorHandler 0014                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2BC2                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        _blueFull 00D1  
                                      __ptext10 2C1A                                        __ptext11 288A  
                                      __ptext20 1C46                                        __ptext12 2BE8  
                                      __ptext21 2AB4                                        __ptext13 2BF2  
                                      __ptext30 21F8                                        __ptext22 26A4  
                                      __ptext14 2BFC                                        __ptext31 2034  
                                      __ptext23 09F2                                        __ptext15 243A  
                                      __ptext40 2580                                        __ptext32 0F76  
                                      __ptext24 1258                                        __ptext16 2C1E  
                                      __ptext41 2C06                                        __ptext33 22C8  
                                      __ptext25 2708                                        __ptext17 2616  
                                      __ptext42 2B98                                        __ptext34 2A1A  
                                      __ptext26 293C                                        __ptext18 24E6  
                                      __ptext51 2A50                                        __ptext43 1924  
                                      __ptext35 2806                                        __ptext27 2974  
                                      __ptext19 2904                                        __ptext52 2C24  
                                      __ptext44 2766                                        __ptext36 284A  
                                      __ptext28 28C8                                        __ptext53 1F22  
                                      __ptext45 29AC                                        __ptext37 1DBE  
                                      __ptext29 1532                                        __ptext54 2C10  
                                      __ptext46 2B04                                        __ptext38 1ABE  
                                      __ptext55 2B2A                                        __ptext47 2B7E  
                                      __ptext39 2124                                        __ptext56 0000  
                                      __ptext48 2BAE                                        __ptext49 2ADC  
                              __size_of_isupper 0038                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0012                               ??_TMR0_WriteTimer 0014  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 00D4                                   __size_of_main 09A0  
                                 __size_of_dtoa 02E2                                   __size_of_utoa 0206  
                              ??_TMR0_ReadTimer 0003                                   __size_of_xtoa 02DA  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 2C26  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 2C24  
EUSART1_SetOverrunErrorHandler@interruptHandler 0012                                   _hexDumpBuffer 1738  
                                      int$flags 004D                                        _vfprintf 26A4  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00A1                     _EUSART1_FramingErrorHandler 0042  
                              ___aomod@dividend 0012                                     ??_myTMR0ISR 000B  
                                _vfpfcnvrt$1777 0090                                      _INTCONbits 000FF2  
                                      isalpha@c 0012                                        isdigit@c 0012  
                        ??_INTERRUPT_Initialize 0012                        SDCARD_Initialize@verbose 00AD  
                                      intlevel2 0000                                        islower@c 0012  
                                      isspace@c 0012                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2BF2         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2BE8                                      _RCSTA1bits 000FAB  
                                      isupper@c 0012                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 00AB  
                                      printf@ap 00A9  EUSART1_SetFramingErrorHandler@interruptHandler 0012  
                               ___aomod@divisor 001A                                     ??_vfpfcnvrt 0082  
                               ___aomod@counter 0022                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 004A                                      _SPI2_Close 2C1E  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 29E4  
                                      toupper@c 0018                                    ___aodiv@sign 0023  
                __end_of_PIN_MANAGER_Initialize 2AB4                       hexDumpBuffer@sdCardBuffer 00AB  
                                  ___aomod@sign 0023                                    fp__myTMR0ISR 0000  
